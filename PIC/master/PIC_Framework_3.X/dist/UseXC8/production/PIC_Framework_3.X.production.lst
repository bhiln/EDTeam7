

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Oct 28 22:39:07 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    77                           	psect	param0,global,class=BANK0,space=1,delta=1
    78  0000                     _BAUDCONbits	set	3966
    79  0000                     _INTCON2bits	set	4081
    80  0000                     _INTCONbits	set	4082
    81  0000                     _IPR1bits	set	3999
    82  0000                     _LATAbits	set	3977
    83  0000                     _LATEbits	set	3981
    84  0000                     _OSCCON	set	4051
    85  0000                     _OSCCONbits	set	4051
    86  0000                     _OSCTUNEbits	set	3995
    87  0000                     _PIE1bits	set	3997
    88  0000                     _PIR1bits	set	3998
    89  0000                     _RCONbits	set	4048
    90  0000                     _RCREG1	set	4015
    91  0000                     _RCSTA1	set	4012
    92  0000                     _RCSTA1bits	set	4012
    93  0000                     _RCSTAbits	set	4012
    94  0000                     _SPBRG1	set	4016
    95  0000                     _SPBRGH1	set	3967
    96  0000                     _SSP1BUF	set	4041
    97  0000                     _SSP1CON2bits	set	4037
    98  0000                     _SSP1STATbits	set	4039
    99  0000                     _SSPADD	set	4040
   100  0000                     _SSPCON1	set	4038
   101  0000                     _SSPCON1bits	set	4038
   102  0000                     _SSPCON2	set	4037
   103  0000                     _SSPSTAT	set	4039
   104  0000                     _SSPSTATbits	set	4039
   105  0000                     _T0CON	set	4053
   106  0000                     _T0CONbits	set	4053
   107  0000                     _T1CON	set	4045
   108  0000                     _T1CONbits	set	4045
   109  0000                     _T1GCON	set	3994
   110  0000                     _T1GCONbits	set	3994
   111  0000                     _TMR0H	set	4055
   112  0000                     _TMR0L	set	4054
   113  0000                     _TMR1H	set	4047
   114  0000                     _TMR1L	set	4046
   115  0000                     _TRISAbits	set	3986
   116  0000                     _TRISBbits	set	3987
   117  0000                     _TRISCbits	set	3988
   118  0000                     _TRISEbits	set	3990
   119  0000                     _TXREG1	set	4014
   120  0000                     _TXSTA1	set	4013
   121  0000                     _TXSTA1bits	set	4013
   122                           
   123                           	psect	nvCOMRAM
   124  000032                     __pnvCOMRAM:
   125                           	opt stack 0
   126  000032                     _uc_ptr:
   127                           	opt stack 0
   128  000032                     	ds	2
   129                           
   130                           	psect	nvBANK0
   131  0000B3                     __pnvBANK0:
   132                           	opt stack 0
   133  0000B3                     _ic_ptr:
   134                           	opt stack 0
   135  0000B3                     	ds	2
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  001848                     __pcinit:
   141                           	opt stack 0
   142  001848                     start_initialization:
   143                           	opt stack 0
   144  001848                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Clear objects allocated to BANK4 (118 bytes)
   148  001848  EE04  F000         	lfsr	0,__pbssBANK4
   149  00184C  0E76               	movlw	118
   150  00184E                     clear_0:
   151  00184E  6AEE               	clrf	postinc0,c
   152  001850  06E8               	decf	wreg,f,c
   153  001852  E1FD               	bnz	clear_0
   154                           
   155                           ; Clear objects allocated to BANK3 (236 bytes)
   156  001854  EE03  F000         	lfsr	0,__pbssBANK3
   157  001858  0EEC               	movlw	236
   158  00185A                     clear_1:
   159  00185A  6AEE               	clrf	postinc0,c
   160  00185C  06E8               	decf	wreg,f,c
   161  00185E  E1FD               	bnz	clear_1
   162                           
   163                           ; Clear objects allocated to BANK2 (236 bytes)
   164  001860  EE02  F000         	lfsr	0,__pbssBANK2
   165  001864  0EEC               	movlw	236
   166  001866                     clear_2:
   167  001866  6AEE               	clrf	postinc0,c
   168  001868  06E8               	decf	wreg,f,c
   169  00186A  E1FD               	bnz	clear_2
   170                           
   171                           ; Clear objects allocated to BANK1 (118 bytes)
   172  00186C  EE01  F081         	lfsr	0,__pbssBANK1
   173  001870  0E76               	movlw	118
   174  001872                     clear_3:
   175  001872  6AEE               	clrf	postinc0,c
   176  001874  06E8               	decf	wreg,f,c
   177  001876  E1FD               	bnz	clear_3
   178                           
   179                           ; Clear objects allocated to BANK0 (1 bytes)
   180  001878  0100               	movlb	0
   181  00187A  6BB5               	clrf	__pbssBANK0& (0+255),b
   182                           
   183                           ; Clear objects allocated to COMRAM (1 bytes)
   184  00187C  6A34               	clrf	__pbssCOMRAM& (0+255),c
   185  00187E                     end_of_initialization:
   186                           	opt stack 0
   187  00187E                     __end_of__initialization:
   188                           	opt stack 0
   189  00187E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   190  001880  6EF8               	movwf	tblptru,c
   191  001882  0100               	movlb	0
   192  001884  EFB4  F002         	goto	_main	;jump to C main() function
   193                           tblptru	equ	0xFF8
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           
   197                           	psect	bssCOMRAM
   198  000034                     __pbssCOMRAM:
   199                           	opt stack 0
   200  000034                     _USART1_Status:
   201                           	opt stack 0
   202  000034                     	ds	1
   203                           tblptru	equ	0xFF8
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           
   207                           	psect	bssBANK0
   208  0000B5                     __pbssBANK0:
   209                           	opt stack 0
   210  0000B5                     _MQ_Main_Willing_to_block:
   211                           	opt stack 0
   212  0000B5                     	ds	1
   213                           tblptru	equ	0xFF8
   214                           postinc0	equ	0xFEE
   215                           wreg	equ	0xFE8
   216                           
   217                           	psect	bssBANK1
   218  000181                     __pbssBANK1:
   219                           	opt stack 0
   220  000181                     _ToMainLow_MQ:
   221                           	opt stack 0
   222  000181                     	ds	118
   223                           tblptru	equ	0xFF8
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           
   227                           	psect	bssBANK2
   228  000200                     __pbssBANK2:
   229                           	opt stack 0
   230  000200                     _SensorData_MQ:
   231                           	opt stack 0
   232  000200                     	ds	118
   233  000276                     _ToMainHigh_MQ:
   234                           	opt stack 0
   235  000276                     	ds	118
   236                           tblptru	equ	0xFF8
   237                           postinc0	equ	0xFEE
   238                           wreg	equ	0xFE8
   239                           
   240                           	psect	bssBANK3
   241  000300                     __pbssBANK3:
   242                           	opt stack 0
   243  000300                     _FromMainLow_MQ:
   244                           	opt stack 0
   245  000300                     	ds	118
   246  000376                     _MotorData_MQ:
   247                           	opt stack 0
   248  000376                     	ds	118
   249                           tblptru	equ	0xFF8
   250                           postinc0	equ	0xFEE
   251                           wreg	equ	0xFE8
   252                           
   253                           	psect	bssBANK4
   254  000400                     __pbssBANK4:
   255                           	opt stack 0
   256  000400                     _FromMainHigh_MQ:
   257                           	opt stack 0
   258  000400                     	ds	118
   259                           tblptru	equ	0xFF8
   260                           postinc0	equ	0xFEE
   261                           wreg	equ	0xFE8
   262                           
   263                           	psect	cstackBANK1
   264  000100                     __pcstackBANK1:
   265                           	opt stack 0
   266  000100                     main@forward:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x0
   270  000100                     	ds	1
   271  000101                     main@left:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x1
   275  000101                     	ds	1
   276  000102                     main@right:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x2
   280  000102                     	ds	1
   281  000103                     main@stop:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0x3
   285  000103                     	ds	1
   286  000104                     main@reverse:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x4
   290  000104                     	ds	1
   291  000105                     main@msgbuffer:
   292                           	opt stack 0
   293                           
   294                           ; 27 bytes @ 0x5
   295  000105                     	ds	27
   296  000120                     main@uthread_data:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x20
   300  000120                     	ds	2
   301  000122                     main@t0thread_data:
   302                           	opt stack 0
   303                           
   304                           ; 2 bytes @ 0x22
   305  000122                     	ds	2
   306  000124                     main@umsg:
   307                           	opt stack 0
   308                           
   309                           ; 6 bytes @ 0x24
   310  000124                     	ds	6
   311  00012A                     main@last_reg_recvd:
   312                           	opt stack 0
   313                           
   314                           ; 1 bytes @ 0x2A
   315  00012A                     	ds	1
   316  00012B                     main@t1thread_data:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x2B
   320  00012B                     	ds	2
   321  00012D                     main@msgtype:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0x2D
   325  00012D                     	ds	1
   326  00012E                     main@uc:
   327                           	opt stack 0
   328                           
   329                           ; 18 bytes @ 0x2E
   330  00012E                     	ds	18
   331  000140                     main@length:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0x40
   335  000140                     	ds	1
   336  000141                     main@ic:
   337                           	opt stack 0
   338                           
   339                           ; 64 bytes @ 0x41
   340  000141                     	ds	64
   341                           tblptru	equ	0xFF8
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           
   345                           	psect	cstackBANK0
   346  000060                     __pcstackBANK0:
   347                           	opt stack 0
   348  000060                     ?i2_in_high_int:
   349                           	opt stack 0
   350  000060                     i2check_msg@qptr:
   351                           	opt stack 0
   352  000060                     i2memcpy@d1:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x0
   356  000060                     	ds	2
   357  000062                     ??i2_check_msg:
   358  000062                     ?i2_in_low_int:
   359                           	opt stack 0
   360  000062                     i2memcpy@s1:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x2
   364  000062                     	ds	2
   365  000064                     i2memcpy@n:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x4
   369  000064                     	ds	2
   370  000066                     i2memcpy@d:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x6
   374  000066                     	ds	2
   375  000068                     i2memcpy@s:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x8
   379  000068                     	ds	2
   380  00006A                     i2send_msg@qptr:
   381                           	opt stack 0
   382  00006A                     i2recv_msg@qptr:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0xA
   386  00006A                     	ds	2
   387  00006C                     i2send_msg@length:
   388                           	opt stack 0
   389  00006C                     i2recv_msg@maxlength:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0xC
   393  00006C                     	ds	1
   394  00006D                     i2send_msg@msgtype:
   395                           	opt stack 0
   396  00006D                     i2recv_msg@msgtype:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0xD
   400  00006D                     	ds	1
   401  00006E                     i2send_msg@data:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0xE
   405  00006E                     	ds	1
   406  00006F                     i2recv_msg@data:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0xF
   410  00006F                     	ds	1
   411  000070                     ??i2_send_msg:
   412                           
   413                           ; 0 bytes @ 0x10
   414  000070                     	ds	1
   415  000071                     ??i2_recv_msg:
   416  000071                     i2send_msg@tlength:
   417                           	opt stack 0
   418                           
   419                           ; 2 bytes @ 0x11
   420  000071                     	ds	2
   421  000073                     i2send_msg@slot:
   422                           	opt stack 0
   423  000073                     i2recv_msg@slot:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x13
   427  000073                     	ds	1
   428  000074                     i2send_msg@qmsg:
   429                           	opt stack 0
   430  000074                     i2recv_msg@tlength:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x14
   434  000074                     	ds	2
   435  000076                     ToMainHigh_sendmsg@msgtype:
   436                           	opt stack 0
   437  000076                     i2recv_msg@qmsg:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x16
   441  000076                     	ds	1
   442  000077                     ToMainHigh_sendmsg@data:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x17
   446  000077                     	ds	1
   447  000078                     FromMainHigh_recvmsg@msgtype:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x18
   451  000078                     	ds	1
   452  000079                     ToMainHigh_sendmsg@length:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x19
   456  000079                     	ds	1
   457  00007A                     FromMainHigh_recvmsg@data:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x1A
   461  00007A                     	ds	2
   462  00007C                     FromMainHigh_recvmsg@maxlength:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x1C
   466  00007C                     	ds	1
   467  00007D                     ??_i2c_master_int_handler:
   468                           
   469                           ; 0 bytes @ 0x1D
   470  00007D                     	ds	5
   471  000082                     ??_InterruptHandlerHigh:
   472                           
   473                           ; 0 bytes @ 0x22
   474  000082                     	ds	14
   475  000090                     ?_in_high_int:
   476                           	opt stack 0
   477  000090                     ?___awmod:
   478                           	opt stack 0
   479  000090                     ?___lwmod:
   480                           	opt stack 0
   481  000090                     i2c_configure_master@motor_addr:
   482                           	opt stack 0
   483  000090                     OpenTimer0@config:
   484                           	opt stack 0
   485  000090                     OpenTimer1@config1:
   486                           	opt stack 0
   487  000090                     Delay1KTCYx@unit:
   488                           	opt stack 0
   489  000090                     init_queue@qptr:
   490                           	opt stack 0
   491  000090                     check_msg@qptr:
   492                           	opt stack 0
   493  000090                     init_i2c@ic:
   494                           	opt stack 0
   495  000090                     init_uart_recv@uc:
   496                           	opt stack 0
   497  000090                     timer0_lthread@tptr:
   498                           	opt stack 0
   499  000090                     init_timer1_lthread@tptr:
   500                           	opt stack 0
   501  000090                     uart_lthread@uptr:
   502                           	opt stack 0
   503  000090                     Open1USART@spbrg:
   504                           	opt stack 0
   505  000090                     ___awmod@dividend:
   506                           	opt stack 0
   507  000090                     ___lwmod@dividend:
   508                           	opt stack 0
   509  000090                     memcpy@d1:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x30
   513  000090                     	ds	1
   514  000091                     ??_OpenTimer1:
   515  000091                     i2c_configure_master@sensor_addr:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x31
   519  000091                     	ds	1
   520  000092                     ??_Open1USART:
   521  000092                     ??_check_msg:
   522  000092                     ?_in_low_int:
   523                           	opt stack 0
   524  000092                     init_queue@i:
   525                           	opt stack 0
   526  000092                     OpenTimer1@config:
   527                           	opt stack 0
   528  000092                     timer0_lthread@msgtype:
   529                           	opt stack 0
   530  000092                     uart_lthread@msgtype:
   531                           	opt stack 0
   532  000092                     ___awmod@divisor:
   533                           	opt stack 0
   534  000092                     ___lwmod@divisor:
   535                           	opt stack 0
   536  000092                     memcpy@s1:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x32
   540  000092                     	ds	1
   541  000093                     
   542                           ; 0 bytes @ 0x33
   543  000093                     	ds	1
   544  000094                     ?_in_main:
   545                           	opt stack 0
   546  000094                     ___awmod@counter:
   547                           	opt stack 0
   548  000094                     ___lwmod@counter:
   549                           	opt stack 0
   550  000094                     timer0_lthread@length:
   551                           	opt stack 0
   552  000094                     uart_lthread@length:
   553                           	opt stack 0
   554  000094                     memcpy@n:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x34
   558  000094                     	ds	1
   559  000095                     Open1USART@config:
   560                           	opt stack 0
   561  000095                     ___awmod@sign:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x35
   565  000095                     	ds	1
   566  000096                     timer0_lthread@msgbuffer:
   567                           	opt stack 0
   568  000096                     uart_lthread@msgbuffer:
   569                           	opt stack 0
   570  000096                     memcpy@d:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x36
   574  000096                     	ds	2
   575  000098                     timer0_lthread@msgval:
   576                           	opt stack 0
   577  000098                     memcpy@s:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x38
   581  000098                     	ds	2
   582  00009A                     send_msg@qptr:
   583                           	opt stack 0
   584  00009A                     recv_msg@qptr:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x3A
   588  00009A                     	ds	2
   589  00009C                     send_msg@length:
   590                           	opt stack 0
   591  00009C                     recv_msg@maxlength:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x3C
   595  00009C                     	ds	1
   596  00009D                     send_msg@msgtype:
   597                           	opt stack 0
   598  00009D                     recv_msg@msgtype:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x3D
   602  00009D                     	ds	1
   603  00009E                     send_msg@data:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x3E
   607  00009E                     	ds	1
   608  00009F                     recv_msg@data:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x3F
   612  00009F                     	ds	1
   613  0000A0                     ??_send_msg:
   614                           
   615                           ; 0 bytes @ 0x40
   616  0000A0                     	ds	1
   617  0000A1                     ??_recv_msg:
   618  0000A1                     send_msg@tlength:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x41
   622  0000A1                     	ds	2
   623  0000A3                     send_msg@slot:
   624                           	opt stack 0
   625  0000A3                     recv_msg@slot:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0x43
   629  0000A3                     	ds	1
   630  0000A4                     send_msg@qmsg:
   631                           	opt stack 0
   632  0000A4                     recv_msg@tlength:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x44
   636  0000A4                     	ds	2
   637  0000A6                     FromMainLow_sendmsg@msgtype:
   638                           	opt stack 0
   639  0000A6                     FromMainHigh_sendmsg@msgtype:
   640                           	opt stack 0
   641  0000A6                     recv_msg@qmsg:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x46
   645  0000A6                     	ds	1
   646  0000A7                     FromMainLow_sendmsg@data:
   647                           	opt stack 0
   648  0000A7                     FromMainHigh_sendmsg@data:
   649                           	opt stack 0
   650                           
   651                           ; 2 bytes @ 0x47
   652  0000A7                     	ds	1
   653  0000A8                     ToMainLow_recvmsg@msgtype:
   654                           	opt stack 0
   655  0000A8                     ToMainHigh_recvmsg@msgtype:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x48
   659  0000A8                     	ds	1
   660  0000A9                     FromMainLow_sendmsg@length:
   661                           	opt stack 0
   662  0000A9                     FromMainHigh_sendmsg@length:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x49
   666  0000A9                     	ds	1
   667  0000AA                     i2c_master_send@length:
   668                           	opt stack 0
   669  0000AA                     ToMainLow_recvmsg@data:
   670                           	opt stack 0
   671  0000AA                     ToMainHigh_recvmsg@data:
   672                           	opt stack 0
   673  0000AA                     uart_send@msg_buffer:
   674                           	opt stack 0
   675  0000AA                     timer1_lthread@tptr:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x4A
   679  0000AA                     	ds	1
   680  0000AB                     i2c_master_send@msg:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x4B
   684  0000AB                     	ds	1
   685  0000AC                     ??_uart_send:
   686  0000AC                     ToMainLow_recvmsg@maxlength:
   687                           	opt stack 0
   688  0000AC                     ToMainHigh_recvmsg@maxlength:
   689                           	opt stack 0
   690  0000AC                     timer1_lthread@msgtype:
   691                           	opt stack 0
   692                           
   693                           ; 2 bytes @ 0x4C
   694  0000AC                     	ds	1
   695  0000AD                     i2c_master_send@addr:
   696                           	opt stack 0
   697  0000AD                     uart_send@length:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x4D
   701  0000AD                     	ds	1
   702  0000AE                     timer1_lthread@length:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x4E
   706  0000AE                     	ds	2
   707  0000B0                     timer1_lthread@msgbuffer:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x50
   711  0000B0                     	ds	2
   712  0000B2                     timer1_lthread@retval:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x52
   716  0000B2                     	ds	1
   717  0000B3                     tblptru	equ	0xFF8
   718                           postinc0	equ	0xFEE
   719                           wreg	equ	0xFE8
   720                           
   721                           ; 0 bytes @ 0x53
   722                           
   723                           	psect	cstackCOMRAM
   724  000001                     __pcstackCOMRAM:
   725                           	opt stack 0
   726  000001                     ?_ReadTimer1:
   727                           	opt stack 0
   728  000001                     i2c_master_recv@length:
   729                           	opt stack 0
   730  000001                     Read1USART@data:
   731                           	opt stack 0
   732  000001                     WriteTimer0@timer0:
   733                           	opt stack 0
   734  000001                     WriteTimer1@timer1:
   735                           	opt stack 0
   736  000001                     i1memcpy@d1:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x0
   740  000001                     	ds	1
   741  000002                     i2c_master_recv@addr:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x1
   745  000002                     	ds	1
   746  000003                     WriteTimer0@timer:
   747                           	opt stack 0
   748  000003                     ReadTimer1@timer:
   749                           	opt stack 0
   750  000003                     WriteTimer1@timer:
   751                           	opt stack 0
   752  000003                     i1memcpy@s1:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x2
   756  000003                     	ds	2
   757  000005                     timer0_int_handler@i:
   758                           	opt stack 0
   759  000005                     timer1_int_handler@result:
   760                           	opt stack 0
   761  000005                     i1memcpy@n:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x4
   765  000005                     	ds	2
   766  000007                     i1memcpy@d:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x6
   770  000007                     	ds	2
   771  000009                     i1memcpy@s:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x8
   775  000009                     	ds	2
   776  00000B                     i1send_msg@qptr:
   777                           	opt stack 0
   778  00000B                     i1recv_msg@qptr:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0xA
   782  00000B                     	ds	2
   783  00000D                     i1send_msg@length:
   784                           	opt stack 0
   785  00000D                     i1recv_msg@maxlength:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0xC
   789  00000D                     	ds	1
   790  00000E                     i1send_msg@msgtype:
   791                           	opt stack 0
   792  00000E                     i1recv_msg@msgtype:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0xD
   796  00000E                     	ds	1
   797  00000F                     i1send_msg@data:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0xE
   801  00000F                     	ds	1
   802  000010                     i1recv_msg@data:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0xF
   806  000010                     	ds	1
   807  000011                     ??i1_send_msg:
   808                           
   809                           ; 0 bytes @ 0x10
   810  000011                     	ds	1
   811  000012                     ??i1_recv_msg:
   812  000012                     i1send_msg@tlength:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x11
   816  000012                     	ds	2
   817  000014                     i1send_msg@slot:
   818                           	opt stack 0
   819  000014                     i1recv_msg@slot:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x13
   823  000014                     	ds	1
   824  000015                     i1send_msg@qmsg:
   825                           	opt stack 0
   826  000015                     i1recv_msg@tlength:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x14
   830  000015                     	ds	2
   831  000017                     ToMainLow_sendmsg@msgtype:
   832                           	opt stack 0
   833  000017                     i1recv_msg@qmsg:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x16
   837  000017                     	ds	1
   838  000018                     ToMainLow_sendmsg@data:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0x17
   842  000018                     	ds	1
   843  000019                     FromMainLow_recvmsg@msgtype:
   844                           	opt stack 0
   845                           
   846                           ; 2 bytes @ 0x18
   847  000019                     	ds	1
   848  00001A                     ToMainLow_sendmsg@length:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x19
   852  00001A                     	ds	1
   853  00001B                     uart_recv_int_handler@forward:
   854                           	opt stack 0
   855  00001B                     FromMainLow_recvmsg@data:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0x1A
   859  00001B                     	ds	1
   860  00001C                     uart_recv_int_handler@left:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0x1B
   864  00001C                     	ds	1
   865  00001D                     FromMainLow_recvmsg@maxlength:
   866                           	opt stack 0
   867  00001D                     uart_recv_int_handler@right:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x1C
   871  00001D                     	ds	1
   872  00001E                     ??_uart_trans_int_handler:
   873  00001E                     uart_recv_int_handler@stop:
   874                           	opt stack 0
   875                           
   876                           ; 1 bytes @ 0x1D
   877  00001E                     	ds	1
   878  00001F                     uart_recv_int_handler@reverse:
   879                           	opt stack 0
   880                           
   881                           ; 1 bytes @ 0x1E
   882  00001F                     	ds	1
   883  000020                     uart_recv_int_handler@readin:
   884                           	opt stack 0
   885                           
   886                           ; 1 bytes @ 0x1F
   887  000020                     	ds	1
   888  000021                     ??_InterruptHandlerLow:
   889                           
   890                           ; 0 bytes @ 0x20
   891  000021                     	ds	17
   892                           tblptru	equ	0xFF8
   893                           postinc0	equ	0xFEE
   894                           wreg	equ	0xFE8
   895                           
   896 ;;
   897 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   898 ;;
   899 ;; *************** function _main *****************
   900 ;; Defined at:
   901 ;;		line 71 in file "../src/main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  ic             64   65[BANK1 ] struct __i2c_comm
   906 ;;  msgbuffer      27    5[BANK1 ] unsigned char [27]
   907 ;;  uc             18   46[BANK1 ] struct __uart_comm
   908 ;;  umsg            6   36[BANK1 ] unsigned char [6]
   909 ;;  t1thread_dat    2   43[BANK1 ] struct __timer1_thread_s
   910 ;;  t0thread_dat    2   34[BANK1 ] struct __timer0_thread_s
   911 ;;  uthread_data    2   32[BANK1 ] struct __uart_thread_str
   912 ;;  length          1   64[BANK1 ] char 
   913 ;;  msgtype         1   45[BANK1 ] unsigned char 
   914 ;;  last_reg_rec    1   42[BANK1 ] unsigned char 
   915 ;;  reverse         1    4[BANK1 ] unsigned char [1]
   916 ;;  stop            1    3[BANK1 ] unsigned char [1]
   917 ;;  right           1    2[BANK1 ] unsigned char [1]
   918 ;;  left            1    1[BANK1 ] unsigned char [1]
   919 ;;  forward         1    0[BANK1 ] unsigned char [1]
   920 ;;  i               1    0        unsigned char 
   921 ;;  motor_cmd_ri    1    0        unsigned char 
   922 ;;  motor_cmd_le    1    0        unsigned char 
   923 ;;  c               1    0        unsigned char 
   924 ;; Return value:  Size  Location     Type
   925 ;;		None               void
   926 ;; Registers used:
   927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   934 ;;      Locals:         0       0     129       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   936 ;;      Totals:         0       0     129       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;Total ram usage:      129 bytes
   938 ;; Hardware stack levels required when called:   14
   939 ;; This function calls:
   940 ;;		_Open1USART
   941 ;;		_OpenTimer0
   942 ;;		_OpenTimer1
   943 ;;		_ToMainHigh_recvmsg
   944 ;;		_ToMainLow_recvmsg
   945 ;;		_block_on_To_msgqueues
   946 ;;		_enable_interrupts
   947 ;;		_i2c_configure_master
   948 ;;		_i2c_master_send
   949 ;;		_init_i2c
   950 ;;		_init_queues
   951 ;;		_init_timer1_lthread
   952 ;;		_init_uart_recv
   953 ;;		_timer0_lthread
   954 ;;		_timer1_lthread
   955 ;;		_uart_lthread
   956 ;;		_uart_send
   957 ;; This function is called by:
   958 ;;		Startup code after reset
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text0
   963  000568                     __ptext0:
   964                           	opt stack 0
   965  000568                     _main:
   966                           	opt stack 17
   967                           
   968                           ;main.c: 72: char c;
   969                           ;main.c: 73: signed char length;
   970                           ;main.c: 74: unsigned char msgtype;
   971                           ;main.c: 75: unsigned char last_reg_recvd;
   972                           ;main.c: 76: unsigned char motor_cmd_left;
   973                           ;main.c: 77: unsigned char motor_cmd_right;
   974                           ;main.c: 78: uart_comm uc;
   975                           ;main.c: 79: i2c_comm ic;
   976                           ;main.c: 80: unsigned char msgbuffer[26 + 1];
   977                           ;main.c: 81: unsigned char i;
   978                           ;main.c: 82: uart_thread_struct uthread_data;
   979                           ;main.c: 83: timer1_thread_struct t1thread_data;
   980                           ;main.c: 84: timer0_thread_struct t0thread_data;
   981                           ;main.c: 86: OSCCON = 0xE0;
   982                           
   983                           ;incstack = 0
   984  000568  0EE0               	movlw	224
   985  00056A  6ED3               	movwf	4051,c	;volatile
   986                           
   987                           ;main.c: 87: OSCTUNEbits.PLLEN = 1;
   988  00056C  8C9B               	bsf	3995,6,c	;volatile
   989                           
   990                           ;main.c: 90: init_uart_recv(&uc);
   991  00056E  0101               	movlb	1	; () banked
   992  000570  0E01               	movlw	high main@uc
   993  000572  0100               	movlb	0	; () banked
   994  000574  6F91               	movwf	(init_uart_recv@uc+1)& (0+255),b
   995  000576  0101               	movlb	1	; () banked
   996  000578  0E2E               	movlw	low main@uc
   997  00057A  0100               	movlb	0	; () banked
   998  00057C  6F90               	movwf	init_uart_recv@uc& (0+255),b
   999  00057E  EC91  F00D         	call	_init_uart_recv	;wreg free
  1000                           
  1001                           ;main.c: 93: init_i2c(&ic);
  1002  000582  0101               	movlb	1	; () banked
  1003  000584  0E01               	movlw	high main@ic
  1004  000586  0100               	movlb	0	; () banked
  1005  000588  6F91               	movwf	(init_i2c@ic+1)& (0+255),b
  1006  00058A  0101               	movlb	1	; () banked
  1007  00058C  0E41               	movlw	low main@ic
  1008  00058E  0100               	movlb	0	; () banked
  1009  000590  6F90               	movwf	init_i2c@ic& (0+255),b
  1010  000592  ECE6  F00A         	call	_init_i2c	;wreg free
  1011                           
  1012                           ;main.c: 96: init_timer1_lthread(&t1thread_data);
  1013  000596  0101               	movlb	1	; () banked
  1014  000598  0E01               	movlw	high main@t1thread_data
  1015  00059A  0100               	movlb	0	; () banked
  1016  00059C  6F91               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1017  00059E  0101               	movlb	1	; () banked
  1018  0005A0  0E2B               	movlw	low main@t1thread_data
  1019  0005A2  0100               	movlb	0	; () banked
  1020  0005A4  6F90               	movwf	init_timer1_lthread@tptr& (0+255),b
  1021  0005A6  EC44  F00E         	call	_init_timer1_lthread	;wreg free
  1022                           
  1023                           ;main.c: 99: init_queues();
  1024  0005AA  ECB6  F009         	call	_init_queues	;wreg free
  1025                           
  1026                           ;main.c: 102: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1027  0005AE  0E96               	movlw	150
  1028  0005B0  ECEA  F00D         	call	_OpenTimer0
  1029                           
  1030                           ;main.c: 103: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1031  0005B4  0E00               	movlw	0
  1032  0005B6  0100               	movlb	0	; () banked
  1033  0005B8  6F90               	movwf	OpenTimer1@config1& (0+255),b
  1034  0005BA  0E9B               	movlw	155
  1035  0005BC  ECC0  F00C         	call	_OpenTimer1
  1036                           
  1037                           ;main.c: 108: INTCON2bits.TMR0IP = 0;
  1038  0005C0  94F1               	bcf	intcon2,2,c	;volatile
  1039                           
  1040                           ;main.c: 110: IPR1bits.TMR1IP = 0;
  1041  0005C2  909F               	bcf	3999,0,c	;volatile
  1042                           
  1043                           ;main.c: 112: IPR1bits.RCIP = 0;
  1044  0005C4  9A9F               	bcf	3999,5,c	;volatile
  1045                           
  1046                           ;main.c: 114: IPR1bits.TXIP = 0;
  1047  0005C6  989F               	bcf	3999,4,c	;volatile
  1048                           
  1049                           ;main.c: 116: IPR1bits.SSPIP = 1;
  1050  0005C8  869F               	bsf	3999,3,c	;volatile
  1051                           
  1052                           ;main.c: 120: i2c_configure_master(0x9E, 0x9A);
  1053  0005CA  0E9A               	movlw	154
  1054  0005CC  0100               	movlb	0	; () banked
  1055  0005CE  6F90               	movwf	i2c_configure_master@motor_addr& (0+255),b
  1056  0005D0  0E9E               	movlw	158
  1057  0005D2  ECF6  F009         	call	_i2c_configure_master
  1058                           
  1059                           ;main.c: 123: PIE1bits.SSPIE = 1;
  1060  0005D6  869D               	bsf	3997,3,c	;volatile
  1061                           
  1062                           ;main.c: 126: Open1USART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1063                           ;main.c: 127: 0b11111111 & 0b11101111, 0x19);
  1064  0005D8  0E00               	movlw	0
  1065  0005DA  0100               	movlb	0	; () banked
  1066  0005DC  6F91               	movwf	(Open1USART@spbrg+1)& (0+255),b
  1067  0005DE  0E19               	movlw	25
  1068  0005E0  0100               	movlb	0	; () banked
  1069  0005E2  6F90               	movwf	Open1USART@spbrg& (0+255),b
  1070  0005E4  0E6C               	movlw	108
  1071  0005E6  ECAE  F00A         	call	_Open1USART
  1072                           
  1073                           ;main.c: 131: enable_interrupts();
  1074  0005EA  EC7F  F00E         	call	_enable_interrupts	;wreg free
  1075                           
  1076                           ;main.c: 134: TRISEbits.TRISE0 = 0x0;
  1077  0005EE  9096               	bcf	3990,0,c	;volatile
  1078                           
  1079                           ;main.c: 135: TRISEbits.TRISE1 = 0x0;
  1080  0005F0  9296               	bcf	3990,1,c	;volatile
  1081                           
  1082                           ;main.c: 136: TRISEbits.TRISE2 = 0x0;
  1083  0005F2  9496               	bcf	3990,2,c	;volatile
  1084                           
  1085                           ;main.c: 137: TRISAbits.TRISA2 = 0x0;
  1086  0005F4  9492               	bcf	3986,2,c	;volatile
  1087                           
  1088                           ;main.c: 138: TRISAbits.TRISA3 = 0x0;
  1089  0005F6  9692               	bcf	3986,3,c	;volatile
  1090                           
  1091                           ;main.c: 139: TRISCbits.TRISC7 = 0x1;
  1092  0005F8  8E94               	bsf	3988,7,c	;volatile
  1093                           
  1094                           ;main.c: 140: TRISCbits.TRISC6 = 0x0;
  1095  0005FA  9C94               	bcf	3988,6,c	;volatile
  1096                           
  1097                           ;main.c: 142: SPBRGH1 = 0x00;
  1098  0005FC  0E00               	movlw	0
  1099  0005FE  6E7F               	movwf	3967,c	;volatile
  1100                           
  1101                           ;main.c: 143: SPBRG1 = 0xCF;
  1102  000600  0ECF               	movlw	207
  1103  000602  6EB0               	movwf	4016,c	;volatile
  1104                           
  1105                           ;main.c: 145: TXSTA1bits.BRGH = 1;
  1106  000604  84AD               	bsf	4013,2,c	;volatile
  1107                           
  1108                           ;main.c: 146: BAUDCONbits.BRG16 = 1;
  1109  000606  867E               	bsf	3966,3,c	;volatile
  1110                           
  1111                           ;main.c: 147: TXSTA1bits.SYNC = 0;
  1112  000608  98AD               	bcf	4013,4,c	;volatile
  1113                           
  1114                           ;main.c: 148: RCSTA1bits.SPEN = 0x1;
  1115  00060A  8EAC               	bsf	4012,7,c	;volatile
  1116                           
  1117                           ;main.c: 149: TXSTA1bits.TXEN = 0x1;
  1118  00060C  8AAD               	bsf	4013,5,c	;volatile
  1119                           
  1120                           ;main.c: 156: unsigned char umsg[6];
  1121                           ;main.c: 157: umsg[0] = 0x03;
  1122  00060E  0E03               	movlw	3
  1123  000610  0101               	movlb	1	; () banked
  1124  000612  6F24               	movwf	main@umsg& (0+255),b
  1125                           
  1126                           ; BSR set to: 1
  1127                           ;main.c: 158: umsg[1] = 0x00;
  1128  000614  0E00               	movlw	0
  1129  000616  0101               	movlb	1	; () banked
  1130  000618  6F25               	movwf	(main@umsg+1)& (0+255),b
  1131                           
  1132                           ; BSR set to: 1
  1133                           ;main.c: 159: umsg[2] = 0x0A;
  1134  00061A  0E0A               	movlw	10
  1135  00061C  0101               	movlb	1	; () banked
  1136  00061E  6F26               	movwf	(main@umsg+2)& (0+255),b
  1137                           
  1138                           ; BSR set to: 1
  1139                           ;main.c: 160: umsg[3] = 0x00;
  1140  000620  0E00               	movlw	0
  1141  000622  0101               	movlb	1	; () banked
  1142  000624  6F27               	movwf	(main@umsg+3)& (0+255),b
  1143                           
  1144                           ; BSR set to: 1
  1145                           ;main.c: 161: umsg[4] = 0x0A;
  1146  000626  0E0A               	movlw	10
  1147  000628  0101               	movlb	1	; () banked
  1148  00062A  6F28               	movwf	(main@umsg+4)& (0+255),b
  1149                           
  1150                           ; BSR set to: 1
  1151                           ;main.c: 162: umsg[5] = 0xFF;
  1152  00062C  0101               	movlb	1	; () banked
  1153  00062E  6929               	setf	(main@umsg+5)& (0+255),b
  1154                           
  1155                           ; BSR set to: 1
  1156                           ;main.c: 164: unsigned char forward[1], left[1], right[1], stop[1], reverse[1];
  1157                           ;main.c: 165: forward[0] = 0x0A;
  1158  000630  0E0A               	movlw	10
  1159  000632  0101               	movlb	1	; () banked
  1160  000634  6F00               	movwf	main@forward& (0+255),b
  1161                           
  1162                           ; BSR set to: 1
  1163                           ;main.c: 166: left[0] = 0x0B;
  1164  000636  0E0B               	movlw	11
  1165  000638  0101               	movlb	1	; () banked
  1166  00063A  6F01               	movwf	main@left& (0+255),b
  1167                           
  1168                           ; BSR set to: 1
  1169                           ;main.c: 167: right[0] = 0x0C;
  1170  00063C  0E0C               	movlw	12
  1171  00063E  0101               	movlb	1	; () banked
  1172  000640  6F02               	movwf	main@right& (0+255),b
  1173                           
  1174                           ; BSR set to: 1
  1175                           ;main.c: 168: stop[0] = 0x0D;
  1176  000642  0E0D               	movlw	13
  1177  000644  0101               	movlb	1	; () banked
  1178  000646  6F03               	movwf	main@stop& (0+255),b
  1179                           
  1180                           ; BSR set to: 1
  1181                           ;main.c: 169: reverse[0] = 0x0E;
  1182  000648  0E0E               	movlw	14
  1183  00064A  0101               	movlb	1	; () banked
  1184  00064C  6F04               	movwf	main@reverse& (0+255),b
  1185  00064E                     l117:
  1186                           
  1187                           ;main.c: 192: block_on_To_msgqueues();
  1188  00064E  ECCC  F008         	call	_block_on_To_msgqueues	;wreg free
  1189                           
  1190                           ;main.c: 199: length = ToMainHigh_recvmsg(26, &msgtype, (void *) msgbuffer);
  1191  000652  0101               	movlb	1	; () banked
  1192  000654  0E01               	movlw	high main@msgtype
  1193  000656  0100               	movlb	0	; () banked
  1194  000658  6FA9               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1195  00065A  0101               	movlb	1	; () banked
  1196  00065C  0E2D               	movlw	low main@msgtype
  1197  00065E  0100               	movlb	0	; () banked
  1198  000660  6FA8               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1199  000662  0101               	movlb	1	; () banked
  1200  000664  0E01               	movlw	high main@msgbuffer
  1201  000666  0100               	movlb	0	; () banked
  1202  000668  6FAB               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1203  00066A  0101               	movlb	1	; () banked
  1204  00066C  0E05               	movlw	low main@msgbuffer
  1205  00066E  0100               	movlb	0	; () banked
  1206  000670  6FAA               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1207  000672  0E1A               	movlw	26
  1208  000674  ECF9  F00C         	call	_ToMainHigh_recvmsg
  1209  000678  0101               	movlb	1	; () banked
  1210  00067A  6F40               	movwf	main@length& (0+255),b
  1211                           
  1212                           ; BSR set to: 1
  1213                           ;main.c: 200: if (length < 0) {
  1214  00067C  0101               	movlb	1	; () banked
  1215  00067E  BF40               	btfsc	main@length& (0+255),7,b
  1216  000680  D0C2               	goto	l3098
  1217  000682  D0AD               	goto	l3096
  1218  000684                     l122:
  1219                           
  1220                           ; BSR set to: 1
  1221                           ;main.c: 208: {
  1222                           ;main.c: 209: { LATEbits.LATE1 = 1;};
  1223  000684  828D               	bsf	3981,1,c	;volatile
  1224                           
  1225                           ; BSR set to: 1
  1226                           ;main.c: 212: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1227  000686  0101               	movlb	1	; () banked
  1228  000688  0E01               	movlw	high main@t0thread_data
  1229  00068A  0100               	movlb	0	; () banked
  1230  00068C  6F91               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1231  00068E  0101               	movlb	1	; () banked
  1232  000690  0E22               	movlw	low main@t0thread_data
  1233  000692  0100               	movlb	0	; () banked
  1234  000694  6F90               	movwf	timer0_lthread@tptr& (0+255),b
  1235  000696  0101               	movlb	1	; () banked
  1236  000698  0100               	movlb	0	; () banked
  1237  00069A  C12D  F092         	movff	main@msgtype,timer0_lthread@msgtype
  1238  00069E  0100               	movlb	0	; () banked
  1239  0006A0  6B93               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1240  0006A2  0101               	movlb	1	; () banked
  1241  0006A4  5140               	movf	main@length& (0+255),w,b
  1242  0006A6  0100               	movlb	0	; () banked
  1243  0006A8  6F94               	movwf	timer0_lthread@length& (0+255),b
  1244  0006AA  0100               	movlb	0	; () banked
  1245  0006AC  6B95               	clrf	(timer0_lthread@length+1)& (0+255),b
  1246  0006AE  0100               	movlb	0	; () banked
  1247  0006B0  BF94               	btfsc	timer0_lthread@length& (0+255),7,b
  1248  0006B2  0795               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1249  0006B4  0101               	movlb	1	; () banked
  1250  0006B6  0E01               	movlw	high main@msgbuffer
  1251  0006B8  0100               	movlb	0	; () banked
  1252  0006BA  6F97               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1253  0006BC  0101               	movlb	1	; () banked
  1254  0006BE  0E05               	movlw	low main@msgbuffer
  1255  0006C0  0100               	movlb	0	; () banked
  1256  0006C2  6F96               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1257  0006C4  EC78  F00E         	call	_timer0_lthread	;wreg free
  1258                           
  1259                           ;main.c: 213: { LATEbits.LATE1 = 0;};
  1260  0006C8  928D               	bcf	3981,1,c	;volatile
  1261                           
  1262                           ;main.c: 214: break;
  1263  0006CA  D09D               	goto	l3098
  1264  0006CC                     l125:
  1265                           
  1266                           ;main.c: 217: case 40:
  1267                           ;main.c: 218: {
  1268                           ;main.c: 221: last_reg_recvd = msgbuffer[0];
  1269  0006CC  C105  F12A         	movff	main@msgbuffer,main@last_reg_recvd
  1270                           
  1271                           ;main.c: 222: break;
  1272  0006D0  D09A               	goto	l3098
  1273  0006D2                     l3068:
  1274                           
  1275                           ;main.c: 236: {
  1276                           ;main.c: 238: uart_send(length, msgbuffer);
  1277  0006D2  0101               	movlb	1	; () banked
  1278  0006D4  0E01               	movlw	high main@msgbuffer
  1279  0006D6  0100               	movlb	0	; () banked
  1280  0006D8  6FAB               	movwf	(uart_send@msg_buffer+1)& (0+255),b
  1281  0006DA  0101               	movlb	1	; () banked
  1282  0006DC  0E05               	movlw	low main@msgbuffer
  1283  0006DE  0100               	movlb	0	; () banked
  1284  0006E0  6FAA               	movwf	uart_send@msg_buffer& (0+255),b
  1285  0006E2  0101               	movlb	1	; () banked
  1286  0006E4  5140               	movf	main@length& (0+255),w,b
  1287  0006E6  EC58  F007         	call	_uart_send
  1288                           
  1289                           ;main.c: 239: break;
  1290  0006EA  D08D               	goto	l3098
  1291  0006EC                     l128:
  1292                           
  1293                           ; BSR set to: 1
  1294                           ;main.c: 242: {
  1295                           ;main.c: 243: last_reg_recvd = msgbuffer[0];
  1296  0006EC  C105  F12A         	movff	main@msgbuffer,main@last_reg_recvd
  1297                           
  1298                           ;main.c: 244: switch (last_reg_recvd) {
  1299  0006F0  D064               	goto	l3092
  1300  0006F2                     l3070:
  1301                           
  1302                           ; BSR set to: 1
  1303                           ;main.c: 247: {
  1304                           ;main.c: 248: length = 1;
  1305  0006F2  0E01               	movlw	1
  1306  0006F4  0101               	movlb	1	; () banked
  1307  0006F6  6F40               	movwf	main@length& (0+255),b
  1308                           
  1309                           ;main.c: 249: msgbuffer[0] = 0x0A;
  1310  0006F8  0E0A               	movlw	10
  1311  0006FA  0101               	movlb	1	; () banked
  1312  0006FC  6F05               	movwf	main@msgbuffer& (0+255),b
  1313                           
  1314                           ; BSR set to: 1
  1315                           ;main.c: 250: i2c_master_send(0x9A, length, msgbuffer);
  1316  0006FE  C140  F0AA         	movff	main@length,i2c_master_send@length
  1317  000702  0101               	movlb	1	; () banked
  1318  000704  0E01               	movlw	high main@msgbuffer
  1319  000706  0100               	movlb	0	; () banked
  1320  000708  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1321  00070A  0101               	movlb	1	; () banked
  1322  00070C  0E05               	movlw	low main@msgbuffer
  1323  00070E  0100               	movlb	0	; () banked
  1324  000710  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1325  000712  0E9A               	movlw	154
  1326  000714  EC1F  F009         	call	_i2c_master_send
  1327                           
  1328                           ;main.c: 251: break;
  1329  000718  D076               	goto	l3098
  1330  00071A                     l3074:
  1331                           
  1332                           ;main.c: 254: {
  1333                           ;main.c: 255: length = 1;
  1334  00071A  0E01               	movlw	1
  1335  00071C  0101               	movlb	1	; () banked
  1336  00071E  6F40               	movwf	main@length& (0+255),b
  1337                           
  1338                           ;main.c: 256: msgbuffer[0] = 0x0B;
  1339  000720  0E0B               	movlw	11
  1340  000722  0101               	movlb	1	; () banked
  1341  000724  6F05               	movwf	main@msgbuffer& (0+255),b
  1342                           
  1343                           ; BSR set to: 1
  1344                           ;main.c: 257: i2c_master_send(0x9A, length, msgbuffer);
  1345  000726  C140  F0AA         	movff	main@length,i2c_master_send@length
  1346  00072A  0101               	movlb	1	; () banked
  1347  00072C  0E01               	movlw	high main@msgbuffer
  1348  00072E  0100               	movlb	0	; () banked
  1349  000730  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1350  000732  0101               	movlb	1	; () banked
  1351  000734  0E05               	movlw	low main@msgbuffer
  1352  000736  0100               	movlb	0	; () banked
  1353  000738  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1354  00073A  0E9A               	movlw	154
  1355  00073C  EC1F  F009         	call	_i2c_master_send
  1356                           
  1357                           ;main.c: 258: break;
  1358  000740  D062               	goto	l3098
  1359  000742                     l3078:
  1360                           
  1361                           ;main.c: 261: {
  1362                           ;main.c: 262: length = 1;
  1363  000742  0E01               	movlw	1
  1364  000744  0101               	movlb	1	; () banked
  1365  000746  6F40               	movwf	main@length& (0+255),b
  1366                           
  1367                           ;main.c: 263: msgbuffer[0] = 0x0C;
  1368  000748  0E0C               	movlw	12
  1369  00074A  0101               	movlb	1	; () banked
  1370  00074C  6F05               	movwf	main@msgbuffer& (0+255),b
  1371                           
  1372                           ; BSR set to: 1
  1373                           ;main.c: 264: i2c_master_send(0x9A, length, msgbuffer);
  1374  00074E  C140  F0AA         	movff	main@length,i2c_master_send@length
  1375  000752  0101               	movlb	1	; () banked
  1376  000754  0E01               	movlw	high main@msgbuffer
  1377  000756  0100               	movlb	0	; () banked
  1378  000758  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1379  00075A  0101               	movlb	1	; () banked
  1380  00075C  0E05               	movlw	low main@msgbuffer
  1381  00075E  0100               	movlb	0	; () banked
  1382  000760  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1383  000762  0E9A               	movlw	154
  1384  000764  EC1F  F009         	call	_i2c_master_send
  1385                           
  1386                           ;main.c: 265: break;
  1387  000768  D04E               	goto	l3098
  1388  00076A                     l3082:
  1389                           
  1390                           ;main.c: 268: {
  1391                           ;main.c: 269: length = 1;
  1392  00076A  0E01               	movlw	1
  1393  00076C  0101               	movlb	1	; () banked
  1394  00076E  6F40               	movwf	main@length& (0+255),b
  1395                           
  1396                           ;main.c: 270: msgbuffer[0] = 0x0D;
  1397  000770  0E0D               	movlw	13
  1398  000772  0101               	movlb	1	; () banked
  1399  000774  6F05               	movwf	main@msgbuffer& (0+255),b
  1400                           
  1401                           ; BSR set to: 1
  1402                           ;main.c: 271: i2c_master_send(0x9A, length, msgbuffer);
  1403  000776  C140  F0AA         	movff	main@length,i2c_master_send@length
  1404  00077A  0101               	movlb	1	; () banked
  1405  00077C  0E01               	movlw	high main@msgbuffer
  1406  00077E  0100               	movlb	0	; () banked
  1407  000780  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1408  000782  0101               	movlb	1	; () banked
  1409  000784  0E05               	movlw	low main@msgbuffer
  1410  000786  0100               	movlb	0	; () banked
  1411  000788  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1412  00078A  0E9A               	movlw	154
  1413  00078C  EC1F  F009         	call	_i2c_master_send
  1414                           
  1415                           ;main.c: 272: break;
  1416  000790  D03A               	goto	l3098
  1417  000792                     l3086:
  1418                           
  1419                           ;main.c: 275: {
  1420                           ;main.c: 276: length = 1;
  1421  000792  0E01               	movlw	1
  1422  000794  0101               	movlb	1	; () banked
  1423  000796  6F40               	movwf	main@length& (0+255),b
  1424                           
  1425                           ;main.c: 277: msgbuffer[0] = 0x0E;
  1426  000798  0E0E               	movlw	14
  1427  00079A  0101               	movlb	1	; () banked
  1428  00079C  6F05               	movwf	main@msgbuffer& (0+255),b
  1429                           
  1430                           ; BSR set to: 1
  1431                           ;main.c: 278: i2c_master_send(0x9A, length, msgbuffer);
  1432  00079E  C140  F0AA         	movff	main@length,i2c_master_send@length
  1433  0007A2  0101               	movlb	1	; () banked
  1434  0007A4  0E01               	movlw	high main@msgbuffer
  1435  0007A6  0100               	movlb	0	; () banked
  1436  0007A8  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1437  0007AA  0101               	movlb	1	; () banked
  1438  0007AC  0E05               	movlw	low main@msgbuffer
  1439  0007AE  0100               	movlb	0	; () banked
  1440  0007B0  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1441  0007B2  0E9A               	movlw	154
  1442  0007B4  EC1F  F009         	call	_i2c_master_send
  1443                           
  1444                           ;main.c: 279: break;
  1445  0007B8  D026               	goto	l3098
  1446  0007BA                     l3092:
  1447  0007BA  0101               	movlb	1	; () banked
  1448  0007BC  512A               	movf	main@last_reg_recvd& (0+255),w,b
  1449                           
  1450                           ; Switch size 1, requested type "space"
  1451                           ; Number of cases is 5, Range of values is 10 to 14
  1452                           ; switch strategies available:
  1453                           ; Name         Instructions Cycles
  1454                           ; simple_byte           16     9 (average)
  1455                           ;	Chosen strategy is simple_byte
  1456  0007BE  0A0A               	xorlw	10	; case 10
  1457  0007C0  B4D8               	btfsc	status,2,c
  1458  0007C2  D797               	goto	l3070
  1459  0007C4  0A01               	xorlw	1	; case 11
  1460  0007C6  B4D8               	btfsc	status,2,c
  1461  0007C8  D7A8               	goto	l3074
  1462  0007CA  0A07               	xorlw	7	; case 12
  1463  0007CC  B4D8               	btfsc	status,2,c
  1464  0007CE  D7B9               	goto	l3078
  1465  0007D0  0A01               	xorlw	1	; case 13
  1466  0007D2  B4D8               	btfsc	status,2,c
  1467  0007D4  D7CA               	goto	l3082
  1468  0007D6  0A03               	xorlw	3	; case 14
  1469  0007D8  B4D8               	btfsc	status,2,c
  1470  0007DA  D7DB               	goto	l3086
  1471  0007DC  D014               	goto	l3098
  1472  0007DE                     l3096:
  1473                           
  1474                           ; BSR set to: 1
  1475  0007DE  0101               	movlb	1	; () banked
  1476  0007E0  512D               	movf	main@msgtype& (0+255),w,b
  1477                           
  1478                           ; Switch size 1, requested type "space"
  1479                           ; Number of cases is 6, Range of values is 10 to 52
  1480                           ; switch strategies available:
  1481                           ; Name         Instructions Cycles
  1482                           ; simple_byte           19    10 (average)
  1483                           ;	Chosen strategy is simple_byte
  1484  0007E2  0A0A               	xorlw	10	; case 10
  1485  0007E4  B4D8               	btfsc	status,2,c
  1486  0007E6  D74E               	goto	l122
  1487  0007E8  0A22               	xorlw	34	; case 40
  1488  0007EA  B4D8               	btfsc	status,2,c
  1489  0007EC  D76F               	goto	l125
  1490  0007EE  0A01               	xorlw	1	; case 41
  1491  0007F0  B4D8               	btfsc	status,2,c
  1492  0007F2  D76C               	goto	l125
  1493  0007F4  0A07               	xorlw	7	; case 46
  1494  0007F6  B4D8               	btfsc	status,2,c
  1495  0007F8  D779               	goto	l128
  1496  0007FA  0A01               	xorlw	1	; case 47
  1497  0007FC  B4D8               	btfsc	status,2,c
  1498  0007FE  D769               	goto	l3068
  1499  000800  0A1B               	xorlw	27	; case 52
  1500  000802  B4D8               	btfsc	status,2,c
  1501  000804  D766               	goto	l3068
  1502  000806                     l3098:
  1503                           
  1504                           ;main.c: 291: }
  1505                           ;main.c: 294: length = ToMainLow_recvmsg(26, &msgtype, (void *) msgbuffer);
  1506  000806  0101               	movlb	1	; () banked
  1507  000808  0E01               	movlw	high main@msgtype
  1508  00080A  0100               	movlb	0	; () banked
  1509  00080C  6FA9               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1510  00080E  0101               	movlb	1	; () banked
  1511  000810  0E2D               	movlw	low main@msgtype
  1512  000812  0100               	movlb	0	; () banked
  1513  000814  6FA8               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1514  000816  0101               	movlb	1	; () banked
  1515  000818  0E01               	movlw	high main@msgbuffer
  1516  00081A  0100               	movlb	0	; () banked
  1517  00081C  6FAB               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1518  00081E  0101               	movlb	1	; () banked
  1519  000820  0E05               	movlw	low main@msgbuffer
  1520  000822  0100               	movlb	0	; () banked
  1521  000824  6FAA               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1522  000826  0E1A               	movlw	26
  1523  000828  ECDE  F00C         	call	_ToMainLow_recvmsg
  1524  00082C  0101               	movlb	1	; () banked
  1525  00082E  6F40               	movwf	main@length& (0+255),b
  1526                           
  1527                           ; BSR set to: 1
  1528                           ;main.c: 295: if (length < 0) {
  1529  000830  0101               	movlb	1	; () banked
  1530  000832  BF40               	btfsc	main@length& (0+255),7,b
  1531  000834  D70C               	goto	l117
  1532  000836  D0BD               	goto	l3134
  1533  000838                     l3104:
  1534                           
  1535                           ; BSR set to: 1
  1536                           ;main.c: 304: {
  1537                           ;main.c: 305: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1538  000838  0101               	movlb	1	; () banked
  1539  00083A  0E01               	movlw	high main@t1thread_data
  1540  00083C  0100               	movlb	0	; () banked
  1541  00083E  6FAB               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1542  000840  0101               	movlb	1	; () banked
  1543  000842  0E2B               	movlw	low main@t1thread_data
  1544  000844  0100               	movlb	0	; () banked
  1545  000846  6FAA               	movwf	timer1_lthread@tptr& (0+255),b
  1546  000848  0101               	movlb	1	; () banked
  1547  00084A  0100               	movlb	0	; () banked
  1548  00084C  C12D  F0AC         	movff	main@msgtype,timer1_lthread@msgtype
  1549  000850  0100               	movlb	0	; () banked
  1550  000852  6BAD               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1551  000854  0101               	movlb	1	; () banked
  1552  000856  5140               	movf	main@length& (0+255),w,b
  1553  000858  0100               	movlb	0	; () banked
  1554  00085A  6FAE               	movwf	timer1_lthread@length& (0+255),b
  1555  00085C  0100               	movlb	0	; () banked
  1556  00085E  6BAF               	clrf	(timer1_lthread@length+1)& (0+255),b
  1557  000860  0100               	movlb	0	; () banked
  1558  000862  BFAE               	btfsc	timer1_lthread@length& (0+255),7,b
  1559  000864  07AF               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1560  000866  0101               	movlb	1	; () banked
  1561  000868  0E01               	movlw	high main@msgbuffer
  1562  00086A  0100               	movlb	0	; () banked
  1563  00086C  6FB1               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1564  00086E  0101               	movlb	1	; () banked
  1565  000870  0E05               	movlw	low main@msgbuffer
  1566  000872  0100               	movlb	0	; () banked
  1567  000874  6FB0               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1568  000876  EC7B  F00B         	call	_timer1_lthread	;wreg free
  1569                           
  1570                           ;main.c: 306: break;
  1571  00087A  D6E9               	goto	l117
  1572  00087C                     l3106:
  1573                           
  1574                           ;main.c: 309: {
  1575                           ;main.c: 310: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1576  00087C  0101               	movlb	1	; () banked
  1577  00087E  0E01               	movlw	high main@uthread_data
  1578  000880  0100               	movlb	0	; () banked
  1579  000882  6F91               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1580  000884  0101               	movlb	1	; () banked
  1581  000886  0E20               	movlw	low main@uthread_data
  1582  000888  0100               	movlb	0	; () banked
  1583  00088A  6F90               	movwf	uart_lthread@uptr& (0+255),b
  1584  00088C  0101               	movlb	1	; () banked
  1585  00088E  0100               	movlb	0	; () banked
  1586  000890  C12D  F092         	movff	main@msgtype,uart_lthread@msgtype
  1587  000894  0100               	movlb	0	; () banked
  1588  000896  6B93               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1589  000898  0101               	movlb	1	; () banked
  1590  00089A  5140               	movf	main@length& (0+255),w,b
  1591  00089C  0100               	movlb	0	; () banked
  1592  00089E  6F94               	movwf	uart_lthread@length& (0+255),b
  1593  0008A0  0100               	movlb	0	; () banked
  1594  0008A2  6B95               	clrf	(uart_lthread@length+1)& (0+255),b
  1595  0008A4  0100               	movlb	0	; () banked
  1596  0008A6  BF94               	btfsc	uart_lthread@length& (0+255),7,b
  1597  0008A8  0795               	decf	(uart_lthread@length+1)& (0+255),f,b
  1598  0008AA  0101               	movlb	1	; () banked
  1599  0008AC  0E01               	movlw	high main@msgbuffer
  1600  0008AE  0100               	movlb	0	; () banked
  1601  0008B0  6F97               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1602  0008B2  0101               	movlb	1	; () banked
  1603  0008B4  0E05               	movlw	low main@msgbuffer
  1604  0008B6  0100               	movlb	0	; () banked
  1605  0008B8  6F96               	movwf	uart_lthread@msgbuffer& (0+255),b
  1606  0008BA  EC2F  F00D         	call	_uart_lthread	;wreg free
  1607                           
  1608                           ;main.c: 311: break;
  1609  0008BE  D6C7               	goto	l117
  1610  0008C0                     l144:
  1611                           
  1612                           ; BSR set to: 1
  1613                           ;main.c: 314: {
  1614                           ;main.c: 316: last_reg_recvd = msgbuffer[0];
  1615  0008C0  C105  F12A         	movff	main@msgbuffer,main@last_reg_recvd
  1616                           
  1617                           ;main.c: 352: switch (last_reg_recvd) {
  1618  0008C4  D064               	goto	l3130
  1619  0008C6                     l3108:
  1620                           
  1621                           ; BSR set to: 1
  1622                           ;main.c: 355: {
  1623                           ;main.c: 356: length = 1;
  1624  0008C6  0E01               	movlw	1
  1625  0008C8  0101               	movlb	1	; () banked
  1626  0008CA  6F40               	movwf	main@length& (0+255),b
  1627                           
  1628                           ;main.c: 357: msgbuffer[0] = 0x0A;
  1629  0008CC  0E0A               	movlw	10
  1630  0008CE  0101               	movlb	1	; () banked
  1631  0008D0  6F05               	movwf	main@msgbuffer& (0+255),b
  1632                           
  1633                           ; BSR set to: 1
  1634                           ;main.c: 358: i2c_master_send(0x9A, length, msgbuffer);
  1635  0008D2  C140  F0AA         	movff	main@length,i2c_master_send@length
  1636  0008D6  0101               	movlb	1	; () banked
  1637  0008D8  0E01               	movlw	high main@msgbuffer
  1638  0008DA  0100               	movlb	0	; () banked
  1639  0008DC  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1640  0008DE  0101               	movlb	1	; () banked
  1641  0008E0  0E05               	movlw	low main@msgbuffer
  1642  0008E2  0100               	movlb	0	; () banked
  1643  0008E4  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1644  0008E6  0E9A               	movlw	154
  1645  0008E8  EC1F  F009         	call	_i2c_master_send
  1646                           
  1647                           ;main.c: 359: break;
  1648  0008EC  D6B0               	goto	l117
  1649  0008EE                     l3112:
  1650                           
  1651                           ;main.c: 362: {
  1652                           ;main.c: 363: length = 1;
  1653  0008EE  0E01               	movlw	1
  1654  0008F0  0101               	movlb	1	; () banked
  1655  0008F2  6F40               	movwf	main@length& (0+255),b
  1656                           
  1657                           ;main.c: 364: msgbuffer[0] = 0x0B;
  1658  0008F4  0E0B               	movlw	11
  1659  0008F6  0101               	movlb	1	; () banked
  1660  0008F8  6F05               	movwf	main@msgbuffer& (0+255),b
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;main.c: 365: i2c_master_send(0x9A, length, msgbuffer);
  1664  0008FA  C140  F0AA         	movff	main@length,i2c_master_send@length
  1665  0008FE  0101               	movlb	1	; () banked
  1666  000900  0E01               	movlw	high main@msgbuffer
  1667  000902  0100               	movlb	0	; () banked
  1668  000904  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1669  000906  0101               	movlb	1	; () banked
  1670  000908  0E05               	movlw	low main@msgbuffer
  1671  00090A  0100               	movlb	0	; () banked
  1672  00090C  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1673  00090E  0E9A               	movlw	154
  1674  000910  EC1F  F009         	call	_i2c_master_send
  1675                           
  1676                           ;main.c: 366: break;
  1677  000914  D69C               	goto	l117
  1678  000916                     l3116:
  1679                           
  1680                           ;main.c: 369: {
  1681                           ;main.c: 370: length = 1;
  1682  000916  0E01               	movlw	1
  1683  000918  0101               	movlb	1	; () banked
  1684  00091A  6F40               	movwf	main@length& (0+255),b
  1685                           
  1686                           ;main.c: 371: msgbuffer[0] = 0x0C;
  1687  00091C  0E0C               	movlw	12
  1688  00091E  0101               	movlb	1	; () banked
  1689  000920  6F05               	movwf	main@msgbuffer& (0+255),b
  1690                           
  1691                           ; BSR set to: 1
  1692                           ;main.c: 372: i2c_master_send(0x9A, length, msgbuffer);
  1693  000922  C140  F0AA         	movff	main@length,i2c_master_send@length
  1694  000926  0101               	movlb	1	; () banked
  1695  000928  0E01               	movlw	high main@msgbuffer
  1696  00092A  0100               	movlb	0	; () banked
  1697  00092C  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1698  00092E  0101               	movlb	1	; () banked
  1699  000930  0E05               	movlw	low main@msgbuffer
  1700  000932  0100               	movlb	0	; () banked
  1701  000934  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1702  000936  0E9A               	movlw	154
  1703  000938  EC1F  F009         	call	_i2c_master_send
  1704                           
  1705                           ;main.c: 373: break;
  1706  00093C  D688               	goto	l117
  1707  00093E                     l3120:
  1708                           
  1709                           ;main.c: 376: {
  1710                           ;main.c: 377: length = 1;
  1711  00093E  0E01               	movlw	1
  1712  000940  0101               	movlb	1	; () banked
  1713  000942  6F40               	movwf	main@length& (0+255),b
  1714                           
  1715                           ;main.c: 378: msgbuffer[0] = 0x0D;
  1716  000944  0E0D               	movlw	13
  1717  000946  0101               	movlb	1	; () banked
  1718  000948  6F05               	movwf	main@msgbuffer& (0+255),b
  1719                           
  1720                           ; BSR set to: 1
  1721                           ;main.c: 379: i2c_master_send(0x9A, length, msgbuffer);
  1722  00094A  C140  F0AA         	movff	main@length,i2c_master_send@length
  1723  00094E  0101               	movlb	1	; () banked
  1724  000950  0E01               	movlw	high main@msgbuffer
  1725  000952  0100               	movlb	0	; () banked
  1726  000954  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1727  000956  0101               	movlb	1	; () banked
  1728  000958  0E05               	movlw	low main@msgbuffer
  1729  00095A  0100               	movlb	0	; () banked
  1730  00095C  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1731  00095E  0E9A               	movlw	154
  1732  000960  EC1F  F009         	call	_i2c_master_send
  1733                           
  1734                           ;main.c: 380: break;
  1735  000964  D674               	goto	l117
  1736  000966                     l3124:
  1737                           
  1738                           ;main.c: 383: {
  1739                           ;main.c: 384: length = 1;
  1740  000966  0E01               	movlw	1
  1741  000968  0101               	movlb	1	; () banked
  1742  00096A  6F40               	movwf	main@length& (0+255),b
  1743                           
  1744                           ;main.c: 385: msgbuffer[0] = 0x0E;
  1745  00096C  0E0E               	movlw	14
  1746  00096E  0101               	movlb	1	; () banked
  1747  000970  6F05               	movwf	main@msgbuffer& (0+255),b
  1748                           
  1749                           ; BSR set to: 1
  1750                           ;main.c: 386: i2c_master_send(0x9A, length, msgbuffer);
  1751  000972  C140  F0AA         	movff	main@length,i2c_master_send@length
  1752  000976  0101               	movlb	1	; () banked
  1753  000978  0E01               	movlw	high main@msgbuffer
  1754  00097A  0100               	movlb	0	; () banked
  1755  00097C  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1756  00097E  0101               	movlb	1	; () banked
  1757  000980  0E05               	movlw	low main@msgbuffer
  1758  000982  0100               	movlb	0	; () banked
  1759  000984  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1760  000986  0E9A               	movlw	154
  1761  000988  EC1F  F009         	call	_i2c_master_send
  1762                           
  1763                           ;main.c: 387: break;
  1764  00098C  D660               	goto	l117
  1765  00098E                     l3130:
  1766  00098E  0101               	movlb	1	; () banked
  1767  000990  512A               	movf	main@last_reg_recvd& (0+255),w,b
  1768                           
  1769                           ; Switch size 1, requested type "space"
  1770                           ; Number of cases is 5, Range of values is 10 to 14
  1771                           ; switch strategies available:
  1772                           ; Name         Instructions Cycles
  1773                           ; simple_byte           16     9 (average)
  1774                           ;	Chosen strategy is simple_byte
  1775  000992  0A0A               	xorlw	10	; case 10
  1776  000994  B4D8               	btfsc	status,2,c
  1777  000996  D797               	goto	l3108
  1778  000998  0A01               	xorlw	1	; case 11
  1779  00099A  B4D8               	btfsc	status,2,c
  1780  00099C  D7A8               	goto	l3112
  1781  00099E  0A07               	xorlw	7	; case 12
  1782  0009A0  B4D8               	btfsc	status,2,c
  1783  0009A2  D7B9               	goto	l3116
  1784  0009A4  0A01               	xorlw	1	; case 13
  1785  0009A6  B4D8               	btfsc	status,2,c
  1786  0009A8  D7CA               	goto	l3120
  1787  0009AA  0A03               	xorlw	3	; case 14
  1788  0009AC  B4D8               	btfsc	status,2,c
  1789  0009AE  D7DB               	goto	l3124
  1790  0009B0  D64E               	goto	l117
  1791  0009B2                     l3134:
  1792                           
  1793                           ; BSR set to: 1
  1794  0009B2  0101               	movlb	1	; () banked
  1795  0009B4  512D               	movf	main@msgtype& (0+255),w,b
  1796                           
  1797                           ; Switch size 1, requested type "space"
  1798                           ; Number of cases is 3, Range of values is 11 to 31
  1799                           ; switch strategies available:
  1800                           ; Name         Instructions Cycles
  1801                           ; simple_byte           10     6 (average)
  1802                           ;	Chosen strategy is simple_byte
  1803  0009B6  0A0B               	xorlw	11	; case 11
  1804  0009B8  B4D8               	btfsc	status,2,c
  1805  0009BA  D73E               	goto	l3104
  1806  0009BC  0A15               	xorlw	21	; case 30
  1807  0009BE  B4D8               	btfsc	status,2,c
  1808  0009C0  D75D               	goto	l3106
  1809  0009C2  0A01               	xorlw	1	; case 31
  1810  0009C4  B4D8               	btfsc	status,2,c
  1811  0009C6  D77C               	goto	l144
  1812  0009C8  D642               	goto	l117
  1813  0009CA                     __end_of_main:
  1814                           	opt stack 0
  1815                           tblptru	equ	0xFF8
  1816                           intcon2	equ	0xFF1
  1817                           postinc0	equ	0xFEE
  1818                           wreg	equ	0xFE8
  1819                           status	equ	0xFD8
  1820                           
  1821 ;; *************** function _uart_send *****************
  1822 ;; Defined at:
  1823 ;;		line 117 in file "../src/my_uart.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  length          1    wreg     unsigned char 
  1826 ;;  msg_buffer      2   74[BANK0 ] PTR unsigned char 
  1827 ;;		 -> main@msgbuffer(27), 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  length          1   77[BANK0 ] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;		None               void
  1832 ;; Registers used:
  1833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1841 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1842 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1843 ;;Total ram usage:        4 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:   13
  1846 ;; This function calls:
  1847 ;;		_FromMainLow_sendmsg
  1848 ;;		___awmod
  1849 ;; This function is called by:
  1850 ;;		_main
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text1
  1855  000EB0                     __ptext1:
  1856                           	opt stack 0
  1857  000EB0                     _uart_send:
  1858                           	opt stack 17
  1859                           
  1860                           ; BSR set to: 1
  1861                           ;incstack = 0
  1862                           ;uart_send@length stored from wreg
  1863  000EB0  0100               	movlb	0	; () banked
  1864  000EB2  6FAD               	movwf	uart_send@length& (0+255),b
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;my_uart.c: 118: { LATAbits.LATA3 = 1;};
  1868  000EB4  8689               	bsf	3977,3,c	;volatile
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;my_uart.c: 121: uc_ptr->outbufind = 0;
  1872  000EB6  EE20 F00F          	lfsr	2,15
  1873  000EBA  5032               	movf	_uc_ptr,w,c
  1874  000EBC  26D9               	addwf	fsr2l,f,c
  1875  000EBE  5033               	movf	_uc_ptr+1,w,c
  1876  000EC0  22DA               	addwfc	fsr2h,f,c
  1877  000EC2  0E00               	movlw	0
  1878  000EC4  6EDF               	movwf	indf2,c
  1879                           
  1880                           ;my_uart.c: 122: uc_ptr->outbuflen = length;
  1881  000EC6  EE20 F00E          	lfsr	2,14
  1882  000ECA  5032               	movf	_uc_ptr,w,c
  1883  000ECC  26D9               	addwf	fsr2l,f,c
  1884  000ECE  5033               	movf	_uc_ptr+1,w,c
  1885  000ED0  22DA               	addwfc	fsr2h,f,c
  1886  000ED2  0100               	movlb	0	; () banked
  1887  000ED4  C0AD  FFDF         	movff	uart_send@length,indf2
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;my_uart.c: 123: msg_buffer[0] = uc_ptr->msg_count % 255;
  1891  000ED8  EE20 F010          	lfsr	2,16
  1892  000EDC  5032               	movf	_uc_ptr,w,c
  1893  000EDE  26D9               	addwf	fsr2l,f,c
  1894  000EE0  5033               	movf	_uc_ptr+1,w,c
  1895  000EE2  22DA               	addwfc	fsr2h,f,c
  1896  000EE4  50DF               	movf	indf2,w,c
  1897  000EE6  0100               	movlb	0	; () banked
  1898  000EE8  6FAC               	movwf	??_uart_send& (0+255),b
  1899  000EEA  0100               	movlb	0	; () banked
  1900  000EEC  51AC               	movf	??_uart_send& (0+255),w,b
  1901  000EEE  0100               	movlb	0	; () banked
  1902  000EF0  6F90               	movwf	___awmod@dividend& (0+255),b
  1903  000EF2  0100               	movlb	0	; () banked
  1904  000EF4  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  1905  000EF6  0E00               	movlw	0
  1906  000EF8  0100               	movlb	0	; () banked
  1907  000EFA  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  1908  000EFC  0100               	movlb	0	; () banked
  1909  000EFE  6992               	setf	___awmod@divisor& (0+255),b
  1910  000F00  ECBB  F007         	call	___awmod	;wreg free
  1911  000F04  0100               	movlb	0	; () banked
  1912  000F06  5190               	movf	?___awmod& (0+255),w,b
  1913  000F08  C0AA  FFD9         	movff	uart_send@msg_buffer,fsr2l
  1914  000F0C  C0AB  FFDA         	movff	uart_send@msg_buffer+1,fsr2h
  1915  000F10  6EDF               	movwf	indf2,c
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;my_uart.c: 124: msg_buffer[1] = 0x8;
  1919  000F12  0100               	movlb	0	; () banked
  1920  000F14  EE20 F001          	lfsr	2,1
  1921  000F18  0100               	movlb	0	; () banked
  1922  000F1A  51AA               	movf	uart_send@msg_buffer& (0+255),w,b
  1923  000F1C  26D9               	addwf	fsr2l,f,c
  1924  000F1E  0100               	movlb	0	; () banked
  1925  000F20  51AB               	movf	(uart_send@msg_buffer+1)& (0+255),w,b
  1926  000F22  22DA               	addwfc	fsr2h,f,c
  1927  000F24  0E08               	movlw	8
  1928  000F26  6EDF               	movwf	indf2,c
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;my_uart.c: 125: msg_buffer[22] = 0xFF;
  1932  000F28  0100               	movlb	0	; () banked
  1933  000F2A  EE20 F016          	lfsr	2,22
  1934  000F2E  0100               	movlb	0	; () banked
  1935  000F30  51AA               	movf	uart_send@msg_buffer& (0+255),w,b
  1936  000F32  26D9               	addwf	fsr2l,f,c
  1937  000F34  0100               	movlb	0	; () banked
  1938  000F36  51AB               	movf	(uart_send@msg_buffer+1)& (0+255),w,b
  1939  000F38  22DA               	addwfc	fsr2h,f,c
  1940  000F3A  0EFF               	movlw	255
  1941  000F3C  6EDF               	movwf	indf2,c
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;my_uart.c: 126: FromMainLow_sendmsg(uc_ptr->outbuflen, 41, (void *) msg_buffer);
  1945  000F3E  0E29               	movlw	41
  1946  000F40  0100               	movlb	0	; () banked
  1947  000F42  6FA6               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  1948  000F44  0100               	movlb	0	; () banked
  1949  000F46  C0AB  F0A8         	movff	uart_send@msg_buffer+1,FromMainLow_sendmsg@data+1
  1950  000F4A  0100               	movlb	0	; () banked
  1951  000F4C  C0AA  F0A7         	movff	uart_send@msg_buffer,FromMainLow_sendmsg@data
  1952  000F50  EE20 F00E          	lfsr	2,14
  1953  000F54  5032               	movf	_uc_ptr,w,c
  1954  000F56  26D9               	addwf	fsr2l,f,c
  1955  000F58  5033               	movf	_uc_ptr+1,w,c
  1956  000F5A  22DA               	addwfc	fsr2h,f,c
  1957  000F5C  50DF               	movf	indf2,w,c
  1958  000F5E  EC7A  F00D         	call	_FromMainLow_sendmsg
  1959                           
  1960                           ;my_uart.c: 127: uc_ptr->msg_count++;
  1961  000F62  EE20 F010          	lfsr	2,16
  1962  000F66  5032               	movf	_uc_ptr,w,c
  1963  000F68  26D9               	addwf	fsr2l,f,c
  1964  000F6A  5033               	movf	_uc_ptr+1,w,c
  1965  000F6C  22DA               	addwfc	fsr2h,f,c
  1966  000F6E  2ADF               	incf	indf2,f,c
  1967                           
  1968                           ;my_uart.c: 128: PIE1bits.TXIE = 1;
  1969  000F70  889D               	bsf	3997,4,c	;volatile
  1970                           
  1971                           ;my_uart.c: 129: { LATAbits.LATA3 = 0;};
  1972  000F72  9689               	bcf	3977,3,c	;volatile
  1973  000F74  0012               	return	
  1974  000F76                     __end_of_uart_send:
  1975                           	opt stack 0
  1976                           tblptru	equ	0xFF8
  1977                           intcon2	equ	0xFF1
  1978                           postinc0	equ	0xFEE
  1979                           wreg	equ	0xFE8
  1980                           indf2	equ	0xFDF
  1981                           fsr2h	equ	0xFDA
  1982                           fsr2l	equ	0xFD9
  1983                           status	equ	0xFD8
  1984                           
  1985 ;; *************** function ___awmod *****************
  1986 ;; Defined at:
  1987 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  dividend        2   48[BANK0 ] int 
  1990 ;;  divisor         2   50[BANK0 ] int 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  sign            1   53[BANK0 ] unsigned char 
  1993 ;;  counter         1   52[BANK0 ] unsigned char 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  2   48[BANK0 ] int 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0, prodl
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2003 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2004 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2006 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2007 ;;Total ram usage:        6 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:   10
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_uart_send
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text2
  2018  000F76                     __ptext2:
  2019                           	opt stack 0
  2020  000F76                     ___awmod:
  2021                           	opt stack 19
  2022                           
  2023                           ;incstack = 0
  2024  000F76  0E00               	movlw	0
  2025  000F78  0100               	movlb	0	; () banked
  2026  000F7A  6F95               	movwf	___awmod@sign& (0+255),b
  2027                           
  2028                           ; BSR set to: 0
  2029  000F7C  0100               	movlb	0	; () banked
  2030  000F7E  5191               	movf	(___awmod@dividend+1)& (0+255),w,b
  2031  000F80  0A80               	xorlw	128
  2032  000F82  6EF3               	movwf	prodl,c
  2033  000F84  0E80               	movlw	128
  2034  000F86  5CF3               	subwf	prodl,w,c
  2035  000F88  0E00               	movlw	0
  2036  000F8A  B4D8               	btfsc	status,2,c
  2037  000F8C  5D90               	subwf	___awmod@dividend& (0+255),w,b
  2038  000F8E  B0D8               	btfsc	status,0,c
  2039  000F90  D009               	goto	l2466
  2040                           
  2041                           ; BSR set to: 0
  2042  000F92  0100               	movlb	0	; () banked
  2043  000F94  6D90               	negf	___awmod@dividend& (0+255),b
  2044  000F96  0100               	movlb	0	; () banked
  2045  000F98  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
  2046  000F9A  B0D8               	btfsc	status,0,c
  2047  000F9C  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
  2048                           
  2049                           ; BSR set to: 0
  2050  000F9E  0E01               	movlw	1
  2051  000FA0  0100               	movlb	0	; () banked
  2052  000FA2  6F95               	movwf	___awmod@sign& (0+255),b
  2053  000FA4                     l2466:
  2054                           
  2055                           ; BSR set to: 0
  2056  000FA4  0100               	movlb	0	; () banked
  2057  000FA6  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  2058  000FA8  0A80               	xorlw	128
  2059  000FAA  6EF3               	movwf	prodl,c
  2060  000FAC  0E80               	movlw	128
  2061  000FAE  5CF3               	subwf	prodl,w,c
  2062  000FB0  0E00               	movlw	0
  2063  000FB2  B4D8               	btfsc	status,2,c
  2064  000FB4  5D92               	subwf	___awmod@divisor& (0+255),w,b
  2065  000FB6  B0D8               	btfsc	status,0,c
  2066  000FB8  D006               	goto	l2470
  2067                           
  2068                           ; BSR set to: 0
  2069  000FBA  0100               	movlb	0	; () banked
  2070  000FBC  6D92               	negf	___awmod@divisor& (0+255),b
  2071  000FBE  0100               	movlb	0	; () banked
  2072  000FC0  1F93               	comf	(___awmod@divisor+1)& (0+255),f,b
  2073  000FC2  B0D8               	btfsc	status,0,c
  2074  000FC4  2B93               	incf	(___awmod@divisor+1)& (0+255),f,b
  2075  000FC6                     l2470:
  2076                           
  2077                           ; BSR set to: 0
  2078  000FC6  0100               	movlb	0	; () banked
  2079  000FC8  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  2080  000FCA  1192               	iorwf	___awmod@divisor& (0+255),w,b
  2081  000FCC  B4D8               	btfsc	status,2,c
  2082  000FCE  D026               	goto	l2486
  2083                           
  2084                           ; BSR set to: 0
  2085  000FD0  0E01               	movlw	1
  2086  000FD2  0100               	movlb	0	; () banked
  2087  000FD4  6F94               	movwf	___awmod@counter& (0+255),b
  2088  000FD6  D006               	goto	l2476
  2089  000FD8                     l2474:
  2090                           
  2091                           ; BSR set to: 0
  2092  000FD8  0100               	movlb	0	; () banked
  2093  000FDA  90D8               	bcf	status,0,c
  2094  000FDC  3792               	rlcf	___awmod@divisor& (0+255),f,b
  2095  000FDE  3793               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2096  000FE0  0100               	movlb	0	; () banked
  2097  000FE2  2B94               	incf	___awmod@counter& (0+255),f,b
  2098  000FE4                     l2476:
  2099                           
  2100                           ; BSR set to: 0
  2101  000FE4  0100               	movlb	0	; () banked
  2102  000FE6  AF93               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2103  000FE8  D7F7               	goto	l2474
  2104  000FEA                     l2478:
  2105                           
  2106                           ; BSR set to: 0
  2107  000FEA  0100               	movlb	0	; () banked
  2108  000FEC  5192               	movf	___awmod@divisor& (0+255),w,b
  2109  000FEE  0100               	movlb	0	; () banked
  2110  000FF0  5D90               	subwf	___awmod@dividend& (0+255),w,b
  2111  000FF2  0100               	movlb	0	; () banked
  2112  000FF4  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  2113  000FF6  0100               	movlb	0	; () banked
  2114  000FF8  5991               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2115  000FFA  A0D8               	btfss	status,0,c
  2116  000FFC  D008               	goto	l2482
  2117                           
  2118                           ; BSR set to: 0
  2119  000FFE  0100               	movlb	0	; () banked
  2120  001000  5192               	movf	___awmod@divisor& (0+255),w,b
  2121  001002  0100               	movlb	0	; () banked
  2122  001004  5F90               	subwf	___awmod@dividend& (0+255),f,b
  2123  001006  0100               	movlb	0	; () banked
  2124  001008  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  2125  00100A  0100               	movlb	0	; () banked
  2126  00100C  5B91               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2127  00100E                     l2482:
  2128                           
  2129                           ; BSR set to: 0
  2130  00100E  0100               	movlb	0	; () banked
  2131  001010  90D8               	bcf	status,0,c
  2132  001012  3393               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2133  001014  3392               	rrcf	___awmod@divisor& (0+255),f,b
  2134                           
  2135                           ; BSR set to: 0
  2136  001016  0100               	movlb	0	; () banked
  2137  001018  2F94               	decfsz	___awmod@counter& (0+255),f,b
  2138  00101A  D7E7               	goto	l2478
  2139  00101C                     l2486:
  2140                           
  2141                           ; BSR set to: 0
  2142  00101C  0100               	movlb	0	; () banked
  2143  00101E  5195               	movf	___awmod@sign& (0+255),w,b
  2144  001020  B4D8               	btfsc	status,2,c
  2145  001022  D006               	goto	l2490
  2146                           
  2147                           ; BSR set to: 0
  2148  001024  0100               	movlb	0	; () banked
  2149  001026  6D90               	negf	___awmod@dividend& (0+255),b
  2150  001028  0100               	movlb	0	; () banked
  2151  00102A  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
  2152  00102C  B0D8               	btfsc	status,0,c
  2153  00102E  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
  2154  001030                     l2490:
  2155                           
  2156                           ; BSR set to: 0
  2157  001030  C090  F090         	movff	___awmod@dividend,?___awmod
  2158  001034  C091  F091         	movff	___awmod@dividend+1,?___awmod+1
  2159  001038  0012               	return	
  2160  00103A                     __end_of___awmod:
  2161                           	opt stack 0
  2162                           tblptru	equ	0xFF8
  2163                           prodl	equ	0xFF3
  2164                           intcon2	equ	0xFF1
  2165                           postinc0	equ	0xFEE
  2166                           wreg	equ	0xFE8
  2167                           indf2	equ	0xFDF
  2168                           fsr2h	equ	0xFDA
  2169                           fsr2l	equ	0xFD9
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _FromMainLow_sendmsg *****************
  2173 ;; Defined at:
  2174 ;;		line 198 in file "../src/messages.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  length          1    wreg     unsigned char 
  2177 ;;  msgtype         1   70[BANK0 ] unsigned char 
  2178 ;;  data            2   71[BANK0 ] PTR void 
  2179 ;;		 -> main@msgbuffer(27), 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  length          1   73[BANK0 ] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      char 
  2184 ;; Registers used:
  2185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2191 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2192 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;Total ram usage:        4 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:   12
  2198 ;; This function calls:
  2199 ;;		_send_msg
  2200 ;; This function is called by:
  2201 ;;		_uart_send
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text3
  2206  001AF4                     __ptext3:
  2207                           	opt stack 0
  2208  001AF4                     _FromMainLow_sendmsg:
  2209                           	opt stack 17
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;incstack = 0
  2213                           ;FromMainLow_sendmsg@length stored from wreg
  2214  001AF4  0100               	movlb	0	; () banked
  2215  001AF6  6FA9               	movwf	FromMainLow_sendmsg@length& (0+255),b
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;messages.c: 204: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  2219                           ;	Return value of _FromMainLow_sendmsg is never used
  2220  001AF8  0103               	movlb	3	; () banked
  2221  001AFA  0E03               	movlw	high _FromMainLow_MQ
  2222  001AFC  0100               	movlb	0	; () banked
  2223  001AFE  6F9B               	movwf	(send_msg@qptr+1)& (0+255),b
  2224  001B00  0103               	movlb	3	; () banked
  2225  001B02  0E00               	movlw	low _FromMainLow_MQ
  2226  001B04  0100               	movlb	0	; () banked
  2227  001B06  6F9A               	movwf	send_msg@qptr& (0+255),b
  2228  001B08  C0A9  F09C         	movff	FromMainLow_sendmsg@length,send_msg@length
  2229  001B0C  C0A6  F09D         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2230  001B10  0100               	movlb	0	; () banked
  2231  001B12  C0A8  F09F         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2232  001B16  0100               	movlb	0	; () banked
  2233  001B18  C0A7  F09E         	movff	FromMainLow_sendmsg@data,send_msg@data
  2234  001B1C  EC03  F006         	call	_send_msg	;wreg free
  2235  001B20  0012               	return	
  2236  001B22                     __end_of_FromMainLow_sendmsg:
  2237                           	opt stack 0
  2238                           tblptru	equ	0xFF8
  2239                           prodl	equ	0xFF3
  2240                           intcon2	equ	0xFF1
  2241                           postinc0	equ	0xFEE
  2242                           wreg	equ	0xFE8
  2243                           indf2	equ	0xFDF
  2244                           fsr2h	equ	0xFDA
  2245                           fsr2l	equ	0xFD9
  2246                           status	equ	0xFD8
  2247                           
  2248 ;; *************** function _uart_lthread *****************
  2249 ;; Defined at:
  2250 ;;		line 9 in file "../src/uart_thread.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  uptr            2   48[BANK0 ] PTR struct __uart_thread
  2253 ;;		 -> main@uthread_data(2), 
  2254 ;;  msgtype         2   50[BANK0 ] int 
  2255 ;;  length          2   52[BANK0 ] int 
  2256 ;;  msgbuffer       2   54[BANK0 ] PTR unsigned char 
  2257 ;;		 -> main@msgbuffer(27), 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  2   48[BANK0 ] int 
  2262 ;; Registers used:
  2263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2269 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2272 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2273 ;;Total ram usage:        8 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:   10
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text4
  2284  001A5E                     __ptext4:
  2285                           	opt stack 0
  2286  001A5E                     _uart_lthread:
  2287                           	opt stack 20
  2288                           
  2289                           ;uart_thread.c: 10: if (msgtype == 30) {
  2290                           
  2291                           ;incstack = 0
  2292  001A5E  0100               	movlb	0	; () banked
  2293  001A60  5192               	movf	uart_lthread@msgtype& (0+255),w,b
  2294  001A62  0A1E               	xorlw	30
  2295  001A64  1193               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  2296  001A66  B4D8               	btfsc	status,2,c
  2297  001A68  0012               	return	
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;uart_thread.c: 12: else if (msgtype == 31) {
  2301                           
  2302                           ; BSR set to: 0
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;uart_thread.c: 11: }
  2306  001A6A  0100               	movlb	0	; () banked
  2307  001A6C  5192               	movf	uart_lthread@msgtype& (0+255),w,b
  2308  001A6E  0A1F               	xorlw	31
  2309  001A70  1193               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  2310  001A72  A4D8               	btfss	status,2,c
  2311  001A74  0012               	return	
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  2315  001A76  0100               	movlb	0	; () banked
  2316  001A78  5194               	movf	uart_lthread@length& (0+255),w,b
  2317  001A7A  0100               	movlb	0	; () banked
  2318  001A7C  2596               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  2319  001A7E  6ED9               	movwf	fsr2l,c
  2320  001A80  0100               	movlb	0	; () banked
  2321  001A82  5195               	movf	(uart_lthread@length+1)& (0+255),w,b
  2322  001A84  0100               	movlb	0	; () banked
  2323  001A86  2197               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  2324  001A88  6EDA               	movwf	fsr2h,c
  2325  001A8A  0E00               	movlw	0
  2326  001A8C  6EDF               	movwf	indf2,c
  2327  001A8E  0012               	return	
  2328  001A90                     __end_of_uart_lthread:
  2329                           	opt stack 0
  2330                           tblptru	equ	0xFF8
  2331                           prodl	equ	0xFF3
  2332                           intcon2	equ	0xFF1
  2333                           postinc0	equ	0xFEE
  2334                           wreg	equ	0xFE8
  2335                           indf2	equ	0xFDF
  2336                           fsr2h	equ	0xFDA
  2337                           fsr2l	equ	0xFD9
  2338                           status	equ	0xFD8
  2339                           
  2340 ;; *************** function _timer1_lthread *****************
  2341 ;; Defined at:
  2342 ;;		line 14 in file "../src/timer1_thread.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  tptr            2   74[BANK0 ] PTR struct __timer1_thre
  2345 ;;		 -> main@t1thread_data(2), 
  2346 ;;  msgtype         2   76[BANK0 ] int 
  2347 ;;  length          2   78[BANK0 ] int 
  2348 ;;  msgbuffer       2   80[BANK0 ] PTR unsigned char 
  2349 ;;		 -> main@msgbuffer(27), 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  retval          1   82[BANK0 ] char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  2   74[BANK0 ] int 
  2354 ;; Registers used:
  2355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2361 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2364 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2365 ;;Total ram usage:        9 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:   13
  2368 ;; This function calls:
  2369 ;;		_FromMainHigh_sendmsg
  2370 ;;		___lwmod
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text5
  2377  0016F6                     __ptext5:
  2378                           	opt stack 0
  2379  0016F6                     _timer1_lthread:
  2380                           	opt stack 17
  2381                           
  2382                           ;timer1_thread.c: 15: signed char retval;
  2383                           ;timer1_thread.c: 17: tptr->msgcount++;
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;incstack = 0
  2387  0016F6  C0AA  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2388  0016FA  C0AB  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2389  0016FE  2ADE               	incf	postinc2,f,c
  2390  001700  0E00               	movlw	0
  2391  001702  22DD               	addwfc	postdec2,f,c
  2392                           
  2393                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  2394  001704  C0AA  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2395  001708  C0AB  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2396  00170C  0100               	movlb	0	; () banked
  2397  00170E  CFDE F090          	movff	postinc2,___lwmod@dividend
  2398  001712  0100               	movlb	0	; () banked
  2399  001714  CFDD F091          	movff	postdec2,___lwmod@dividend+1
  2400  001718  0E00               	movlw	0
  2401  00171A  0100               	movlb	0	; () banked
  2402  00171C  6F93               	movwf	(___lwmod@divisor+1)& (0+255),b
  2403  00171E  0E0A               	movlw	10
  2404  001720  0100               	movlb	0	; () banked
  2405  001722  6F92               	movwf	___lwmod@divisor& (0+255),b
  2406  001724  EC4B  F00B         	call	___lwmod	;wreg free
  2407  001728  0100               	movlb	0	; () banked
  2408  00172A  5190               	movf	?___lwmod& (0+255),w,b
  2409  00172C  0A09               	xorlw	9
  2410  00172E  0100               	movlb	0	; () banked
  2411  001730  1191               	iorwf	(?___lwmod+1)& (0+255),w,b
  2412  001732  A4D8               	btfss	status,2,c
  2413  001734  0012               	return	
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  2417  001736  0E14               	movlw	20
  2418  001738  0100               	movlb	0	; () banked
  2419  00173A  6FA6               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2420  00173C  0100               	movlb	0	; () banked
  2421  00173E  C0AB  F0A8         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2422  001742  0100               	movlb	0	; () banked
  2423  001744  C0AA  F0A7         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  2424  001748  0E02               	movlw	2
  2425  00174A  ECA8  F00D         	call	_FromMainHigh_sendmsg
  2426  00174E  0100               	movlb	0	; () banked
  2427  001750  6FB2               	movwf	timer1_lthread@retval& (0+255),b
  2428  001752  0012               	return	
  2429  001754                     __end_of_timer1_lthread:
  2430                           	opt stack 0
  2431                           tblptru	equ	0xFF8
  2432                           prodl	equ	0xFF3
  2433                           intcon2	equ	0xFF1
  2434                           postinc0	equ	0xFEE
  2435                           wreg	equ	0xFE8
  2436                           indf2	equ	0xFDF
  2437                           postinc2	equ	0xFDE
  2438                           postdec2	equ	0xFDD
  2439                           fsr2h	equ	0xFDA
  2440                           fsr2l	equ	0xFD9
  2441                           status	equ	0xFD8
  2442                           
  2443 ;; *************** function ___lwmod *****************
  2444 ;; Defined at:
  2445 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  dividend        2   48[BANK0 ] unsigned int 
  2448 ;;  divisor         2   50[BANK0 ] unsigned int 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  counter         1   52[BANK0 ] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  2   48[BANK0 ] unsigned int 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2460 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2461 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2463 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2464 ;;Total ram usage:        5 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:   10
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_timer1_lthread
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text6
  2475  001696                     __ptext6:
  2476                           	opt stack 0
  2477  001696                     ___lwmod:
  2478                           	opt stack 19
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;incstack = 0
  2482  001696  0100               	movlb	0	; () banked
  2483  001698  5193               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2484  00169A  1192               	iorwf	___lwmod@divisor& (0+255),w,b
  2485  00169C  B4D8               	btfsc	status,2,c
  2486  00169E  D026               	goto	l1055
  2487                           
  2488                           ; BSR set to: 0
  2489  0016A0  0E01               	movlw	1
  2490  0016A2  0100               	movlb	0	; () banked
  2491  0016A4  6F94               	movwf	___lwmod@counter& (0+255),b
  2492  0016A6  D006               	goto	l2500
  2493  0016A8                     l2498:
  2494                           
  2495                           ; BSR set to: 0
  2496  0016A8  0100               	movlb	0	; () banked
  2497  0016AA  90D8               	bcf	status,0,c
  2498  0016AC  3792               	rlcf	___lwmod@divisor& (0+255),f,b
  2499  0016AE  3793               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2500  0016B0  0100               	movlb	0	; () banked
  2501  0016B2  2B94               	incf	___lwmod@counter& (0+255),f,b
  2502  0016B4                     l2500:
  2503                           
  2504                           ; BSR set to: 0
  2505  0016B4  0100               	movlb	0	; () banked
  2506  0016B6  AF93               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2507  0016B8  D7F7               	goto	l2498
  2508  0016BA                     l2502:
  2509                           
  2510                           ; BSR set to: 0
  2511  0016BA  0100               	movlb	0	; () banked
  2512  0016BC  5192               	movf	___lwmod@divisor& (0+255),w,b
  2513  0016BE  0100               	movlb	0	; () banked
  2514  0016C0  5D90               	subwf	___lwmod@dividend& (0+255),w,b
  2515  0016C2  0100               	movlb	0	; () banked
  2516  0016C4  5193               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2517  0016C6  0100               	movlb	0	; () banked
  2518  0016C8  5991               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2519  0016CA  A0D8               	btfss	status,0,c
  2520  0016CC  D008               	goto	l2506
  2521                           
  2522                           ; BSR set to: 0
  2523  0016CE  0100               	movlb	0	; () banked
  2524  0016D0  5192               	movf	___lwmod@divisor& (0+255),w,b
  2525  0016D2  0100               	movlb	0	; () banked
  2526  0016D4  5F90               	subwf	___lwmod@dividend& (0+255),f,b
  2527  0016D6  0100               	movlb	0	; () banked
  2528  0016D8  5193               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2529  0016DA  0100               	movlb	0	; () banked
  2530  0016DC  5B91               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2531  0016DE                     l2506:
  2532                           
  2533                           ; BSR set to: 0
  2534  0016DE  0100               	movlb	0	; () banked
  2535  0016E0  90D8               	bcf	status,0,c
  2536  0016E2  3393               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2537  0016E4  3392               	rrcf	___lwmod@divisor& (0+255),f,b
  2538                           
  2539                           ; BSR set to: 0
  2540  0016E6  0100               	movlb	0	; () banked
  2541  0016E8  2F94               	decfsz	___lwmod@counter& (0+255),f,b
  2542  0016EA  D7E7               	goto	l2502
  2543  0016EC                     l1055:
  2544                           
  2545                           ; BSR set to: 0
  2546  0016EC  C090  F090         	movff	___lwmod@dividend,?___lwmod
  2547  0016F0  C091  F091         	movff	___lwmod@dividend+1,?___lwmod+1
  2548                           
  2549                           ; BSR set to: 0
  2550  0016F4  0012               	return	
  2551  0016F6                     __end_of___lwmod:
  2552                           	opt stack 0
  2553                           tblptru	equ	0xFF8
  2554                           prodl	equ	0xFF3
  2555                           intcon2	equ	0xFF1
  2556                           postinc0	equ	0xFEE
  2557                           wreg	equ	0xFE8
  2558                           indf2	equ	0xFDF
  2559                           postinc2	equ	0xFDE
  2560                           postdec2	equ	0xFDD
  2561                           fsr2h	equ	0xFDA
  2562                           fsr2l	equ	0xFD9
  2563                           status	equ	0xFD8
  2564                           
  2565 ;; *************** function _timer0_lthread *****************
  2566 ;; Defined at:
  2567 ;;		line 9 in file "../src/timer0_thread.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  tptr            2   48[BANK0 ] PTR struct __timer0_thre
  2570 ;;		 -> main@t0thread_data(2), 
  2571 ;;  msgtype         2   50[BANK0 ] int 
  2572 ;;  length          2   52[BANK0 ] int 
  2573 ;;  msgbuffer       2   54[BANK0 ] PTR unsigned char 
  2574 ;;		 -> main@msgbuffer(27), 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  msgval          2   56[BANK0 ] PTR unsigned int 
  2577 ;;		 -> main@msgbuffer(27), 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  2   48[BANK0 ] int 
  2580 ;; Registers used:
  2581 ;;		wreg, status,2, status,0
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2587 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2588 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2590 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2591 ;;Total ram usage:       10 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:   10
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text7
  2602  001CF0                     __ptext7:
  2603                           	opt stack 0
  2604  001CF0                     _timer0_lthread:
  2605                           	opt stack 20
  2606                           
  2607                           ;timer0_thread.c: 10: unsigned int *msgval;
  2608                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;incstack = 0
  2612  001CF0  0100               	movlb	0	; () banked
  2613  001CF2  C097  F099         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2614  001CF6  0100               	movlb	0	; () banked
  2615  001CF8  C096  F098         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2616                           
  2617                           ; BSR set to: 0
  2618  001CFC  0012               	return	
  2619  001CFE                     __end_of_timer0_lthread:
  2620                           	opt stack 0
  2621                           tblptru	equ	0xFF8
  2622                           prodl	equ	0xFF3
  2623                           intcon2	equ	0xFF1
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           indf2	equ	0xFDF
  2627                           postinc2	equ	0xFDE
  2628                           postdec2	equ	0xFDD
  2629                           fsr2h	equ	0xFDA
  2630                           fsr2l	equ	0xFD9
  2631                           status	equ	0xFD8
  2632                           
  2633 ;; *************** function _init_uart_recv *****************
  2634 ;; Defined at:
  2635 ;;		line 111 in file "../src/my_uart.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  uc              2   48[BANK0 ] PTR struct __uart_comm
  2638 ;;		 -> main@uc(18), 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;		None
  2641 ;; Return value:  Size  Location     Type
  2642 ;;		None               void
  2643 ;; Registers used:
  2644 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2650 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2653 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2654 ;;Total ram usage:        2 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:   10
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_main
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text8
  2665  001B22                     __ptext8:
  2666                           	opt stack 0
  2667  001B22                     _init_uart_recv:
  2668                           	opt stack 20
  2669                           
  2670                           ;my_uart.c: 112: uc_ptr = uc;
  2671                           
  2672                           ; BSR set to: 0
  2673                           ;incstack = 0
  2674  001B22  0100               	movlb	0	; () banked
  2675  001B24  C091  F033         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2676  001B28  0100               	movlb	0	; () banked
  2677  001B2A  C090  F032         	movff	init_uart_recv@uc,_uc_ptr
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;my_uart.c: 113: uc_ptr->buflen = 0;
  2681  001B2E  EE20 F006          	lfsr	2,6
  2682  001B32  5032               	movf	_uc_ptr,w,c
  2683  001B34  26D9               	addwf	fsr2l,f,c
  2684  001B36  5033               	movf	_uc_ptr+1,w,c
  2685  001B38  22DA               	addwfc	fsr2h,f,c
  2686  001B3A  0E00               	movlw	0
  2687  001B3C  6EDF               	movwf	indf2,c
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;my_uart.c: 114: uc_ptr->cmd_count = 0;
  2691  001B3E  EE20 F011          	lfsr	2,17
  2692  001B42  5032               	movf	_uc_ptr,w,c
  2693  001B44  26D9               	addwf	fsr2l,f,c
  2694  001B46  5033               	movf	_uc_ptr+1,w,c
  2695  001B48  22DA               	addwfc	fsr2h,f,c
  2696  001B4A  0E00               	movlw	0
  2697  001B4C  6EDF               	movwf	indf2,c
  2698                           
  2699                           ; BSR set to: 0
  2700  001B4E  0012               	return	
  2701  001B50                     __end_of_init_uart_recv:
  2702                           	opt stack 0
  2703                           tblptru	equ	0xFF8
  2704                           prodl	equ	0xFF3
  2705                           intcon2	equ	0xFF1
  2706                           postinc0	equ	0xFEE
  2707                           wreg	equ	0xFE8
  2708                           indf2	equ	0xFDF
  2709                           postinc2	equ	0xFDE
  2710                           postdec2	equ	0xFDD
  2711                           fsr2h	equ	0xFDA
  2712                           fsr2l	equ	0xFD9
  2713                           status	equ	0xFD8
  2714                           
  2715 ;; *************** function _init_timer1_lthread *****************
  2716 ;; Defined at:
  2717 ;;		line 6 in file "../src/timer1_thread.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  tptr            2   48[BANK0 ] PTR struct __timer1_thre
  2720 ;;		 -> main@t1thread_data(2), 
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;		None               void
  2725 ;; Registers used:
  2726 ;;		wreg, fsr2l, fsr2h
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2732 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2735 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2736 ;;Total ram usage:        2 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; Hardware stack levels required when called:   10
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text9
  2747  001C88                     __ptext9:
  2748                           	opt stack 0
  2749  001C88                     _init_timer1_lthread:
  2750                           	opt stack 20
  2751                           
  2752                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;incstack = 0
  2756  001C88  C090  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2757  001C8C  C091  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2758  001C90  0E00               	movlw	0
  2759  001C92  6EDE               	movwf	postinc2,c
  2760  001C94  0E00               	movlw	0
  2761  001C96  6EDD               	movwf	postdec2,c
  2762  001C98  0012               	return	
  2763  001C9A                     __end_of_init_timer1_lthread:
  2764                           	opt stack 0
  2765                           tblptru	equ	0xFF8
  2766                           prodl	equ	0xFF3
  2767                           intcon2	equ	0xFF1
  2768                           postinc0	equ	0xFEE
  2769                           wreg	equ	0xFE8
  2770                           indf2	equ	0xFDF
  2771                           postinc2	equ	0xFDE
  2772                           postdec2	equ	0xFDD
  2773                           fsr2h	equ	0xFDA
  2774                           fsr2l	equ	0xFD9
  2775                           status	equ	0xFD8
  2776                           
  2777 ;; *************** function _init_queues *****************
  2778 ;; Defined at:
  2779 ;;		line 242 in file "../src/messages.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;		None
  2784 ;; Return value:  Size  Location     Type
  2785 ;;		None               void
  2786 ;; Registers used:
  2787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2797 ;;Total ram usage:        0 bytes
  2798 ;; Hardware stack levels used:    1
  2799 ;; Hardware stack levels required when called:   11
  2800 ;; This function calls:
  2801 ;;		_init_queue
  2802 ;; This function is called by:
  2803 ;;		_main
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           	psect	text10
  2808  00136C                     __ptext10:
  2809                           	opt stack 0
  2810  00136C                     _init_queues:
  2811                           	opt stack 19
  2812                           
  2813                           ;messages.c: 243: MQ_Main_Willing_to_block = 0;
  2814                           
  2815                           ;incstack = 0
  2816  00136C  0E00               	movlw	0
  2817  00136E  0100               	movlb	0	; () banked
  2818  001370  6FB5               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;messages.c: 244: init_queue(&ToMainLow_MQ);
  2822  001372  0101               	movlb	1	; () banked
  2823  001374  0E01               	movlw	high _ToMainLow_MQ
  2824  001376  0100               	movlb	0	; () banked
  2825  001378  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  2826  00137A  0101               	movlb	1	; () banked
  2827  00137C  0E81               	movlw	low _ToMainLow_MQ
  2828  00137E  0100               	movlb	0	; () banked
  2829  001380  6F90               	movwf	init_queue@qptr& (0+255),b
  2830  001382  EC19  F00B         	call	_init_queue	;wreg free
  2831                           
  2832                           ;messages.c: 245: init_queue(&ToMainHigh_MQ);
  2833  001386  0102               	movlb	2	; () banked
  2834  001388  0E02               	movlw	high _ToMainHigh_MQ
  2835  00138A  0100               	movlb	0	; () banked
  2836  00138C  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  2837  00138E  0102               	movlb	2	; () banked
  2838  001390  0E76               	movlw	low _ToMainHigh_MQ
  2839  001392  0100               	movlb	0	; () banked
  2840  001394  6F90               	movwf	init_queue@qptr& (0+255),b
  2841  001396  EC19  F00B         	call	_init_queue	;wreg free
  2842                           
  2843                           ;messages.c: 246: init_queue(&SensorData_MQ);
  2844  00139A  0102               	movlb	2	; () banked
  2845  00139C  0E02               	movlw	high _SensorData_MQ
  2846  00139E  0100               	movlb	0	; () banked
  2847  0013A0  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  2848  0013A2  0102               	movlb	2	; () banked
  2849  0013A4  0E00               	movlw	low _SensorData_MQ
  2850  0013A6  0100               	movlb	0	; () banked
  2851  0013A8  6F90               	movwf	init_queue@qptr& (0+255),b
  2852  0013AA  EC19  F00B         	call	_init_queue	;wreg free
  2853                           
  2854                           ;messages.c: 247: init_queue(&MotorData_MQ);
  2855  0013AE  0103               	movlb	3	; () banked
  2856  0013B0  0E03               	movlw	high _MotorData_MQ
  2857  0013B2  0100               	movlb	0	; () banked
  2858  0013B4  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  2859  0013B6  0103               	movlb	3	; () banked
  2860  0013B8  0E76               	movlw	low _MotorData_MQ
  2861  0013BA  0100               	movlb	0	; () banked
  2862  0013BC  6F90               	movwf	init_queue@qptr& (0+255),b
  2863  0013BE  EC19  F00B         	call	_init_queue	;wreg free
  2864                           
  2865                           ;messages.c: 248: init_queue(&FromMainLow_MQ);
  2866  0013C2  0103               	movlb	3	; () banked
  2867  0013C4  0E03               	movlw	high _FromMainLow_MQ
  2868  0013C6  0100               	movlb	0	; () banked
  2869  0013C8  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  2870  0013CA  0103               	movlb	3	; () banked
  2871  0013CC  0E00               	movlw	low _FromMainLow_MQ
  2872  0013CE  0100               	movlb	0	; () banked
  2873  0013D0  6F90               	movwf	init_queue@qptr& (0+255),b
  2874  0013D2  EC19  F00B         	call	_init_queue	;wreg free
  2875                           
  2876                           ;messages.c: 249: init_queue(&FromMainHigh_MQ);
  2877  0013D6  0104               	movlb	4	; () banked
  2878  0013D8  0E04               	movlw	high _FromMainHigh_MQ
  2879  0013DA  0100               	movlb	0	; () banked
  2880  0013DC  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  2881  0013DE  0104               	movlb	4	; () banked
  2882  0013E0  0E00               	movlw	low _FromMainHigh_MQ
  2883  0013E2  0100               	movlb	0	; () banked
  2884  0013E4  6F90               	movwf	init_queue@qptr& (0+255),b
  2885  0013E6  EC19  F00B         	call	_init_queue	;wreg free
  2886  0013EA  0012               	return	
  2887  0013EC                     __end_of_init_queues:
  2888                           	opt stack 0
  2889                           tblptru	equ	0xFF8
  2890                           prodl	equ	0xFF3
  2891                           intcon2	equ	0xFF1
  2892                           postinc0	equ	0xFEE
  2893                           wreg	equ	0xFE8
  2894                           indf2	equ	0xFDF
  2895                           postinc2	equ	0xFDE
  2896                           postdec2	equ	0xFDD
  2897                           fsr2h	equ	0xFDA
  2898                           fsr2l	equ	0xFD9
  2899                           status	equ	0xFD8
  2900                           
  2901 ;; *************** function _init_queue *****************
  2902 ;; Defined at:
  2903 ;;		line 14 in file "../src/messages.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  qptr            2   48[BANK0 ] PTR struct __msg_queue
  2906 ;;		 -> FromMainHigh_MQ(118), FromMainLow_MQ(118), MotorData_MQ(118), SensorData_MQ(118), 
  2907 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  i               1   50[BANK0 ] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;		None               void
  2912 ;; Registers used:
  2913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2919 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2920 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2922 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2923 ;;Total ram usage:        3 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:   10
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_init_queues
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text11
  2934  001632                     __ptext11:
  2935                           	opt stack 0
  2936  001632                     _init_queue:
  2937                           	opt stack 19
  2938                           
  2939                           ;messages.c: 15: unsigned char i;
  2940                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2941                           
  2942                           ;incstack = 0
  2943  001632  0100               	movlb	0	; () banked
  2944  001634  EE20 F074          	lfsr	2,116
  2945  001638  0100               	movlb	0	; () banked
  2946  00163A  5190               	movf	init_queue@qptr& (0+255),w,b
  2947  00163C  26D9               	addwf	fsr2l,f,c
  2948  00163E  0100               	movlb	0	; () banked
  2949  001640  5191               	movf	(init_queue@qptr+1)& (0+255),w,b
  2950  001642  22DA               	addwfc	fsr2h,f,c
  2951  001644  0E00               	movlw	0
  2952  001646  6EDF               	movwf	indf2,c
  2953                           
  2954                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2955  001648  0100               	movlb	0	; () banked
  2956  00164A  EE20 F075          	lfsr	2,117
  2957  00164E  0100               	movlb	0	; () banked
  2958  001650  5190               	movf	init_queue@qptr& (0+255),w,b
  2959  001652  26D9               	addwf	fsr2l,f,c
  2960  001654  0100               	movlb	0	; () banked
  2961  001656  5191               	movf	(init_queue@qptr+1)& (0+255),w,b
  2962  001658  22DA               	addwfc	fsr2h,f,c
  2963  00165A  0E00               	movlw	0
  2964  00165C  6EDF               	movwf	indf2,c
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2968  00165E  0E00               	movlw	0
  2969  001660  0100               	movlb	0	; () banked
  2970  001662  6F92               	movwf	init_queue@i& (0+255),b
  2971                           
  2972                           ; BSR set to: 0
  2973  001664  0E03               	movlw	3
  2974  001666  0100               	movlb	0	; () banked
  2975  001668  6592               	cpfsgt	init_queue@i& (0+255),b
  2976  00166A  D001               	goto	l2374
  2977  00166C  0012               	return	
  2978  00166E                     l2374:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;messages.c: 20: qptr->queue[i].full = 0;
  2982  00166E  0100               	movlb	0	; () banked
  2983  001670  5192               	movf	init_queue@i& (0+255),w,b
  2984  001672  0D1D               	mullw	29
  2985  001674  50F3               	movf	prodl,w,c
  2986  001676  0100               	movlb	0	; () banked
  2987  001678  2590               	addwf	init_queue@qptr& (0+255),w,b
  2988  00167A  6ED9               	movwf	fsr2l,c
  2989  00167C  50F4               	movf	prodh,w,c
  2990  00167E  0100               	movlb	0	; () banked
  2991  001680  2191               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2992  001682  6EDA               	movwf	fsr2h,c
  2993  001684  0E00               	movlw	0
  2994  001686  6EDF               	movwf	indf2,c
  2995                           
  2996                           ; BSR set to: 0
  2997  001688  0100               	movlb	0	; () banked
  2998  00168A  2B92               	incf	init_queue@i& (0+255),f,b
  2999                           
  3000                           ; BSR set to: 0
  3001  00168C  0E03               	movlw	3
  3002  00168E  0100               	movlb	0	; () banked
  3003  001690  6592               	cpfsgt	init_queue@i& (0+255),b
  3004  001692  D7ED               	goto	l2374
  3005  001694  0012               	return	
  3006  001696                     __end_of_init_queue:
  3007                           	opt stack 0
  3008                           tblptru	equ	0xFF8
  3009                           prodh	equ	0xFF4
  3010                           prodl	equ	0xFF3
  3011                           intcon2	equ	0xFF1
  3012                           postinc0	equ	0xFEE
  3013                           wreg	equ	0xFE8
  3014                           indf2	equ	0xFDF
  3015                           postinc2	equ	0xFDE
  3016                           postdec2	equ	0xFDD
  3017                           fsr2h	equ	0xFDA
  3018                           fsr2l	equ	0xFD9
  3019                           status	equ	0xFD8
  3020                           
  3021 ;; *************** function _init_i2c *****************
  3022 ;; Defined at:
  3023 ;;		line 276 in file "../src/my_i2c.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  ic              2   48[BANK0 ] PTR struct __i2c_comm
  3026 ;;		 -> main@ic(64), 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;		None
  3029 ;; Return value:  Size  Location     Type
  3030 ;;		None               void
  3031 ;; Registers used:
  3032 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3038 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3041 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3042 ;;Total ram usage:        2 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:   10
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text12
  3053  0015CC                     __ptext12:
  3054                           	opt stack 0
  3055  0015CC                     _init_i2c:
  3056                           	opt stack 20
  3057                           
  3058                           ;my_i2c.c: 277: ic_ptr = ic;
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;incstack = 0
  3062  0015CC  0100               	movlb	0	; () banked
  3063  0015CE  C091  F0B4         	movff	init_i2c@ic+1,_ic_ptr+1
  3064  0015D2  0100               	movlb	0	; () banked
  3065  0015D4  C090  F0B3         	movff	init_i2c@ic,_ic_ptr
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;my_i2c.c: 278: ic_ptr->buflen = 0;
  3069  0015D8  0100               	movlb	0	; () banked
  3070  0015DA  EE20 F01A          	lfsr	2,26
  3071  0015DE  0100               	movlb	0	; () banked
  3072  0015E0  51B3               	movf	_ic_ptr& (0+255),w,b
  3073  0015E2  26D9               	addwf	fsr2l,f,c
  3074  0015E4  0100               	movlb	0	; () banked
  3075  0015E6  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3076  0015E8  22DA               	addwfc	fsr2h,f,c
  3077  0015EA  0E00               	movlw	0
  3078  0015EC  6EDF               	movwf	indf2,c
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;my_i2c.c: 279: ic_ptr->event_count = 0;
  3082  0015EE  0100               	movlb	0	; () banked
  3083  0015F0  EE20 F01C          	lfsr	2,28
  3084  0015F4  0100               	movlb	0	; () banked
  3085  0015F6  51B3               	movf	_ic_ptr& (0+255),w,b
  3086  0015F8  26D9               	addwf	fsr2l,f,c
  3087  0015FA  0100               	movlb	0	; () banked
  3088  0015FC  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3089  0015FE  22DA               	addwfc	fsr2h,f,c
  3090  001600  0E00               	movlw	0
  3091  001602  6EDF               	movwf	indf2,c
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;my_i2c.c: 280: ic_ptr->status = 0x1;
  3095  001604  0100               	movlb	0	; () banked
  3096  001606  EE20 F01D          	lfsr	2,29
  3097  00160A  0100               	movlb	0	; () banked
  3098  00160C  51B3               	movf	_ic_ptr& (0+255),w,b
  3099  00160E  26D9               	addwf	fsr2l,f,c
  3100  001610  0100               	movlb	0	; () banked
  3101  001612  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3102  001614  22DA               	addwfc	fsr2h,f,c
  3103  001616  0E01               	movlw	1
  3104  001618  6EDF               	movwf	indf2,c
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;my_i2c.c: 281: ic_ptr->error_count = 0;
  3108  00161A  0100               	movlb	0	; () banked
  3109  00161C  EE20 F01F          	lfsr	2,31
  3110  001620  0100               	movlb	0	; () banked
  3111  001622  51B3               	movf	_ic_ptr& (0+255),w,b
  3112  001624  26D9               	addwf	fsr2l,f,c
  3113  001626  0100               	movlb	0	; () banked
  3114  001628  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3115  00162A  22DA               	addwfc	fsr2h,f,c
  3116  00162C  0E00               	movlw	0
  3117  00162E  6EDF               	movwf	indf2,c
  3118                           
  3119                           ; BSR set to: 0
  3120  001630  0012               	return	
  3121  001632                     __end_of_init_i2c:
  3122                           	opt stack 0
  3123                           tblptru	equ	0xFF8
  3124                           prodh	equ	0xFF4
  3125                           prodl	equ	0xFF3
  3126                           intcon2	equ	0xFF1
  3127                           postinc0	equ	0xFEE
  3128                           wreg	equ	0xFE8
  3129                           indf2	equ	0xFDF
  3130                           postinc2	equ	0xFDE
  3131                           postdec2	equ	0xFDD
  3132                           fsr2h	equ	0xFDA
  3133                           fsr2l	equ	0xFD9
  3134                           status	equ	0xFD8
  3135                           
  3136 ;; *************** function _i2c_master_send *****************
  3137 ;; Defined at:
  3138 ;;		line 50 in file "../src/my_i2c.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  addr            1    wreg     unsigned char 
  3141 ;;  length          1   74[BANK0 ] unsigned char 
  3142 ;;  msg             2   75[BANK0 ] PTR unsigned char 
  3143 ;;		 -> main@msgbuffer(27), 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  addr            1   77[BANK0 ] unsigned char 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      unsigned char 
  3148 ;; Registers used:
  3149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3155 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3158 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3159 ;;Total ram usage:        4 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:   13
  3162 ;; This function calls:
  3163 ;;		_FromMainHigh_sendmsg
  3164 ;; This function is called by:
  3165 ;;		_main
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text13
  3170  00123E                     __ptext13:
  3171                           	opt stack 0
  3172  00123E                     _i2c_master_send:
  3173                           	opt stack 17
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;incstack = 0
  3177                           ;i2c_master_send@addr stored from wreg
  3178  00123E  0100               	movlb	0	; () banked
  3179  001240  6FAD               	movwf	i2c_master_send@addr& (0+255),b
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;my_i2c.c: 52: if (SSP1STATbits.R_W == 1) {
  3183  001242  B4C7               	btfsc	4039,2,c	;volatile
  3184  001244  0012               	return	
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;my_i2c.c: 54: }
  3188                           ;my_i2c.c: 55: if (ic_ptr->status == 0x1) {
  3189                           
  3190                           ; BSR set to: 0
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;my_i2c.c: 53: return (-1);
  3194                           ;	Return value of _i2c_master_send is never used
  3195  001246  0100               	movlb	0	; () banked
  3196  001248  EE20 F01D          	lfsr	2,29
  3197  00124C  0100               	movlb	0	; () banked
  3198  00124E  51B3               	movf	_ic_ptr& (0+255),w,b
  3199  001250  26D9               	addwf	fsr2l,f,c
  3200  001252  0100               	movlb	0	; () banked
  3201  001254  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3202  001256  22DA               	addwfc	fsr2h,f,c
  3203  001258  0E01               	movlw	1
  3204  00125A  62DF               	cpfseq	indf2,c
  3205  00125C  0012               	return	
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;my_i2c.c: 56: ic_ptr->slave_addr = addr;
  3209  00125E  0100               	movlb	0	; () banked
  3210  001260  EE20 F03C          	lfsr	2,60
  3211  001264  0100               	movlb	0	; () banked
  3212  001266  51B3               	movf	_ic_ptr& (0+255),w,b
  3213  001268  26D9               	addwf	fsr2l,f,c
  3214  00126A  0100               	movlb	0	; () banked
  3215  00126C  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3216  00126E  22DA               	addwfc	fsr2h,f,c
  3217  001270  0100               	movlb	0	; () banked
  3218  001272  C0AD  FFDF         	movff	i2c_master_send@addr,indf2
  3219                           
  3220                           ;my_i2c.c: 57: ic_ptr->status = 0x6;
  3221  001276  0100               	movlb	0	; () banked
  3222  001278  EE20 F01D          	lfsr	2,29
  3223  00127C  0100               	movlb	0	; () banked
  3224  00127E  51B3               	movf	_ic_ptr& (0+255),w,b
  3225  001280  26D9               	addwf	fsr2l,f,c
  3226  001282  0100               	movlb	0	; () banked
  3227  001284  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3228  001286  22DA               	addwfc	fsr2h,f,c
  3229  001288  0E06               	movlw	6
  3230  00128A  6EDF               	movwf	indf2,c
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;my_i2c.c: 58: FromMainHigh_sendmsg(length, 46, (void *) msg);
  3234  00128C  0E2E               	movlw	46
  3235  00128E  0100               	movlb	0	; () banked
  3236  001290  6FA6               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  3237  001292  0100               	movlb	0	; () banked
  3238  001294  C0AC  F0A8         	movff	i2c_master_send@msg+1,FromMainHigh_sendmsg@data+1
  3239  001298  0100               	movlb	0	; () banked
  3240  00129A  C0AB  F0A7         	movff	i2c_master_send@msg,FromMainHigh_sendmsg@data
  3241  00129E  0100               	movlb	0	; () banked
  3242  0012A0  51AA               	movf	i2c_master_send@length& (0+255),w,b
  3243  0012A2  ECA8  F00D         	call	_FromMainHigh_sendmsg
  3244                           
  3245                           ;my_i2c.c: 59: ic_ptr->outbufind = 0;
  3246  0012A6  0100               	movlb	0	; () banked
  3247  0012A8  EE20 F03B          	lfsr	2,59
  3248  0012AC  0100               	movlb	0	; () banked
  3249  0012AE  51B3               	movf	_ic_ptr& (0+255),w,b
  3250  0012B0  26D9               	addwf	fsr2l,f,c
  3251  0012B2  0100               	movlb	0	; () banked
  3252  0012B4  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3253  0012B6  22DA               	addwfc	fsr2h,f,c
  3254  0012B8  0E00               	movlw	0
  3255  0012BA  6EDF               	movwf	indf2,c
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;my_i2c.c: 60: ic_ptr->outbuflen = length;
  3259  0012BC  0100               	movlb	0	; () banked
  3260  0012BE  EE20 F03A          	lfsr	2,58
  3261  0012C2  0100               	movlb	0	; () banked
  3262  0012C4  51B3               	movf	_ic_ptr& (0+255),w,b
  3263  0012C6  26D9               	addwf	fsr2l,f,c
  3264  0012C8  0100               	movlb	0	; () banked
  3265  0012CA  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3266  0012CC  22DA               	addwfc	fsr2h,f,c
  3267  0012CE  0100               	movlb	0	; () banked
  3268  0012D0  C0AA  FFDF         	movff	i2c_master_send@length,indf2
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;my_i2c.c: 61: SSP1CON2bits.SEN = 1;
  3272  0012D4  80C5               	bsf	4037,0,c	;volatile
  3273  0012D6  0012               	return	
  3274  0012D8                     __end_of_i2c_master_send:
  3275                           	opt stack 0
  3276                           tblptru	equ	0xFF8
  3277                           prodh	equ	0xFF4
  3278                           prodl	equ	0xFF3
  3279                           intcon2	equ	0xFF1
  3280                           postinc0	equ	0xFEE
  3281                           wreg	equ	0xFE8
  3282                           indf2	equ	0xFDF
  3283                           postinc2	equ	0xFDE
  3284                           postdec2	equ	0xFDD
  3285                           fsr2h	equ	0xFDA
  3286                           fsr2l	equ	0xFD9
  3287                           status	equ	0xFD8
  3288                           
  3289 ;; *************** function _FromMainHigh_sendmsg *****************
  3290 ;; Defined at:
  3291 ;;		line 222 in file "../src/messages.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  length          1    wreg     unsigned char 
  3294 ;;  msgtype         1   70[BANK0 ] unsigned char 
  3295 ;;  data            2   71[BANK0 ] PTR void 
  3296 ;;		 -> main@msgbuffer(27), main@t1thread_data(2), 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  length          1   73[BANK0 ] unsigned char 
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      char 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3308 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3309 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3311 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3312 ;;Total ram usage:        4 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:   12
  3315 ;; This function calls:
  3316 ;;		_send_msg
  3317 ;; This function is called by:
  3318 ;;		_i2c_master_send
  3319 ;;		_timer1_lthread
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text14
  3324  001B50                     __ptext14:
  3325                           	opt stack 0
  3326  001B50                     _FromMainHigh_sendmsg:
  3327                           	opt stack 17
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;incstack = 0
  3331                           ;FromMainHigh_sendmsg@length stored from wreg
  3332  001B50  0100               	movlb	0	; () banked
  3333  001B52  6FA9               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;messages.c: 228: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  3337  001B54  0104               	movlb	4	; () banked
  3338  001B56  0E04               	movlw	high _FromMainHigh_MQ
  3339  001B58  0100               	movlb	0	; () banked
  3340  001B5A  6F9B               	movwf	(send_msg@qptr+1)& (0+255),b
  3341  001B5C  0104               	movlb	4	; () banked
  3342  001B5E  0E00               	movlw	low _FromMainHigh_MQ
  3343  001B60  0100               	movlb	0	; () banked
  3344  001B62  6F9A               	movwf	send_msg@qptr& (0+255),b
  3345  001B64  C0A9  F09C         	movff	FromMainHigh_sendmsg@length,send_msg@length
  3346  001B68  C0A6  F09D         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  3347  001B6C  0100               	movlb	0	; () banked
  3348  001B6E  C0A8  F09F         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  3349  001B72  0100               	movlb	0	; () banked
  3350  001B74  C0A7  F09E         	movff	FromMainHigh_sendmsg@data,send_msg@data
  3351  001B78  EC03  F006         	call	_send_msg	;wreg free
  3352  001B7C  0012               	return	
  3353  001B7E                     __end_of_FromMainHigh_sendmsg:
  3354                           	opt stack 0
  3355                           tblptru	equ	0xFF8
  3356                           prodh	equ	0xFF4
  3357                           prodl	equ	0xFF3
  3358                           intcon2	equ	0xFF1
  3359                           postinc0	equ	0xFEE
  3360                           wreg	equ	0xFE8
  3361                           indf2	equ	0xFDF
  3362                           postinc2	equ	0xFDE
  3363                           postdec2	equ	0xFDD
  3364                           fsr2h	equ	0xFDA
  3365                           fsr2l	equ	0xFD9
  3366                           status	equ	0xFD8
  3367                           
  3368 ;; *************** function _send_msg *****************
  3369 ;; Defined at:
  3370 ;;		line 24 in file "../src/messages.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  qptr            2   58[BANK0 ] PTR struct __msg_queue
  3373 ;;		 -> FromMainHigh_MQ(118), FromMainLow_MQ(118), MotorData_MQ(118), SensorData_MQ(118), 
  3374 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  3375 ;;  length          1   60[BANK0 ] unsigned char 
  3376 ;;  msgtype         1   61[BANK0 ] unsigned char 
  3377 ;;  data            2   62[BANK0 ] PTR void 
  3378 ;;		 -> uart_recv_int_handler@readin(1), NULL(0), main@msgbuffer(27), main@t1thread_data(2), 
  3379 ;;		 -> main@ic(64), 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  qmsg            2   68[BANK0 ] PTR struct __msg
  3382 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), ToMainHigh_MQ.queue(116), ToMainLow_MQ.queue(116), 
  3383 ;;		 -> SensorData_MQ.queue(116), MotorData_MQ.queue(116), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  3384 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  3385 ;;  tlength         2   65[BANK0 ] unsigned int 
  3386 ;;  slot            1   67[BANK0 ] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      char 
  3389 ;; Registers used:
  3390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3396 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3397 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3398 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3399 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3400 ;;Total ram usage:       12 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:   11
  3403 ;; This function calls:
  3404 ;;		_memcpy
  3405 ;; This function is called by:
  3406 ;;		_FromMainLow_sendmsg
  3407 ;;		_FromMainHigh_sendmsg
  3408 ;;		_SensorData_sendmsg
  3409 ;;		_MotorData_sendmsg
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text15
  3414  000C06                     __ptext15:
  3415                           	opt stack 0
  3416  000C06                     _send_msg:
  3417                           	opt stack 17
  3418                           
  3419                           ;messages.c: 25: unsigned char slot;
  3420                           ;messages.c: 27: msg *qmsg;
  3421                           ;messages.c: 28: size_t tlength = length;
  3422                           
  3423                           ;incstack = 0
  3424  000C06  0100               	movlb	0	; () banked
  3425  000C08  C09C  F0A1         	movff	send_msg@length,send_msg@tlength
  3426  000C0C  0100               	movlb	0	; () banked
  3427  000C0E  6BA2               	clrf	(send_msg@tlength+1)& (0+255),b
  3428                           
  3429                           ; BSR set to: 0
  3430                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3431  000C10  0100               	movlb	0	; () banked
  3432  000C12  EE20 F074          	lfsr	2,116
  3433  000C16  0100               	movlb	0	; () banked
  3434  000C18  519A               	movf	send_msg@qptr& (0+255),w,b
  3435  000C1A  26D9               	addwf	fsr2l,f,c
  3436  000C1C  0100               	movlb	0	; () banked
  3437  000C1E  519B               	movf	(send_msg@qptr+1)& (0+255),w,b
  3438  000C20  22DA               	addwfc	fsr2h,f,c
  3439  000C22  50DF               	movf	indf2,w,c
  3440  000C24  0100               	movlb	0	; () banked
  3441  000C26  6FA3               	movwf	send_msg@slot& (0+255),b
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3445  000C28  0100               	movlb	0	; () banked
  3446  000C2A  51A3               	movf	send_msg@slot& (0+255),w,b
  3447  000C2C  0D1D               	mullw	29
  3448  000C2E  50F3               	movf	prodl,w,c
  3449  000C30  0100               	movlb	0	; () banked
  3450  000C32  259A               	addwf	send_msg@qptr& (0+255),w,b
  3451  000C34  0100               	movlb	0	; () banked
  3452  000C36  6FA4               	movwf	send_msg@qmsg& (0+255),b
  3453  000C38  50F4               	movf	prodh,w,c
  3454  000C3A  0100               	movlb	0	; () banked
  3455  000C3C  219B               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3456  000C3E  0100               	movlb	0	; () banked
  3457  000C40  6FA5               	movwf	(send_msg@qmsg+1)& (0+255),b
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;messages.c: 41: if (qmsg->full != 0) {
  3461  000C42  C0A4  FFD9         	movff	send_msg@qmsg,fsr2l
  3462  000C46  C0A5  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3463  000C4A  50DF               	movf	indf2,w,c
  3464  000C4C  B4D8               	btfsc	status,2,c
  3465  000C4E  D002               	goto	l2224
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;messages.c: 42: return (-1);
  3469  000C50  0EFF               	movlw	255
  3470  000C52  0012               	return	
  3471  000C54                     l2224:
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;messages.c: 43: }
  3475                           ;messages.c: 46: qmsg->length = length;
  3476  000C54  0100               	movlb	0	; () banked
  3477  000C56  EE20 F001          	lfsr	2,1
  3478  000C5A  0100               	movlb	0	; () banked
  3479  000C5C  51A4               	movf	send_msg@qmsg& (0+255),w,b
  3480  000C5E  26D9               	addwf	fsr2l,f,c
  3481  000C60  0100               	movlb	0	; () banked
  3482  000C62  51A5               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3483  000C64  22DA               	addwfc	fsr2h,f,c
  3484  000C66  0100               	movlb	0	; () banked
  3485  000C68  C09C  FFDF         	movff	send_msg@length,indf2
  3486                           
  3487                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3488  000C6C  0100               	movlb	0	; () banked
  3489  000C6E  EE20 F002          	lfsr	2,2
  3490  000C72  0100               	movlb	0	; () banked
  3491  000C74  51A4               	movf	send_msg@qmsg& (0+255),w,b
  3492  000C76  26D9               	addwf	fsr2l,f,c
  3493  000C78  0100               	movlb	0	; () banked
  3494  000C7A  51A5               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3495  000C7C  22DA               	addwfc	fsr2h,f,c
  3496  000C7E  0100               	movlb	0	; () banked
  3497  000C80  C09D  FFDF         	movff	send_msg@msgtype,indf2
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3501  000C84  0E03               	movlw	3
  3502  000C86  0100               	movlb	0	; () banked
  3503  000C88  25A4               	addwf	send_msg@qmsg& (0+255),w,b
  3504  000C8A  0100               	movlb	0	; () banked
  3505  000C8C  6F90               	movwf	memcpy@d1& (0+255),b
  3506  000C8E  0E00               	movlw	0
  3507  000C90  0100               	movlb	0	; () banked
  3508  000C92  21A5               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3509  000C94  0100               	movlb	0	; () banked
  3510  000C96  6F91               	movwf	(memcpy@d1+1)& (0+255),b
  3511  000C98  0100               	movlb	0	; () banked
  3512  000C9A  C09F  F093         	movff	send_msg@data+1,memcpy@s1+1
  3513  000C9E  0100               	movlb	0	; () banked
  3514  000CA0  C09E  F092         	movff	send_msg@data,memcpy@s1
  3515  000CA4  C0A1  F094         	movff	send_msg@tlength,memcpy@n
  3516  000CA8  C0A2  F095         	movff	send_msg@tlength+1,memcpy@n+1
  3517  000CAC  ECD4  F00B         	call	_memcpy	;wreg free
  3518                           
  3519                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3520  000CB0  0100               	movlb	0	; () banked
  3521  000CB2  EE20 F074          	lfsr	2,116
  3522  000CB6  0100               	movlb	0	; () banked
  3523  000CB8  519A               	movf	send_msg@qptr& (0+255),w,b
  3524  000CBA  26D9               	addwf	fsr2l,f,c
  3525  000CBC  0100               	movlb	0	; () banked
  3526  000CBE  519B               	movf	(send_msg@qptr+1)& (0+255),w,b
  3527  000CC0  22DA               	addwfc	fsr2h,f,c
  3528  000CC2  0100               	movlb	0	; () banked
  3529  000CC4  EE10 F074          	lfsr	1,116
  3530  000CC8  0100               	movlb	0	; () banked
  3531  000CCA  519A               	movf	send_msg@qptr& (0+255),w,b
  3532  000CCC  26E1               	addwf	fsr1l,f,c
  3533  000CCE  0100               	movlb	0	; () banked
  3534  000CD0  519B               	movf	(send_msg@qptr+1)& (0+255),w,b
  3535  000CD2  22E2               	addwfc	fsr1h,f,c
  3536  000CD4  50E7               	movf	indf1,w,c
  3537  000CD6  0100               	movlb	0	; () banked
  3538  000CD8  6FA0               	movwf	??_send_msg& (0+255),b
  3539  000CDA  0100               	movlb	0	; () banked
  3540  000CDC  29A0               	incf	??_send_msg& (0+255),w,b
  3541  000CDE  0B03               	andlw	3
  3542  000CE0  6EDF               	movwf	indf2,c
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;messages.c: 59: qmsg->full = 1;
  3546  000CE2  C0A4  FFD9         	movff	send_msg@qmsg,fsr2l
  3547  000CE6  C0A5  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3548  000CEA  0E01               	movlw	1
  3549  000CEC  6EDF               	movwf	indf2,c
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;messages.c: 60: return (1);
  3553  000CEE  0E01               	movlw	1
  3554  000CF0  0012               	return	
  3555  000CF2                     __end_of_send_msg:
  3556                           	opt stack 0
  3557                           tblptru	equ	0xFF8
  3558                           prodh	equ	0xFF4
  3559                           prodl	equ	0xFF3
  3560                           intcon2	equ	0xFF1
  3561                           postinc0	equ	0xFEE
  3562                           wreg	equ	0xFE8
  3563                           indf1	equ	0xFE7
  3564                           fsr1h	equ	0xFE2
  3565                           fsr1l	equ	0xFE1
  3566                           indf2	equ	0xFDF
  3567                           postinc2	equ	0xFDE
  3568                           postdec2	equ	0xFDD
  3569                           fsr2h	equ	0xFDA
  3570                           fsr2l	equ	0xFD9
  3571                           status	equ	0xFD8
  3572                           
  3573 ;; *************** function _i2c_configure_master *****************
  3574 ;; Defined at:
  3575 ;;		line 16 in file "../src/my_i2c.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  sensor_addr     1    wreg     unsigned char 
  3578 ;;  motor_addr      1   48[BANK0 ] unsigned char 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  sensor_addr     1   49[BANK0 ] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;		None               void
  3583 ;; Registers used:
  3584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3590 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3591 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3593 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3594 ;;Total ram usage:        2 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; Hardware stack levels required when called:   10
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_main
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text16
  3605  0013EC                     __ptext16:
  3606                           	opt stack 0
  3607  0013EC                     _i2c_configure_master:
  3608                           	opt stack 20
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;incstack = 0
  3612                           ;i2c_configure_master@sensor_addr stored from wreg
  3613  0013EC  0100               	movlb	0	; () banked
  3614  0013EE  6F91               	movwf	i2c_configure_master@sensor_addr& (0+255),b
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;my_i2c.c: 18: ic_ptr->status = 0x1;
  3618  0013F0  0100               	movlb	0	; () banked
  3619  0013F2  EE20 F01D          	lfsr	2,29
  3620  0013F6  0100               	movlb	0	; () banked
  3621  0013F8  51B3               	movf	_ic_ptr& (0+255),w,b
  3622  0013FA  26D9               	addwf	fsr2l,f,c
  3623  0013FC  0100               	movlb	0	; () banked
  3624  0013FE  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3625  001400  22DA               	addwfc	fsr2h,f,c
  3626  001402  0E01               	movlw	1
  3627  001404  6EDF               	movwf	indf2,c
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;my_i2c.c: 19: SSPSTAT = 0;
  3631  001406  0E00               	movlw	0
  3632  001408  6EC7               	movwf	4039,c	;volatile
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;my_i2c.c: 20: SSPCON1 = 0;
  3636  00140A  0E00               	movlw	0
  3637  00140C  6EC6               	movwf	4038,c	;volatile
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;my_i2c.c: 21: SSPCON2 = 0;
  3641  00140E  0E00               	movlw	0
  3642  001410  6EC5               	movwf	4037,c	;volatile
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;my_i2c.c: 22: SSPCON1bits.SSPM |= 0x8;
  3646  001412  0E08               	movlw	8
  3647  001414  12C6               	iorwf	4038,f,c	;volatile
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;my_i2c.c: 24: TRISBbits.TRISB4 = 1;
  3651  001416  8893               	bsf	3987,4,c	;volatile
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;my_i2c.c: 25: TRISBbits.TRISB5 = 1;
  3655  001418  8A93               	bsf	3987,5,c	;volatile
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;my_i2c.c: 27: SSPSTATbits.SMP = 1;
  3659  00141A  8EC7               	bsf	4039,7,c	;volatile
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;my_i2c.c: 28: SSPSTATbits.CKE = 0;
  3663  00141C  9CC7               	bcf	4039,6,c	;volatile
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;my_i2c.c: 29: SSPADD = 0x77;
  3667  00141E  0E77               	movlw	119
  3668  001420  6EC8               	movwf	4040,c	;volatile
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;my_i2c.c: 31: ic_ptr->sensor_addr = sensor_addr;
  3672  001422  0100               	movlb	0	; () banked
  3673  001424  EE20 F03D          	lfsr	2,61
  3674  001428  0100               	movlb	0	; () banked
  3675  00142A  51B3               	movf	_ic_ptr& (0+255),w,b
  3676  00142C  26D9               	addwf	fsr2l,f,c
  3677  00142E  0100               	movlb	0	; () banked
  3678  001430  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3679  001432  22DA               	addwfc	fsr2h,f,c
  3680  001434  0100               	movlb	0	; () banked
  3681  001436  C091  FFDF         	movff	i2c_configure_master@sensor_addr,indf2
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;my_i2c.c: 32: ic_ptr->motor_addr = motor_addr;
  3685  00143A  0100               	movlb	0	; () banked
  3686  00143C  EE20 F03E          	lfsr	2,62
  3687  001440  0100               	movlb	0	; () banked
  3688  001442  51B3               	movf	_ic_ptr& (0+255),w,b
  3689  001444  26D9               	addwf	fsr2l,f,c
  3690  001446  0100               	movlb	0	; () banked
  3691  001448  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3692  00144A  22DA               	addwfc	fsr2h,f,c
  3693  00144C  0100               	movlb	0	; () banked
  3694  00144E  C090  FFDF         	movff	i2c_configure_master@motor_addr,indf2
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;my_i2c.c: 33: ic_ptr->buflen = 26;
  3698  001452  0100               	movlb	0	; () banked
  3699  001454  EE20 F01A          	lfsr	2,26
  3700  001458  0100               	movlb	0	; () banked
  3701  00145A  51B3               	movf	_ic_ptr& (0+255),w,b
  3702  00145C  26D9               	addwf	fsr2l,f,c
  3703  00145E  0100               	movlb	0	; () banked
  3704  001460  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3705  001462  22DA               	addwfc	fsr2h,f,c
  3706  001464  0E1A               	movlw	26
  3707  001466  6EDF               	movwf	indf2,c
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;my_i2c.c: 35: SSPCON1bits.SSPEN = 1;
  3711  001468  8AC6               	bsf	4038,5,c	;volatile
  3712                           
  3713                           ; BSR set to: 0
  3714  00146A  0012               	return	
  3715  00146C                     __end_of_i2c_configure_master:
  3716                           	opt stack 0
  3717                           tblptru	equ	0xFF8
  3718                           prodh	equ	0xFF4
  3719                           prodl	equ	0xFF3
  3720                           intcon2	equ	0xFF1
  3721                           postinc0	equ	0xFEE
  3722                           wreg	equ	0xFE8
  3723                           indf1	equ	0xFE7
  3724                           fsr1h	equ	0xFE2
  3725                           fsr1l	equ	0xFE1
  3726                           indf2	equ	0xFDF
  3727                           postinc2	equ	0xFDE
  3728                           postdec2	equ	0xFDD
  3729                           fsr2h	equ	0xFDA
  3730                           fsr2l	equ	0xFD9
  3731                           status	equ	0xFD8
  3732                           
  3733 ;; *************** function _enable_interrupts *****************
  3734 ;; Defined at:
  3735 ;;		line 15 in file "../src/interrupts.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;		None               void
  3742 ;; Registers used:
  3743 ;;		None
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;Total ram usage:        0 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:   10
  3756 ;; This function calls:
  3757 ;;		Nothing
  3758 ;; This function is called by:
  3759 ;;		_main
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text17
  3764  001CFE                     __ptext17:
  3765                           	opt stack 0
  3766  001CFE                     _enable_interrupts:
  3767                           	opt stack 20
  3768                           
  3769                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;incstack = 0
  3773  001CFE  8ED0               	bsf	4048,7,c	;volatile
  3774                           
  3775                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3776  001D00  8EF2               	bsf	intcon,7,c	;volatile
  3777                           
  3778                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3779  001D02  8CF2               	bsf	intcon,6,c	;volatile
  3780                           
  3781                           ;interrupts.c: 21: INTCONbits.PEIE = 1;
  3782  001D04  8CF2               	bsf	intcon,6,c	;volatile
  3783  001D06  0012               	return	
  3784  001D08                     __end_of_enable_interrupts:
  3785                           	opt stack 0
  3786                           tblptru	equ	0xFF8
  3787                           prodh	equ	0xFF4
  3788                           prodl	equ	0xFF3
  3789                           intcon	equ	0xFF2
  3790                           intcon2	equ	0xFF1
  3791                           postinc0	equ	0xFEE
  3792                           wreg	equ	0xFE8
  3793                           indf1	equ	0xFE7
  3794                           fsr1h	equ	0xFE2
  3795                           fsr1l	equ	0xFE1
  3796                           indf2	equ	0xFDF
  3797                           postinc2	equ	0xFDE
  3798                           postdec2	equ	0xFDD
  3799                           fsr2h	equ	0xFDA
  3800                           fsr2l	equ	0xFD9
  3801                           status	equ	0xFD8
  3802                           
  3803 ;; *************** function _block_on_To_msgqueues *****************
  3804 ;; Defined at:
  3805 ;;		line 312 in file "../src/messages.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;		None               void
  3812 ;; Registers used:
  3813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3823 ;;Total ram usage:        0 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; Hardware stack levels required when called:   13
  3826 ;; This function calls:
  3827 ;;		_Delay1KTCYx
  3828 ;;		_check_msg
  3829 ;;		_in_main
  3830 ;; This function is called by:
  3831 ;;		_main
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text18
  3836  001198                     __ptext18:
  3837                           	opt stack 0
  3838  001198                     _block_on_To_msgqueues:
  3839                           	opt stack 17
  3840                           
  3841                           ;messages.c: 313: if (!in_main()) {
  3842                           
  3843                           ;incstack = 0
  3844  001198  ECA2  F00C         	call	_in_main	;wreg free
  3845  00119C  0100               	movlb	0	; () banked
  3846  00119E  5195               	movf	(?_in_main+1)& (0+255),w,b
  3847  0011A0  0100               	movlb	0	; () banked
  3848  0011A2  1194               	iorwf	?_in_main& (0+255),w,b
  3849  0011A4  B4D8               	btfsc	status,2,c
  3850  0011A6  0012               	return	
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;messages.c: 315: }
  3854                           ;messages.c: 319: MQ_Main_Willing_to_block = 1;
  3855                           
  3856                           ; BSR set to: 0
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;messages.c: 314: return;
  3860  0011A8  0E01               	movlw	1
  3861  0011AA  0100               	movlb	0	; () banked
  3862  0011AC  6FB5               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3863  0011AE                     l2852:
  3864                           
  3865                           ;messages.c: 321: if (check_msg(&ToMainHigh_MQ)) {
  3866  0011AE  0102               	movlb	2	; () banked
  3867  0011B0  0E02               	movlw	high _ToMainHigh_MQ
  3868  0011B2  0100               	movlb	0	; () banked
  3869  0011B4  6F91               	movwf	(check_msg@qptr+1)& (0+255),b
  3870  0011B6  0102               	movlb	2	; () banked
  3871  0011B8  0E76               	movlw	low _ToMainHigh_MQ
  3872  0011BA  0100               	movlb	0	; () banked
  3873  0011BC  6F90               	movwf	check_msg@qptr& (0+255),b
  3874  0011BE  EC48  F00D         	call	_check_msg	;wreg free
  3875  0011C2  0900               	iorlw	0
  3876  0011C4  B4D8               	btfsc	status,2,c
  3877  0011C6  D004               	goto	l2858
  3878                           
  3879                           ;messages.c: 322: MQ_Main_Willing_to_block = 0;
  3880  0011C8  0E00               	movlw	0
  3881  0011CA  0100               	movlb	0	; () banked
  3882  0011CC  6FB5               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3883  0011CE  0012               	return	
  3884  0011D0                     l2858:
  3885                           
  3886                           ;messages.c: 327: }
  3887                           ;messages.c: 328: if (check_msg(&ToMainLow_MQ)) {
  3888  0011D0  0101               	movlb	1	; () banked
  3889  0011D2  0E01               	movlw	high _ToMainLow_MQ
  3890  0011D4  0100               	movlb	0	; () banked
  3891  0011D6  6F91               	movwf	(check_msg@qptr+1)& (0+255),b
  3892  0011D8  0101               	movlb	1	; () banked
  3893  0011DA  0E81               	movlw	low _ToMainLow_MQ
  3894  0011DC  0100               	movlb	0	; () banked
  3895  0011DE  6F90               	movwf	check_msg@qptr& (0+255),b
  3896  0011E0  EC48  F00D         	call	_check_msg	;wreg free
  3897  0011E4  0900               	iorlw	0
  3898  0011E6  B4D8               	btfsc	status,2,c
  3899  0011E8  D004               	goto	l2864
  3900                           
  3901                           ;messages.c: 329: MQ_Main_Willing_to_block = 0;
  3902  0011EA  0E00               	movlw	0
  3903  0011EC  0100               	movlb	0	; () banked
  3904  0011EE  6FB5               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3905  0011F0  0012               	return	
  3906  0011F2                     l2864:
  3907                           
  3908                           ;messages.c: 334: }
  3909                           ;messages.c: 335: if (check_msg(&SensorData_MQ)) {
  3910  0011F2  0102               	movlb	2	; () banked
  3911  0011F4  0E02               	movlw	high _SensorData_MQ
  3912  0011F6  0100               	movlb	0	; () banked
  3913  0011F8  6F91               	movwf	(check_msg@qptr+1)& (0+255),b
  3914  0011FA  0102               	movlb	2	; () banked
  3915  0011FC  0E00               	movlw	low _SensorData_MQ
  3916  0011FE  0100               	movlb	0	; () banked
  3917  001200  6F90               	movwf	check_msg@qptr& (0+255),b
  3918  001202  EC48  F00D         	call	_check_msg	;wreg free
  3919  001206  0900               	iorlw	0
  3920  001208  B4D8               	btfsc	status,2,c
  3921  00120A  D004               	goto	l2870
  3922                           
  3923                           ;messages.c: 336: MQ_Main_Willing_to_block = 0;
  3924  00120C  0E00               	movlw	0
  3925  00120E  0100               	movlb	0	; () banked
  3926  001210  6FB5               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3927  001212  0012               	return	
  3928  001214                     l2870:
  3929                           
  3930                           ;messages.c: 341: }
  3931                           ;messages.c: 342: if (check_msg(&MotorData_MQ)) {
  3932  001214  0103               	movlb	3	; () banked
  3933  001216  0E03               	movlw	high _MotorData_MQ
  3934  001218  0100               	movlb	0	; () banked
  3935  00121A  6F91               	movwf	(check_msg@qptr+1)& (0+255),b
  3936  00121C  0103               	movlb	3	; () banked
  3937  00121E  0E76               	movlw	low _MotorData_MQ
  3938  001220  0100               	movlb	0	; () banked
  3939  001222  6F90               	movwf	check_msg@qptr& (0+255),b
  3940  001224  EC48  F00D         	call	_check_msg	;wreg free
  3941  001228  0900               	iorlw	0
  3942  00122A  B4D8               	btfsc	status,2,c
  3943  00122C  D004               	goto	l2876
  3944                           
  3945                           ;messages.c: 343: MQ_Main_Willing_to_block = 0;
  3946  00122E  0E00               	movlw	0
  3947  001230  0100               	movlb	0	; () banked
  3948  001232  6FB5               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3949  001234  0012               	return	
  3950  001236                     l2876:
  3951                           
  3952                           ;messages.c: 348: }
  3953                           ;messages.c: 349: Delay1KTCYx(10);
  3954  001236  0E0A               	movlw	10
  3955  001238  EC3A  F00E         	call	_Delay1KTCYx
  3956  00123C  D7B8               	goto	l2852
  3957  00123E                     __end_of_block_on_To_msgqueues:
  3958                           	opt stack 0
  3959                           tblptru	equ	0xFF8
  3960                           prodh	equ	0xFF4
  3961                           prodl	equ	0xFF3
  3962                           intcon	equ	0xFF2
  3963                           intcon2	equ	0xFF1
  3964                           postinc0	equ	0xFEE
  3965                           wreg	equ	0xFE8
  3966                           indf1	equ	0xFE7
  3967                           fsr1h	equ	0xFE2
  3968                           fsr1l	equ	0xFE1
  3969                           indf2	equ	0xFDF
  3970                           postinc2	equ	0xFDE
  3971                           postdec2	equ	0xFDD
  3972                           fsr2h	equ	0xFDA
  3973                           fsr2l	equ	0xFD9
  3974                           status	equ	0xFD8
  3975                           
  3976 ;; *************** function _in_main *****************
  3977 ;; Defined at:
  3978 ;;		line 42 in file "../src/interrupts.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  2   52[BANK0 ] int 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3992 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3995 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3996 ;;Total ram usage:        2 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:   12
  3999 ;; This function calls:
  4000 ;;		_in_high_int
  4001 ;;		_in_low_int
  4002 ;; This function is called by:
  4003 ;;		_block_on_To_msgqueues
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text19
  4008  001944                     __ptext19:
  4009                           	opt stack 0
  4010  001944                     _in_main:
  4011                           	opt stack 17
  4012                           
  4013                           ;interrupts.c: 43: if ((!in_low_int()) && (!in_high_int())) {
  4014                           
  4015                           ;incstack = 0
  4016  001944  EC64  F00C         	call	_in_low_int	;wreg free
  4017  001948  0100               	movlb	0	; () banked
  4018  00194A  5193               	movf	(?_in_low_int+1)& (0+255),w,b
  4019  00194C  0100               	movlb	0	; () banked
  4020  00194E  1192               	iorwf	?_in_low_int& (0+255),w,b
  4021  001950  A4D8               	btfss	status,2,c
  4022  001952  D00F               	goto	l2362
  4023                           
  4024                           ; BSR set to: 0
  4025  001954  EC68  F00E         	call	_in_high_int	;wreg free
  4026  001958  0100               	movlb	0	; () banked
  4027  00195A  5191               	movf	(?_in_high_int+1)& (0+255),w,b
  4028  00195C  0100               	movlb	0	; () banked
  4029  00195E  1190               	iorwf	?_in_high_int& (0+255),w,b
  4030  001960  A4D8               	btfss	status,2,c
  4031  001962  D007               	goto	l2362
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;interrupts.c: 44: return (1);
  4035  001964  0E00               	movlw	0
  4036  001966  0100               	movlb	0	; () banked
  4037  001968  6F95               	movwf	(?_in_main+1)& (0+255),b
  4038  00196A  0E01               	movlw	1
  4039  00196C  0100               	movlb	0	; () banked
  4040  00196E  6F94               	movwf	?_in_main& (0+255),b
  4041  001970  0012               	return	
  4042  001972                     l2362:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;interrupts.c: 46: return (0);
  4046  001972  0E00               	movlw	0
  4047  001974  0100               	movlb	0	; () banked
  4048  001976  6F95               	movwf	(?_in_main+1)& (0+255),b
  4049  001978  0E00               	movlw	0
  4050  00197A  0100               	movlb	0	; () banked
  4051  00197C  6F94               	movwf	?_in_main& (0+255),b
  4052  00197E  0012               	return	
  4053  001980                     __end_of_in_main:
  4054                           	opt stack 0
  4055                           tblptru	equ	0xFF8
  4056                           prodh	equ	0xFF4
  4057                           prodl	equ	0xFF3
  4058                           intcon	equ	0xFF2
  4059                           intcon2	equ	0xFF1
  4060                           postinc0	equ	0xFEE
  4061                           wreg	equ	0xFE8
  4062                           indf1	equ	0xFE7
  4063                           fsr1h	equ	0xFE2
  4064                           fsr1l	equ	0xFE1
  4065                           indf2	equ	0xFDF
  4066                           postinc2	equ	0xFDE
  4067                           postdec2	equ	0xFDD
  4068                           fsr2h	equ	0xFDA
  4069                           fsr2l	equ	0xFD9
  4070                           status	equ	0xFD8
  4071                           
  4072 ;; *************** function _in_low_int *****************
  4073 ;; Defined at:
  4074 ;;		line 32 in file "../src/interrupts.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;		None
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  2   50[BANK0 ] int 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0, cstack
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4088 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4091 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4092 ;;Total ram usage:        2 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:   11
  4095 ;; This function calls:
  4096 ;;		_in_high_int
  4097 ;; This function is called by:
  4098 ;;		_in_main
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           	psect	text20
  4103  0018C8                     __ptext20:
  4104                           	opt stack 0
  4105  0018C8                     _in_low_int:
  4106                           	opt stack 17
  4107                           
  4108                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;incstack = 0
  4112  0018C8  ACF2               	btfss	intcon,6,c	;volatile
  4113  0018CA  D007               	goto	l2200
  4114                           
  4115                           ;interrupts.c: 34: return (0);
  4116  0018CC  0E00               	movlw	0
  4117  0018CE  0100               	movlb	0	; () banked
  4118  0018D0  6F93               	movwf	(?_in_low_int+1)& (0+255),b
  4119  0018D2  0E00               	movlw	0
  4120  0018D4  0100               	movlb	0	; () banked
  4121  0018D6  6F92               	movwf	?_in_low_int& (0+255),b
  4122  0018D8  0012               	return	
  4123  0018DA                     l2200:
  4124  0018DA  EC68  F00E         	call	_in_high_int	;wreg free
  4125  0018DE  0100               	movlb	0	; () banked
  4126  0018E0  5191               	movf	(?_in_high_int+1)& (0+255),w,b
  4127  0018E2  0100               	movlb	0	; () banked
  4128  0018E4  1190               	iorwf	?_in_high_int& (0+255),w,b
  4129  0018E6  B4D8               	btfsc	status,2,c
  4130  0018E8  D007               	goto	l2208
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;interrupts.c: 36: return (0);
  4134  0018EA  0E00               	movlw	0
  4135  0018EC  0100               	movlb	0	; () banked
  4136  0018EE  6F93               	movwf	(?_in_low_int+1)& (0+255),b
  4137  0018F0  0E00               	movlw	0
  4138  0018F2  0100               	movlb	0	; () banked
  4139  0018F4  6F92               	movwf	?_in_low_int& (0+255),b
  4140  0018F6  0012               	return	
  4141  0018F8                     l2208:
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;interrupts.c: 38: return (1);
  4145  0018F8  0E00               	movlw	0
  4146  0018FA  0100               	movlb	0	; () banked
  4147  0018FC  6F93               	movwf	(?_in_low_int+1)& (0+255),b
  4148  0018FE  0E01               	movlw	1
  4149  001900  0100               	movlb	0	; () banked
  4150  001902  6F92               	movwf	?_in_low_int& (0+255),b
  4151  001904  0012               	return	
  4152  001906                     __end_of_in_low_int:
  4153                           	opt stack 0
  4154                           tblptru	equ	0xFF8
  4155                           prodh	equ	0xFF4
  4156                           prodl	equ	0xFF3
  4157                           intcon	equ	0xFF2
  4158                           intcon2	equ	0xFF1
  4159                           postinc0	equ	0xFEE
  4160                           wreg	equ	0xFE8
  4161                           indf1	equ	0xFE7
  4162                           fsr1h	equ	0xFE2
  4163                           fsr1l	equ	0xFE1
  4164                           indf2	equ	0xFDF
  4165                           postinc2	equ	0xFDE
  4166                           postdec2	equ	0xFDD
  4167                           fsr2h	equ	0xFDA
  4168                           fsr2l	equ	0xFD9
  4169                           status	equ	0xFD8
  4170                           
  4171 ;; *************** function _in_high_int *****************
  4172 ;; Defined at:
  4173 ;;		line 24 in file "../src/interrupts.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  2   48[BANK0 ] int 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4187 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4190 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4191 ;;Total ram usage:        2 bytes
  4192 ;; Hardware stack levels used:    1
  4193 ;; Hardware stack levels required when called:   10
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_in_low_int
  4198 ;;		_in_main
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text21
  4203  001CD0                     __ptext21:
  4204                           	opt stack 0
  4205  001CD0                     _in_high_int:
  4206                           	opt stack 17
  4207                           
  4208                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;incstack = 0
  4212  001CD0  0E00               	movlw	0
  4213  001CD2  AEF2               	btfss	intcon,7,c	;volatile
  4214  001CD4  0E01               	movlw	1
  4215  001CD6  0100               	movlb	0	; () banked
  4216  001CD8  6F90               	movwf	?_in_high_int& (0+255),b
  4217  001CDA  0100               	movlb	0	; () banked
  4218  001CDC  6B91               	clrf	(?_in_high_int+1)& (0+255),b
  4219  001CDE  0012               	return	
  4220  001CE0                     __end_of_in_high_int:
  4221                           	opt stack 0
  4222                           tblptru	equ	0xFF8
  4223                           prodh	equ	0xFF4
  4224                           prodl	equ	0xFF3
  4225                           intcon	equ	0xFF2
  4226                           intcon2	equ	0xFF1
  4227                           postinc0	equ	0xFEE
  4228                           wreg	equ	0xFE8
  4229                           indf1	equ	0xFE7
  4230                           fsr1h	equ	0xFE2
  4231                           fsr1l	equ	0xFE1
  4232                           indf2	equ	0xFDF
  4233                           postinc2	equ	0xFDE
  4234                           postdec2	equ	0xFDD
  4235                           fsr2h	equ	0xFDA
  4236                           fsr2l	equ	0xFD9
  4237                           status	equ	0xFD8
  4238                           
  4239 ;; *************** function _check_msg *****************
  4240 ;; Defined at:
  4241 ;;		line 270 in file "../src/messages.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  qptr            2   48[BANK0 ] PTR struct __msg_queue
  4244 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      unsigned char 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4256 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4258 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4259 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4260 ;;Total ram usage:        3 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:   10
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_block_on_To_msgqueues
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text22
  4271  001A90                     __ptext22:
  4272                           	opt stack 0
  4273  001A90                     _check_msg:
  4274                           	opt stack 19
  4275                           
  4276                           ;messages.c: 271: return (qptr->queue[qptr->cur_read_ind].full);
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;incstack = 0
  4280  001A90  0100               	movlb	0	; () banked
  4281  001A92  EE20 F075          	lfsr	2,117
  4282  001A96  0100               	movlb	0	; () banked
  4283  001A98  5190               	movf	check_msg@qptr& (0+255),w,b
  4284  001A9A  26D9               	addwf	fsr2l,f,c
  4285  001A9C  0100               	movlb	0	; () banked
  4286  001A9E  5191               	movf	(check_msg@qptr+1)& (0+255),w,b
  4287  001AA0  22DA               	addwfc	fsr2h,f,c
  4288  001AA2  50DF               	movf	indf2,w,c
  4289  001AA4  0100               	movlb	0	; () banked
  4290  001AA6  6F92               	movwf	??_check_msg& (0+255),b
  4291  001AA8  0100               	movlb	0	; () banked
  4292  001AAA  5192               	movf	??_check_msg& (0+255),w,b
  4293  001AAC  0D1D               	mullw	29
  4294  001AAE  50F3               	movf	prodl,w,c
  4295  001AB0  0100               	movlb	0	; () banked
  4296  001AB2  2590               	addwf	check_msg@qptr& (0+255),w,b
  4297  001AB4  6ED9               	movwf	fsr2l,c
  4298  001AB6  50F4               	movf	prodh,w,c
  4299  001AB8  0100               	movlb	0	; () banked
  4300  001ABA  2191               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4301  001ABC  6EDA               	movwf	fsr2h,c
  4302  001ABE  50DF               	movf	indf2,w,c
  4303  001AC0  0012               	return	
  4304  001AC2                     __end_of_check_msg:
  4305                           	opt stack 0
  4306                           tblptru	equ	0xFF8
  4307                           prodh	equ	0xFF4
  4308                           prodl	equ	0xFF3
  4309                           intcon	equ	0xFF2
  4310                           intcon2	equ	0xFF1
  4311                           postinc0	equ	0xFEE
  4312                           wreg	equ	0xFE8
  4313                           indf1	equ	0xFE7
  4314                           fsr1h	equ	0xFE2
  4315                           fsr1l	equ	0xFE1
  4316                           indf2	equ	0xFDF
  4317                           postinc2	equ	0xFDE
  4318                           postdec2	equ	0xFDD
  4319                           fsr2h	equ	0xFDA
  4320                           fsr2l	equ	0xFD9
  4321                           status	equ	0xFD8
  4322                           
  4323 ;; *************** function _Delay1KTCYx *****************
  4324 ;; Defined at:
  4325 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d1ktcyx.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  unit            1    wreg     unsigned char 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  unit            1   48[BANK0 ] unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;		None               void
  4332 ;; Registers used:
  4333 ;;		wreg
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4340 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4342 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4343 ;;Total ram usage:        1 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:   10
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_block_on_To_msgqueues
  4350 ;; This function uses a non-reentrant model
  4351 ;;
  4352                           
  4353                           	psect	text23
  4354  001C74                     __ptext23:
  4355                           	opt stack 0
  4356  001C74                     _Delay1KTCYx:
  4357                           	opt stack 19
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;incstack = 0
  4361                           ;Delay1KTCYx@unit stored from wreg
  4362  001C74  0100               	movlb	0	; () banked
  4363  001C76  6F90               	movwf	Delay1KTCYx@unit& (0+255),b
  4364  001C78                     l749:
  4365                           
  4366                           ; BSR set to: 0
  4367                           
  4368                           ; BSR set to: 0
  4369  001C78  0EFA               	movlw	250
  4370  001C7A                     u1777:
  4371  001C7A  F000               	nop	
  4372  001C7C  2EE8               	decfsz	wreg,f,c
  4373  001C7E  D7FD               	goto	u1777
  4374  001C80  0100               	movlb	0	; () banked
  4375  001C82  2F90               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4376  001C84  D7F9               	goto	l749
  4377  001C86  0012               	return	
  4378  001C88                     __end_of_Delay1KTCYx:
  4379                           	opt stack 0
  4380                           tblptru	equ	0xFF8
  4381                           prodh	equ	0xFF4
  4382                           prodl	equ	0xFF3
  4383                           intcon	equ	0xFF2
  4384                           intcon2	equ	0xFF1
  4385                           postinc0	equ	0xFEE
  4386                           wreg	equ	0xFE8
  4387                           indf1	equ	0xFE7
  4388                           fsr1h	equ	0xFE2
  4389                           fsr1l	equ	0xFE1
  4390                           indf2	equ	0xFDF
  4391                           postinc2	equ	0xFDE
  4392                           postdec2	equ	0xFDD
  4393                           fsr2h	equ	0xFDA
  4394                           fsr2l	equ	0xFD9
  4395                           status	equ	0xFD8
  4396                           
  4397 ;; *************** function _ToMainLow_recvmsg *****************
  4398 ;; Defined at:
  4399 ;;		line 112 in file "../src/messages.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  maxlength       1    wreg     unsigned char 
  4402 ;;  msgtype         2   72[BANK0 ] PTR unsigned char 
  4403 ;;		 -> main@msgtype(1), 
  4404 ;;  data            2   74[BANK0 ] PTR void 
  4405 ;;		 -> main@msgbuffer(27), 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  maxlength       1   76[BANK0 ] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      char 
  4410 ;; Registers used:
  4411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4417 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4420 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4421 ;;Total ram usage:        5 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:   12
  4424 ;; This function calls:
  4425 ;;		_recv_msg
  4426 ;; This function is called by:
  4427 ;;		_main
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text24
  4432  0019BC                     __ptext24:
  4433                           	opt stack 0
  4434  0019BC                     _ToMainLow_recvmsg:
  4435                           	opt stack 18
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;incstack = 0
  4439                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4440  0019BC  0100               	movlb	0	; () banked
  4441  0019BE  6FAC               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4445  0019C0  0101               	movlb	1	; () banked
  4446  0019C2  0E01               	movlw	high _ToMainLow_MQ
  4447  0019C4  0100               	movlb	0	; () banked
  4448  0019C6  6F9B               	movwf	(recv_msg@qptr+1)& (0+255),b
  4449  0019C8  0101               	movlb	1	; () banked
  4450  0019CA  0E81               	movlw	low _ToMainLow_MQ
  4451  0019CC  0100               	movlb	0	; () banked
  4452  0019CE  6F9A               	movwf	recv_msg@qptr& (0+255),b
  4453  0019D0  C0AC  F09C         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4454  0019D4  0100               	movlb	0	; () banked
  4455  0019D6  C0A9  F09E         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4456  0019DA  0100               	movlb	0	; () banked
  4457  0019DC  C0A8  F09D         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4458  0019E0  0100               	movlb	0	; () banked
  4459  0019E2  C0AB  F0A0         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4460  0019E6  0100               	movlb	0	; () banked
  4461  0019E8  C0AA  F09F         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4462  0019EC  ECE5  F004         	call	_recv_msg	;wreg free
  4463  0019F0  0012               	return	
  4464  0019F2                     __end_of_ToMainLow_recvmsg:
  4465                           	opt stack 0
  4466                           tblptru	equ	0xFF8
  4467                           prodh	equ	0xFF4
  4468                           prodl	equ	0xFF3
  4469                           intcon	equ	0xFF2
  4470                           intcon2	equ	0xFF1
  4471                           postinc0	equ	0xFEE
  4472                           wreg	equ	0xFE8
  4473                           indf1	equ	0xFE7
  4474                           fsr1h	equ	0xFE2
  4475                           fsr1l	equ	0xFE1
  4476                           indf2	equ	0xFDF
  4477                           postinc2	equ	0xFDE
  4478                           postdec2	equ	0xFDD
  4479                           fsr2h	equ	0xFDA
  4480                           fsr2l	equ	0xFD9
  4481                           status	equ	0xFD8
  4482                           
  4483 ;; *************** function _ToMainHigh_recvmsg *****************
  4484 ;; Defined at:
  4485 ;;		line 135 in file "../src/messages.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  maxlength       1    wreg     unsigned char 
  4488 ;;  msgtype         2   72[BANK0 ] PTR unsigned char 
  4489 ;;		 -> main@msgtype(1), 
  4490 ;;  data            2   74[BANK0 ] PTR void 
  4491 ;;		 -> main@msgbuffer(27), 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  maxlength       1   76[BANK0 ] unsigned char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      char 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4503 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4504 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4506 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4507 ;;Total ram usage:        5 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:   12
  4510 ;; This function calls:
  4511 ;;		_recv_msg
  4512 ;; This function is called by:
  4513 ;;		_main
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text25
  4518  0019F2                     __ptext25:
  4519                           	opt stack 0
  4520  0019F2                     _ToMainHigh_recvmsg:
  4521                           	opt stack 18
  4522                           
  4523                           ;incstack = 0
  4524                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4525  0019F2  0100               	movlb	0	; () banked
  4526  0019F4  6FAC               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4530  0019F6  0102               	movlb	2	; () banked
  4531  0019F8  0E02               	movlw	high _ToMainHigh_MQ
  4532  0019FA  0100               	movlb	0	; () banked
  4533  0019FC  6F9B               	movwf	(recv_msg@qptr+1)& (0+255),b
  4534  0019FE  0102               	movlb	2	; () banked
  4535  001A00  0E76               	movlw	low _ToMainHigh_MQ
  4536  001A02  0100               	movlb	0	; () banked
  4537  001A04  6F9A               	movwf	recv_msg@qptr& (0+255),b
  4538  001A06  C0AC  F09C         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4539  001A0A  0100               	movlb	0	; () banked
  4540  001A0C  C0A9  F09E         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4541  001A10  0100               	movlb	0	; () banked
  4542  001A12  C0A8  F09D         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4543  001A16  0100               	movlb	0	; () banked
  4544  001A18  C0AB  F0A0         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4545  001A1C  0100               	movlb	0	; () banked
  4546  001A1E  C0AA  F09F         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4547  001A22  ECE5  F004         	call	_recv_msg	;wreg free
  4548  001A26  0012               	return	
  4549  001A28                     __end_of_ToMainHigh_recvmsg:
  4550                           	opt stack 0
  4551                           tblptru	equ	0xFF8
  4552                           prodh	equ	0xFF4
  4553                           prodl	equ	0xFF3
  4554                           intcon	equ	0xFF2
  4555                           intcon2	equ	0xFF1
  4556                           postinc0	equ	0xFEE
  4557                           wreg	equ	0xFE8
  4558                           indf1	equ	0xFE7
  4559                           fsr1h	equ	0xFE2
  4560                           fsr1l	equ	0xFE1
  4561                           indf2	equ	0xFDF
  4562                           postinc2	equ	0xFDE
  4563                           postdec2	equ	0xFDD
  4564                           fsr2h	equ	0xFDA
  4565                           fsr2l	equ	0xFD9
  4566                           status	equ	0xFD8
  4567                           
  4568 ;; *************** function _recv_msg *****************
  4569 ;; Defined at:
  4570 ;;		line 63 in file "../src/messages.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  qptr            2   58[BANK0 ] PTR struct __msg_queue
  4573 ;;		 -> FromMainHigh_MQ(118), FromMainLow_MQ(118), MotorData_MQ(118), SensorData_MQ(118), 
  4574 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  4575 ;;  maxlength       1   60[BANK0 ] unsigned char 
  4576 ;;  msgtype         2   61[BANK0 ] PTR unsigned char 
  4577 ;;		 -> RAM(3775), main@msgtype(1), 
  4578 ;;  data            2   63[BANK0 ] PTR void 
  4579 ;;		 -> NULL(0), main@msgbuffer(27), main@ic(64), main@uc(18), 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  qmsg            2   70[BANK0 ] PTR struct __msg
  4582 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), ToMainHigh_MQ.queue(116), ToMainLow_MQ.queue(116), 
  4583 ;;		 -> SensorData_MQ.queue(116), MotorData_MQ.queue(116), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  4584 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  4585 ;;  tlength         2   68[BANK0 ] unsigned int 
  4586 ;;  slot            1   67[BANK0 ] unsigned char 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      char 
  4589 ;; Registers used:
  4590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4596 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4597 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4598 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4599 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4600 ;;Total ram usage:       14 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:   11
  4603 ;; This function calls:
  4604 ;;		_memcpy
  4605 ;; This function is called by:
  4606 ;;		_ToMainLow_recvmsg
  4607 ;;		_ToMainHigh_recvmsg
  4608 ;;		_SensorData_recvmsg
  4609 ;;		_MotorData_recvmsg
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text26
  4614  0009CA                     __ptext26:
  4615                           	opt stack 0
  4616  0009CA                     _recv_msg:
  4617                           	opt stack 18
  4618                           
  4619                           ;messages.c: 64: unsigned char slot;
  4620                           ;messages.c: 68: msg *qmsg;
  4621                           ;messages.c: 69: size_t tlength;
  4622                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4623                           
  4624                           ;incstack = 0
  4625  0009CA  0100               	movlb	0	; () banked
  4626  0009CC  EE20 F075          	lfsr	2,117
  4627  0009D0  0100               	movlb	0	; () banked
  4628  0009D2  519A               	movf	recv_msg@qptr& (0+255),w,b
  4629  0009D4  26D9               	addwf	fsr2l,f,c
  4630  0009D6  0100               	movlb	0	; () banked
  4631  0009D8  519B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4632  0009DA  22DA               	addwfc	fsr2h,f,c
  4633  0009DC  50DF               	movf	indf2,w,c
  4634  0009DE  0100               	movlb	0	; () banked
  4635  0009E0  6FA3               	movwf	recv_msg@slot& (0+255),b
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4639  0009E2  0100               	movlb	0	; () banked
  4640  0009E4  51A3               	movf	recv_msg@slot& (0+255),w,b
  4641  0009E6  0D1D               	mullw	29
  4642  0009E8  50F3               	movf	prodl,w,c
  4643  0009EA  0100               	movlb	0	; () banked
  4644  0009EC  259A               	addwf	recv_msg@qptr& (0+255),w,b
  4645  0009EE  0100               	movlb	0	; () banked
  4646  0009F0  6FA6               	movwf	recv_msg@qmsg& (0+255),b
  4647  0009F2  50F4               	movf	prodh,w,c
  4648  0009F4  0100               	movlb	0	; () banked
  4649  0009F6  219B               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4650  0009F8  0100               	movlb	0	; () banked
  4651  0009FA  6FA7               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;messages.c: 74: if (qmsg->full == 1) {
  4655  0009FC  0E01               	movlw	1
  4656  0009FE  C0A6  FFD9         	movff	recv_msg@qmsg,fsr2l
  4657  000A02  C0A7  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4658  000A06  62DF               	cpfseq	indf2,c
  4659  000A08  D06D               	goto	l2408
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4663  000A0A  0100               	movlb	0	; () banked
  4664  000A0C  EE20 F001          	lfsr	2,1
  4665  000A10  0100               	movlb	0	; () banked
  4666  000A12  51A6               	movf	recv_msg@qmsg& (0+255),w,b
  4667  000A14  26D9               	addwf	fsr2l,f,c
  4668  000A16  0100               	movlb	0	; () banked
  4669  000A18  51A7               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4670  000A1A  22DA               	addwfc	fsr2h,f,c
  4671  000A1C  50DF               	movf	indf2,w,c
  4672  000A1E  0100               	movlb	0	; () banked
  4673  000A20  5D9C               	subwf	recv_msg@maxlength& (0+255),w,b
  4674  000A22  B0D8               	btfsc	status,0,c
  4675  000A24  D002               	goto	l2392
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;messages.c: 77: return (-3);
  4679  000A26  0EFD               	movlw	253
  4680  000A28  0012               	return	
  4681  000A2A                     l2392:
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;messages.c: 78: }
  4685                           ;messages.c: 80: tlength = qmsg->length;
  4686  000A2A  0100               	movlb	0	; () banked
  4687  000A2C  EE20 F001          	lfsr	2,1
  4688  000A30  0100               	movlb	0	; () banked
  4689  000A32  51A6               	movf	recv_msg@qmsg& (0+255),w,b
  4690  000A34  26D9               	addwf	fsr2l,f,c
  4691  000A36  0100               	movlb	0	; () banked
  4692  000A38  51A7               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4693  000A3A  22DA               	addwfc	fsr2h,f,c
  4694  000A3C  50DF               	movf	indf2,w,c
  4695  000A3E  0100               	movlb	0	; () banked
  4696  000A40  6FA1               	movwf	??_recv_msg& (0+255),b
  4697  000A42  0100               	movlb	0	; () banked
  4698  000A44  51A1               	movf	??_recv_msg& (0+255),w,b
  4699  000A46  0100               	movlb	0	; () banked
  4700  000A48  6FA4               	movwf	recv_msg@tlength& (0+255),b
  4701  000A4A  0100               	movlb	0	; () banked
  4702  000A4C  6BA5               	clrf	(recv_msg@tlength+1)& (0+255),b
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4706  000A4E  0100               	movlb	0	; () banked
  4707  000A50  C0A0  F091         	movff	recv_msg@data+1,memcpy@d1+1
  4708  000A54  0100               	movlb	0	; () banked
  4709  000A56  C09F  F090         	movff	recv_msg@data,memcpy@d1
  4710  000A5A  0E03               	movlw	3
  4711  000A5C  0100               	movlb	0	; () banked
  4712  000A5E  25A6               	addwf	recv_msg@qmsg& (0+255),w,b
  4713  000A60  0100               	movlb	0	; () banked
  4714  000A62  6FA1               	movwf	??_recv_msg& (0+255),b
  4715  000A64  0E00               	movlw	0
  4716  000A66  0100               	movlb	0	; () banked
  4717  000A68  21A7               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4718  000A6A  0100               	movlb	0	; () banked
  4719  000A6C  6FA2               	movwf	(??_recv_msg+1)& (0+255),b
  4720  000A6E  C0A1  F092         	movff	??_recv_msg,memcpy@s1
  4721  000A72  C0A2  F093         	movff	??_recv_msg+1,memcpy@s1+1
  4722  000A76  C0A4  F094         	movff	recv_msg@tlength,memcpy@n
  4723  000A7A  C0A5  F095         	movff	recv_msg@tlength+1,memcpy@n+1
  4724  000A7E  ECD4  F00B         	call	_memcpy	;wreg free
  4725                           
  4726                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4727  000A82  0100               	movlb	0	; () banked
  4728  000A84  EE20 F075          	lfsr	2,117
  4729  000A88  0100               	movlb	0	; () banked
  4730  000A8A  519A               	movf	recv_msg@qptr& (0+255),w,b
  4731  000A8C  26D9               	addwf	fsr2l,f,c
  4732  000A8E  0100               	movlb	0	; () banked
  4733  000A90  519B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4734  000A92  22DA               	addwfc	fsr2h,f,c
  4735  000A94  0100               	movlb	0	; () banked
  4736  000A96  EE10 F075          	lfsr	1,117
  4737  000A9A  0100               	movlb	0	; () banked
  4738  000A9C  519A               	movf	recv_msg@qptr& (0+255),w,b
  4739  000A9E  26E1               	addwf	fsr1l,f,c
  4740  000AA0  0100               	movlb	0	; () banked
  4741  000AA2  519B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4742  000AA4  22E2               	addwfc	fsr1h,f,c
  4743  000AA6  50E7               	movf	indf1,w,c
  4744  000AA8  0100               	movlb	0	; () banked
  4745  000AAA  6FA1               	movwf	??_recv_msg& (0+255),b
  4746  000AAC  0100               	movlb	0	; () banked
  4747  000AAE  29A1               	incf	??_recv_msg& (0+255),w,b
  4748  000AB0  0B03               	andlw	3
  4749  000AB2  6EDF               	movwf	indf2,c
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4753  000AB4  0100               	movlb	0	; () banked
  4754  000AB6  EE20 F002          	lfsr	2,2
  4755  000ABA  0100               	movlb	0	; () banked
  4756  000ABC  51A6               	movf	recv_msg@qmsg& (0+255),w,b
  4757  000ABE  26D9               	addwf	fsr2l,f,c
  4758  000AC0  0100               	movlb	0	; () banked
  4759  000AC2  51A7               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4760  000AC4  22DA               	addwfc	fsr2h,f,c
  4761  000AC6  C09D  FFE1         	movff	recv_msg@msgtype,fsr1l
  4762  000ACA  C09E  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4763  000ACE  CFDF FFE7          	movff	indf2,indf1
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;messages.c: 91: qmsg->full = 0;
  4767  000AD2  C0A6  FFD9         	movff	recv_msg@qmsg,fsr2l
  4768  000AD6  C0A7  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4769  000ADA  0E00               	movlw	0
  4770  000ADC  6EDF               	movwf	indf2,c
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;messages.c: 92: return (tlength);
  4774  000ADE  0100               	movlb	0	; () banked
  4775  000AE0  51A4               	movf	recv_msg@tlength& (0+255),w,b
  4776  000AE2  0012               	return	
  4777  000AE4                     l2408:
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;messages.c: 94: return (-4);
  4781  000AE4  0EFC               	movlw	252
  4782  000AE6  0012               	return	
  4783  000AE8                     __end_of_recv_msg:
  4784                           	opt stack 0
  4785                           tblptru	equ	0xFF8
  4786                           prodh	equ	0xFF4
  4787                           prodl	equ	0xFF3
  4788                           intcon	equ	0xFF2
  4789                           intcon2	equ	0xFF1
  4790                           postinc0	equ	0xFEE
  4791                           wreg	equ	0xFE8
  4792                           indf1	equ	0xFE7
  4793                           fsr1h	equ	0xFE2
  4794                           fsr1l	equ	0xFE1
  4795                           indf2	equ	0xFDF
  4796                           postinc2	equ	0xFDE
  4797                           postdec2	equ	0xFDD
  4798                           fsr2h	equ	0xFDA
  4799                           fsr2l	equ	0xFD9
  4800                           status	equ	0xFD8
  4801                           
  4802 ;; *************** function _memcpy *****************
  4803 ;; Defined at:
  4804 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  d1              2   48[BANK0 ] PTR void 
  4807 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), ToMainHigh_MQ.queue(116), ToMainLow_MQ.queue(116), 
  4808 ;;		 -> SensorData_MQ.queue(116), MotorData_MQ.queue(116), NULL(0), FromMainHigh_MQ(118), 
  4809 ;;		 -> FromMainLow_MQ(118), MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), 
  4810 ;;		 -> ToMainLow_MQ(118), main@msgbuffer(27), main@ic(64), main@uc(18), 
  4811 ;;  s1              2   50[BANK0 ] PTR const void 
  4812 ;;		 -> ToMainLow_MQ.data(26), ToMainHigh_MQ.data(26), SensorData_MQ.data(26), MotorData_MQ.data(26), 
  4813 ;;		 -> FromMainLow_MQ.data(26), FromMainHigh_MQ.data(26), MotorData_MQ.queue.data(26), SensorData_MQ.queue.data(26), 
  4814 ;;		 -> ToMainLow_MQ.queue.data(26), ToMainHigh_MQ.queue.data(26), FromMainHigh_MQ.queue.data(26), FromMainLow_MQ.queue.
      +data(26), 
  4815 ;;		 -> uart_recv_int_handler@readin(1), NULL(0), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  4816 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  4817 ;;		 -> main@msgbuffer(27), main@t1thread_data(2), main@ic(64), 
  4818 ;;  n               2   52[BANK0 ] unsigned int 
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;  s               2   56[BANK0 ] PTR const unsigned char 
  4821 ;;		 -> ToMainLow_MQ.data(26), ToMainHigh_MQ.data(26), SensorData_MQ.data(26), MotorData_MQ.data(26), 
  4822 ;;		 -> FromMainLow_MQ.data(26), FromMainHigh_MQ.data(26), MotorData_MQ.queue.data(26), SensorData_MQ.queue.data(26), 
  4823 ;;		 -> ToMainLow_MQ.queue.data(26), ToMainHigh_MQ.queue.data(26), FromMainHigh_MQ.queue.data(26), FromMainLow_MQ.queue.
      +data(26), 
  4824 ;;		 -> uart_recv_int_handler@readin(1), NULL(0), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  4825 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  4826 ;;		 -> main@msgbuffer(27), main@t1thread_data(2), main@ic(64), 
  4827 ;;  d               2   54[BANK0 ] PTR unsigned char 
  4828 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), ToMainHigh_MQ.queue(116), ToMainLow_MQ.queue(116), 
  4829 ;;		 -> SensorData_MQ.queue(116), MotorData_MQ.queue(116), NULL(0), FromMainHigh_MQ(118), 
  4830 ;;		 -> FromMainLow_MQ(118), MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), 
  4831 ;;		 -> ToMainLow_MQ(118), main@msgbuffer(27), main@ic(64), main@uc(18), 
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  2   48[BANK0 ] PTR void 
  4834 ;; Registers used:
  4835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4841 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4842 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4844 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4845 ;;Total ram usage:       10 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:   10
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_send_msg
  4852 ;;		_recv_msg
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text27
  4857  0017A8                     __ptext27:
  4858                           	opt stack 0
  4859  0017A8                     _memcpy:
  4860                           	opt stack 17
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;incstack = 0
  4864  0017A8  0100               	movlb	0	; () banked
  4865  0017AA  C093  F099         	movff	memcpy@s1+1,memcpy@s+1
  4866  0017AE  0100               	movlb	0	; () banked
  4867  0017B0  C092  F098         	movff	memcpy@s1,memcpy@s
  4868  0017B4  0100               	movlb	0	; () banked
  4869  0017B6  C091  F097         	movff	memcpy@d1+1,memcpy@d+1
  4870  0017BA  0100               	movlb	0	; () banked
  4871  0017BC  C090  F096         	movff	memcpy@d1,memcpy@d
  4872  0017C0  D010               	goto	l2170
  4873  0017C2                     l2164:
  4874                           
  4875                           ; BSR set to: 0
  4876  0017C2  C098  FFD9         	movff	memcpy@s,fsr2l
  4877  0017C6  C099  FFDA         	movff	memcpy@s+1,fsr2h
  4878  0017CA  C096  FFE1         	movff	memcpy@d,fsr1l
  4879  0017CE  C097  FFE2         	movff	memcpy@d+1,fsr1h
  4880  0017D2  CFDF FFE7          	movff	indf2,indf1
  4881                           
  4882                           ; BSR set to: 0
  4883  0017D6  0100               	movlb	0	; () banked
  4884  0017D8  4B98               	infsnz	memcpy@s& (0+255),f,b
  4885  0017DA  2B99               	incf	(memcpy@s+1)& (0+255),f,b
  4886                           
  4887                           ; BSR set to: 0
  4888  0017DC  0100               	movlb	0	; () banked
  4889  0017DE  4B96               	infsnz	memcpy@d& (0+255),f,b
  4890  0017E0  2B97               	incf	(memcpy@d+1)& (0+255),f,b
  4891  0017E2                     l2170:
  4892                           
  4893                           ; BSR set to: 0
  4894  0017E2  0100               	movlb	0	; () banked
  4895  0017E4  0794               	decf	memcpy@n& (0+255),f,b
  4896  0017E6  A0D8               	btfss	status,0,c
  4897  0017E8  0795               	decf	(memcpy@n+1)& (0+255),f,b
  4898  0017EA  0100               	movlb	0	; () banked
  4899  0017EC  2994               	incf	memcpy@n& (0+255),w,b
  4900  0017EE  B4D8               	btfsc	status,2,c
  4901  0017F0  2995               	incf	(memcpy@n+1)& (0+255),w,b
  4902  0017F2  B4D8               	btfsc	status,2,c
  4903                           
  4904                           ; BSR set to: 0
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;	Return value of _memcpy is never used
  4908  0017F4  0012               	return	
  4909  0017F6  D7E5               	goto	l2164
  4910  0017F8                     __end_of_memcpy:
  4911                           	opt stack 0
  4912                           tblptru	equ	0xFF8
  4913                           prodh	equ	0xFF4
  4914                           prodl	equ	0xFF3
  4915                           intcon	equ	0xFF2
  4916                           intcon2	equ	0xFF1
  4917                           postinc0	equ	0xFEE
  4918                           wreg	equ	0xFE8
  4919                           indf1	equ	0xFE7
  4920                           fsr1h	equ	0xFE2
  4921                           fsr1l	equ	0xFE1
  4922                           indf2	equ	0xFDF
  4923                           postinc2	equ	0xFDE
  4924                           postdec2	equ	0xFDD
  4925                           fsr2h	equ	0xFDA
  4926                           fsr2l	equ	0xFD9
  4927                           status	equ	0xFD8
  4928                           
  4929 ;; *************** function _OpenTimer1 *****************
  4930 ;; Defined at:
  4931 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t1open.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  config          1    wreg     unsigned char 
  4934 ;;  config1         1   48[BANK0 ] unsigned char 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  config          1   50[BANK0 ] unsigned char 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;		None               void
  4939 ;; Registers used:
  4940 ;;		wreg, status,2, status,0
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4946 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4947 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4948 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4949 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4950 ;;Total ram usage:        3 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:   10
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		_main
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text28
  4961  001980                     __ptext28:
  4962                           	opt stack 0
  4963  001980                     _OpenTimer1:
  4964                           	opt stack 20
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;incstack = 0
  4968                           ;OpenTimer1@config stored from wreg
  4969  001980  0100               	movlb	0	; () banked
  4970  001982  6F92               	movwf	OpenTimer1@config& (0+255),b
  4971                           
  4972                           ; BSR set to: 0
  4973  001984  0100               	movlb	0	; () banked
  4974  001986  5190               	movf	OpenTimer1@config1& (0+255),w,b
  4975  001988  0BF3               	andlw	243
  4976  00198A  6E9A               	movwf	3994,c	;volatile
  4977  00198C  C092  F091         	movff	OpenTimer1@config,??_OpenTimer1
  4978  001990  0E7F               	movlw	127
  4979  001992  0100               	movlb	0	; () banked
  4980  001994  1791               	andwf	??_OpenTimer1& (0+255),f,b
  4981  001996  0100               	movlb	0	; () banked
  4982  001998  90D8               	bcf	status,0,c
  4983  00199A  3591               	rlcf	??_OpenTimer1& (0+255),w,b
  4984  00199C  6ECD               	movwf	4045,c	;volatile
  4985                           
  4986                           ; BSR set to: 0
  4987  00199E  0E00               	movlw	0
  4988  0019A0  6ECF               	movwf	4047,c	;volatile
  4989                           
  4990                           ; BSR set to: 0
  4991  0019A2  0E00               	movlw	0
  4992  0019A4  6ECE               	movwf	4046,c	;volatile
  4993                           
  4994                           ; BSR set to: 0
  4995  0019A6  909E               	bcf	3998,0,c	;volatile
  4996                           
  4997                           ; BSR set to: 0
  4998  0019A8  0100               	movlb	0	; () banked
  4999  0019AA  AF92               	btfss	OpenTimer1@config& (0+255),7,b
  5000  0019AC  D002               	goto	l463
  5001                           
  5002                           ; BSR set to: 0
  5003  0019AE  809D               	bsf	3997,0,c	;volatile
  5004  0019B0  D001               	goto	l464
  5005  0019B2                     l463:
  5006                           
  5007                           ; BSR set to: 0
  5008  0019B2  909D               	bcf	3997,0,c	;volatile
  5009  0019B4                     l464:
  5010                           
  5011                           ; BSR set to: 0
  5012  0019B4  BE9A               	btfsc	3994,7,c	;volatile
  5013                           
  5014                           ; BSR set to: 0
  5015  0019B6  869A               	bsf	3994,3,c	;volatile
  5016                           
  5017                           ; BSR set to: 0
  5018  0019B8  80CD               	bsf	4045,0,c	;volatile
  5019                           
  5020                           ; BSR set to: 0
  5021  0019BA  0012               	return	
  5022  0019BC                     __end_of_OpenTimer1:
  5023                           	opt stack 0
  5024                           tblptru	equ	0xFF8
  5025                           prodh	equ	0xFF4
  5026                           prodl	equ	0xFF3
  5027                           intcon	equ	0xFF2
  5028                           intcon2	equ	0xFF1
  5029                           postinc0	equ	0xFEE
  5030                           wreg	equ	0xFE8
  5031                           indf1	equ	0xFE7
  5032                           fsr1h	equ	0xFE2
  5033                           fsr1l	equ	0xFE1
  5034                           indf2	equ	0xFDF
  5035                           postinc2	equ	0xFDE
  5036                           postdec2	equ	0xFDD
  5037                           fsr2h	equ	0xFDA
  5038                           fsr2l	equ	0xFD9
  5039                           status	equ	0xFD8
  5040                           
  5041 ;; *************** function _OpenTimer0 *****************
  5042 ;; Defined at:
  5043 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0open.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  config          1    wreg     unsigned char 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  config          1   48[BANK0 ] unsigned char 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;		None               void
  5050 ;; Registers used:
  5051 ;;		wreg, status,2, status,0
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5058 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5060 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5061 ;;Total ram usage:        1 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; Hardware stack levels required when called:   10
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_main
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text29
  5072  001BD4                     __ptext29:
  5073                           	opt stack 0
  5074  001BD4                     _OpenTimer0:
  5075                           	opt stack 20
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;incstack = 0
  5079                           ;OpenTimer0@config stored from wreg
  5080  001BD4  0100               	movlb	0	; () banked
  5081  001BD6  6F90               	movwf	OpenTimer0@config& (0+255),b
  5082                           
  5083                           ; BSR set to: 0
  5084  001BD8  0100               	movlb	0	; () banked
  5085  001BDA  5190               	movf	OpenTimer0@config& (0+255),w,b
  5086  001BDC  0B7F               	andlw	127
  5087  001BDE  6ED5               	movwf	4053,c	;volatile
  5088                           
  5089                           ; BSR set to: 0
  5090  001BE0  0E00               	movlw	0
  5091  001BE2  6ED7               	movwf	4055,c	;volatile
  5092                           
  5093                           ; BSR set to: 0
  5094  001BE4  0E00               	movlw	0
  5095  001BE6  6ED6               	movwf	4054,c	;volatile
  5096                           
  5097                           ; BSR set to: 0
  5098  001BE8  94F2               	bcf	intcon,2,c	;volatile
  5099                           
  5100                           ; BSR set to: 0
  5101  001BEA  0100               	movlb	0	; () banked
  5102  001BEC  AF90               	btfss	OpenTimer0@config& (0+255),7,b
  5103  001BEE  D002               	goto	l435
  5104                           
  5105                           ; BSR set to: 0
  5106  001BF0  8AF2               	bsf	intcon,5,c	;volatile
  5107  001BF2  D001               	goto	l436
  5108  001BF4                     l435:
  5109                           
  5110                           ; BSR set to: 0
  5111  001BF4  9AF2               	bcf	intcon,5,c	;volatile
  5112  001BF6                     l436:
  5113                           
  5114                           ; BSR set to: 0
  5115  001BF6  8ED5               	bsf	4053,7,c	;volatile
  5116                           
  5117                           ; BSR set to: 0
  5118  001BF8  0012               	return	
  5119  001BFA                     __end_of_OpenTimer0:
  5120                           	opt stack 0
  5121                           tblptru	equ	0xFF8
  5122                           prodh	equ	0xFF4
  5123                           prodl	equ	0xFF3
  5124                           intcon	equ	0xFF2
  5125                           intcon2	equ	0xFF1
  5126                           postinc0	equ	0xFEE
  5127                           wreg	equ	0xFE8
  5128                           indf1	equ	0xFE7
  5129                           fsr1h	equ	0xFE2
  5130                           fsr1l	equ	0xFE1
  5131                           indf2	equ	0xFDF
  5132                           postinc2	equ	0xFDE
  5133                           postdec2	equ	0xFDD
  5134                           fsr2h	equ	0xFDA
  5135                           fsr2l	equ	0xFD9
  5136                           status	equ	0xFD8
  5137                           
  5138 ;; *************** function _Open1USART *****************
  5139 ;; Defined at:
  5140 ;;		line 124 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\u1open.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  config          1    wreg     unsigned char 
  5143 ;;  spbrg           2   48[BANK0 ] unsigned int 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  config          1   53[BANK0 ] unsigned char 
  5146 ;; Return value:  Size  Location     Type
  5147 ;;		None               void
  5148 ;; Registers used:
  5149 ;;		wreg, status,2
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5155 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5157 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5158 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5159 ;;Total ram usage:        6 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; Hardware stack levels required when called:   10
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_main
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text30
  5170  00155C                     __ptext30:
  5171                           	opt stack 0
  5172  00155C                     _Open1USART:
  5173                           	opt stack 20
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;incstack = 0
  5177                           ;Open1USART@config stored from wreg
  5178  00155C  0100               	movlb	0	; () banked
  5179  00155E  6F95               	movwf	Open1USART@config& (0+255),b
  5180                           
  5181                           ; BSR set to: 0
  5182  001560  0E00               	movlw	0
  5183  001562  6EAD               	movwf	4013,c	;volatile
  5184  001564  0E00               	movlw	0
  5185  001566  6EAC               	movwf	4012,c	;volatile
  5186                           
  5187                           ; BSR set to: 0
  5188  001568  0100               	movlb	0	; () banked
  5189  00156A  B195               	btfsc	Open1USART@config& (0+255),0,b
  5190                           
  5191                           ; BSR set to: 0
  5192  00156C  88AD               	bsf	4013,4,c	;volatile
  5193                           
  5194                           ; BSR set to: 0
  5195                           
  5196                           ; BSR set to: 0
  5197  00156E  0100               	movlb	0	; () banked
  5198  001570  A395               	btfss	Open1USART@config& (0+255),1,b
  5199  001572  D002               	goto	l2816
  5200                           
  5201                           ; BSR set to: 0
  5202  001574  8CAD               	bsf	4013,6,c	;volatile
  5203  001576  8CAC               	bsf	4012,6,c	;volatile
  5204  001578                     l2816:
  5205                           
  5206                           ; BSR set to: 0
  5207  001578  0100               	movlb	0	; () banked
  5208  00157A  B595               	btfsc	Open1USART@config& (0+255),2,b
  5209                           
  5210                           ; BSR set to: 0
  5211  00157C  8EAD               	bsf	4013,7,c	;volatile
  5212                           
  5213                           ; BSR set to: 0
  5214                           
  5215                           ; BSR set to: 0
  5216  00157E  0100               	movlb	0	; () banked
  5217  001580  A795               	btfss	Open1USART@config& (0+255),3,b
  5218  001582  D002               	goto	l502
  5219                           
  5220                           ; BSR set to: 0
  5221  001584  88AC               	bsf	4012,4,c	;volatile
  5222  001586  D001               	goto	l2824
  5223  001588                     l502:
  5224                           
  5225                           ; BSR set to: 0
  5226  001588  8AAC               	bsf	4012,5,c	;volatile
  5227  00158A                     l2824:
  5228                           
  5229                           ; BSR set to: 0
  5230  00158A  0100               	movlb	0	; () banked
  5231  00158C  B995               	btfsc	Open1USART@config& (0+255),4,b
  5232                           
  5233                           ; BSR set to: 0
  5234  00158E  84AD               	bsf	4013,2,c	;volatile
  5235                           
  5236                           ; BSR set to: 0
  5237                           
  5238                           ; BSR set to: 0
  5239  001590  0100               	movlb	0	; () banked
  5240  001592  BB95               	btfsc	Open1USART@config& (0+255),5,b
  5241                           
  5242                           ; BSR set to: 0
  5243  001594  86AC               	bsf	4012,3,c	;volatile
  5244                           
  5245                           ; BSR set to: 0
  5246                           
  5247                           ; BSR set to: 0
  5248  001596  0100               	movlb	0	; () banked
  5249  001598  AD95               	btfss	Open1USART@config& (0+255),6,b
  5250  00159A  D002               	goto	l506
  5251                           
  5252                           ; BSR set to: 0
  5253  00159C  8A9D               	bsf	3997,5,c	;volatile
  5254  00159E  D001               	goto	l2836
  5255  0015A0                     l506:
  5256                           
  5257                           ; BSR set to: 0
  5258  0015A0  9A9D               	bcf	3997,5,c	;volatile
  5259  0015A2                     l2836:
  5260                           
  5261                           ; BSR set to: 0
  5262  0015A2  0100               	movlb	0	; () banked
  5263  0015A4  AF95               	btfss	Open1USART@config& (0+255),7,b
  5264  0015A6  D002               	goto	l508
  5265                           
  5266                           ; BSR set to: 0
  5267  0015A8  889D               	bsf	3997,4,c	;volatile
  5268  0015AA  D001               	goto	l509
  5269  0015AC                     l508:
  5270                           
  5271                           ; BSR set to: 0
  5272  0015AC  989D               	bcf	3997,4,c	;volatile
  5273  0015AE                     l509:
  5274                           
  5275                           ; BSR set to: 0
  5276  0015AE  C090  FFB0         	movff	Open1USART@spbrg,4016	;volatile
  5277                           
  5278                           ; BSR set to: 0
  5279  0015B2  0100               	movlb	0	; () banked
  5280  0015B4  C091  F092         	movff	Open1USART@spbrg+1,??_Open1USART
  5281  0015B8  C092  F093         	movff	??_Open1USART,??_Open1USART+1
  5282  0015BC  0100               	movlb	0	; () banked
  5283  0015BE  6B94               	clrf	(??_Open1USART+2)& (0+255),b
  5284  0015C0  0100               	movlb	0	; () banked
  5285  0015C2  5193               	movf	(??_Open1USART+1)& (0+255),w,b
  5286  0015C4  6E7F               	movwf	3967,c	;volatile
  5287                           
  5288                           ; BSR set to: 0
  5289  0015C6  8AAD               	bsf	4013,5,c	;volatile
  5290                           
  5291                           ; BSR set to: 0
  5292  0015C8  8EAC               	bsf	4012,7,c	;volatile
  5293                           
  5294                           ; BSR set to: 0
  5295  0015CA  0012               	return	
  5296  0015CC                     __end_of_Open1USART:
  5297                           	opt stack 0
  5298                           tblptru	equ	0xFF8
  5299                           prodh	equ	0xFF4
  5300                           prodl	equ	0xFF3
  5301                           intcon	equ	0xFF2
  5302                           intcon2	equ	0xFF1
  5303                           postinc0	equ	0xFEE
  5304                           wreg	equ	0xFE8
  5305                           indf1	equ	0xFE7
  5306                           fsr1h	equ	0xFE2
  5307                           fsr1l	equ	0xFE1
  5308                           indf2	equ	0xFDF
  5309                           postinc2	equ	0xFDE
  5310                           postdec2	equ	0xFDD
  5311                           fsr2h	equ	0xFDA
  5312                           fsr2l	equ	0xFD9
  5313                           status	equ	0xFD8
  5314                           
  5315 ;; *************** function _InterruptHandlerLow *****************
  5316 ;; Defined at:
  5317 ;;		line 117 in file "../src/interrupts.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;		None
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;		None
  5322 ;; Return value:  Size  Location     Type
  5323 ;;		None               void
  5324 ;; Registers used:
  5325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5333 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5334 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5335 ;;Total ram usage:       17 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; Hardware stack levels required when called:    9
  5338 ;; This function calls:
  5339 ;;		_timer0_int_handler
  5340 ;;		_timer1_int_handler
  5341 ;;		_uart_recv_int_handler
  5342 ;;		_uart_trans_int_handler
  5343 ;; This function is called by:
  5344 ;;		Interrupt level 1
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	intcodelo
  5349  000018                     __pintcodelo:
  5350                           	opt stack 0
  5351  000018                     _InterruptHandlerLow:
  5352                           	opt stack 17
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;incstack = 0
  5356  000018  CFD8 F021          	movff	status,??_InterruptHandlerLow
  5357  00001C  CFE8 F022          	movff	wreg,??_InterruptHandlerLow+1
  5358  000020  CFE0 F023          	movff	bsr,??_InterruptHandlerLow+2
  5359  000024  CFFA F024          	movff	pclath,??_InterruptHandlerLow+3
  5360  000028  CFFB F025          	movff	pclatu,??_InterruptHandlerLow+4
  5361  00002C  CFE9 F026          	movff	fsr0l,??_InterruptHandlerLow+5
  5362  000030  CFEA F027          	movff	fsr0h,??_InterruptHandlerLow+6
  5363  000034  CFE1 F028          	movff	fsr1l,??_InterruptHandlerLow+7
  5364  000038  CFE2 F029          	movff	fsr1h,??_InterruptHandlerLow+8
  5365  00003C  CFD9 F02A          	movff	fsr2l,??_InterruptHandlerLow+9
  5366  000040  CFDA F02B          	movff	fsr2h,??_InterruptHandlerLow+10
  5367  000044  CFF3 F02C          	movff	prodl,??_InterruptHandlerLow+11
  5368  000048  CFF4 F02D          	movff	prodh,??_InterruptHandlerLow+12
  5369  00004C  CFF6 F02E          	movff	tblptrl,??_InterruptHandlerLow+13
  5370  000050  CFF7 F02F          	movff	tblptrh,??_InterruptHandlerLow+14
  5371  000054  CFF8 F030          	movff	tblptru,??_InterruptHandlerLow+15
  5372  000058  CFF5 F031          	movff	tablat,??_InterruptHandlerLow+16
  5373                           
  5374                           ;interrupts.c: 119: if (INTCONbits.TMR0IF) {
  5375  00005C  A4F2               	btfss	intcon,2,c	;volatile
  5376  00005E  D003               	goto	i1l2956
  5377                           
  5378                           ;interrupts.c: 120: INTCONbits.TMR0IF = 0;
  5379  000060  94F2               	bcf	intcon,2,c	;volatile
  5380                           
  5381                           ;interrupts.c: 122: timer0_int_handler();
  5382  000062  EC1E  F00E         	call	_timer0_int_handler	;wreg free
  5383  000066                     i1l2956:
  5384                           
  5385                           ;interrupts.c: 123: }
  5386                           ;interrupts.c: 126: if (PIR1bits.TMR1IF) {
  5387  000066  A09E               	btfss	3998,0,c	;volatile
  5388  000068  D003               	goto	i1l2962
  5389                           
  5390                           ;interrupts.c: 127: PIR1bits.TMR1IF = 0;
  5391  00006A  909E               	bcf	3998,0,c	;volatile
  5392                           
  5393                           ;interrupts.c: 128: timer1_int_handler();
  5394  00006C  EC2D  F00E         	call	_timer1_int_handler	;wreg free
  5395  000070                     i1l2962:
  5396                           
  5397                           ;interrupts.c: 129: }
  5398                           ;interrupts.c: 132: if (PIR1bits.RCIF) {
  5399  000070  AA9E               	btfss	3998,5,c	;volatile
  5400  000072  D003               	goto	i1l2968
  5401                           
  5402                           ;interrupts.c: 133: PIR1bits.RCIF = 0;
  5403  000074  9A9E               	bcf	3998,5,c	;volatile
  5404                           
  5405                           ;interrupts.c: 134: uart_recv_int_handler();
  5406  000076  ECAA  F00B         	call	_uart_recv_int_handler	;wreg free
  5407  00007A                     i1l2968:
  5408                           
  5409                           ;interrupts.c: 135: }
  5410                           ;interrupts.c: 138: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  5411  00007A  B89E               	btfsc	3998,4,c	;volatile
  5412  00007C  A89D               	btfss	3997,4,c	;volatile
  5413  00007E  D002               	goto	i1l52
  5414                           
  5415                           ;interrupts.c: 139: uart_trans_int_handler();
  5416  000080  EC1D  F008         	call	_uart_trans_int_handler	;wreg free
  5417  000084                     i1l52:
  5418  000084  C031  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5419  000088  C030  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5420  00008C  C02F  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5421  000090  C02E  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5422  000094  C02D  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5423  000098  C02C  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5424  00009C  C02B  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5425  0000A0  C02A  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5426  0000A4  C029  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5427  0000A8  C028  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5428  0000AC  C027  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5429  0000B0  C026  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5430  0000B4  C025  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5431  0000B8  C024  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5432  0000BC  C023  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5433  0000C0  C022  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5434  0000C4  C021  FFD8         	movff	??_InterruptHandlerLow,status
  5435  0000C8  0010               	retfie	
  5436  0000CA                     __end_of_InterruptHandlerLow:
  5437                           	opt stack 0
  5438                           pclatu	equ	0xFFB
  5439                           pclath	equ	0xFFA
  5440                           tblptru	equ	0xFF8
  5441                           tblptrh	equ	0xFF7
  5442                           tblptrl	equ	0xFF6
  5443                           tablat	equ	0xFF5
  5444                           prodh	equ	0xFF4
  5445                           prodl	equ	0xFF3
  5446                           intcon	equ	0xFF2
  5447                           intcon2	equ	0xFF1
  5448                           postinc0	equ	0xFEE
  5449                           fsr0h	equ	0xFEA
  5450                           fsr0l	equ	0xFE9
  5451                           wreg	equ	0xFE8
  5452                           indf1	equ	0xFE7
  5453                           fsr1h	equ	0xFE2
  5454                           fsr1l	equ	0xFE1
  5455                           bsr	equ	0xFE0
  5456                           indf2	equ	0xFDF
  5457                           postinc2	equ	0xFDE
  5458                           postdec2	equ	0xFDD
  5459                           fsr2h	equ	0xFDA
  5460                           fsr2l	equ	0xFD9
  5461                           status	equ	0xFD8
  5462                           
  5463 ;; *************** function _uart_trans_int_handler *****************
  5464 ;; Defined at:
  5465 ;;		line 83 in file "../src/my_uart.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;		None
  5470 ;; Return value:  Size  Location     Type
  5471 ;;		None               void
  5472 ;; Registers used:
  5473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5481 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5482 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5483 ;;Total ram usage:        2 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    8
  5486 ;; This function calls:
  5487 ;;		_FromMainLow_recvmsg
  5488 ;; This function is called by:
  5489 ;;		_InterruptHandlerLow
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text32
  5494  00103A                     __ptext32:
  5495                           	opt stack 0
  5496  00103A                     _uart_trans_int_handler:
  5497                           	opt stack 17
  5498                           
  5499                           ;my_uart.c: 84: { LATAbits.LATA2 = 1;};
  5500                           
  5501                           ;incstack = 0
  5502  00103A  8489               	bsf	3977,2,c	;volatile
  5503                           
  5504                           ;my_uart.c: 86: if (uc_ptr->outbuflen == 3) {
  5505  00103C  EE20 F00E          	lfsr	2,14
  5506  001040  5032               	movf	_uc_ptr,w,c
  5507  001042  26D9               	addwf	fsr2l,f,c
  5508  001044  5033               	movf	_uc_ptr+1,w,c
  5509  001046  22DA               	addwfc	fsr2h,f,c
  5510  001048  0E03               	movlw	3
  5511  00104A  62DF               	cpfseq	indf2,c
  5512  00104C  D001               	goto	i1l2706
  5513  00104E  D013               	goto	L1
  5514  001050                     i1l2706:
  5515                           
  5516                           ;my_uart.c: 97: FromMainLow_recvmsg(uc_ptr->outbuflen, (void *) 41, (void *) uc_ptr->out
      +                          buffer);
  5517  001050  0E00               	movlw	0
  5518  001052  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5519  001054  0E29               	movlw	41
  5520  001056  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5521  001058  0E08               	movlw	8
  5522  00105A  2432               	addwf	_uc_ptr,w,c
  5523  00105C  6E1B               	movwf	FromMainLow_recvmsg@data,c
  5524  00105E  0E00               	movlw	0
  5525  001060  2033               	addwfc	_uc_ptr+1,w,c
  5526  001062  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  5527  001064  EE20 F00E          	lfsr	2,14
  5528  001068  5032               	movf	_uc_ptr,w,c
  5529  00106A  26D9               	addwf	fsr2l,f,c
  5530  00106C  5033               	movf	_uc_ptr+1,w,c
  5531  00106E  22DA               	addwfc	fsr2h,f,c
  5532  001070  50DF               	movf	indf2,w,c
  5533  001072  ECD6  F00D         	call	_FromMainLow_recvmsg
  5534  001076                     L1:
  5535                           
  5536                           ;my_uart.c: 98: if (TXSTA1bits.TRMT == 1) {
  5537  001076  A2AD               	btfss	4013,1,c	;volatile
  5538  001078  D038               	goto	i1l2718
  5539                           
  5540                           ;my_uart.c: 99: if (uc_ptr->outbufind < uc_ptr->outbuflen) {
  5541  00107A  EE20 F00F          	lfsr	2,15
  5542  00107E  5032               	movf	_uc_ptr,w,c
  5543  001080  26D9               	addwf	fsr2l,f,c
  5544  001082  5033               	movf	_uc_ptr+1,w,c
  5545  001084  22DA               	addwfc	fsr2h,f,c
  5546  001086  50DF               	movf	indf2,w,c
  5547  001088  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5548  00108A  EE20 F00E          	lfsr	2,14
  5549  00108E  5032               	movf	_uc_ptr,w,c
  5550  001090  26D9               	addwf	fsr2l,f,c
  5551  001092  5033               	movf	_uc_ptr+1,w,c
  5552  001094  22DA               	addwfc	fsr2h,f,c
  5553  001096  50DF               	movf	indf2,w,c
  5554  001098  5C1E               	subwf	??_uart_trans_int_handler,w,c
  5555  00109A  B0D8               	btfsc	status,0,c
  5556  00109C  D01D               	goto	i1l2714
  5557                           
  5558                           ;my_uart.c: 100: uc_ptr->outbufind++;
  5559  00109E  EE20 F00F          	lfsr	2,15
  5560  0010A2  5032               	movf	_uc_ptr,w,c
  5561  0010A4  26D9               	addwf	fsr2l,f,c
  5562  0010A6  5033               	movf	_uc_ptr+1,w,c
  5563  0010A8  22DA               	addwfc	fsr2h,f,c
  5564  0010AA  2ADF               	incf	indf2,f,c
  5565                           
  5566                           ;my_uart.c: 101: TXREG1 = uc_ptr->outbuffer[uc_ptr->outbufind - 1];
  5567  0010AC  EE20 F00F          	lfsr	2,15
  5568  0010B0  5032               	movf	_uc_ptr,w,c
  5569  0010B2  26D9               	addwf	fsr2l,f,c
  5570  0010B4  5033               	movf	_uc_ptr+1,w,c
  5571  0010B6  22DA               	addwfc	fsr2h,f,c
  5572  0010B8  50DF               	movf	indf2,w,c
  5573  0010BA  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5574  0010BC  6A1F               	clrf	(??_uart_trans_int_handler+1)& (0+255),c
  5575  0010BE  0E07               	movlw	7
  5576  0010C0  261E               	addwf	??_uart_trans_int_handler,f,c
  5577  0010C2  0E00               	movlw	0
  5578  0010C4  221F               	addwfc	??_uart_trans_int_handler+1,f,c
  5579  0010C6  501E               	movf	??_uart_trans_int_handler,w,c
  5580  0010C8  2432               	addwf	_uc_ptr,w,c
  5581  0010CA  6ED9               	movwf	fsr2l,c
  5582  0010CC  501F               	movf	??_uart_trans_int_handler+1,w,c
  5583  0010CE  2033               	addwfc	_uc_ptr+1,w,c
  5584  0010D0  6EDA               	movwf	fsr2h,c
  5585  0010D2  50DF               	movf	indf2,w,c
  5586  0010D4  6EAE               	movwf	4014,c	;volatile
  5587                           
  5588                           ;my_uart.c: 102: } else {
  5589  0010D6  D009               	goto	i1l2718
  5590  0010D8                     i1l2714:
  5591                           
  5592                           ;my_uart.c: 103: uc_ptr->outbuflen = 0;
  5593  0010D8  EE20 F00E          	lfsr	2,14
  5594  0010DC  5032               	movf	_uc_ptr,w,c
  5595  0010DE  26D9               	addwf	fsr2l,f,c
  5596  0010E0  5033               	movf	_uc_ptr+1,w,c
  5597  0010E2  22DA               	addwfc	fsr2h,f,c
  5598  0010E4  0E00               	movlw	0
  5599  0010E6  6EDF               	movwf	indf2,c
  5600                           
  5601                           ;my_uart.c: 104: PIE1bits.TX1IE = 0;
  5602  0010E8  989D               	bcf	3997,4,c	;volatile
  5603  0010EA                     i1l2718:
  5604                           
  5605                           ;my_uart.c: 105: }
  5606                           ;my_uart.c: 106: }
  5607                           ;my_uart.c: 107: }
  5608                           ;my_uart.c: 108: { LATAbits.LATA2 = 0;};
  5609  0010EA  9489               	bcf	3977,2,c	;volatile
  5610  0010EC  0012               	return	
  5611  0010EE                     __end_of_uart_trans_int_handler:
  5612                           	opt stack 0
  5613                           pclatu	equ	0xFFB
  5614                           pclath	equ	0xFFA
  5615                           tblptru	equ	0xFF8
  5616                           tblptrh	equ	0xFF7
  5617                           tblptrl	equ	0xFF6
  5618                           tablat	equ	0xFF5
  5619                           prodh	equ	0xFF4
  5620                           prodl	equ	0xFF3
  5621                           intcon	equ	0xFF2
  5622                           intcon2	equ	0xFF1
  5623                           postinc0	equ	0xFEE
  5624                           fsr0h	equ	0xFEA
  5625                           fsr0l	equ	0xFE9
  5626                           wreg	equ	0xFE8
  5627                           indf1	equ	0xFE7
  5628                           fsr1h	equ	0xFE2
  5629                           fsr1l	equ	0xFE1
  5630                           bsr	equ	0xFE0
  5631                           indf2	equ	0xFDF
  5632                           postinc2	equ	0xFDE
  5633                           postdec2	equ	0xFDD
  5634                           fsr2h	equ	0xFDA
  5635                           fsr2l	equ	0xFD9
  5636                           status	equ	0xFD8
  5637                           
  5638 ;; *************** function _FromMainLow_recvmsg *****************
  5639 ;; Defined at:
  5640 ;;		line 207 in file "../src/messages.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;  maxlength       1    wreg     unsigned char 
  5643 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5644 ;;		 -> RAM(3775), 
  5645 ;;  data            2   26[COMRAM] PTR void 
  5646 ;;		 -> NULL(0), main@uc(18), 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  maxlength       1   28[COMRAM] unsigned char 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      char 
  5651 ;; Registers used:
  5652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5661 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5662 ;;Total ram usage:        5 bytes
  5663 ;; Hardware stack levels used:    1
  5664 ;; Hardware stack levels required when called:    7
  5665 ;; This function calls:
  5666 ;;		i1_recv_msg
  5667 ;; This function is called by:
  5668 ;;		_uart_trans_int_handler
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672                           	psect	text33
  5673  001BAC                     __ptext33:
  5674                           	opt stack 0
  5675  001BAC                     _FromMainLow_recvmsg:
  5676                           	opt stack 17
  5677                           
  5678                           ;incstack = 0
  5679                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5680  001BAC  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5681                           
  5682                           ;messages.c: 213: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5683                           ;	Return value of _FromMainLow_recvmsg is never used
  5684  001BAE  0103               	movlb	3	; () banked
  5685  001BB0  0E03               	movlw	high _FromMainLow_MQ
  5686  001BB2  6E0C               	movwf	i1recv_msg@qptr+1,c
  5687  001BB4  0103               	movlb	3	; () banked
  5688  001BB6  0E00               	movlw	low _FromMainLow_MQ
  5689  001BB8  6E0B               	movwf	i1recv_msg@qptr,c
  5690  001BBA  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5691  001BBE  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5692  001BC2  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5693  001BC6  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5694  001BCA  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5695  001BCE  ECEF  F006         	call	i1_recv_msg	;wreg free
  5696  001BD2  0012               	return	
  5697  001BD4                     __end_of_FromMainLow_recvmsg:
  5698                           	opt stack 0
  5699                           pclatu	equ	0xFFB
  5700                           pclath	equ	0xFFA
  5701                           tblptru	equ	0xFF8
  5702                           tblptrh	equ	0xFF7
  5703                           tblptrl	equ	0xFF6
  5704                           tablat	equ	0xFF5
  5705                           prodh	equ	0xFF4
  5706                           prodl	equ	0xFF3
  5707                           intcon	equ	0xFF2
  5708                           intcon2	equ	0xFF1
  5709                           postinc0	equ	0xFEE
  5710                           fsr0h	equ	0xFEA
  5711                           fsr0l	equ	0xFE9
  5712                           wreg	equ	0xFE8
  5713                           indf1	equ	0xFE7
  5714                           fsr1h	equ	0xFE2
  5715                           fsr1l	equ	0xFE1
  5716                           bsr	equ	0xFE0
  5717                           indf2	equ	0xFDF
  5718                           postinc2	equ	0xFDE
  5719                           postdec2	equ	0xFDD
  5720                           fsr2h	equ	0xFDA
  5721                           fsr2l	equ	0xFD9
  5722                           status	equ	0xFD8
  5723                           
  5724 ;; *************** function i1_recv_msg *****************
  5725 ;; Defined at:
  5726 ;;		line 63 in file "../src/messages.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5729 ;;		 -> FromMainHigh_MQ(118), FromMainLow_MQ(118), MotorData_MQ(118), SensorData_MQ(118), 
  5730 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  5731 ;;  maxlength       1   12[COMRAM] unsigned char 
  5732 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5733 ;;		 -> RAM(3775), main@msgtype(1), 
  5734 ;;  data            2   15[COMRAM] PTR void 
  5735 ;;		 -> NULL(0), main@msgbuffer(27), main@ic(64), main@uc(18), 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5738 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), ToMainHigh_MQ.queue(116), ToMainLow_MQ.queue(116), 
  5739 ;;		 -> SensorData_MQ.queue(116), MotorData_MQ.queue(116), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  5740 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  5741 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5742 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      char 
  5745 ;; Registers used:
  5746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5752 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5753 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5754 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5755 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5756 ;;Total ram usage:       14 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:    6
  5759 ;; This function calls:
  5760 ;;		i1_memcpy
  5761 ;; This function is called by:
  5762 ;;		_FromMainLow_recvmsg
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text34
  5767  000DDE                     __ptext34:
  5768                           	opt stack 0
  5769  000DDE                     i1_recv_msg:
  5770                           	opt stack 17
  5771                           
  5772                           ;messages.c: 64: unsigned char slot;
  5773                           ;messages.c: 68: msg *qmsg;
  5774                           ;messages.c: 69: size_t tlength;
  5775                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5776                           
  5777                           ;incstack = 0
  5778  000DDE  EE20 F075          	lfsr	2,117
  5779  000DE2  500B               	movf	i1recv_msg@qptr,w,c
  5780  000DE4  26D9               	addwf	fsr2l,f,c
  5781  000DE6  500C               	movf	i1recv_msg@qptr+1,w,c
  5782  000DE8  22DA               	addwfc	fsr2h,f,c
  5783  000DEA  50DF               	movf	indf2,w,c
  5784  000DEC  6E14               	movwf	i1recv_msg@slot,c
  5785                           
  5786                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5787  000DEE  5014               	movf	i1recv_msg@slot,w,c
  5788  000DF0  0D1D               	mullw	29
  5789  000DF2  50F3               	movf	prodl,w,c
  5790  000DF4  240B               	addwf	i1recv_msg@qptr,w,c
  5791  000DF6  6E17               	movwf	i1recv_msg@qmsg,c
  5792  000DF8  50F4               	movf	prodh,w,c
  5793  000DFA  200C               	addwfc	i1recv_msg@qptr+1,w,c
  5794  000DFC  6E18               	movwf	i1recv_msg@qmsg+1,c
  5795                           
  5796                           ;messages.c: 74: if (qmsg->full == 1) {
  5797  000DFE  0E01               	movlw	1
  5798  000E00  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5799  000E04  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5800  000E08  62DF               	cpfseq	indf2,c
  5801  000E0A  D050               	goto	i1l2316
  5802                           
  5803                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5804  000E0C  EE20 F001          	lfsr	2,1
  5805  000E10  5017               	movf	i1recv_msg@qmsg,w,c
  5806  000E12  26D9               	addwf	fsr2l,f,c
  5807  000E14  5018               	movf	i1recv_msg@qmsg+1,w,c
  5808  000E16  22DA               	addwfc	fsr2h,f,c
  5809  000E18  50DF               	movf	indf2,w,c
  5810  000E1A  5C0D               	subwf	i1recv_msg@maxlength,w,c
  5811  000E1C  B0D8               	btfsc	status,0,c
  5812  000E1E  D002               	goto	i1l2300
  5813                           
  5814                           ;messages.c: 77: return (-3);
  5815  000E20  0EFD               	movlw	253
  5816  000E22  0012               	return	
  5817  000E24                     i1l2300:
  5818                           
  5819                           ;messages.c: 78: }
  5820                           ;messages.c: 80: tlength = qmsg->length;
  5821  000E24  EE20 F001          	lfsr	2,1
  5822  000E28  5017               	movf	i1recv_msg@qmsg,w,c
  5823  000E2A  26D9               	addwf	fsr2l,f,c
  5824  000E2C  5018               	movf	i1recv_msg@qmsg+1,w,c
  5825  000E2E  22DA               	addwfc	fsr2h,f,c
  5826  000E30  50DF               	movf	indf2,w,c
  5827  000E32  6E12               	movwf	??i1_recv_msg& (0+255),c
  5828  000E34  5012               	movf	??i1_recv_msg,w,c
  5829  000E36  6E15               	movwf	i1recv_msg@tlength,c
  5830  000E38  6A16               	clrf	i1recv_msg@tlength+1,c
  5831                           
  5832                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5833  000E3A  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5834  000E3E  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5835  000E42  0E03               	movlw	3
  5836  000E44  2417               	addwf	i1recv_msg@qmsg,w,c
  5837  000E46  6E12               	movwf	??i1_recv_msg& (0+255),c
  5838  000E48  0E00               	movlw	0
  5839  000E4A  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5840  000E4C  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5841  000E4E  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5842  000E52  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5843  000E56  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5844  000E5A  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5845  000E5E  EC44  F00C         	call	i1_memcpy	;wreg free
  5846                           
  5847                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5848  000E62  EE20 F075          	lfsr	2,117
  5849  000E66  500B               	movf	i1recv_msg@qptr,w,c
  5850  000E68  26D9               	addwf	fsr2l,f,c
  5851  000E6A  500C               	movf	i1recv_msg@qptr+1,w,c
  5852  000E6C  22DA               	addwfc	fsr2h,f,c
  5853  000E6E  EE10 F075          	lfsr	1,117
  5854  000E72  500B               	movf	i1recv_msg@qptr,w,c
  5855  000E74  26E1               	addwf	fsr1l,f,c
  5856  000E76  500C               	movf	i1recv_msg@qptr+1,w,c
  5857  000E78  22E2               	addwfc	fsr1h,f,c
  5858  000E7A  50E7               	movf	indf1,w,c
  5859  000E7C  6E12               	movwf	??i1_recv_msg& (0+255),c
  5860  000E7E  2812               	incf	??i1_recv_msg,w,c
  5861  000E80  0B03               	andlw	3
  5862  000E82  6EDF               	movwf	indf2,c
  5863                           
  5864                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5865  000E84  EE20 F002          	lfsr	2,2
  5866  000E88  5017               	movf	i1recv_msg@qmsg,w,c
  5867  000E8A  26D9               	addwf	fsr2l,f,c
  5868  000E8C  5018               	movf	i1recv_msg@qmsg+1,w,c
  5869  000E8E  22DA               	addwfc	fsr2h,f,c
  5870  000E90  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5871  000E94  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5872  000E98  CFDF FFE7          	movff	indf2,indf1
  5873                           
  5874                           ;messages.c: 91: qmsg->full = 0;
  5875  000E9C  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5876  000EA0  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5877  000EA4  0E00               	movlw	0
  5878  000EA6  6EDF               	movwf	indf2,c
  5879                           
  5880                           ;messages.c: 92: return (tlength);
  5881  000EA8  5015               	movf	i1recv_msg@tlength,w,c
  5882  000EAA  0012               	return	
  5883  000EAC                     i1l2316:
  5884                           
  5885                           ;messages.c: 94: return (-4);
  5886  000EAC  0EFC               	movlw	252
  5887  000EAE  0012               	return	
  5888  000EB0                     __end_ofi1_recv_msg:
  5889                           	opt stack 0
  5890                           pclatu	equ	0xFFB
  5891                           pclath	equ	0xFFA
  5892                           tblptru	equ	0xFF8
  5893                           tblptrh	equ	0xFF7
  5894                           tblptrl	equ	0xFF6
  5895                           tablat	equ	0xFF5
  5896                           prodh	equ	0xFF4
  5897                           prodl	equ	0xFF3
  5898                           intcon	equ	0xFF2
  5899                           intcon2	equ	0xFF1
  5900                           postinc0	equ	0xFEE
  5901                           fsr0h	equ	0xFEA
  5902                           fsr0l	equ	0xFE9
  5903                           wreg	equ	0xFE8
  5904                           indf1	equ	0xFE7
  5905                           fsr1h	equ	0xFE2
  5906                           fsr1l	equ	0xFE1
  5907                           bsr	equ	0xFE0
  5908                           indf2	equ	0xFDF
  5909                           postinc2	equ	0xFDE
  5910                           postdec2	equ	0xFDD
  5911                           fsr2h	equ	0xFDA
  5912                           fsr2l	equ	0xFD9
  5913                           status	equ	0xFD8
  5914                           
  5915 ;; *************** function _uart_recv_int_handler *****************
  5916 ;; Defined at:
  5917 ;;		line 13 in file "../src/my_uart.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;		None
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  readin          1   31[COMRAM] unsigned char [1]
  5922 ;;  reverse         1   30[COMRAM] unsigned char [1]
  5923 ;;  stop            1   29[COMRAM] unsigned char [1]
  5924 ;;  right           1   28[COMRAM] unsigned char [1]
  5925 ;;  left            1   27[COMRAM] unsigned char [1]
  5926 ;;  forward         1   26[COMRAM] unsigned char [1]
  5927 ;;  length          1    0        unsigned char 
  5928 ;;  error_msg       1    0        unsigned char 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;		None               void
  5931 ;; Registers used:
  5932 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5939 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5941 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5942 ;;Total ram usage:        6 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; Hardware stack levels required when called:    8
  5945 ;; This function calls:
  5946 ;;		_Read1USART
  5947 ;;		_ToMainLow_sendmsg
  5948 ;; This function is called by:
  5949 ;;		_InterruptHandlerLow
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           	psect	text35
  5954  001754                     __ptext35:
  5955                           	opt stack 0
  5956  001754                     _uart_recv_int_handler:
  5957                           	opt stack 17
  5958                           
  5959                           ;my_uart.c: 14: { LATAbits.LATA3 = 1;};
  5960                           
  5961                           ;incstack = 0
  5962  001754  8689               	bsf	3977,3,c	;volatile
  5963                           
  5964                           ;my_uart.c: 15: unsigned char error_msg;
  5965                           ;my_uart.c: 16: if ((PIR1bits.RC1IF)) {
  5966  001756  AA9E               	btfss	3998,5,c	;volatile
  5967  001758  D018               	goto	i1l2684
  5968                           
  5969                           ;my_uart.c: 17: { LATAbits.LATA2 = 1;};
  5970  00175A  8489               	bsf	3977,2,c	;volatile
  5971                           
  5972                           ;my_uart.c: 28: unsigned char length, forward[1], left[1], right[1], stop[1], reverse[1]
      +                          , readin[1];
  5973                           ;my_uart.c: 29: forward[0] = 0x0A;
  5974  00175C  0E0A               	movlw	10
  5975  00175E  6E1B               	movwf	uart_recv_int_handler@forward,c
  5976                           
  5977                           ;my_uart.c: 30: left[0] = 0x0B;
  5978  001760  0E0B               	movlw	11
  5979  001762  6E1C               	movwf	uart_recv_int_handler@left,c
  5980                           
  5981                           ;my_uart.c: 31: right[0] = 0x0C;
  5982  001764  0E0C               	movlw	12
  5983  001766  6E1D               	movwf	uart_recv_int_handler@right,c
  5984                           
  5985                           ;my_uart.c: 32: stop[0] = 0x0D;
  5986  001768  0E0D               	movlw	13
  5987  00176A  6E1E               	movwf	uart_recv_int_handler@stop,c
  5988                           
  5989                           ;my_uart.c: 33: reverse[0] = 0x0E;
  5990  00176C  0E0E               	movlw	14
  5991  00176E  6E1F               	movwf	uart_recv_int_handler@reverse,c
  5992                           
  5993                           ;my_uart.c: 34: readin[0] = Read1USART();
  5994  001770  EC0F  F00E         	call	_Read1USART	;wreg free
  5995  001774  6E20               	movwf	uart_recv_int_handler@readin,c
  5996                           
  5997                           ;my_uart.c: 38: ToMainLow_sendmsg(1, 31, readin);
  5998  001776  0E1F               	movlw	31
  5999  001778  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6000  00177A  0E00               	movlw	high uart_recv_int_handler@readin
  6001  00177C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6002  00177E  0E20               	movlw	low uart_recv_int_handler@readin
  6003  001780  6E18               	movwf	ToMainLow_sendmsg@data,c
  6004  001782  0E01               	movlw	1
  6005  001784  ECFD  F00D         	call	_ToMainLow_sendmsg
  6006                           
  6007                           ;my_uart.c: 39: { LATAbits.LATA2 = 0;};
  6008  001788  9489               	bcf	3977,2,c	;volatile
  6009  00178A                     i1l2684:
  6010                           
  6011                           ;my_uart.c: 71: }
  6012                           ;my_uart.c: 73: if (USART1_Status.OVERRUN_ERROR == 1) {
  6013  00178A  A634               	btfss	_USART1_Status,3,c
  6014  00178C  D00B               	goto	i1l2690
  6015                           
  6016                           ;my_uart.c: 76: RCSTAbits.CREN = 0;
  6017  00178E  98AC               	bcf	4012,4,c	;volatile
  6018                           
  6019                           ;my_uart.c: 77: RCSTAbits.CREN = 1;
  6020  001790  88AC               	bsf	4012,4,c	;volatile
  6021                           
  6022                           ;my_uart.c: 78: ToMainLow_sendmsg(0, 30, (void *) 0);
  6023  001792  0E1E               	movlw	30
  6024  001794  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6025  001796  0E00               	movlw	0
  6026  001798  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6027  00179A  0E00               	movlw	0
  6028  00179C  6E18               	movwf	ToMainLow_sendmsg@data,c
  6029  00179E  0E00               	movlw	0
  6030  0017A0  ECFD  F00D         	call	_ToMainLow_sendmsg
  6031  0017A4                     i1l2690:
  6032                           
  6033                           ;my_uart.c: 79: }
  6034                           ;my_uart.c: 80: { LATAbits.LATA3 = 0;};
  6035  0017A4  9689               	bcf	3977,3,c	;volatile
  6036  0017A6  0012               	return	
  6037  0017A8                     __end_of_uart_recv_int_handler:
  6038                           	opt stack 0
  6039                           pclatu	equ	0xFFB
  6040                           pclath	equ	0xFFA
  6041                           tblptru	equ	0xFF8
  6042                           tblptrh	equ	0xFF7
  6043                           tblptrl	equ	0xFF6
  6044                           tablat	equ	0xFF5
  6045                           prodh	equ	0xFF4
  6046                           prodl	equ	0xFF3
  6047                           intcon	equ	0xFF2
  6048                           intcon2	equ	0xFF1
  6049                           postinc0	equ	0xFEE
  6050                           fsr0h	equ	0xFEA
  6051                           fsr0l	equ	0xFE9
  6052                           wreg	equ	0xFE8
  6053                           indf1	equ	0xFE7
  6054                           fsr1h	equ	0xFE2
  6055                           fsr1l	equ	0xFE1
  6056                           bsr	equ	0xFE0
  6057                           indf2	equ	0xFDF
  6058                           postinc2	equ	0xFDE
  6059                           postdec2	equ	0xFDD
  6060                           fsr2h	equ	0xFDA
  6061                           fsr2l	equ	0xFD9
  6062                           status	equ	0xFD8
  6063                           
  6064 ;; *************** function _ToMainLow_sendmsg *****************
  6065 ;; Defined at:
  6066 ;;		line 103 in file "../src/messages.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  length          1    wreg     unsigned char 
  6069 ;;  msgtype         1   22[COMRAM] unsigned char 
  6070 ;;  data            2   23[COMRAM] PTR void 
  6071 ;;		 -> uart_recv_int_handler@readin(1), NULL(0), 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  length          1   25[COMRAM] unsigned char 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      char 
  6076 ;; Registers used:
  6077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6083 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6087 ;;Total ram usage:        4 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    7
  6090 ;; This function calls:
  6091 ;;		i1_send_msg
  6092 ;; This function is called by:
  6093 ;;		_uart_recv_int_handler
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text36
  6098  001BFA                     __ptext36:
  6099                           	opt stack 0
  6100  001BFA                     _ToMainLow_sendmsg:
  6101                           	opt stack 17
  6102                           
  6103                           ;incstack = 0
  6104                           ;ToMainLow_sendmsg@length stored from wreg
  6105  001BFA  6E1A               	movwf	ToMainLow_sendmsg@length,c
  6106                           
  6107                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6108                           ;	Return value of _ToMainLow_sendmsg is never used
  6109  001BFC  0101               	movlb	1	; () banked
  6110  001BFE  0E01               	movlw	high _ToMainLow_MQ
  6111  001C00  6E0C               	movwf	i1send_msg@qptr+1,c
  6112  001C02  0101               	movlb	1	; () banked
  6113  001C04  0E81               	movlw	low _ToMainLow_MQ
  6114  001C06  6E0B               	movwf	i1send_msg@qptr,c
  6115  001C08  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6116  001C0C  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6117  001C10  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6118  001C14  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6119  001C18  EC77  F008         	call	i1_send_msg	;wreg free
  6120  001C1C  0012               	return	
  6121  001C1E                     __end_of_ToMainLow_sendmsg:
  6122                           	opt stack 0
  6123                           pclatu	equ	0xFFB
  6124                           pclath	equ	0xFFA
  6125                           tblptru	equ	0xFF8
  6126                           tblptrh	equ	0xFF7
  6127                           tblptrl	equ	0xFF6
  6128                           tablat	equ	0xFF5
  6129                           prodh	equ	0xFF4
  6130                           prodl	equ	0xFF3
  6131                           intcon	equ	0xFF2
  6132                           intcon2	equ	0xFF1
  6133                           postinc0	equ	0xFEE
  6134                           fsr0h	equ	0xFEA
  6135                           fsr0l	equ	0xFE9
  6136                           wreg	equ	0xFE8
  6137                           indf1	equ	0xFE7
  6138                           fsr1h	equ	0xFE2
  6139                           fsr1l	equ	0xFE1
  6140                           bsr	equ	0xFE0
  6141                           indf2	equ	0xFDF
  6142                           postinc2	equ	0xFDE
  6143                           postdec2	equ	0xFDD
  6144                           fsr2h	equ	0xFDA
  6145                           fsr2l	equ	0xFD9
  6146                           status	equ	0xFD8
  6147                           
  6148 ;; *************** function i1_send_msg *****************
  6149 ;; Defined at:
  6150 ;;		line 24 in file "../src/messages.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6153 ;;		 -> FromMainHigh_MQ(118), FromMainLow_MQ(118), MotorData_MQ(118), SensorData_MQ(118), 
  6154 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  6155 ;;  length          1   12[COMRAM] unsigned char 
  6156 ;;  msgtype         1   13[COMRAM] unsigned char 
  6157 ;;  data            2   14[COMRAM] PTR void 
  6158 ;;		 -> uart_recv_int_handler@readin(1), NULL(0), main@msgbuffer(27), main@t1thread_data(2), 
  6159 ;;		 -> main@ic(64), 
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6162 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), ToMainHigh_MQ.queue(116), ToMainLow_MQ.queue(116), 
  6163 ;;		 -> SensorData_MQ.queue(116), MotorData_MQ.queue(116), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  6164 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  6165 ;;  send_msg        2   17[COMRAM] unsigned int 
  6166 ;;  send_msg        1   19[COMRAM] unsigned char 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      char 
  6169 ;; Registers used:
  6170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6176 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6177 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6179 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6180 ;;Total ram usage:       12 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    6
  6183 ;; This function calls:
  6184 ;;		i1_memcpy
  6185 ;; This function is called by:
  6186 ;;		_ToMainLow_sendmsg
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text37
  6191  0010EE                     __ptext37:
  6192                           	opt stack 0
  6193  0010EE                     i1_send_msg:
  6194                           	opt stack 17
  6195                           
  6196                           ;messages.c: 25: unsigned char slot;
  6197                           ;messages.c: 27: msg *qmsg;
  6198                           ;messages.c: 28: size_t tlength = length;
  6199                           
  6200                           ;incstack = 0
  6201  0010EE  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6202  0010F2  6A13               	clrf	i1send_msg@tlength+1,c
  6203                           
  6204                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6205  0010F4  EE20 F074          	lfsr	2,116
  6206  0010F8  500B               	movf	i1send_msg@qptr,w,c
  6207  0010FA  26D9               	addwf	fsr2l,f,c
  6208  0010FC  500C               	movf	i1send_msg@qptr+1,w,c
  6209  0010FE  22DA               	addwfc	fsr2h,f,c
  6210  001100  50DF               	movf	indf2,w,c
  6211  001102  6E14               	movwf	i1send_msg@slot,c
  6212                           
  6213                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6214  001104  5014               	movf	i1send_msg@slot,w,c
  6215  001106  0D1D               	mullw	29
  6216  001108  50F3               	movf	prodl,w,c
  6217  00110A  240B               	addwf	i1send_msg@qptr,w,c
  6218  00110C  6E15               	movwf	i1send_msg@qmsg,c
  6219  00110E  50F4               	movf	prodh,w,c
  6220  001110  200C               	addwfc	i1send_msg@qptr+1,w,c
  6221  001112  6E16               	movwf	i1send_msg@qmsg+1,c
  6222                           
  6223                           ;messages.c: 41: if (qmsg->full != 0) {
  6224  001114  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6225  001118  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6226  00111C  50DF               	movf	indf2,w,c
  6227  00111E  B4D8               	btfsc	status,2,c
  6228  001120  D002               	goto	i1l2252
  6229                           
  6230                           ;messages.c: 42: return (-1);
  6231  001122  0EFF               	movlw	255
  6232  001124  0012               	return	
  6233  001126                     i1l2252:
  6234                           
  6235                           ;messages.c: 43: }
  6236                           ;messages.c: 46: qmsg->length = length;
  6237  001126  EE20 F001          	lfsr	2,1
  6238  00112A  5015               	movf	i1send_msg@qmsg,w,c
  6239  00112C  26D9               	addwf	fsr2l,f,c
  6240  00112E  5016               	movf	i1send_msg@qmsg+1,w,c
  6241  001130  22DA               	addwfc	fsr2h,f,c
  6242  001132  C00D  FFDF         	movff	i1send_msg@length,indf2
  6243                           
  6244                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6245  001136  EE20 F002          	lfsr	2,2
  6246  00113A  5015               	movf	i1send_msg@qmsg,w,c
  6247  00113C  26D9               	addwf	fsr2l,f,c
  6248  00113E  5016               	movf	i1send_msg@qmsg+1,w,c
  6249  001140  22DA               	addwfc	fsr2h,f,c
  6250  001142  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6251                           
  6252                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6253  001146  0E03               	movlw	3
  6254  001148  2415               	addwf	i1send_msg@qmsg,w,c
  6255  00114A  6E01               	movwf	i1memcpy@d1,c
  6256  00114C  0E00               	movlw	0
  6257  00114E  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6258  001150  6E02               	movwf	i1memcpy@d1+1,c
  6259  001152  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6260  001156  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6261  00115A  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6262  00115E  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6263  001162  EC44  F00C         	call	i1_memcpy	;wreg free
  6264                           
  6265                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6266  001166  EE20 F074          	lfsr	2,116
  6267  00116A  500B               	movf	i1send_msg@qptr,w,c
  6268  00116C  26D9               	addwf	fsr2l,f,c
  6269  00116E  500C               	movf	i1send_msg@qptr+1,w,c
  6270  001170  22DA               	addwfc	fsr2h,f,c
  6271  001172  EE10 F074          	lfsr	1,116
  6272  001176  500B               	movf	i1send_msg@qptr,w,c
  6273  001178  26E1               	addwf	fsr1l,f,c
  6274  00117A  500C               	movf	i1send_msg@qptr+1,w,c
  6275  00117C  22E2               	addwfc	fsr1h,f,c
  6276  00117E  50E7               	movf	indf1,w,c
  6277  001180  6E11               	movwf	??i1_send_msg& (0+255),c
  6278  001182  2811               	incf	??i1_send_msg,w,c
  6279  001184  0B03               	andlw	3
  6280  001186  6EDF               	movwf	indf2,c
  6281                           
  6282                           ;messages.c: 59: qmsg->full = 1;
  6283  001188  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6284  00118C  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6285  001190  0E01               	movlw	1
  6286  001192  6EDF               	movwf	indf2,c
  6287                           
  6288                           ;messages.c: 60: return (1);
  6289  001194  0E01               	movlw	1
  6290  001196  0012               	return	
  6291  001198                     __end_ofi1_send_msg:
  6292                           	opt stack 0
  6293                           pclatu	equ	0xFFB
  6294                           pclath	equ	0xFFA
  6295                           tblptru	equ	0xFF8
  6296                           tblptrh	equ	0xFF7
  6297                           tblptrl	equ	0xFF6
  6298                           tablat	equ	0xFF5
  6299                           prodh	equ	0xFF4
  6300                           prodl	equ	0xFF3
  6301                           intcon	equ	0xFF2
  6302                           intcon2	equ	0xFF1
  6303                           postinc0	equ	0xFEE
  6304                           fsr0h	equ	0xFEA
  6305                           fsr0l	equ	0xFE9
  6306                           wreg	equ	0xFE8
  6307                           indf1	equ	0xFE7
  6308                           fsr1h	equ	0xFE2
  6309                           fsr1l	equ	0xFE1
  6310                           bsr	equ	0xFE0
  6311                           indf2	equ	0xFDF
  6312                           postinc2	equ	0xFDE
  6313                           postdec2	equ	0xFDD
  6314                           fsr2h	equ	0xFDA
  6315                           fsr2l	equ	0xFD9
  6316                           status	equ	0xFD8
  6317                           
  6318 ;; *************** function i1_memcpy *****************
  6319 ;; Defined at:
  6320 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  d1              2    0[COMRAM] PTR void 
  6323 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), ToMainHigh_MQ.queue(116), ToMainLow_MQ.queue(116), 
  6324 ;;		 -> SensorData_MQ.queue(116), MotorData_MQ.queue(116), NULL(0), FromMainHigh_MQ(118), 
  6325 ;;		 -> FromMainLow_MQ(118), MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), 
  6326 ;;		 -> ToMainLow_MQ(118), main@msgbuffer(27), main@ic(64), main@uc(18), 
  6327 ;;  s1              2    2[COMRAM] PTR const void 
  6328 ;;		 -> ToMainLow_MQ.data(26), ToMainHigh_MQ.data(26), SensorData_MQ.data(26), MotorData_MQ.data(26), 
  6329 ;;		 -> FromMainLow_MQ.data(26), FromMainHigh_MQ.data(26), MotorData_MQ.queue.data(26), SensorData_MQ.queue.data(26), 
  6330 ;;		 -> ToMainLow_MQ.queue.data(26), ToMainHigh_MQ.queue.data(26), FromMainHigh_MQ.queue.data(26), FromMainLow_MQ.queue.
      +data(26), 
  6331 ;;		 -> uart_recv_int_handler@readin(1), NULL(0), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  6332 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  6333 ;;		 -> main@msgbuffer(27), main@t1thread_data(2), main@ic(64), 
  6334 ;;  n               2    4[COMRAM] unsigned int 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6337 ;;		 -> ToMainLow_MQ.data(26), ToMainHigh_MQ.data(26), SensorData_MQ.data(26), MotorData_MQ.data(26), 
  6338 ;;		 -> FromMainLow_MQ.data(26), FromMainHigh_MQ.data(26), MotorData_MQ.queue.data(26), SensorData_MQ.queue.data(26), 
  6339 ;;		 -> ToMainLow_MQ.queue.data(26), ToMainHigh_MQ.queue.data(26), FromMainHigh_MQ.queue.data(26), FromMainLow_MQ.queue.
      +data(26), 
  6340 ;;		 -> uart_recv_int_handler@readin(1), NULL(0), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  6341 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  6342 ;;		 -> main@msgbuffer(27), main@t1thread_data(2), main@ic(64), 
  6343 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6344 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), ToMainHigh_MQ.queue(116), ToMainLow_MQ.queue(116), 
  6345 ;;		 -> SensorData_MQ.queue(116), MotorData_MQ.queue(116), NULL(0), FromMainHigh_MQ(118), 
  6346 ;;		 -> FromMainLow_MQ(118), MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), 
  6347 ;;		 -> ToMainLow_MQ(118), main@msgbuffer(27), main@ic(64), main@uc(18), 
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  2    0[COMRAM] PTR void 
  6350 ;; Registers used:
  6351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6357 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6358 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6360 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6361 ;;Total ram usage:       10 bytes
  6362 ;; Hardware stack levels used:    1
  6363 ;; Hardware stack levels required when called:    5
  6364 ;; This function calls:
  6365 ;;		Nothing
  6366 ;; This function is called by:
  6367 ;;		i1_send_msg
  6368 ;;		i1_recv_msg
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text38
  6373  001888                     __ptext38:
  6374                           	opt stack 0
  6375  001888                     i1_memcpy:
  6376                           	opt stack 17
  6377                           
  6378                           ;incstack = 0
  6379  001888  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6380  00188C  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6381  001890  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6382  001894  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6383  001898  D00E               	goto	i1l2180
  6384  00189A                     i1l2174:
  6385  00189A  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6386  00189E  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6387  0018A2  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6388  0018A6  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6389  0018AA  CFDF FFE7          	movff	indf2,indf1
  6390  0018AE  4A09               	infsnz	i1memcpy@s,f,c
  6391  0018B0  2A0A               	incf	i1memcpy@s+1,f,c
  6392  0018B2  4A07               	infsnz	i1memcpy@d,f,c
  6393  0018B4  2A08               	incf	i1memcpy@d+1,f,c
  6394  0018B6                     i1l2180:
  6395  0018B6  0605               	decf	i1memcpy@n,f,c
  6396  0018B8  A0D8               	btfss	status,0,c
  6397  0018BA  0606               	decf	i1memcpy@n+1,f,c
  6398  0018BC  2805               	incf	i1memcpy@n& (0+255),w,c
  6399  0018BE  B4D8               	btfsc	status,2,c
  6400  0018C0  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6401  0018C2  B4D8               	btfsc	status,2,c
  6402                           
  6403                           ;	Return value of i1_memcpy is never used
  6404  0018C4  0012               	return	
  6405  0018C6  D7E9               	goto	i1l2174
  6406  0018C8                     __end_ofi1_memcpy:
  6407                           	opt stack 0
  6408                           pclatu	equ	0xFFB
  6409                           pclath	equ	0xFFA
  6410                           tblptru	equ	0xFF8
  6411                           tblptrh	equ	0xFF7
  6412                           tblptrl	equ	0xFF6
  6413                           tablat	equ	0xFF5
  6414                           prodh	equ	0xFF4
  6415                           prodl	equ	0xFF3
  6416                           intcon	equ	0xFF2
  6417                           intcon2	equ	0xFF1
  6418                           postinc0	equ	0xFEE
  6419                           fsr0h	equ	0xFEA
  6420                           fsr0l	equ	0xFE9
  6421                           wreg	equ	0xFE8
  6422                           indf1	equ	0xFE7
  6423                           fsr1h	equ	0xFE2
  6424                           fsr1l	equ	0xFE1
  6425                           bsr	equ	0xFE0
  6426                           indf2	equ	0xFDF
  6427                           postinc2	equ	0xFDE
  6428                           postdec2	equ	0xFDD
  6429                           fsr2h	equ	0xFDA
  6430                           fsr2l	equ	0xFD9
  6431                           status	equ	0xFD8
  6432                           
  6433 ;; *************** function _Read1USART *****************
  6434 ;; Defined at:
  6435 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\u1read.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;  data            1    0[COMRAM] unsigned char 
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1    wreg      unsigned char 
  6442 ;; Registers used:
  6443 ;;		wreg, status,2, status,0
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6450 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6453 ;;Total ram usage:        1 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    5
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_uart_recv_int_handler
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text39
  6464  001C1E                     __ptext39:
  6465                           	opt stack 0
  6466  001C1E                     _Read1USART:
  6467                           	opt stack 19
  6468                           
  6469                           ;incstack = 0
  6470  001C1E  0EF2               	movlw	242
  6471  001C20  1634               	andwf	_USART1_Status,f,c
  6472  001C22  ACAC               	btfss	4012,6,c	;volatile
  6473  001C24  D003               	goto	i1l519
  6474  001C26  9034               	bcf	_USART1_Status,0,c
  6475  001C28  B0AC               	btfsc	4012,0,c	;volatile
  6476  001C2A  8034               	bsf	_USART1_Status,0,c
  6477  001C2C                     i1l519:
  6478  001C2C  B4AC               	btfsc	4012,2,c	;volatile
  6479  001C2E  8434               	bsf	_USART1_Status,2,c
  6480  001C30  B2AC               	btfsc	4012,1,c	;volatile
  6481  001C32  8634               	bsf	_USART1_Status,3,c
  6482  001C34  CFAF F001          	movff	4015,Read1USART@data	;volatile
  6483  001C38  5001               	movf	Read1USART@data,w,c
  6484  001C3A  0012               	return	
  6485  001C3C                     __end_of_Read1USART:
  6486                           	opt stack 0
  6487                           pclatu	equ	0xFFB
  6488                           pclath	equ	0xFFA
  6489                           tblptru	equ	0xFF8
  6490                           tblptrh	equ	0xFF7
  6491                           tblptrl	equ	0xFF6
  6492                           tablat	equ	0xFF5
  6493                           prodh	equ	0xFF4
  6494                           prodl	equ	0xFF3
  6495                           intcon	equ	0xFF2
  6496                           intcon2	equ	0xFF1
  6497                           postinc0	equ	0xFEE
  6498                           fsr0h	equ	0xFEA
  6499                           fsr0l	equ	0xFE9
  6500                           wreg	equ	0xFE8
  6501                           indf1	equ	0xFE7
  6502                           fsr1h	equ	0xFE2
  6503                           fsr1l	equ	0xFE1
  6504                           bsr	equ	0xFE0
  6505                           indf2	equ	0xFDF
  6506                           postinc2	equ	0xFDE
  6507                           postdec2	equ	0xFDD
  6508                           fsr2h	equ	0xFDA
  6509                           fsr2l	equ	0xFD9
  6510                           status	equ	0xFD8
  6511                           
  6512 ;; *************** function _timer1_int_handler *****************
  6513 ;; Defined at:
  6514 ;;		line 75 in file "../src/user_interrupts.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;  result          2    4[COMRAM] unsigned int 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;		None               void
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6532 ;;Total ram usage:        2 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    6
  6535 ;; This function calls:
  6536 ;;		_ReadTimer1
  6537 ;;		_WriteTimer1
  6538 ;; This function is called by:
  6539 ;;		_InterruptHandlerLow
  6540 ;; This function uses a non-reentrant model
  6541 ;;
  6542                           
  6543                           	psect	text40
  6544  001C5A                     __ptext40:
  6545                           	opt stack 0
  6546  001C5A                     _timer1_int_handler:
  6547                           	opt stack 19
  6548                           
  6549                           ;user_interrupts.c: 76: unsigned int result;
  6550                           ;user_interrupts.c: 86: result = ReadTimer1();
  6551                           
  6552                           ;incstack = 0
  6553  001C5A  EC56  F00E         	call	_ReadTimer1	;wreg free
  6554  001C5E  C001  F005         	movff	?_ReadTimer1,timer1_int_handler@result
  6555  001C62  C002  F006         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  6556                           
  6557                           ;user_interrupts.c: 121: WriteTimer1(0);
  6558  001C66  0E00               	movlw	0
  6559  001C68  6E02               	movwf	WriteTimer1@timer1+1,c
  6560  001C6A  0E00               	movlw	0
  6561  001C6C  6E01               	movwf	WriteTimer1@timer1,c
  6562  001C6E  EC4D  F00E         	call	_WriteTimer1	;wreg free
  6563  001C72  0012               	return	
  6564  001C74                     __end_of_timer1_int_handler:
  6565                           	opt stack 0
  6566                           pclatu	equ	0xFFB
  6567                           pclath	equ	0xFFA
  6568                           tblptru	equ	0xFF8
  6569                           tblptrh	equ	0xFF7
  6570                           tblptrl	equ	0xFF6
  6571                           tablat	equ	0xFF5
  6572                           prodh	equ	0xFF4
  6573                           prodl	equ	0xFF3
  6574                           intcon	equ	0xFF2
  6575                           intcon2	equ	0xFF1
  6576                           postinc0	equ	0xFEE
  6577                           fsr0h	equ	0xFEA
  6578                           fsr0l	equ	0xFE9
  6579                           wreg	equ	0xFE8
  6580                           indf1	equ	0xFE7
  6581                           fsr1h	equ	0xFE2
  6582                           fsr1l	equ	0xFE1
  6583                           bsr	equ	0xFE0
  6584                           indf2	equ	0xFDF
  6585                           postinc2	equ	0xFDE
  6586                           postdec2	equ	0xFDD
  6587                           fsr2h	equ	0xFDA
  6588                           fsr2l	equ	0xFD9
  6589                           status	equ	0xFD8
  6590                           
  6591 ;; *************** function _WriteTimer1 *****************
  6592 ;; Defined at:
  6593 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t1write.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  timer1          2    0[COMRAM] unsigned int 
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  timer           2    2[COMRAM] struct Timers
  6598 ;; Return value:  Size  Location     Type
  6599 ;;		None               void
  6600 ;; Registers used:
  6601 ;;		None
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6611 ;;Total ram usage:        4 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; Hardware stack levels required when called:    5
  6614 ;; This function calls:
  6615 ;;		Nothing
  6616 ;; This function is called by:
  6617 ;;		_timer1_int_handler
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           	psect	text41
  6622  001C9A                     __ptext41:
  6623                           	opt stack 0
  6624  001C9A                     _WriteTimer1:
  6625                           	opt stack 19
  6626                           
  6627                           ;incstack = 0
  6628  001C9A  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6629  001C9E  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6630  001CA2  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6631  001CA6  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6632  001CAA  0012               	return	
  6633  001CAC                     __end_of_WriteTimer1:
  6634                           	opt stack 0
  6635                           pclatu	equ	0xFFB
  6636                           pclath	equ	0xFFA
  6637                           tblptru	equ	0xFF8
  6638                           tblptrh	equ	0xFF7
  6639                           tblptrl	equ	0xFF6
  6640                           tablat	equ	0xFF5
  6641                           prodh	equ	0xFF4
  6642                           prodl	equ	0xFF3
  6643                           intcon	equ	0xFF2
  6644                           intcon2	equ	0xFF1
  6645                           postinc0	equ	0xFEE
  6646                           fsr0h	equ	0xFEA
  6647                           fsr0l	equ	0xFE9
  6648                           wreg	equ	0xFE8
  6649                           indf1	equ	0xFE7
  6650                           fsr1h	equ	0xFE2
  6651                           fsr1l	equ	0xFE1
  6652                           bsr	equ	0xFE0
  6653                           indf2	equ	0xFDF
  6654                           postinc2	equ	0xFDE
  6655                           postdec2	equ	0xFDD
  6656                           fsr2h	equ	0xFDA
  6657                           fsr2l	equ	0xFD9
  6658                           status	equ	0xFD8
  6659                           
  6660 ;; *************** function _ReadTimer1 *****************
  6661 ;; Defined at:
  6662 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t1read.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;		None
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;  timer           2    2[COMRAM] struct Timers
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  2    0[COMRAM] unsigned int 
  6669 ;; Registers used:
  6670 ;;		None
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6679 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6680 ;;Total ram usage:        4 bytes
  6681 ;; Hardware stack levels used:    1
  6682 ;; Hardware stack levels required when called:    5
  6683 ;; This function calls:
  6684 ;;		Nothing
  6685 ;; This function is called by:
  6686 ;;		_timer1_int_handler
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           	psect	text42
  6691  001CAC                     __ptext42:
  6692                           	opt stack 0
  6693  001CAC                     _ReadTimer1:
  6694                           	opt stack 19
  6695                           
  6696                           ;incstack = 0
  6697  001CAC  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6698  001CB0  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6699  001CB4  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6700  001CB8  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6701  001CBC  0012               	return	
  6702  001CBE                     __end_of_ReadTimer1:
  6703                           	opt stack 0
  6704                           pclatu	equ	0xFFB
  6705                           pclath	equ	0xFFA
  6706                           tblptru	equ	0xFF8
  6707                           tblptrh	equ	0xFF7
  6708                           tblptrl	equ	0xFF6
  6709                           tablat	equ	0xFF5
  6710                           prodh	equ	0xFF4
  6711                           prodl	equ	0xFF3
  6712                           intcon	equ	0xFF2
  6713                           intcon2	equ	0xFF1
  6714                           postinc0	equ	0xFEE
  6715                           fsr0h	equ	0xFEA
  6716                           fsr0l	equ	0xFE9
  6717                           wreg	equ	0xFE8
  6718                           indf1	equ	0xFE7
  6719                           fsr1h	equ	0xFE2
  6720                           fsr1l	equ	0xFE1
  6721                           bsr	equ	0xFE0
  6722                           indf2	equ	0xFDF
  6723                           postinc2	equ	0xFDE
  6724                           postdec2	equ	0xFDD
  6725                           fsr2h	equ	0xFDA
  6726                           fsr2l	equ	0xFD9
  6727                           status	equ	0xFD8
  6728                           
  6729 ;; *************** function _timer0_int_handler *****************
  6730 ;; Defined at:
  6731 ;;		line 18 in file "../src/user_interrupts.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;		None
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  msgtype         2    0        int 
  6736 ;;  length          2    0        int 
  6737 ;;  val             2    0        unsigned int 
  6738 ;;  i               1    4[COMRAM] unsigned char 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;		None               void
  6741 ;; Registers used:
  6742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6752 ;;Total ram usage:        1 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; Hardware stack levels required when called:    6
  6755 ;; This function calls:
  6756 ;;		_WriteTimer0
  6757 ;;		_i2c_master_recv
  6758 ;; This function is called by:
  6759 ;;		_InterruptHandlerLow
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           	psect	text43
  6764  001C3C                     __ptext43:
  6765                           	opt stack 0
  6766  001C3C                     _timer0_int_handler:
  6767                           	opt stack 19
  6768                           
  6769                           ;user_interrupts.c: 19: unsigned int val;
  6770                           ;user_interrupts.c: 20: int length, msgtype;
  6771                           ;user_interrupts.c: 21: unsigned char i;
  6772                           ;user_interrupts.c: 23: if (i % 2 == 0) {
  6773                           
  6774                           ;incstack = 0
  6775  001C3C  B005               	btfsc	timer0_int_handler@i,0,c
  6776  001C3E  D005               	goto	i1l2668
  6777                           
  6778                           ;user_interrupts.c: 25: i2c_master_recv(0x9E, 4);
  6779  001C40  0E04               	movlw	4
  6780  001C42  6E01               	movwf	i2c_master_recv@length,c
  6781  001C44  0E9E               	movlw	158
  6782  001C46  EC36  F00A         	call	_i2c_master_recv
  6783  001C4A                     i1l2668:
  6784                           
  6785                           ;user_interrupts.c: 26: }
  6786                           ;user_interrupts.c: 30: i++;
  6787  001C4A  2A05               	incf	timer0_int_handler@i,f,c
  6788                           
  6789                           ;user_interrupts.c: 33: WriteTimer0(0);
  6790  001C4C  0E00               	movlw	0
  6791  001C4E  6E02               	movwf	WriteTimer0@timer0+1,c
  6792  001C50  0E00               	movlw	0
  6793  001C52  6E01               	movwf	WriteTimer0@timer0,c
  6794  001C54  EC5F  F00E         	call	_WriteTimer0	;wreg free
  6795  001C58  0012               	return	
  6796  001C5A                     __end_of_timer0_int_handler:
  6797                           	opt stack 0
  6798                           pclatu	equ	0xFFB
  6799                           pclath	equ	0xFFA
  6800                           tblptru	equ	0xFF8
  6801                           tblptrh	equ	0xFF7
  6802                           tblptrl	equ	0xFF6
  6803                           tablat	equ	0xFF5
  6804                           prodh	equ	0xFF4
  6805                           prodl	equ	0xFF3
  6806                           intcon	equ	0xFF2
  6807                           intcon2	equ	0xFF1
  6808                           postinc0	equ	0xFEE
  6809                           fsr0h	equ	0xFEA
  6810                           fsr0l	equ	0xFE9
  6811                           wreg	equ	0xFE8
  6812                           indf1	equ	0xFE7
  6813                           fsr1h	equ	0xFE2
  6814                           fsr1l	equ	0xFE1
  6815                           bsr	equ	0xFE0
  6816                           indf2	equ	0xFDF
  6817                           postinc2	equ	0xFDE
  6818                           postdec2	equ	0xFDD
  6819                           fsr2h	equ	0xFDA
  6820                           fsr2l	equ	0xFD9
  6821                           status	equ	0xFD8
  6822                           
  6823 ;; *************** function _i2c_master_recv *****************
  6824 ;; Defined at:
  6825 ;;		line 79 in file "../src/my_i2c.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  addr            1    wreg     unsigned char 
  6828 ;;  length          1    0[COMRAM] unsigned char 
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;  addr            1    1[COMRAM] unsigned char 
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1    wreg      unsigned char 
  6833 ;; Registers used:
  6834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6840 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6844 ;;Total ram usage:        2 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; Hardware stack levels required when called:    5
  6847 ;; This function calls:
  6848 ;;		Nothing
  6849 ;; This function is called by:
  6850 ;;		_timer0_int_handler
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           	psect	text44
  6855  00146C                     __ptext44:
  6856                           	opt stack 0
  6857  00146C                     _i2c_master_recv:
  6858                           	opt stack 19
  6859                           
  6860                           ;incstack = 0
  6861                           ;i2c_master_recv@addr stored from wreg
  6862  00146C  6E02               	movwf	i2c_master_recv@addr,c
  6863                           
  6864                           ;my_i2c.c: 81: if (SSP1STATbits.R_W == 1) {
  6865  00146E  B4C7               	btfsc	4039,2,c	;volatile
  6866  001470  0012               	return	
  6867                           
  6868                           ;my_i2c.c: 83: }
  6869                           ;my_i2c.c: 84: if (ic_ptr->status == 0x1) {
  6870                           
  6871                           ;my_i2c.c: 82: return (-1);
  6872                           ;	Return value of _i2c_master_recv is never used
  6873  001472  0100               	movlb	0	; () banked
  6874  001474  EE20 F01D          	lfsr	2,29
  6875  001478  0100               	movlb	0	; () banked
  6876  00147A  51B3               	movf	_ic_ptr& (0+255),w,b
  6877  00147C  26D9               	addwf	fsr2l,f,c
  6878  00147E  0100               	movlb	0	; () banked
  6879  001480  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  6880  001482  22DA               	addwfc	fsr2h,f,c
  6881  001484  0E01               	movlw	1
  6882  001486  62DF               	cpfseq	indf2,c
  6883  001488  0012               	return	
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;my_i2c.c: 85: ic_ptr->slave_addr = addr;
  6887  00148A  0100               	movlb	0	; () banked
  6888  00148C  EE20 F03C          	lfsr	2,60
  6889  001490  0100               	movlb	0	; () banked
  6890  001492  51B3               	movf	_ic_ptr& (0+255),w,b
  6891  001494  26D9               	addwf	fsr2l,f,c
  6892  001496  0100               	movlb	0	; () banked
  6893  001498  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  6894  00149A  22DA               	addwfc	fsr2h,f,c
  6895  00149C  C002  FFDF         	movff	i2c_master_recv@addr,indf2
  6896                           
  6897                           ;my_i2c.c: 86: ic_ptr->buflen = length;
  6898  0014A0  0100               	movlb	0	; () banked
  6899  0014A2  EE20 F01A          	lfsr	2,26
  6900  0014A6  0100               	movlb	0	; () banked
  6901  0014A8  51B3               	movf	_ic_ptr& (0+255),w,b
  6902  0014AA  26D9               	addwf	fsr2l,f,c
  6903  0014AC  0100               	movlb	0	; () banked
  6904  0014AE  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  6905  0014B0  22DA               	addwfc	fsr2h,f,c
  6906  0014B2  C001  FFDF         	movff	i2c_master_recv@length,indf2
  6907                           
  6908                           ;my_i2c.c: 87: ic_ptr->bufind = 0;
  6909  0014B6  0100               	movlb	0	; () banked
  6910  0014B8  EE20 F01B          	lfsr	2,27
  6911  0014BC  0100               	movlb	0	; () banked
  6912  0014BE  51B3               	movf	_ic_ptr& (0+255),w,b
  6913  0014C0  26D9               	addwf	fsr2l,f,c
  6914  0014C2  0100               	movlb	0	; () banked
  6915  0014C4  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  6916  0014C6  22DA               	addwfc	fsr2h,f,c
  6917  0014C8  0E00               	movlw	0
  6918  0014CA  6EDF               	movwf	indf2,c
  6919                           
  6920                           ;my_i2c.c: 88: ic_ptr->status = 0x8;
  6921  0014CC  0100               	movlb	0	; () banked
  6922  0014CE  EE20 F01D          	lfsr	2,29
  6923  0014D2  0100               	movlb	0	; () banked
  6924  0014D4  51B3               	movf	_ic_ptr& (0+255),w,b
  6925  0014D6  26D9               	addwf	fsr2l,f,c
  6926  0014D8  0100               	movlb	0	; () banked
  6927  0014DA  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  6928  0014DC  22DA               	addwfc	fsr2h,f,c
  6929  0014DE  0E08               	movlw	8
  6930  0014E0  6EDF               	movwf	indf2,c
  6931                           
  6932                           ; BSR set to: 0
  6933                           ;my_i2c.c: 89: SSP1CON2bits.SEN = 1;
  6934  0014E2  80C5               	bsf	4037,0,c	;volatile
  6935  0014E4  0012               	return	
  6936  0014E6                     __end_of_i2c_master_recv:
  6937                           	opt stack 0
  6938                           pclatu	equ	0xFFB
  6939                           pclath	equ	0xFFA
  6940                           tblptru	equ	0xFF8
  6941                           tblptrh	equ	0xFF7
  6942                           tblptrl	equ	0xFF6
  6943                           tablat	equ	0xFF5
  6944                           prodh	equ	0xFF4
  6945                           prodl	equ	0xFF3
  6946                           intcon	equ	0xFF2
  6947                           intcon2	equ	0xFF1
  6948                           postinc0	equ	0xFEE
  6949                           fsr0h	equ	0xFEA
  6950                           fsr0l	equ	0xFE9
  6951                           wreg	equ	0xFE8
  6952                           indf1	equ	0xFE7
  6953                           fsr1h	equ	0xFE2
  6954                           fsr1l	equ	0xFE1
  6955                           bsr	equ	0xFE0
  6956                           indf2	equ	0xFDF
  6957                           postinc2	equ	0xFDE
  6958                           postdec2	equ	0xFDD
  6959                           fsr2h	equ	0xFDA
  6960                           fsr2l	equ	0xFD9
  6961                           status	equ	0xFD8
  6962                           
  6963 ;; *************** function _WriteTimer0 *****************
  6964 ;; Defined at:
  6965 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0write.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  timer0          2    0[COMRAM] unsigned int 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  timer           2    2[COMRAM] struct Timers
  6970 ;; Return value:  Size  Location     Type
  6971 ;;		None               void
  6972 ;; Registers used:
  6973 ;;		None
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6979 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6980 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6982 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6983 ;;Total ram usage:        4 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:    5
  6986 ;; This function calls:
  6987 ;;		Nothing
  6988 ;; This function is called by:
  6989 ;;		_timer0_int_handler
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           	psect	text45
  6994  001CBE                     __ptext45:
  6995                           	opt stack 0
  6996  001CBE                     _WriteTimer0:
  6997                           	opt stack 19
  6998                           
  6999                           ;incstack = 0
  7000  001CBE  C001  F003         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7001  001CC2  C002  F004         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7002  001CC6  C004  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7003  001CCA  C003  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7004  001CCE  0012               	return	
  7005  001CD0                     __end_of_WriteTimer0:
  7006                           	opt stack 0
  7007                           pclatu	equ	0xFFB
  7008                           pclath	equ	0xFFA
  7009                           tblptru	equ	0xFF8
  7010                           tblptrh	equ	0xFF7
  7011                           tblptrl	equ	0xFF6
  7012                           tablat	equ	0xFF5
  7013                           prodh	equ	0xFF4
  7014                           prodl	equ	0xFF3
  7015                           intcon	equ	0xFF2
  7016                           intcon2	equ	0xFF1
  7017                           postinc0	equ	0xFEE
  7018                           fsr0h	equ	0xFEA
  7019                           fsr0l	equ	0xFE9
  7020                           wreg	equ	0xFE8
  7021                           indf1	equ	0xFE7
  7022                           fsr1h	equ	0xFE2
  7023                           fsr1l	equ	0xFE1
  7024                           bsr	equ	0xFE0
  7025                           indf2	equ	0xFDF
  7026                           postinc2	equ	0xFDE
  7027                           postdec2	equ	0xFDD
  7028                           fsr2h	equ	0xFDA
  7029                           fsr2l	equ	0xFD9
  7030                           status	equ	0xFD8
  7031                           
  7032 ;; *************** function _InterruptHandlerHigh *****************
  7033 ;; Defined at:
  7034 ;;		line 85 in file "../src/interrupts.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;		None
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;		None
  7039 ;; Return value:  Size  Location     Type
  7040 ;;		None               void
  7041 ;; Registers used:
  7042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7050 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7051 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7052 ;;Total ram usage:       14 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:    4
  7055 ;; This function calls:
  7056 ;;		_SleepIfOkay
  7057 ;;		_i2c_master_int_handler
  7058 ;; This function is called by:
  7059 ;;		Interrupt level 2
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           	psect	intcode
  7064  000008                     __pintcode:
  7065                           	opt stack 0
  7066  000008                     _InterruptHandlerHigh:
  7067                           	opt stack 17
  7068                           
  7069                           ;incstack = 0
  7070  000008  CFFA F082          	movff	pclath,??_InterruptHandlerHigh
  7071  00000C  CFFB F083          	movff	pclatu,??_InterruptHandlerHigh+1
  7072  000010  CFE9 F084          	movff	fsr0l,??_InterruptHandlerHigh+2
  7073  000014  EF73  F00A         	goto	int_func
  7074                           pclatu	equ	0xFFB
  7075                           pclath	equ	0xFFA
  7076                           tblptru	equ	0xFF8
  7077                           tblptrh	equ	0xFF7
  7078                           tblptrl	equ	0xFF6
  7079                           tablat	equ	0xFF5
  7080                           prodh	equ	0xFF4
  7081                           prodl	equ	0xFF3
  7082                           intcon	equ	0xFF2
  7083                           intcon2	equ	0xFF1
  7084                           postinc0	equ	0xFEE
  7085                           fsr0h	equ	0xFEA
  7086                           fsr0l	equ	0xFE9
  7087                           wreg	equ	0xFE8
  7088                           indf1	equ	0xFE7
  7089                           fsr1h	equ	0xFE2
  7090                           fsr1l	equ	0xFE1
  7091                           bsr	equ	0xFE0
  7092                           indf2	equ	0xFDF
  7093                           postinc2	equ	0xFDE
  7094                           postdec2	equ	0xFDD
  7095                           fsr2h	equ	0xFDA
  7096                           fsr2l	equ	0xFD9
  7097                           status	equ	0xFD8
  7098                           
  7099                           	psect	intcode_body
  7100  0014E6                     __pintcode_body:
  7101                           	opt stack 17
  7102  0014E6                     int_func:
  7103                           	opt stack 17
  7104  0014E6  CFEA F085          	movff	fsr0h,??_InterruptHandlerHigh+3
  7105  0014EA  CFE1 F086          	movff	fsr1l,??_InterruptHandlerHigh+4
  7106  0014EE  CFE2 F087          	movff	fsr1h,??_InterruptHandlerHigh+5
  7107  0014F2  CFD9 F088          	movff	fsr2l,??_InterruptHandlerHigh+6
  7108  0014F6  CFDA F089          	movff	fsr2h,??_InterruptHandlerHigh+7
  7109  0014FA  CFF3 F08A          	movff	prodl,??_InterruptHandlerHigh+8
  7110  0014FE  CFF4 F08B          	movff	prodh,??_InterruptHandlerHigh+9
  7111  001502  CFF6 F08C          	movff	tblptrl,??_InterruptHandlerHigh+10
  7112  001506  CFF7 F08D          	movff	tblptrh,??_InterruptHandlerHigh+11
  7113  00150A  CFF8 F08E          	movff	tblptru,??_InterruptHandlerHigh+12
  7114  00150E  CFF5 F08F          	movff	tablat,??_InterruptHandlerHigh+13
  7115                           
  7116                           ;interrupts.c: 90: if (PIR1bits.SSPIF && PIE1bits.SSP1IE) {
  7117  001512  B69E               	btfsc	3998,3,c	;volatile
  7118  001514  A69D               	btfss	3997,3,c	;volatile
  7119  001516  D003               	goto	i2l2948
  7120                           
  7121                           ;interrupts.c: 92: PIR1bits.SSPIF = 0;
  7122  001518  969E               	bcf	3998,3,c	;volatile
  7123                           
  7124                           ;interrupts.c: 94: i2c_master_int_handler();
  7125  00151A  EC67  F000         	call	_i2c_master_int_handler	;wreg free
  7126  00151E                     i2l2948:
  7127                           
  7128                           ;interrupts.c: 95: }
  7129                           ;interrupts.c: 104: SleepIfOkay();
  7130  00151E  EC6C  F009         	call	_SleepIfOkay	;wreg free
  7131  001522  C08F  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  7132  001526  C08E  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  7133  00152A  C08D  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  7134  00152E  C08C  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  7135  001532  C08B  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  7136  001536  C08A  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  7137  00153A  C089  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  7138  00153E  C088  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  7139  001542  C087  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  7140  001546  C086  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  7141  00154A  C085  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  7142  00154E  C084  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  7143  001552  C083  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  7144  001556  C082  FFFA         	movff	??_InterruptHandlerHigh,pclath
  7145  00155A  0011               	retfie		f
  7146  00155C                     __end_of_InterruptHandlerHigh:
  7147                           	opt stack 0
  7148                           pclatu	equ	0xFFB
  7149                           pclath	equ	0xFFA
  7150                           tblptru	equ	0xFF8
  7151                           tblptrh	equ	0xFF7
  7152                           tblptrl	equ	0xFF6
  7153                           tablat	equ	0xFF5
  7154                           prodh	equ	0xFF4
  7155                           prodl	equ	0xFF3
  7156                           intcon	equ	0xFF2
  7157                           intcon2	equ	0xFF1
  7158                           postinc0	equ	0xFEE
  7159                           fsr0h	equ	0xFEA
  7160                           fsr0l	equ	0xFE9
  7161                           wreg	equ	0xFE8
  7162                           indf1	equ	0xFE7
  7163                           fsr1h	equ	0xFE2
  7164                           fsr1l	equ	0xFE1
  7165                           bsr	equ	0xFE0
  7166                           indf2	equ	0xFDF
  7167                           postinc2	equ	0xFDE
  7168                           postdec2	equ	0xFDD
  7169                           fsr2h	equ	0xFDA
  7170                           fsr2l	equ	0xFD9
  7171                           status	equ	0xFD8
  7172                           
  7173 ;; *************** function _i2c_master_int_handler *****************
  7174 ;; Defined at:
  7175 ;;		line 140 in file "../src/my_i2c.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;		None
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;  i2c_data        1    0        unsigned char 
  7180 ;; Return value:  Size  Location     Type
  7181 ;;		None               void
  7182 ;; Registers used:
  7183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7191 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7192 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7193 ;;Total ram usage:        5 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:    3
  7196 ;; This function calls:
  7197 ;;		_FromMainHigh_recvmsg
  7198 ;;		_ToMainHigh_sendmsg
  7199 ;; This function is called by:
  7200 ;;		_InterruptHandlerHigh
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           	psect	text47
  7205  0000CE                     __ptext47:
  7206                           	opt stack 0
  7207  0000CE                     _i2c_master_int_handler:
  7208                           	opt stack 17
  7209                           
  7210                           ;my_i2c.c: 141: unsigned char i2c_data;
  7211                           ;my_i2c.c: 143: switch (ic_ptr->status) {
  7212                           
  7213                           ;incstack = 0
  7214  0000CE  D229               	goto	i2l2632
  7215  0000D0                     i2l2538:
  7216                           
  7217                           ;my_i2c.c: 161: {
  7218                           ;my_i2c.c: 163: if (ic_ptr->slave_addr == ic_ptr->sensor_addr || ic_ptr->slave_addr == i
      +                          c_ptr->motor_addr) {
  7219  0000D0  0100               	movlb	0	; () banked
  7220  0000D2  EE20 F03D          	lfsr	2,61
  7221  0000D6  0100               	movlb	0	; () banked
  7222  0000D8  51B3               	movf	_ic_ptr& (0+255),w,b
  7223  0000DA  26D9               	addwf	fsr2l,f,c
  7224  0000DC  0100               	movlb	0	; () banked
  7225  0000DE  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7226  0000E0  22DA               	addwfc	fsr2h,f,c
  7227  0000E2  50DF               	movf	indf2,w,c
  7228  0000E4  0100               	movlb	0	; () banked
  7229  0000E6  6F7D               	movwf	??_i2c_master_int_handler& (0+255),b
  7230  0000E8  0100               	movlb	0	; () banked
  7231  0000EA  EE20 F03C          	lfsr	2,60
  7232  0000EE  0100               	movlb	0	; () banked
  7233  0000F0  51B3               	movf	_ic_ptr& (0+255),w,b
  7234  0000F2  26D9               	addwf	fsr2l,f,c
  7235  0000F4  0100               	movlb	0	; () banked
  7236  0000F6  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7237  0000F8  22DA               	addwfc	fsr2h,f,c
  7238  0000FA  50DF               	movf	indf2,w,c
  7239  0000FC  0100               	movlb	0	; () banked
  7240  0000FE  197D               	xorwf	??_i2c_master_int_handler& (0+255),w,b
  7241  000100  B4D8               	btfsc	status,2,c
  7242  000102  D015               	goto	i2l2542
  7243                           
  7244                           ; BSR set to: 0
  7245  000104  0100               	movlb	0	; () banked
  7246  000106  EE20 F03C          	lfsr	2,60
  7247  00010A  0100               	movlb	0	; () banked
  7248  00010C  51B3               	movf	_ic_ptr& (0+255),w,b
  7249  00010E  26D9               	addwf	fsr2l,f,c
  7250  000110  0100               	movlb	0	; () banked
  7251  000112  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7252  000114  22DA               	addwfc	fsr2h,f,c
  7253  000116  0100               	movlb	0	; () banked
  7254  000118  EE10 F03E          	lfsr	1,62
  7255  00011C  0100               	movlb	0	; () banked
  7256  00011E  51B3               	movf	_ic_ptr& (0+255),w,b
  7257  000120  26E1               	addwf	fsr1l,f,c
  7258  000122  0100               	movlb	0	; () banked
  7259  000124  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7260  000126  22E2               	addwfc	fsr1h,f,c
  7261  000128  50E7               	movf	indf1,w,c
  7262  00012A  62DF               	cpfseq	indf2,c
  7263  00012C  D01B               	goto	i2l2544
  7264  00012E                     i2l2542:
  7265                           
  7266                           ; BSR set to: 0
  7267                           ;my_i2c.c: 164: ic_ptr->status = 0x9;
  7268  00012E  0100               	movlb	0	; () banked
  7269  000130  EE20 F01D          	lfsr	2,29
  7270  000134  0100               	movlb	0	; () banked
  7271  000136  51B3               	movf	_ic_ptr& (0+255),w,b
  7272  000138  26D9               	addwf	fsr2l,f,c
  7273  00013A  0100               	movlb	0	; () banked
  7274  00013C  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7275  00013E  22DA               	addwfc	fsr2h,f,c
  7276  000140  0E09               	movlw	9
  7277  000142  6EDF               	movwf	indf2,c
  7278                           
  7279                           ;my_i2c.c: 165: SSP1BUF = ((ic_ptr->slave_addr)) + 1;
  7280  000144  0100               	movlb	0	; () banked
  7281  000146  EE20 F03C          	lfsr	2,60
  7282  00014A  0100               	movlb	0	; () banked
  7283  00014C  51B3               	movf	_ic_ptr& (0+255),w,b
  7284  00014E  26D9               	addwf	fsr2l,f,c
  7285  000150  0100               	movlb	0	; () banked
  7286  000152  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7287  000154  22DA               	addwfc	fsr2h,f,c
  7288  000156  50DF               	movf	indf2,w,c
  7289  000158  0100               	movlb	0	; () banked
  7290  00015A  6F7D               	movwf	??_i2c_master_int_handler& (0+255),b
  7291  00015C  0100               	movlb	0	; () banked
  7292  00015E  297D               	incf	??_i2c_master_int_handler& (0+255),w,b
  7293  000160  6EC9               	movwf	4041,c	;volatile
  7294                           
  7295                           ;my_i2c.c: 166: } else {
  7296  000162  0012               	return	
  7297  000164                     i2l2544:
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;my_i2c.c: 167: ic_ptr->status = 0x1;
  7301  000164  0100               	movlb	0	; () banked
  7302  000166  EE20 F01D          	lfsr	2,29
  7303  00016A  0100               	movlb	0	; () banked
  7304  00016C  51B3               	movf	_ic_ptr& (0+255),w,b
  7305  00016E  26D9               	addwf	fsr2l,f,c
  7306  000170  0100               	movlb	0	; () banked
  7307  000172  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7308  000174  22DA               	addwfc	fsr2h,f,c
  7309  000176  0E01               	movlw	1
  7310  000178  6EDF               	movwf	indf2,c
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;my_i2c.c: 168: SSP1CON2bits.PEN = 1;
  7314  00017A  84C5               	bsf	4037,2,c	;volatile
  7315  00017C  0012               	return	
  7316  00017E                     i2l323:
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;my_i2c.c: 173: {
  7320                           ;my_i2c.c: 175: if (SSP1CON2bits.ACKSTAT == 0) {
  7321  00017E  BCC5               	btfsc	4037,6,c	;volatile
  7322  000180  D00E               	goto	i2l2554
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;my_i2c.c: 176: ic_ptr->status = 0xA;
  7326  000182  0100               	movlb	0	; () banked
  7327  000184  EE20 F01D          	lfsr	2,29
  7328  000188  0100               	movlb	0	; () banked
  7329  00018A  51B3               	movf	_ic_ptr& (0+255),w,b
  7330  00018C  26D9               	addwf	fsr2l,f,c
  7331  00018E  0100               	movlb	0	; () banked
  7332  000190  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7333  000192  22DA               	addwfc	fsr2h,f,c
  7334  000194  0E0A               	movlw	10
  7335  000196  6EDF               	movwf	indf2,c
  7336                           
  7337                           ; BSR set to: 0
  7338                           ;my_i2c.c: 177: SSP1CON2bits.RCEN = 1;
  7339  000198  86C5               	bsf	4037,3,c	;volatile
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;my_i2c.c: 178: SSP1CON2bits.SEN = 1;
  7343  00019A  80C5               	bsf	4037,0,c	;volatile
  7344                           
  7345                           ;my_i2c.c: 179: } else {
  7346  00019C  0012               	return	
  7347  00019E                     i2l2554:
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;my_i2c.c: 180: ic_ptr->status = 0x1;
  7351  00019E  0100               	movlb	0	; () banked
  7352  0001A0  EE20 F01D          	lfsr	2,29
  7353  0001A4  0100               	movlb	0	; () banked
  7354  0001A6  51B3               	movf	_ic_ptr& (0+255),w,b
  7355  0001A8  26D9               	addwf	fsr2l,f,c
  7356  0001AA  0100               	movlb	0	; () banked
  7357  0001AC  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7358  0001AE  22DA               	addwfc	fsr2h,f,c
  7359  0001B0  0E01               	movlw	1
  7360  0001B2  6EDF               	movwf	indf2,c
  7361                           
  7362                           ; BSR set to: 0
  7363                           ;my_i2c.c: 181: ToMainHigh_sendmsg(0, 53, 0);
  7364  0001B4  0E35               	movlw	53
  7365  0001B6  0100               	movlb	0	; () banked
  7366  0001B8  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7367  0001BA  0E00               	movlw	0
  7368  0001BC  0100               	movlb	0	; () banked
  7369  0001BE  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7370  0001C0  0E00               	movlw	0
  7371  0001C2  0100               	movlb	0	; () banked
  7372  0001C4  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7373  0001C6  0E00               	movlw	0
  7374  0001C8  ECBF  F00D         	call	_ToMainHigh_sendmsg
  7375                           
  7376                           ;my_i2c.c: 182: SSP1CON2bits.PEN = 1;
  7377  0001CC  84C5               	bsf	4037,2,c	;volatile
  7378  0001CE  0012               	return	
  7379  0001D0                     i2l2560:
  7380                           
  7381                           ;my_i2c.c: 188: {
  7382                           ;my_i2c.c: 190: if (ic_ptr->bufind != (ic_ptr->buflen - 1)) {
  7383  0001D0  0EFF               	movlw	255
  7384  0001D2  0100               	movlb	0	; () banked
  7385  0001D4  6F7D               	movwf	??_i2c_master_int_handler& (0+255),b
  7386  0001D6  0EFF               	movlw	255
  7387  0001D8  6F7E               	movwf	(??_i2c_master_int_handler+1)& (0+255),b
  7388  0001DA  0100               	movlb	0	; () banked
  7389  0001DC  EE20 F01A          	lfsr	2,26
  7390  0001E0  0100               	movlb	0	; () banked
  7391  0001E2  51B3               	movf	_ic_ptr& (0+255),w,b
  7392  0001E4  26D9               	addwf	fsr2l,f,c
  7393  0001E6  0100               	movlb	0	; () banked
  7394  0001E8  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7395  0001EA  22DA               	addwfc	fsr2h,f,c
  7396  0001EC  50DF               	movf	indf2,w,c
  7397  0001EE  0100               	movlb	0	; () banked
  7398  0001F0  6F7F               	movwf	(??_i2c_master_int_handler+2)& (0+255),b
  7399  0001F2  6B80               	clrf	(??_i2c_master_int_handler+3)& (0+255),b
  7400  0001F4  0100               	movlb	0	; () banked
  7401  0001F6  517D               	movf	??_i2c_master_int_handler& (0+255),w,b
  7402  0001F8  0100               	movlb	0	; () banked
  7403  0001FA  277F               	addwf	(??_i2c_master_int_handler+2)& (0+255),f,b
  7404  0001FC  0100               	movlb	0	; () banked
  7405  0001FE  517E               	movf	(??_i2c_master_int_handler+1)& (0+255),w,b
  7406  000200  0100               	movlb	0	; () banked
  7407  000202  2380               	addwfc	(??_i2c_master_int_handler+3)& (0+255),f,b
  7408  000204  0100               	movlb	0	; () banked
  7409  000206  EE20 F01B          	lfsr	2,27
  7410  00020A  0100               	movlb	0	; () banked
  7411  00020C  51B3               	movf	_ic_ptr& (0+255),w,b
  7412  00020E  26D9               	addwf	fsr2l,f,c
  7413  000210  0100               	movlb	0	; () banked
  7414  000212  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7415  000214  22DA               	addwfc	fsr2h,f,c
  7416  000216  50DF               	movf	indf2,w,c
  7417  000218  0100               	movlb	0	; () banked
  7418  00021A  6F81               	movwf	(??_i2c_master_int_handler+4)& (0+255),b
  7419  00021C  0100               	movlb	0	; () banked
  7420  00021E  5181               	movf	(??_i2c_master_int_handler+4)& (0+255),w,b
  7421  000220  0100               	movlb	0	; () banked
  7422  000222  197F               	xorwf	(??_i2c_master_int_handler+2)& (0+255),w,b
  7423  000224  1180               	iorwf	(??_i2c_master_int_handler+3)& (0+255),w,b
  7424  000226  B4D8               	btfsc	status,2,c
  7425  000228  D032               	goto	i2l2574
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;my_i2c.c: 191: ic_ptr->status = 0xB;
  7429  00022A  0100               	movlb	0	; () banked
  7430  00022C  EE20 F01D          	lfsr	2,29
  7431  000230  0100               	movlb	0	; () banked
  7432  000232  51B3               	movf	_ic_ptr& (0+255),w,b
  7433  000234  26D9               	addwf	fsr2l,f,c
  7434  000236  0100               	movlb	0	; () banked
  7435  000238  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7436  00023A  22DA               	addwfc	fsr2h,f,c
  7437  00023C  0E0B               	movlw	11
  7438  00023E  6EDF               	movwf	indf2,c
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;my_i2c.c: 192: ic_ptr->buffer[ic_ptr->bufind] = SSP1BUF;
  7442  000240  0100               	movlb	0	; () banked
  7443  000242  EE20 F01B          	lfsr	2,27
  7444  000246  0100               	movlb	0	; () banked
  7445  000248  51B3               	movf	_ic_ptr& (0+255),w,b
  7446  00024A  26D9               	addwf	fsr2l,f,c
  7447  00024C  0100               	movlb	0	; () banked
  7448  00024E  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7449  000250  22DA               	addwfc	fsr2h,f,c
  7450  000252  50DF               	movf	indf2,w,c
  7451  000254  0100               	movlb	0	; () banked
  7452  000256  6F7D               	movwf	??_i2c_master_int_handler& (0+255),b
  7453  000258  0100               	movlb	0	; () banked
  7454  00025A  517D               	movf	??_i2c_master_int_handler& (0+255),w,b
  7455  00025C  0D01               	mullw	1
  7456  00025E  50F3               	movf	prodl,w,c
  7457  000260  0100               	movlb	0	; () banked
  7458  000262  25B3               	addwf	_ic_ptr& (0+255),w,b
  7459  000264  6ED9               	movwf	fsr2l,c
  7460  000266  50F4               	movf	prodh,w,c
  7461  000268  0100               	movlb	0	; () banked
  7462  00026A  21B4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7463  00026C  6EDA               	movwf	fsr2h,c
  7464  00026E  CFC9 FFDF          	movff	4041,indf2	;volatile
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;my_i2c.c: 193: ic_ptr->bufind++;
  7468  000272  0100               	movlb	0	; () banked
  7469  000274  EE20 F01B          	lfsr	2,27
  7470  000278  0100               	movlb	0	; () banked
  7471  00027A  51B3               	movf	_ic_ptr& (0+255),w,b
  7472  00027C  26D9               	addwf	fsr2l,f,c
  7473  00027E  0100               	movlb	0	; () banked
  7474  000280  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7475  000282  22DA               	addwfc	fsr2h,f,c
  7476  000284  2ADF               	incf	indf2,f,c
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;my_i2c.c: 194: SSP1CON2bits.ACKEN = 1;
  7480  000286  88C5               	bsf	4037,4,c	;volatile
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;my_i2c.c: 195: SSP1CON2bits.ACKDT = 0;
  7484  000288  9AC5               	bcf	4037,5,c	;volatile
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;my_i2c.c: 196: SSP1CON2bits.SEN = 1;
  7488  00028A  80C5               	bsf	4037,0,c	;volatile
  7489                           
  7490                           ;my_i2c.c: 197: } else {
  7491  00028C  0012               	return	
  7492  00028E                     i2l2574:
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;my_i2c.c: 198: ic_ptr->status = 0xC;
  7496  00028E  0100               	movlb	0	; () banked
  7497  000290  EE20 F01D          	lfsr	2,29
  7498  000294  0100               	movlb	0	; () banked
  7499  000296  51B3               	movf	_ic_ptr& (0+255),w,b
  7500  000298  26D9               	addwf	fsr2l,f,c
  7501  00029A  0100               	movlb	0	; () banked
  7502  00029C  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7503  00029E  22DA               	addwfc	fsr2h,f,c
  7504  0002A0  0E0C               	movlw	12
  7505  0002A2  6EDF               	movwf	indf2,c
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;my_i2c.c: 199: SSP1CON2bits.ACKEN = 1;
  7509  0002A4  88C5               	bsf	4037,4,c	;volatile
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;my_i2c.c: 200: SSP1CON2bits.ACKDT = 1;
  7513  0002A6  8AC5               	bsf	4037,5,c	;volatile
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;my_i2c.c: 201: SSP1CON2bits.SEN = 1;
  7517  0002A8  80C5               	bsf	4037,0,c	;volatile
  7518  0002AA  0012               	return	
  7519  0002AC                     i2l2582:
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;my_i2c.c: 206: {
  7523                           ;my_i2c.c: 208: ic_ptr->status = 0xA;
  7524  0002AC  0100               	movlb	0	; () banked
  7525  0002AE  EE20 F01D          	lfsr	2,29
  7526  0002B2  0100               	movlb	0	; () banked
  7527  0002B4  51B3               	movf	_ic_ptr& (0+255),w,b
  7528  0002B6  26D9               	addwf	fsr2l,f,c
  7529  0002B8  0100               	movlb	0	; () banked
  7530  0002BA  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7531  0002BC  22DA               	addwfc	fsr2h,f,c
  7532  0002BE  0E0A               	movlw	10
  7533  0002C0  6EDF               	movwf	indf2,c
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;my_i2c.c: 209: SSP1CON2bits.RCEN = 1;
  7537  0002C2  86C5               	bsf	4037,3,c	;volatile
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;my_i2c.c: 210: SSP1CON2bits.SEN = 1;
  7541  0002C4  80C5               	bsf	4037,0,c	;volatile
  7542                           
  7543                           ;my_i2c.c: 211: break;
  7544  0002C6  0012               	return	
  7545  0002C8                     i2l2588:
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;my_i2c.c: 214: {
  7549                           ;my_i2c.c: 216: ic_ptr->status = 0x1;
  7550  0002C8  0100               	movlb	0	; () banked
  7551  0002CA  EE20 F01D          	lfsr	2,29
  7552  0002CE  0100               	movlb	0	; () banked
  7553  0002D0  51B3               	movf	_ic_ptr& (0+255),w,b
  7554  0002D2  26D9               	addwf	fsr2l,f,c
  7555  0002D4  0100               	movlb	0	; () banked
  7556  0002D6  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7557  0002D8  22DA               	addwfc	fsr2h,f,c
  7558  0002DA  0E01               	movlw	1
  7559  0002DC  6EDF               	movwf	indf2,c
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;my_i2c.c: 217: ToMainHigh_sendmsg(ic_ptr->buflen, 52, (void *) ic_ptr->buffer);
  7563  0002DE  0E34               	movlw	52
  7564  0002E0  0100               	movlb	0	; () banked
  7565  0002E2  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7566  0002E4  0100               	movlb	0	; () banked
  7567  0002E6  C0B4  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7568  0002EA  0100               	movlb	0	; () banked
  7569  0002EC  C0B3  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7570  0002F0  0100               	movlb	0	; () banked
  7571  0002F2  EE20 F01A          	lfsr	2,26
  7572  0002F6  0100               	movlb	0	; () banked
  7573  0002F8  51B3               	movf	_ic_ptr& (0+255),w,b
  7574  0002FA  26D9               	addwf	fsr2l,f,c
  7575  0002FC  0100               	movlb	0	; () banked
  7576  0002FE  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7577  000300  22DA               	addwfc	fsr2h,f,c
  7578  000302  50DF               	movf	indf2,w,c
  7579  000304  ECBF  F00D         	call	_ToMainHigh_sendmsg
  7580                           
  7581                           ;my_i2c.c: 218: SSP1CON2bits.PEN = 1;
  7582  000308  84C5               	bsf	4037,2,c	;volatile
  7583                           
  7584                           ;my_i2c.c: 219: break;
  7585  00030A  0012               	return	
  7586  00030C                     i2l2594:
  7587                           
  7588                           ;my_i2c.c: 226: {
  7589                           ;my_i2c.c: 228: ic_ptr->status = 0x7;
  7590  00030C  0100               	movlb	0	; () banked
  7591  00030E  EE20 F01D          	lfsr	2,29
  7592  000312  0100               	movlb	0	; () banked
  7593  000314  51B3               	movf	_ic_ptr& (0+255),w,b
  7594  000316  26D9               	addwf	fsr2l,f,c
  7595  000318  0100               	movlb	0	; () banked
  7596  00031A  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7597  00031C  22DA               	addwfc	fsr2h,f,c
  7598  00031E  0E07               	movlw	7
  7599  000320  6EDF               	movwf	indf2,c
  7600                           
  7601                           ;my_i2c.c: 229: SSP1BUF = ((ic_ptr->slave_addr) + 0);
  7602  000322  0100               	movlb	0	; () banked
  7603  000324  EE20 F03C          	lfsr	2,60
  7604  000328  0100               	movlb	0	; () banked
  7605  00032A  51B3               	movf	_ic_ptr& (0+255),w,b
  7606  00032C  26D9               	addwf	fsr2l,f,c
  7607  00032E  0100               	movlb	0	; () banked
  7608  000330  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7609  000332  22DA               	addwfc	fsr2h,f,c
  7610  000334  50DF               	movf	indf2,w,c
  7611  000336  6EC9               	movwf	4041,c	;volatile
  7612                           
  7613                           ;my_i2c.c: 230: break;
  7614  000338  0012               	return	
  7615  00033A                     i2l332:
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;my_i2c.c: 233: {
  7619                           ;my_i2c.c: 235: if (SSP1CON2bits.ACKDT == 0) {
  7620  00033A  BAC5               	btfsc	4037,5,c	;volatile
  7621  00033C  D0CB               	goto	i2l2622
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;my_i2c.c: 236: SSP1CON2bits.ACKSTAT = 0;
  7625  00033E  9CC5               	bcf	4037,6,c	;volatile
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;my_i2c.c: 237: FromMainHigh_recvmsg(ic_ptr->outbuflen, (void *) 46, (void *) ic_ptr->ou
      +                          tbuffer);
  7629  000340  0E00               	movlw	0
  7630  000342  0100               	movlb	0	; () banked
  7631  000344  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  7632  000346  0E2E               	movlw	46
  7633  000348  0100               	movlb	0	; () banked
  7634  00034A  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  7635  00034C  0E20               	movlw	32
  7636  00034E  0100               	movlb	0	; () banked
  7637  000350  25B3               	addwf	_ic_ptr& (0+255),w,b
  7638  000352  0100               	movlb	0	; () banked
  7639  000354  6F7A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  7640  000356  0E00               	movlw	0
  7641  000358  0100               	movlb	0	; () banked
  7642  00035A  21B4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7643  00035C  0100               	movlb	0	; () banked
  7644  00035E  6F7B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  7645  000360  0100               	movlb	0	; () banked
  7646  000362  EE20 F03A          	lfsr	2,58
  7647  000366  0100               	movlb	0	; () banked
  7648  000368  51B3               	movf	_ic_ptr& (0+255),w,b
  7649  00036A  26D9               	addwf	fsr2l,f,c
  7650  00036C  0100               	movlb	0	; () banked
  7651  00036E  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7652  000370  22DA               	addwfc	fsr2h,f,c
  7653  000372  50DF               	movf	indf2,w,c
  7654  000374  EC14  F00D         	call	_FromMainHigh_recvmsg
  7655                           
  7656                           ;my_i2c.c: 238: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7657  000378  0100               	movlb	0	; () banked
  7658  00037A  EE20 F03B          	lfsr	2,59
  7659  00037E  0100               	movlb	0	; () banked
  7660  000380  51B3               	movf	_ic_ptr& (0+255),w,b
  7661  000382  26D9               	addwf	fsr2l,f,c
  7662  000384  0100               	movlb	0	; () banked
  7663  000386  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7664  000388  22DA               	addwfc	fsr2h,f,c
  7665  00038A  50DF               	movf	indf2,w,c
  7666  00038C  0100               	movlb	0	; () banked
  7667  00038E  6F7D               	movwf	??_i2c_master_int_handler& (0+255),b
  7668  000390  0100               	movlb	0	; () banked
  7669  000392  EE20 F03A          	lfsr	2,58
  7670  000396  0100               	movlb	0	; () banked
  7671  000398  51B3               	movf	_ic_ptr& (0+255),w,b
  7672  00039A  26D9               	addwf	fsr2l,f,c
  7673  00039C  0100               	movlb	0	; () banked
  7674  00039E  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7675  0003A0  22DA               	addwfc	fsr2h,f,c
  7676  0003A2  50DF               	movf	indf2,w,c
  7677  0003A4  0100               	movlb	0	; () banked
  7678  0003A6  5D7D               	subwf	??_i2c_master_int_handler& (0+255),w,b
  7679  0003A8  B0D8               	btfsc	status,0,c
  7680  0003AA  D034               	goto	i2l2604
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;my_i2c.c: 239: ic_ptr->status = 0x7;
  7684  0003AC  0100               	movlb	0	; () banked
  7685  0003AE  EE20 F01D          	lfsr	2,29
  7686  0003B2  0100               	movlb	0	; () banked
  7687  0003B4  51B3               	movf	_ic_ptr& (0+255),w,b
  7688  0003B6  26D9               	addwf	fsr2l,f,c
  7689  0003B8  0100               	movlb	0	; () banked
  7690  0003BA  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7691  0003BC  22DA               	addwfc	fsr2h,f,c
  7692  0003BE  0E07               	movlw	7
  7693  0003C0  6EDF               	movwf	indf2,c
  7694                           
  7695                           ;my_i2c.c: 240: ic_ptr->outbufind++;
  7696  0003C2  0100               	movlb	0	; () banked
  7697  0003C4  EE20 F03B          	lfsr	2,59
  7698  0003C8  0100               	movlb	0	; () banked
  7699  0003CA  51B3               	movf	_ic_ptr& (0+255),w,b
  7700  0003CC  26D9               	addwf	fsr2l,f,c
  7701  0003CE  0100               	movlb	0	; () banked
  7702  0003D0  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7703  0003D2  22DA               	addwfc	fsr2h,f,c
  7704  0003D4  2ADF               	incf	indf2,f,c
  7705                           
  7706                           ;my_i2c.c: 241: SSP1BUF = ic_ptr->outbuffer[ic_ptr->outbufind - 1];
  7707  0003D6  0100               	movlb	0	; () banked
  7708  0003D8  EE20 F03B          	lfsr	2,59
  7709  0003DC  0100               	movlb	0	; () banked
  7710  0003DE  51B3               	movf	_ic_ptr& (0+255),w,b
  7711  0003E0  26D9               	addwf	fsr2l,f,c
  7712  0003E2  0100               	movlb	0	; () banked
  7713  0003E4  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7714  0003E6  22DA               	addwfc	fsr2h,f,c
  7715  0003E8  50DF               	movf	indf2,w,c
  7716  0003EA  0100               	movlb	0	; () banked
  7717  0003EC  6F7D               	movwf	??_i2c_master_int_handler& (0+255),b
  7718  0003EE  6B7E               	clrf	(??_i2c_master_int_handler+1)& (0+255),b
  7719  0003F0  0E1F               	movlw	31
  7720  0003F2  0100               	movlb	0	; () banked
  7721  0003F4  277D               	addwf	??_i2c_master_int_handler& (0+255),f,b
  7722  0003F6  0E00               	movlw	0
  7723  0003F8  237E               	addwfc	(??_i2c_master_int_handler+1)& (0+255),f,b
  7724  0003FA  0100               	movlb	0	; () banked
  7725  0003FC  517D               	movf	??_i2c_master_int_handler& (0+255),w,b
  7726  0003FE  0100               	movlb	0	; () banked
  7727  000400  25B3               	addwf	_ic_ptr& (0+255),w,b
  7728  000402  6ED9               	movwf	fsr2l,c
  7729  000404  0100               	movlb	0	; () banked
  7730  000406  517E               	movf	(??_i2c_master_int_handler+1)& (0+255),w,b
  7731  000408  0100               	movlb	0	; () banked
  7732  00040A  21B4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7733  00040C  6EDA               	movwf	fsr2h,c
  7734  00040E  50DF               	movf	indf2,w,c
  7735  000410  6EC9               	movwf	4041,c	;volatile
  7736                           
  7737                           ;my_i2c.c: 242: } else if (ic_ptr->outbufind == ic_ptr->outbuflen) {
  7738  000412  0012               	return	
  7739  000414                     i2l2604:
  7740                           
  7741                           ; BSR set to: 0
  7742  000414  0100               	movlb	0	; () banked
  7743  000416  EE20 F03B          	lfsr	2,59
  7744  00041A  0100               	movlb	0	; () banked
  7745  00041C  51B3               	movf	_ic_ptr& (0+255),w,b
  7746  00041E  26D9               	addwf	fsr2l,f,c
  7747  000420  0100               	movlb	0	; () banked
  7748  000422  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7749  000424  22DA               	addwfc	fsr2h,f,c
  7750  000426  0100               	movlb	0	; () banked
  7751  000428  EE10 F03A          	lfsr	1,58
  7752  00042C  0100               	movlb	0	; () banked
  7753  00042E  51B3               	movf	_ic_ptr& (0+255),w,b
  7754  000430  26E1               	addwf	fsr1l,f,c
  7755  000432  0100               	movlb	0	; () banked
  7756  000434  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7757  000436  22E2               	addwfc	fsr1h,f,c
  7758  000438  50E7               	movf	indf1,w,c
  7759  00043A  62DF               	cpfseq	indf2,c
  7760  00043C  D024               	goto	i2l2614
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;my_i2c.c: 243: ToMainHigh_sendmsg(0, 50, 0);
  7764  00043E  0E32               	movlw	50
  7765  000440  0100               	movlb	0	; () banked
  7766  000442  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7767  000444  0E00               	movlw	0
  7768  000446  0100               	movlb	0	; () banked
  7769  000448  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7770  00044A  0E00               	movlw	0
  7771  00044C  0100               	movlb	0	; () banked
  7772  00044E  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7773  000450  0E00               	movlw	0
  7774  000452  ECBF  F00D         	call	_ToMainHigh_sendmsg
  7775                           
  7776                           ;my_i2c.c: 244: ic_ptr->status = 0x1;
  7777  000456  0100               	movlb	0	; () banked
  7778  000458  EE20 F01D          	lfsr	2,29
  7779  00045C  0100               	movlb	0	; () banked
  7780  00045E  51B3               	movf	_ic_ptr& (0+255),w,b
  7781  000460  26D9               	addwf	fsr2l,f,c
  7782  000462  0100               	movlb	0	; () banked
  7783  000464  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7784  000466  22DA               	addwfc	fsr2h,f,c
  7785  000468  0E01               	movlw	1
  7786  00046A  6EDF               	movwf	indf2,c
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;my_i2c.c: 245: ic_ptr->outbuflen = 0;
  7790  00046C  0100               	movlb	0	; () banked
  7791  00046E  EE20 F03A          	lfsr	2,58
  7792  000472  0100               	movlb	0	; () banked
  7793  000474  51B3               	movf	_ic_ptr& (0+255),w,b
  7794  000476  26D9               	addwf	fsr2l,f,c
  7795  000478  0100               	movlb	0	; () banked
  7796  00047A  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7797  00047C  22DA               	addwfc	fsr2h,f,c
  7798  00047E  0E00               	movlw	0
  7799  000480  6EDF               	movwf	indf2,c
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;my_i2c.c: 246: SSP1CON2bits.PEN = 1;
  7803  000482  84C5               	bsf	4037,2,c	;volatile
  7804                           
  7805                           ;my_i2c.c: 247: } else {
  7806  000484  0012               	return	
  7807  000486                     i2l2614:
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;my_i2c.c: 248: ToMainHigh_sendmsg(ic_ptr->outbuflen, 51, (void *) ic_ptr->outbuffer);
  7811  000486  0E33               	movlw	51
  7812  000488  0100               	movlb	0	; () banked
  7813  00048A  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7814  00048C  0E20               	movlw	32
  7815  00048E  0100               	movlb	0	; () banked
  7816  000490  25B3               	addwf	_ic_ptr& (0+255),w,b
  7817  000492  0100               	movlb	0	; () banked
  7818  000494  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7819  000496  0E00               	movlw	0
  7820  000498  0100               	movlb	0	; () banked
  7821  00049A  21B4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7822  00049C  0100               	movlb	0	; () banked
  7823  00049E  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7824  0004A0  0100               	movlb	0	; () banked
  7825  0004A2  EE20 F03A          	lfsr	2,58
  7826  0004A6  0100               	movlb	0	; () banked
  7827  0004A8  51B3               	movf	_ic_ptr& (0+255),w,b
  7828  0004AA  26D9               	addwf	fsr2l,f,c
  7829  0004AC  0100               	movlb	0	; () banked
  7830  0004AE  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7831  0004B0  22DA               	addwfc	fsr2h,f,c
  7832  0004B2  50DF               	movf	indf2,w,c
  7833  0004B4  ECBF  F00D         	call	_ToMainHigh_sendmsg
  7834                           
  7835                           ;my_i2c.c: 249: ic_ptr->status = 0x1;
  7836  0004B8  0100               	movlb	0	; () banked
  7837  0004BA  EE20 F01D          	lfsr	2,29
  7838  0004BE  0100               	movlb	0	; () banked
  7839  0004C0  51B3               	movf	_ic_ptr& (0+255),w,b
  7840  0004C2  26D9               	addwf	fsr2l,f,c
  7841  0004C4  0100               	movlb	0	; () banked
  7842  0004C6  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7843  0004C8  22DA               	addwfc	fsr2h,f,c
  7844  0004CA  0E01               	movlw	1
  7845  0004CC  6EDF               	movwf	indf2,c
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;my_i2c.c: 250: SSP1CON2bits.ACKSTAT = 1;
  7849  0004CE  8CC5               	bsf	4037,6,c	;volatile
  7850                           
  7851                           ; BSR set to: 0
  7852                           ;my_i2c.c: 251: SSP1CON2bits.PEN = 1;
  7853  0004D0  84C5               	bsf	4037,2,c	;volatile
  7854  0004D2  0012               	return	
  7855  0004D4                     i2l2622:
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;my_i2c.c: 254: ToMainHigh_sendmsg(ic_ptr->outbuflen, 51, (void *) ic_ptr->outbuffer);
  7859  0004D4  0E33               	movlw	51
  7860  0004D6  0100               	movlb	0	; () banked
  7861  0004D8  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7862  0004DA  0E20               	movlw	32
  7863  0004DC  0100               	movlb	0	; () banked
  7864  0004DE  25B3               	addwf	_ic_ptr& (0+255),w,b
  7865  0004E0  0100               	movlb	0	; () banked
  7866  0004E2  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7867  0004E4  0E00               	movlw	0
  7868  0004E6  0100               	movlb	0	; () banked
  7869  0004E8  21B4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7870  0004EA  0100               	movlb	0	; () banked
  7871  0004EC  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7872  0004EE  0100               	movlb	0	; () banked
  7873  0004F0  EE20 F03A          	lfsr	2,58
  7874  0004F4  0100               	movlb	0	; () banked
  7875  0004F6  51B3               	movf	_ic_ptr& (0+255),w,b
  7876  0004F8  26D9               	addwf	fsr2l,f,c
  7877  0004FA  0100               	movlb	0	; () banked
  7878  0004FC  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7879  0004FE  22DA               	addwfc	fsr2h,f,c
  7880  000500  50DF               	movf	indf2,w,c
  7881  000502  ECBF  F00D         	call	_ToMainHigh_sendmsg
  7882                           
  7883                           ;my_i2c.c: 255: ic_ptr->status = 0x1;
  7884  000506  0100               	movlb	0	; () banked
  7885  000508  EE20 F01D          	lfsr	2,29
  7886  00050C  0100               	movlb	0	; () banked
  7887  00050E  51B3               	movf	_ic_ptr& (0+255),w,b
  7888  000510  26D9               	addwf	fsr2l,f,c
  7889  000512  0100               	movlb	0	; () banked
  7890  000514  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7891  000516  22DA               	addwfc	fsr2h,f,c
  7892  000518  0E01               	movlw	1
  7893  00051A  6EDF               	movwf	indf2,c
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;my_i2c.c: 256: SSP1CON2bits.ACKSTAT = 1;
  7897  00051C  8CC5               	bsf	4037,6,c	;volatile
  7898                           
  7899                           ; BSR set to: 0
  7900                           ;my_i2c.c: 257: SSP1CON2bits.PEN = 1;
  7901  00051E  84C5               	bsf	4037,2,c	;volatile
  7902  000520  0012               	return	
  7903  000522                     i2l2632:
  7904  000522  0100               	movlb	0	; () banked
  7905  000524  EE20 F01D          	lfsr	2,29
  7906  000528  0100               	movlb	0	; () banked
  7907  00052A  51B3               	movf	_ic_ptr& (0+255),w,b
  7908  00052C  26D9               	addwf	fsr2l,f,c
  7909  00052E  0100               	movlb	0	; () banked
  7910  000530  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7911  000532  22DA               	addwfc	fsr2h,f,c
  7912  000534  50DF               	movf	indf2,w,c
  7913                           
  7914                           ; Switch size 1, requested type "space"
  7915                           ; Number of cases is 8, Range of values is 1 to 12
  7916                           ; switch strategies available:
  7917                           ; Name         Instructions Cycles
  7918                           ; simple_byte           25    13 (average)
  7919                           ;	Chosen strategy is simple_byte
  7920  000536  0A01               	xorlw	1	; case 1
  7921  000538  B4D8               	btfsc	status,2,c
  7922  00053A  0012               	return	
  7923  00053C  0A07               	xorlw	7	; case 6
  7924  00053E  B4D8               	btfsc	status,2,c
  7925  000540  D6E5               	goto	i2l2594
  7926  000542  0A01               	xorlw	1	; case 7
  7927  000544  B4D8               	btfsc	status,2,c
  7928  000546  D6F9               	goto	i2l332
  7929  000548  0A0F               	xorlw	15	; case 8
  7930  00054A  B4D8               	btfsc	status,2,c
  7931  00054C  D5C1               	goto	i2l2538
  7932  00054E  0A01               	xorlw	1	; case 9
  7933  000550  B4D8               	btfsc	status,2,c
  7934  000552  D615               	goto	i2l323
  7935  000554  0A03               	xorlw	3	; case 10
  7936  000556  B4D8               	btfsc	status,2,c
  7937  000558  D63B               	goto	i2l2560
  7938  00055A  0A01               	xorlw	1	; case 11
  7939  00055C  B4D8               	btfsc	status,2,c
  7940  00055E  D6A6               	goto	i2l2582
  7941  000560  0A07               	xorlw	7	; case 12
  7942  000562  A4D8               	btfss	status,2,c
  7943  000564  0012               	return	
  7944  000566  D6B0               	goto	i2l2588
  7945  000568                     __end_of_i2c_master_int_handler:
  7946                           	opt stack 0
  7947                           pclatu	equ	0xFFB
  7948                           pclath	equ	0xFFA
  7949                           tblptru	equ	0xFF8
  7950                           tblptrh	equ	0xFF7
  7951                           tblptrl	equ	0xFF6
  7952                           tablat	equ	0xFF5
  7953                           prodh	equ	0xFF4
  7954                           prodl	equ	0xFF3
  7955                           intcon	equ	0xFF2
  7956                           intcon2	equ	0xFF1
  7957                           postinc0	equ	0xFEE
  7958                           fsr0h	equ	0xFEA
  7959                           fsr0l	equ	0xFE9
  7960                           wreg	equ	0xFE8
  7961                           indf1	equ	0xFE7
  7962                           fsr1h	equ	0xFE2
  7963                           fsr1l	equ	0xFE1
  7964                           bsr	equ	0xFE0
  7965                           indf2	equ	0xFDF
  7966                           postinc2	equ	0xFDE
  7967                           postdec2	equ	0xFDD
  7968                           fsr2h	equ	0xFDA
  7969                           fsr2l	equ	0xFD9
  7970                           status	equ	0xFD8
  7971                           
  7972 ;; *************** function _ToMainHigh_sendmsg *****************
  7973 ;; Defined at:
  7974 ;;		line 126 in file "../src/messages.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;  length          1    wreg     unsigned char 
  7977 ;;  msgtype         1   22[BANK0 ] unsigned char 
  7978 ;;  data            2   23[BANK0 ] PTR void 
  7979 ;;		 -> NULL(0), main@ic(64), 
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;  length          1   25[BANK0 ] unsigned char 
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      char 
  7984 ;; Registers used:
  7985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7991 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7992 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7994 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7995 ;;Total ram usage:        4 bytes
  7996 ;; Hardware stack levels used:    1
  7997 ;; Hardware stack levels required when called:    2
  7998 ;; This function calls:
  7999 ;;		i2_send_msg
  8000 ;; This function is called by:
  8001 ;;		_i2c_master_int_handler
  8002 ;; This function uses a non-reentrant model
  8003 ;;
  8004                           
  8005                           	psect	text48
  8006  001B7E                     __ptext48:
  8007                           	opt stack 0
  8008  001B7E                     _ToMainHigh_sendmsg:
  8009                           	opt stack 17
  8010                           
  8011                           ;incstack = 0
  8012                           ;ToMainHigh_sendmsg@length stored from wreg
  8013  001B7E  0100               	movlb	0	; () banked
  8014  001B80  6F79               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8018                           ;	Return value of _ToMainHigh_sendmsg is never used
  8019  001B82  0102               	movlb	2	; () banked
  8020  001B84  0E02               	movlw	high _ToMainHigh_MQ
  8021  001B86  0100               	movlb	0	; () banked
  8022  001B88  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8023  001B8A  0102               	movlb	2	; () banked
  8024  001B8C  0E76               	movlw	low _ToMainHigh_MQ
  8025  001B8E  0100               	movlb	0	; () banked
  8026  001B90  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  8027  001B92  C079  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8028  001B96  C076  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8029  001B9A  0100               	movlb	0	; () banked
  8030  001B9C  C078  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8031  001BA0  0100               	movlb	0	; () banked
  8032  001BA2  C077  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8033  001BA6  EC79  F006         	call	i2_send_msg	;wreg free
  8034  001BAA  0012               	return	
  8035  001BAC                     __end_of_ToMainHigh_sendmsg:
  8036                           	opt stack 0
  8037                           pclatu	equ	0xFFB
  8038                           pclath	equ	0xFFA
  8039                           tblptru	equ	0xFF8
  8040                           tblptrh	equ	0xFF7
  8041                           tblptrl	equ	0xFF6
  8042                           tablat	equ	0xFF5
  8043                           prodh	equ	0xFF4
  8044                           prodl	equ	0xFF3
  8045                           intcon	equ	0xFF2
  8046                           intcon2	equ	0xFF1
  8047                           postinc0	equ	0xFEE
  8048                           fsr0h	equ	0xFEA
  8049                           fsr0l	equ	0xFE9
  8050                           wreg	equ	0xFE8
  8051                           indf1	equ	0xFE7
  8052                           fsr1h	equ	0xFE2
  8053                           fsr1l	equ	0xFE1
  8054                           bsr	equ	0xFE0
  8055                           indf2	equ	0xFDF
  8056                           postinc2	equ	0xFDE
  8057                           postdec2	equ	0xFDD
  8058                           fsr2h	equ	0xFDA
  8059                           fsr2l	equ	0xFD9
  8060                           status	equ	0xFD8
  8061                           
  8062 ;; *************** function i2_send_msg *****************
  8063 ;; Defined at:
  8064 ;;		line 24 in file "../src/messages.c"
  8065 ;; Parameters:    Size  Location     Type
  8066 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8067 ;;		 -> FromMainHigh_MQ(118), FromMainLow_MQ(118), MotorData_MQ(118), SensorData_MQ(118), 
  8068 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  8069 ;;  length          1   12[BANK0 ] unsigned char 
  8070 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8071 ;;  data            2   14[BANK0 ] PTR void 
  8072 ;;		 -> uart_recv_int_handler@readin(1), NULL(0), main@msgbuffer(27), main@t1thread_data(2), 
  8073 ;;		 -> main@ic(64), 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8076 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), ToMainHigh_MQ.queue(116), ToMainLow_MQ.queue(116), 
  8077 ;;		 -> SensorData_MQ.queue(116), MotorData_MQ.queue(116), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  8078 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  8079 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8080 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8081 ;; Return value:  Size  Location     Type
  8082 ;;                  1    wreg      char 
  8083 ;; Registers used:
  8084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8085 ;; Tracked objects:
  8086 ;;		On entry : 0/0
  8087 ;;		On exit  : 0/0
  8088 ;;		Unchanged: 0/0
  8089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8090 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8091 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8092 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8093 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8094 ;;Total ram usage:       12 bytes
  8095 ;; Hardware stack levels used:    1
  8096 ;; Hardware stack levels required when called:    1
  8097 ;; This function calls:
  8098 ;;		i2_memcpy
  8099 ;; This function is called by:
  8100 ;;		_ToMainHigh_sendmsg
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           
  8104                           	psect	text49
  8105  000CF2                     __ptext49:
  8106                           	opt stack 0
  8107  000CF2                     i2_send_msg:
  8108                           	opt stack 17
  8109                           
  8110                           ;messages.c: 25: unsigned char slot;
  8111                           ;messages.c: 27: msg *qmsg;
  8112                           ;messages.c: 28: size_t tlength = length;
  8113                           
  8114                           ;incstack = 0
  8115  000CF2  0100               	movlb	0	; () banked
  8116  000CF4  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  8117  000CF8  0100               	movlb	0	; () banked
  8118  000CFA  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8119                           
  8120                           ; BSR set to: 0
  8121                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8122  000CFC  0100               	movlb	0	; () banked
  8123  000CFE  EE20 F074          	lfsr	2,116
  8124  000D02  0100               	movlb	0	; () banked
  8125  000D04  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8126  000D06  26D9               	addwf	fsr2l,f,c
  8127  000D08  0100               	movlb	0	; () banked
  8128  000D0A  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8129  000D0C  22DA               	addwfc	fsr2h,f,c
  8130  000D0E  50DF               	movf	indf2,w,c
  8131  000D10  0100               	movlb	0	; () banked
  8132  000D12  6F73               	movwf	i2send_msg@slot& (0+255),b
  8133                           
  8134                           ; BSR set to: 0
  8135                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8136  000D14  0100               	movlb	0	; () banked
  8137  000D16  5173               	movf	i2send_msg@slot& (0+255),w,b
  8138  000D18  0D1D               	mullw	29
  8139  000D1A  50F3               	movf	prodl,w,c
  8140  000D1C  0100               	movlb	0	; () banked
  8141  000D1E  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  8142  000D20  0100               	movlb	0	; () banked
  8143  000D22  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  8144  000D24  50F4               	movf	prodh,w,c
  8145  000D26  0100               	movlb	0	; () banked
  8146  000D28  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8147  000D2A  0100               	movlb	0	; () banked
  8148  000D2C  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;messages.c: 41: if (qmsg->full != 0) {
  8152  000D2E  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8153  000D32  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8154  000D36  50DF               	movf	indf2,w,c
  8155  000D38  B4D8               	btfsc	status,2,c
  8156  000D3A  D002               	goto	i2l2276
  8157                           
  8158                           ; BSR set to: 0
  8159                           ;messages.c: 42: return (-1);
  8160  000D3C  0EFF               	movlw	255
  8161  000D3E  0012               	return	
  8162  000D40                     i2l2276:
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;messages.c: 43: }
  8166                           ;messages.c: 46: qmsg->length = length;
  8167  000D40  0100               	movlb	0	; () banked
  8168  000D42  EE20 F001          	lfsr	2,1
  8169  000D46  0100               	movlb	0	; () banked
  8170  000D48  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8171  000D4A  26D9               	addwf	fsr2l,f,c
  8172  000D4C  0100               	movlb	0	; () banked
  8173  000D4E  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8174  000D50  22DA               	addwfc	fsr2h,f,c
  8175  000D52  0100               	movlb	0	; () banked
  8176  000D54  C06C  FFDF         	movff	i2send_msg@length,indf2
  8177                           
  8178                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8179  000D58  0100               	movlb	0	; () banked
  8180  000D5A  EE20 F002          	lfsr	2,2
  8181  000D5E  0100               	movlb	0	; () banked
  8182  000D60  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8183  000D62  26D9               	addwf	fsr2l,f,c
  8184  000D64  0100               	movlb	0	; () banked
  8185  000D66  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8186  000D68  22DA               	addwfc	fsr2h,f,c
  8187  000D6A  0100               	movlb	0	; () banked
  8188  000D6C  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8192  000D70  0E03               	movlw	3
  8193  000D72  0100               	movlb	0	; () banked
  8194  000D74  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  8195  000D76  0100               	movlb	0	; () banked
  8196  000D78  6F60               	movwf	i2memcpy@d1& (0+255),b
  8197  000D7A  0E00               	movlw	0
  8198  000D7C  0100               	movlb	0	; () banked
  8199  000D7E  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8200  000D80  0100               	movlb	0	; () banked
  8201  000D82  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  8202  000D84  0100               	movlb	0	; () banked
  8203  000D86  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8204  000D8A  0100               	movlb	0	; () banked
  8205  000D8C  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  8206  000D90  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  8207  000D94  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8208  000D98  ECFC  F00B         	call	i2_memcpy	;wreg free
  8209                           
  8210                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8211  000D9C  0100               	movlb	0	; () banked
  8212  000D9E  EE20 F074          	lfsr	2,116
  8213  000DA2  0100               	movlb	0	; () banked
  8214  000DA4  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8215  000DA6  26D9               	addwf	fsr2l,f,c
  8216  000DA8  0100               	movlb	0	; () banked
  8217  000DAA  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8218  000DAC  22DA               	addwfc	fsr2h,f,c
  8219  000DAE  0100               	movlb	0	; () banked
  8220  000DB0  EE10 F074          	lfsr	1,116
  8221  000DB4  0100               	movlb	0	; () banked
  8222  000DB6  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8223  000DB8  26E1               	addwf	fsr1l,f,c
  8224  000DBA  0100               	movlb	0	; () banked
  8225  000DBC  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8226  000DBE  22E2               	addwfc	fsr1h,f,c
  8227  000DC0  50E7               	movf	indf1,w,c
  8228  000DC2  0100               	movlb	0	; () banked
  8229  000DC4  6F70               	movwf	??i2_send_msg& (0+255),b
  8230  000DC6  0100               	movlb	0	; () banked
  8231  000DC8  2970               	incf	??i2_send_msg& (0+255),w,b
  8232  000DCA  0B03               	andlw	3
  8233  000DCC  6EDF               	movwf	indf2,c
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;messages.c: 59: qmsg->full = 1;
  8237  000DCE  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8238  000DD2  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8239  000DD6  0E01               	movlw	1
  8240  000DD8  6EDF               	movwf	indf2,c
  8241                           
  8242                           ; BSR set to: 0
  8243                           ;messages.c: 60: return (1);
  8244  000DDA  0E01               	movlw	1
  8245  000DDC  0012               	return	
  8246  000DDE                     __end_ofi2_send_msg:
  8247                           	opt stack 0
  8248                           pclatu	equ	0xFFB
  8249                           pclath	equ	0xFFA
  8250                           tblptru	equ	0xFF8
  8251                           tblptrh	equ	0xFF7
  8252                           tblptrl	equ	0xFF6
  8253                           tablat	equ	0xFF5
  8254                           prodh	equ	0xFF4
  8255                           prodl	equ	0xFF3
  8256                           intcon	equ	0xFF2
  8257                           intcon2	equ	0xFF1
  8258                           postinc0	equ	0xFEE
  8259                           fsr0h	equ	0xFEA
  8260                           fsr0l	equ	0xFE9
  8261                           wreg	equ	0xFE8
  8262                           indf1	equ	0xFE7
  8263                           fsr1h	equ	0xFE2
  8264                           fsr1l	equ	0xFE1
  8265                           bsr	equ	0xFE0
  8266                           indf2	equ	0xFDF
  8267                           postinc2	equ	0xFDE
  8268                           postdec2	equ	0xFDD
  8269                           fsr2h	equ	0xFDA
  8270                           fsr2l	equ	0xFD9
  8271                           status	equ	0xFD8
  8272                           
  8273 ;; *************** function _FromMainHigh_recvmsg *****************
  8274 ;; Defined at:
  8275 ;;		line 231 in file "../src/messages.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;  maxlength       1    wreg     unsigned char 
  8278 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8279 ;;		 -> RAM(3775), 
  8280 ;;  data            2   26[BANK0 ] PTR void 
  8281 ;;		 -> NULL(0), main@ic(64), 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      char 
  8286 ;; Registers used:
  8287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8293 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8296 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8297 ;;Total ram usage:        5 bytes
  8298 ;; Hardware stack levels used:    1
  8299 ;; Hardware stack levels required when called:    2
  8300 ;; This function calls:
  8301 ;;		i2_recv_msg
  8302 ;; This function is called by:
  8303 ;;		_i2c_master_int_handler
  8304 ;; This function uses a non-reentrant model
  8305 ;;
  8306                           
  8307                           	psect	text50
  8308  001A28                     __ptext50:
  8309                           	opt stack 0
  8310  001A28                     _FromMainHigh_recvmsg:
  8311                           	opt stack 17
  8312                           
  8313                           ; BSR set to: 0
  8314                           ;incstack = 0
  8315                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  8316  001A28  0100               	movlb	0	; () banked
  8317  001A2A  6F7C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;messages.c: 237: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8321                           ;	Return value of _FromMainHigh_recvmsg is never used
  8322  001A2C  0104               	movlb	4	; () banked
  8323  001A2E  0E04               	movlw	high _FromMainHigh_MQ
  8324  001A30  0100               	movlb	0	; () banked
  8325  001A32  6F6B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8326  001A34  0104               	movlb	4	; () banked
  8327  001A36  0E00               	movlw	low _FromMainHigh_MQ
  8328  001A38  0100               	movlb	0	; () banked
  8329  001A3A  6F6A               	movwf	i2recv_msg@qptr& (0+255),b
  8330  001A3C  C07C  F06C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8331  001A40  0100               	movlb	0	; () banked
  8332  001A42  C079  F06E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8333  001A46  0100               	movlb	0	; () banked
  8334  001A48  C078  F06D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8335  001A4C  0100               	movlb	0	; () banked
  8336  001A4E  C07B  F070         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8337  001A52  0100               	movlb	0	; () banked
  8338  001A54  C07A  F06F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  8339  001A58  EC74  F005         	call	i2_recv_msg	;wreg free
  8340  001A5C  0012               	return	
  8341  001A5E                     __end_of_FromMainHigh_recvmsg:
  8342                           	opt stack 0
  8343                           pclatu	equ	0xFFB
  8344                           pclath	equ	0xFFA
  8345                           tblptru	equ	0xFF8
  8346                           tblptrh	equ	0xFF7
  8347                           tblptrl	equ	0xFF6
  8348                           tablat	equ	0xFF5
  8349                           prodh	equ	0xFF4
  8350                           prodl	equ	0xFF3
  8351                           intcon	equ	0xFF2
  8352                           intcon2	equ	0xFF1
  8353                           postinc0	equ	0xFEE
  8354                           fsr0h	equ	0xFEA
  8355                           fsr0l	equ	0xFE9
  8356                           wreg	equ	0xFE8
  8357                           indf1	equ	0xFE7
  8358                           fsr1h	equ	0xFE2
  8359                           fsr1l	equ	0xFE1
  8360                           bsr	equ	0xFE0
  8361                           indf2	equ	0xFDF
  8362                           postinc2	equ	0xFDE
  8363                           postdec2	equ	0xFDD
  8364                           fsr2h	equ	0xFDA
  8365                           fsr2l	equ	0xFD9
  8366                           status	equ	0xFD8
  8367                           
  8368 ;; *************** function i2_recv_msg *****************
  8369 ;; Defined at:
  8370 ;;		line 63 in file "../src/messages.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8373 ;;		 -> FromMainHigh_MQ(118), FromMainLow_MQ(118), MotorData_MQ(118), SensorData_MQ(118), 
  8374 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  8375 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8376 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8377 ;;		 -> RAM(3775), main@msgtype(1), 
  8378 ;;  data            2   15[BANK0 ] PTR void 
  8379 ;;		 -> NULL(0), main@msgbuffer(27), main@ic(64), main@uc(18), 
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8382 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), ToMainHigh_MQ.queue(116), ToMainLow_MQ.queue(116), 
  8383 ;;		 -> SensorData_MQ.queue(116), MotorData_MQ.queue(116), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  8384 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  8385 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8386 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  1    wreg      char 
  8389 ;; Registers used:
  8390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8396 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8397 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8398 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8399 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8400 ;;Total ram usage:       14 bytes
  8401 ;; Hardware stack levels used:    1
  8402 ;; Hardware stack levels required when called:    1
  8403 ;; This function calls:
  8404 ;;		i2_memcpy
  8405 ;; This function is called by:
  8406 ;;		_FromMainHigh_recvmsg
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text51
  8411  000AE8                     __ptext51:
  8412                           	opt stack 0
  8413  000AE8                     i2_recv_msg:
  8414                           	opt stack 17
  8415                           
  8416                           ;messages.c: 64: unsigned char slot;
  8417                           ;messages.c: 68: msg *qmsg;
  8418                           ;messages.c: 69: size_t tlength;
  8419                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8420                           
  8421                           ;incstack = 0
  8422  000AE8  0100               	movlb	0	; () banked
  8423  000AEA  EE20 F075          	lfsr	2,117
  8424  000AEE  0100               	movlb	0	; () banked
  8425  000AF0  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8426  000AF2  26D9               	addwf	fsr2l,f,c
  8427  000AF4  0100               	movlb	0	; () banked
  8428  000AF6  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8429  000AF8  22DA               	addwfc	fsr2h,f,c
  8430  000AFA  50DF               	movf	indf2,w,c
  8431  000AFC  0100               	movlb	0	; () banked
  8432  000AFE  6F73               	movwf	i2recv_msg@slot& (0+255),b
  8433                           
  8434                           ; BSR set to: 0
  8435                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8436  000B00  0100               	movlb	0	; () banked
  8437  000B02  5173               	movf	i2recv_msg@slot& (0+255),w,b
  8438  000B04  0D1D               	mullw	29
  8439  000B06  50F3               	movf	prodl,w,c
  8440  000B08  0100               	movlb	0	; () banked
  8441  000B0A  256A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8442  000B0C  0100               	movlb	0	; () banked
  8443  000B0E  6F76               	movwf	i2recv_msg@qmsg& (0+255),b
  8444  000B10  50F4               	movf	prodh,w,c
  8445  000B12  0100               	movlb	0	; () banked
  8446  000B14  216B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8447  000B16  0100               	movlb	0	; () banked
  8448  000B18  6F77               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;messages.c: 74: if (qmsg->full == 1) {
  8452  000B1A  0E01               	movlw	1
  8453  000B1C  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8454  000B20  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8455  000B24  62DF               	cpfseq	indf2,c
  8456  000B26  D06D               	goto	i2l2348
  8457                           
  8458                           ; BSR set to: 0
  8459                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8460  000B28  0100               	movlb	0	; () banked
  8461  000B2A  EE20 F001          	lfsr	2,1
  8462  000B2E  0100               	movlb	0	; () banked
  8463  000B30  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8464  000B32  26D9               	addwf	fsr2l,f,c
  8465  000B34  0100               	movlb	0	; () banked
  8466  000B36  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8467  000B38  22DA               	addwfc	fsr2h,f,c
  8468  000B3A  50DF               	movf	indf2,w,c
  8469  000B3C  0100               	movlb	0	; () banked
  8470  000B3E  5D6C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8471  000B40  B0D8               	btfsc	status,0,c
  8472  000B42  D002               	goto	i2l2332
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;messages.c: 77: return (-3);
  8476  000B44  0EFD               	movlw	253
  8477  000B46  0012               	return	
  8478  000B48                     i2l2332:
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;messages.c: 78: }
  8482                           ;messages.c: 80: tlength = qmsg->length;
  8483  000B48  0100               	movlb	0	; () banked
  8484  000B4A  EE20 F001          	lfsr	2,1
  8485  000B4E  0100               	movlb	0	; () banked
  8486  000B50  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8487  000B52  26D9               	addwf	fsr2l,f,c
  8488  000B54  0100               	movlb	0	; () banked
  8489  000B56  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8490  000B58  22DA               	addwfc	fsr2h,f,c
  8491  000B5A  50DF               	movf	indf2,w,c
  8492  000B5C  0100               	movlb	0	; () banked
  8493  000B5E  6F71               	movwf	??i2_recv_msg& (0+255),b
  8494  000B60  0100               	movlb	0	; () banked
  8495  000B62  5171               	movf	??i2_recv_msg& (0+255),w,b
  8496  000B64  0100               	movlb	0	; () banked
  8497  000B66  6F74               	movwf	i2recv_msg@tlength& (0+255),b
  8498  000B68  0100               	movlb	0	; () banked
  8499  000B6A  6B75               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  8503  000B6C  0100               	movlb	0	; () banked
  8504  000B6E  C070  F061         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  8505  000B72  0100               	movlb	0	; () banked
  8506  000B74  C06F  F060         	movff	i2recv_msg@data,i2memcpy@d1
  8507  000B78  0E03               	movlw	3
  8508  000B7A  0100               	movlb	0	; () banked
  8509  000B7C  2576               	addwf	i2recv_msg@qmsg& (0+255),w,b
  8510  000B7E  0100               	movlb	0	; () banked
  8511  000B80  6F71               	movwf	??i2_recv_msg& (0+255),b
  8512  000B82  0E00               	movlw	0
  8513  000B84  0100               	movlb	0	; () banked
  8514  000B86  2177               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  8515  000B88  0100               	movlb	0	; () banked
  8516  000B8A  6F72               	movwf	(??i2_recv_msg+1)& (0+255),b
  8517  000B8C  C071  F062         	movff	??i2_recv_msg,i2memcpy@s1
  8518  000B90  C072  F063         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  8519  000B94  C074  F064         	movff	i2recv_msg@tlength,i2memcpy@n
  8520  000B98  C075  F065         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  8521  000B9C  ECFC  F00B         	call	i2_memcpy	;wreg free
  8522                           
  8523                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  8524  000BA0  0100               	movlb	0	; () banked
  8525  000BA2  EE20 F075          	lfsr	2,117
  8526  000BA6  0100               	movlb	0	; () banked
  8527  000BA8  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8528  000BAA  26D9               	addwf	fsr2l,f,c
  8529  000BAC  0100               	movlb	0	; () banked
  8530  000BAE  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8531  000BB0  22DA               	addwfc	fsr2h,f,c
  8532  000BB2  0100               	movlb	0	; () banked
  8533  000BB4  EE10 F075          	lfsr	1,117
  8534  000BB8  0100               	movlb	0	; () banked
  8535  000BBA  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8536  000BBC  26E1               	addwf	fsr1l,f,c
  8537  000BBE  0100               	movlb	0	; () banked
  8538  000BC0  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8539  000BC2  22E2               	addwfc	fsr1h,f,c
  8540  000BC4  50E7               	movf	indf1,w,c
  8541  000BC6  0100               	movlb	0	; () banked
  8542  000BC8  6F71               	movwf	??i2_recv_msg& (0+255),b
  8543  000BCA  0100               	movlb	0	; () banked
  8544  000BCC  2971               	incf	??i2_recv_msg& (0+255),w,b
  8545  000BCE  0B03               	andlw	3
  8546  000BD0  6EDF               	movwf	indf2,c
  8547                           
  8548                           ; BSR set to: 0
  8549                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  8550  000BD2  0100               	movlb	0	; () banked
  8551  000BD4  EE20 F002          	lfsr	2,2
  8552  000BD8  0100               	movlb	0	; () banked
  8553  000BDA  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8554  000BDC  26D9               	addwf	fsr2l,f,c
  8555  000BDE  0100               	movlb	0	; () banked
  8556  000BE0  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8557  000BE2  22DA               	addwfc	fsr2h,f,c
  8558  000BE4  C06D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  8559  000BE8  C06E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  8560  000BEC  CFDF FFE7          	movff	indf2,indf1
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;messages.c: 91: qmsg->full = 0;
  8564  000BF0  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8565  000BF4  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8566  000BF8  0E00               	movlw	0
  8567  000BFA  6EDF               	movwf	indf2,c
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;messages.c: 92: return (tlength);
  8571  000BFC  0100               	movlb	0	; () banked
  8572  000BFE  5174               	movf	i2recv_msg@tlength& (0+255),w,b
  8573  000C00  0012               	return	
  8574  000C02                     i2l2348:
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;messages.c: 94: return (-4);
  8578  000C02  0EFC               	movlw	252
  8579  000C04  0012               	return	
  8580  000C06                     __end_ofi2_recv_msg:
  8581                           	opt stack 0
  8582                           pclatu	equ	0xFFB
  8583                           pclath	equ	0xFFA
  8584                           tblptru	equ	0xFF8
  8585                           tblptrh	equ	0xFF7
  8586                           tblptrl	equ	0xFF6
  8587                           tablat	equ	0xFF5
  8588                           prodh	equ	0xFF4
  8589                           prodl	equ	0xFF3
  8590                           intcon	equ	0xFF2
  8591                           intcon2	equ	0xFF1
  8592                           postinc0	equ	0xFEE
  8593                           fsr0h	equ	0xFEA
  8594                           fsr0l	equ	0xFE9
  8595                           wreg	equ	0xFE8
  8596                           indf1	equ	0xFE7
  8597                           fsr1h	equ	0xFE2
  8598                           fsr1l	equ	0xFE1
  8599                           bsr	equ	0xFE0
  8600                           indf2	equ	0xFDF
  8601                           postinc2	equ	0xFDE
  8602                           postdec2	equ	0xFDD
  8603                           fsr2h	equ	0xFDA
  8604                           fsr2l	equ	0xFD9
  8605                           status	equ	0xFD8
  8606                           
  8607 ;; *************** function i2_memcpy *****************
  8608 ;; Defined at:
  8609 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  d1              2    0[BANK0 ] PTR void 
  8612 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), ToMainHigh_MQ.queue(116), ToMainLow_MQ.queue(116), 
  8613 ;;		 -> SensorData_MQ.queue(116), MotorData_MQ.queue(116), NULL(0), FromMainHigh_MQ(118), 
  8614 ;;		 -> FromMainLow_MQ(118), MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), 
  8615 ;;		 -> ToMainLow_MQ(118), main@msgbuffer(27), main@ic(64), main@uc(18), 
  8616 ;;  s1              2    2[BANK0 ] PTR const void 
  8617 ;;		 -> ToMainLow_MQ.data(26), ToMainHigh_MQ.data(26), SensorData_MQ.data(26), MotorData_MQ.data(26), 
  8618 ;;		 -> FromMainLow_MQ.data(26), FromMainHigh_MQ.data(26), MotorData_MQ.queue.data(26), SensorData_MQ.queue.data(26), 
  8619 ;;		 -> ToMainLow_MQ.queue.data(26), ToMainHigh_MQ.queue.data(26), FromMainHigh_MQ.queue.data(26), FromMainLow_MQ.queue.
      +data(26), 
  8620 ;;		 -> uart_recv_int_handler@readin(1), NULL(0), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  8621 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  8622 ;;		 -> main@msgbuffer(27), main@t1thread_data(2), main@ic(64), 
  8623 ;;  n               2    4[BANK0 ] unsigned int 
  8624 ;; Auto vars:     Size  Location     Type
  8625 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8626 ;;		 -> ToMainLow_MQ.data(26), ToMainHigh_MQ.data(26), SensorData_MQ.data(26), MotorData_MQ.data(26), 
  8627 ;;		 -> FromMainLow_MQ.data(26), FromMainHigh_MQ.data(26), MotorData_MQ.queue.data(26), SensorData_MQ.queue.data(26), 
  8628 ;;		 -> ToMainLow_MQ.queue.data(26), ToMainHigh_MQ.queue.data(26), FromMainHigh_MQ.queue.data(26), FromMainLow_MQ.queue.
      +data(26), 
  8629 ;;		 -> uart_recv_int_handler@readin(1), NULL(0), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  8630 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  8631 ;;		 -> main@msgbuffer(27), main@t1thread_data(2), main@ic(64), 
  8632 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8633 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), ToMainHigh_MQ.queue(116), ToMainLow_MQ.queue(116), 
  8634 ;;		 -> SensorData_MQ.queue(116), MotorData_MQ.queue(116), NULL(0), FromMainHigh_MQ(118), 
  8635 ;;		 -> FromMainLow_MQ(118), MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), 
  8636 ;;		 -> ToMainLow_MQ(118), main@msgbuffer(27), main@ic(64), main@uc(18), 
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  2    0[BANK0 ] PTR void 
  8639 ;; Registers used:
  8640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8646 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8647 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8649 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8650 ;;Total ram usage:       10 bytes
  8651 ;; Hardware stack levels used:    1
  8652 ;; This function calls:
  8653 ;;		Nothing
  8654 ;; This function is called by:
  8655 ;;		i2_send_msg
  8656 ;;		i2_recv_msg
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           	psect	text52
  8661  0017F8                     __ptext52:
  8662                           	opt stack 0
  8663  0017F8                     i2_memcpy:
  8664                           	opt stack 17
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;incstack = 0
  8668  0017F8  0100               	movlb	0	; () banked
  8669  0017FA  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8670  0017FE  0100               	movlb	0	; () banked
  8671  001800  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  8672  001804  0100               	movlb	0	; () banked
  8673  001806  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8674  00180A  0100               	movlb	0	; () banked
  8675  00180C  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  8676  001810  D010               	goto	i2l2190
  8677  001812                     i2l2184:
  8678                           
  8679                           ; BSR set to: 0
  8680  001812  C068  FFD9         	movff	i2memcpy@s,fsr2l
  8681  001816  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  8682  00181A  C066  FFE1         	movff	i2memcpy@d,fsr1l
  8683  00181E  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  8684  001822  CFDF FFE7          	movff	indf2,indf1
  8685                           
  8686                           ; BSR set to: 0
  8687  001826  0100               	movlb	0	; () banked
  8688  001828  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  8689  00182A  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  8690                           
  8691                           ; BSR set to: 0
  8692  00182C  0100               	movlb	0	; () banked
  8693  00182E  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  8694  001830  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  8695  001832                     i2l2190:
  8696                           
  8697                           ; BSR set to: 0
  8698  001832  0100               	movlb	0	; () banked
  8699  001834  0764               	decf	i2memcpy@n& (0+255),f,b
  8700  001836  A0D8               	btfss	status,0,c
  8701  001838  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  8702  00183A  0100               	movlb	0	; () banked
  8703  00183C  2964               	incf	i2memcpy@n& (0+255),w,b
  8704  00183E  B4D8               	btfsc	status,2,c
  8705  001840  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  8706  001842  B4D8               	btfsc	status,2,c
  8707                           
  8708                           ; BSR set to: 0
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;	Return value of i2_memcpy is never used
  8712  001844  0012               	return	
  8713  001846  D7E5               	goto	i2l2184
  8714  001848                     __end_ofi2_memcpy:
  8715                           	opt stack 0
  8716                           pclatu	equ	0xFFB
  8717                           pclath	equ	0xFFA
  8718                           tblptru	equ	0xFF8
  8719                           tblptrh	equ	0xFF7
  8720                           tblptrl	equ	0xFF6
  8721                           tablat	equ	0xFF5
  8722                           prodh	equ	0xFF4
  8723                           prodl	equ	0xFF3
  8724                           intcon	equ	0xFF2
  8725                           intcon2	equ	0xFF1
  8726                           postinc0	equ	0xFEE
  8727                           fsr0h	equ	0xFEA
  8728                           fsr0l	equ	0xFE9
  8729                           wreg	equ	0xFE8
  8730                           indf1	equ	0xFE7
  8731                           fsr1h	equ	0xFE2
  8732                           fsr1l	equ	0xFE1
  8733                           bsr	equ	0xFE0
  8734                           indf2	equ	0xFDF
  8735                           postinc2	equ	0xFDE
  8736                           postdec2	equ	0xFDD
  8737                           fsr2h	equ	0xFDA
  8738                           fsr2l	equ	0xFD9
  8739                           status	equ	0xFD8
  8740                           
  8741 ;; *************** function _SleepIfOkay *****************
  8742 ;; Defined at:
  8743 ;;		line 276 in file "../src/messages.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;		None
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;		None
  8748 ;; Return value:  Size  Location     Type
  8749 ;;		None               void
  8750 ;; Registers used:
  8751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8761 ;;Total ram usage:        0 bytes
  8762 ;; Hardware stack levels used:    1
  8763 ;; Hardware stack levels required when called:    2
  8764 ;; This function calls:
  8765 ;;		_enter_sleep_mode
  8766 ;;		i2_check_msg
  8767 ;;		i2_in_high_int
  8768 ;;		i2_in_low_int
  8769 ;; This function is called by:
  8770 ;;		_InterruptHandlerHigh
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774                           	psect	text53
  8775  0012D8                     __ptext53:
  8776                           	opt stack 0
  8777  0012D8                     _SleepIfOkay:
  8778                           	opt stack 18
  8779                           
  8780                           ;messages.c: 278: if (MQ_Main_Willing_to_block == 0) {
  8781                           
  8782                           ; BSR set to: 0
  8783                           ;incstack = 0
  8784  0012D8  0100               	movlb	0	; () banked
  8785  0012DA  67B5               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  8786  0012DC  D001               	goto	i2l2638
  8787  0012DE  0012               	return	
  8788  0012E0                     i2l2638:
  8789                           
  8790                           ; BSR set to: 0
  8791                           ;messages.c: 280: }
  8792                           ;messages.c: 283: if (in_low_int()) {
  8793  0012E0  EC83  F00C         	call	i2_in_low_int	;wreg free
  8794  0012E4  0100               	movlb	0	; () banked
  8795  0012E6  5163               	movf	(?i2_in_low_int+1)& (0+255),w,b
  8796  0012E8  0100               	movlb	0	; () banked
  8797  0012EA  1162               	iorwf	?i2_in_low_int& (0+255),w,b
  8798  0012EC  A4D8               	btfss	status,2,c
  8799  0012EE  0012               	return	
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;messages.c: 285: }
  8803                           ;messages.c: 288: if (!in_high_int()) {
  8804                           
  8805                           ; BSR set to: 0
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;messages.c: 284: return;
  8809  0012F0  EC70  F00E         	call	i2_in_high_int	;wreg free
  8810  0012F4  0100               	movlb	0	; () banked
  8811  0012F6  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8812  0012F8  0100               	movlb	0	; () banked
  8813  0012FA  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8814  0012FC  B4D8               	btfsc	status,2,c
  8815  0012FE  0012               	return	
  8816                           
  8817                           ; BSR set to: 0
  8818                           ;messages.c: 290: }
  8819                           ;messages.c: 295: if (check_msg(&ToMainHigh_MQ)) {
  8820                           
  8821                           ; BSR set to: 0
  8822                           
  8823                           ; BSR set to: 0
  8824                           ;messages.c: 289: return;
  8825  001300  0102               	movlb	2	; () banked
  8826  001302  0E02               	movlw	high _ToMainHigh_MQ
  8827  001304  0100               	movlb	0	; () banked
  8828  001306  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8829  001308  0102               	movlb	2	; () banked
  8830  00130A  0E76               	movlw	low _ToMainHigh_MQ
  8831  00130C  0100               	movlb	0	; () banked
  8832  00130E  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8833  001310  EC61  F00D         	call	i2_check_msg	;wreg free
  8834  001314  0900               	iorlw	0
  8835  001316  A4D8               	btfss	status,2,c
  8836  001318  0012               	return	
  8837                           
  8838                           ;messages.c: 297: }
  8839                           ;messages.c: 298: if (check_msg(&ToMainLow_MQ)) {
  8840                           
  8841                           ;messages.c: 296: return;
  8842  00131A  0101               	movlb	1	; () banked
  8843  00131C  0E01               	movlw	high _ToMainLow_MQ
  8844  00131E  0100               	movlb	0	; () banked
  8845  001320  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8846  001322  0101               	movlb	1	; () banked
  8847  001324  0E81               	movlw	low _ToMainLow_MQ
  8848  001326  0100               	movlb	0	; () banked
  8849  001328  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8850  00132A  EC61  F00D         	call	i2_check_msg	;wreg free
  8851  00132E  0900               	iorlw	0
  8852  001330  A4D8               	btfss	status,2,c
  8853  001332  0012               	return	
  8854                           
  8855                           ;messages.c: 300: }
  8856                           ;messages.c: 301: if (check_msg(&SensorData_MQ)) {
  8857                           
  8858                           ;messages.c: 299: return;
  8859  001334  0102               	movlb	2	; () banked
  8860  001336  0E02               	movlw	high _SensorData_MQ
  8861  001338  0100               	movlb	0	; () banked
  8862  00133A  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8863  00133C  0102               	movlb	2	; () banked
  8864  00133E  0E00               	movlw	low _SensorData_MQ
  8865  001340  0100               	movlb	0	; () banked
  8866  001342  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8867  001344  EC61  F00D         	call	i2_check_msg	;wreg free
  8868  001348  0900               	iorlw	0
  8869  00134A  A4D8               	btfss	status,2,c
  8870  00134C  0012               	return	
  8871                           
  8872                           ;messages.c: 303: }
  8873                           ;messages.c: 304: if (check_msg(&MotorData_MQ)) {
  8874                           
  8875                           ;messages.c: 302: return;
  8876  00134E  0103               	movlb	3	; () banked
  8877  001350  0E03               	movlw	high _MotorData_MQ
  8878  001352  0100               	movlb	0	; () banked
  8879  001354  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8880  001356  0103               	movlb	3	; () banked
  8881  001358  0E76               	movlw	low _MotorData_MQ
  8882  00135A  0100               	movlb	0	; () banked
  8883  00135C  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8884  00135E  EC61  F00D         	call	i2_check_msg	;wreg free
  8885  001362  0900               	iorlw	0
  8886  001364  B4D8               	btfsc	status,2,c
  8887                           
  8888                           ;messages.c: 306: }
  8889                           ;messages.c: 307: enter_sleep_mode();
  8890                           
  8891                           ;messages.c: 305: return;
  8892  001366  EC84  F00E         	call	_enter_sleep_mode	;wreg free
  8893  00136A  0012               	return	
  8894  00136C                     __end_of_SleepIfOkay:
  8895                           	opt stack 0
  8896                           pclatu	equ	0xFFB
  8897                           pclath	equ	0xFFA
  8898                           tblptru	equ	0xFF8
  8899                           tblptrh	equ	0xFF7
  8900                           tblptrl	equ	0xFF6
  8901                           tablat	equ	0xFF5
  8902                           prodh	equ	0xFF4
  8903                           prodl	equ	0xFF3
  8904                           intcon	equ	0xFF2
  8905                           intcon2	equ	0xFF1
  8906                           postinc0	equ	0xFEE
  8907                           fsr0h	equ	0xFEA
  8908                           fsr0l	equ	0xFE9
  8909                           wreg	equ	0xFE8
  8910                           indf1	equ	0xFE7
  8911                           fsr1h	equ	0xFE2
  8912                           fsr1l	equ	0xFE1
  8913                           bsr	equ	0xFE0
  8914                           indf2	equ	0xFDF
  8915                           postinc2	equ	0xFDE
  8916                           postdec2	equ	0xFDD
  8917                           fsr2h	equ	0xFDA
  8918                           fsr2l	equ	0xFD9
  8919                           status	equ	0xFD8
  8920                           
  8921 ;; *************** function i2_in_low_int *****************
  8922 ;; Defined at:
  8923 ;;		line 32 in file "../src/interrupts.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;		None
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;		None
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  2    2[BANK0 ] int 
  8930 ;; Registers used:
  8931 ;;		wreg, status,2, status,0, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8937 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8940 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8941 ;;Total ram usage:        2 bytes
  8942 ;; Hardware stack levels used:    1
  8943 ;; Hardware stack levels required when called:    1
  8944 ;; This function calls:
  8945 ;;		i2_in_high_int
  8946 ;; This function is called by:
  8947 ;;		_SleepIfOkay
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           	psect	text54
  8952  001906                     __ptext54:
  8953                           	opt stack 0
  8954  001906                     i2_in_low_int:
  8955                           	opt stack 18
  8956                           
  8957                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  8958                           
  8959                           ;incstack = 0
  8960  001906  ACF2               	btfss	intcon,6,c	;volatile
  8961  001908  D007               	goto	i2l2518
  8962                           
  8963                           ;interrupts.c: 34: return (0);
  8964  00190A  0E00               	movlw	0
  8965  00190C  0100               	movlb	0	; () banked
  8966  00190E  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8967  001910  0E00               	movlw	0
  8968  001912  0100               	movlb	0	; () banked
  8969  001914  6F62               	movwf	?i2_in_low_int& (0+255),b
  8970  001916  0012               	return	
  8971  001918                     i2l2518:
  8972  001918  EC70  F00E         	call	i2_in_high_int	;wreg free
  8973  00191C  0100               	movlb	0	; () banked
  8974  00191E  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8975  001920  0100               	movlb	0	; () banked
  8976  001922  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8977  001924  B4D8               	btfsc	status,2,c
  8978  001926  D007               	goto	i2l2526
  8979                           
  8980                           ; BSR set to: 0
  8981                           ;interrupts.c: 36: return (0);
  8982  001928  0E00               	movlw	0
  8983  00192A  0100               	movlb	0	; () banked
  8984  00192C  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8985  00192E  0E00               	movlw	0
  8986  001930  0100               	movlb	0	; () banked
  8987  001932  6F62               	movwf	?i2_in_low_int& (0+255),b
  8988  001934  0012               	return	
  8989  001936                     i2l2526:
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;interrupts.c: 38: return (1);
  8993  001936  0E00               	movlw	0
  8994  001938  0100               	movlb	0	; () banked
  8995  00193A  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8996  00193C  0E01               	movlw	1
  8997  00193E  0100               	movlb	0	; () banked
  8998  001940  6F62               	movwf	?i2_in_low_int& (0+255),b
  8999  001942  0012               	return	
  9000  001944                     __end_ofi2_in_low_int:
  9001                           	opt stack 0
  9002                           pclatu	equ	0xFFB
  9003                           pclath	equ	0xFFA
  9004                           tblptru	equ	0xFF8
  9005                           tblptrh	equ	0xFF7
  9006                           tblptrl	equ	0xFF6
  9007                           tablat	equ	0xFF5
  9008                           prodh	equ	0xFF4
  9009                           prodl	equ	0xFF3
  9010                           intcon	equ	0xFF2
  9011                           intcon2	equ	0xFF1
  9012                           postinc0	equ	0xFEE
  9013                           fsr0h	equ	0xFEA
  9014                           fsr0l	equ	0xFE9
  9015                           wreg	equ	0xFE8
  9016                           indf1	equ	0xFE7
  9017                           fsr1h	equ	0xFE2
  9018                           fsr1l	equ	0xFE1
  9019                           bsr	equ	0xFE0
  9020                           indf2	equ	0xFDF
  9021                           postinc2	equ	0xFDE
  9022                           postdec2	equ	0xFDD
  9023                           fsr2h	equ	0xFDA
  9024                           fsr2l	equ	0xFD9
  9025                           status	equ	0xFD8
  9026                           
  9027 ;; *************** function i2_in_high_int *****************
  9028 ;; Defined at:
  9029 ;;		line 24 in file "../src/interrupts.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;		None
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;		None
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  2    0[BANK0 ] int 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9043 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9046 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9047 ;;Total ram usage:        2 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; This function calls:
  9050 ;;		Nothing
  9051 ;; This function is called by:
  9052 ;;		_SleepIfOkay
  9053 ;;		i2_in_low_int
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text55
  9058  001CE0                     __ptext55:
  9059                           	opt stack 0
  9060  001CE0                     i2_in_high_int:
  9061                           	opt stack 18
  9062                           
  9063                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;incstack = 0
  9067  001CE0  0E00               	movlw	0
  9068  001CE2  AEF2               	btfss	intcon,7,c	;volatile
  9069  001CE4  0E01               	movlw	1
  9070  001CE6  0100               	movlb	0	; () banked
  9071  001CE8  6F60               	movwf	?i2_in_high_int& (0+255),b
  9072  001CEA  0100               	movlb	0	; () banked
  9073  001CEC  6B61               	clrf	(?i2_in_high_int+1)& (0+255),b
  9074  001CEE  0012               	return	
  9075  001CF0                     __end_ofi2_in_high_int:
  9076                           	opt stack 0
  9077                           pclatu	equ	0xFFB
  9078                           pclath	equ	0xFFA
  9079                           tblptru	equ	0xFF8
  9080                           tblptrh	equ	0xFF7
  9081                           tblptrl	equ	0xFF6
  9082                           tablat	equ	0xFF5
  9083                           prodh	equ	0xFF4
  9084                           prodl	equ	0xFF3
  9085                           intcon	equ	0xFF2
  9086                           intcon2	equ	0xFF1
  9087                           postinc0	equ	0xFEE
  9088                           fsr0h	equ	0xFEA
  9089                           fsr0l	equ	0xFE9
  9090                           wreg	equ	0xFE8
  9091                           indf1	equ	0xFE7
  9092                           fsr1h	equ	0xFE2
  9093                           fsr1l	equ	0xFE1
  9094                           bsr	equ	0xFE0
  9095                           indf2	equ	0xFDF
  9096                           postinc2	equ	0xFDE
  9097                           postdec2	equ	0xFDD
  9098                           fsr2h	equ	0xFDA
  9099                           fsr2l	equ	0xFD9
  9100                           status	equ	0xFD8
  9101                           
  9102 ;; *************** function i2_check_msg *****************
  9103 ;; Defined at:
  9104 ;;		line 270 in file "../src/messages.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9107 ;;		 -> MotorData_MQ(118), SensorData_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;		None
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  1    wreg      unsigned char 
  9112 ;; Registers used:
  9113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9119 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9121 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9122 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9123 ;;Total ram usage:        3 bytes
  9124 ;; Hardware stack levels used:    1
  9125 ;; This function calls:
  9126 ;;		Nothing
  9127 ;; This function is called by:
  9128 ;;		_SleepIfOkay
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text56
  9133  001AC2                     __ptext56:
  9134                           	opt stack 0
  9135  001AC2                     i2_check_msg:
  9136                           	opt stack 19
  9137                           
  9138                           ;messages.c: 271: return (qptr->queue[qptr->cur_read_ind].full);
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;incstack = 0
  9142  001AC2  0100               	movlb	0	; () banked
  9143  001AC4  EE20 F075          	lfsr	2,117
  9144  001AC8  0100               	movlb	0	; () banked
  9145  001ACA  5160               	movf	i2check_msg@qptr& (0+255),w,b
  9146  001ACC  26D9               	addwf	fsr2l,f,c
  9147  001ACE  0100               	movlb	0	; () banked
  9148  001AD0  5161               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  9149  001AD2  22DA               	addwfc	fsr2h,f,c
  9150  001AD4  50DF               	movf	indf2,w,c
  9151  001AD6  0100               	movlb	0	; () banked
  9152  001AD8  6F62               	movwf	??i2_check_msg& (0+255),b
  9153  001ADA  0100               	movlb	0	; () banked
  9154  001ADC  5162               	movf	??i2_check_msg& (0+255),w,b
  9155  001ADE  0D1D               	mullw	29
  9156  001AE0  50F3               	movf	prodl,w,c
  9157  001AE2  0100               	movlb	0	; () banked
  9158  001AE4  2560               	addwf	i2check_msg@qptr& (0+255),w,b
  9159  001AE6  6ED9               	movwf	fsr2l,c
  9160  001AE8  50F4               	movf	prodh,w,c
  9161  001AEA  0100               	movlb	0	; () banked
  9162  001AEC  2161               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  9163  001AEE  6EDA               	movwf	fsr2h,c
  9164  001AF0  50DF               	movf	indf2,w,c
  9165  001AF2  0012               	return	
  9166  001AF4                     __end_ofi2_check_msg:
  9167                           	opt stack 0
  9168                           pclatu	equ	0xFFB
  9169                           pclath	equ	0xFFA
  9170                           tblptru	equ	0xFF8
  9171                           tblptrh	equ	0xFF7
  9172                           tblptrl	equ	0xFF6
  9173                           tablat	equ	0xFF5
  9174                           prodh	equ	0xFF4
  9175                           prodl	equ	0xFF3
  9176                           intcon	equ	0xFF2
  9177                           intcon2	equ	0xFF1
  9178                           postinc0	equ	0xFEE
  9179                           fsr0h	equ	0xFEA
  9180                           fsr0l	equ	0xFE9
  9181                           wreg	equ	0xFE8
  9182                           indf1	equ	0xFE7
  9183                           fsr1h	equ	0xFE2
  9184                           fsr1l	equ	0xFE1
  9185                           bsr	equ	0xFE0
  9186                           indf2	equ	0xFDF
  9187                           postinc2	equ	0xFDE
  9188                           postdec2	equ	0xFDD
  9189                           fsr2h	equ	0xFDA
  9190                           fsr2l	equ	0xFD9
  9191                           status	equ	0xFD8
  9192                           
  9193 ;; *************** function _enter_sleep_mode *****************
  9194 ;; Defined at:
  9195 ;;		line 252 in file "../src/messages.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;		None
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;		None
  9200 ;; Return value:  Size  Location     Type
  9201 ;;		None               void
  9202 ;; Registers used:
  9203 ;;		None
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/0
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9213 ;;Total ram usage:        0 bytes
  9214 ;; Hardware stack levels used:    1
  9215 ;; This function calls:
  9216 ;;		Nothing
  9217 ;; This function is called by:
  9218 ;;		_SleepIfOkay
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222                           	psect	text57
  9223  001D08                     __ptext57:
  9224                           	opt stack 0
  9225  001D08                     _enter_sleep_mode:
  9226                           	opt stack 19
  9227                           
  9228                           ;messages.c: 254: OSCCONbits.IDLEN = 1;
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;incstack = 0
  9232  001D08  8ED3               	bsf	4051,7,c	;volatile
  9233  001D0A  0003               	sleep		;# 
  9234  001D0C  0012               	return	
  9235  001D0E                     __end_of_enter_sleep_mode:
  9236                           	opt stack 0
  9237  0000                     pclatu	equ	0xFFB
  9238                           pclath	equ	0xFFA
  9239                           tblptru	equ	0xFF8
  9240                           tblptrh	equ	0xFF7
  9241                           tblptrl	equ	0xFF6
  9242                           tablat	equ	0xFF5
  9243                           prodh	equ	0xFF4
  9244                           prodl	equ	0xFF3
  9245                           intcon	equ	0xFF2
  9246                           intcon2	equ	0xFF1
  9247                           postinc0	equ	0xFEE
  9248                           fsr0h	equ	0xFEA
  9249                           fsr0l	equ	0xFE9
  9250                           wreg	equ	0xFE8
  9251                           indf1	equ	0xFE7
  9252                           fsr1h	equ	0xFE2
  9253                           fsr1l	equ	0xFE1
  9254                           bsr	equ	0xFE0
  9255                           indf2	equ	0xFDF
  9256                           postinc2	equ	0xFDE
  9257                           postdec2	equ	0xFDD
  9258                           fsr2h	equ	0xFDA
  9259                           fsr2l	equ	0xFD9
  9260                           status	equ	0xFD8
  9261                           pclatu	equ	0xFFB
  9262                           pclath	equ	0xFFA
  9263                           tblptru	equ	0xFF8
  9264                           tblptrh	equ	0xFF7
  9265                           tblptrl	equ	0xFF6
  9266                           tablat	equ	0xFF5
  9267                           prodh	equ	0xFF4
  9268                           prodl	equ	0xFF3
  9269                           intcon	equ	0xFF2
  9270                           intcon2	equ	0xFF1
  9271                           postinc0	equ	0xFEE
  9272                           fsr0h	equ	0xFEA
  9273                           fsr0l	equ	0xFE9
  9274                           wreg	equ	0xFE8
  9275                           indf1	equ	0xFE7
  9276                           fsr1h	equ	0xFE2
  9277                           fsr1l	equ	0xFE1
  9278                           bsr	equ	0xFE0
  9279                           indf2	equ	0xFDF
  9280                           postinc2	equ	0xFDE
  9281                           postdec2	equ	0xFDD
  9282                           fsr2h	equ	0xFDA
  9283                           fsr2l	equ	0xFD9
  9284                           status	equ	0xFD8
  9285                           
  9286                           	psect	param0
  9287  0000                     pclatu	equ	0xFFB
  9288                           pclath	equ	0xFFA
  9289                           tblptru	equ	0xFF8
  9290                           tblptrh	equ	0xFF7
  9291                           tblptrl	equ	0xFF6
  9292                           tablat	equ	0xFF5
  9293                           prodh	equ	0xFF4
  9294                           prodl	equ	0xFF3
  9295                           intcon	equ	0xFF2
  9296                           intcon2	equ	0xFF1
  9297                           postinc0	equ	0xFEE
  9298                           fsr0h	equ	0xFEA
  9299                           fsr0l	equ	0xFE9
  9300                           wreg	equ	0xFE8
  9301                           indf1	equ	0xFE7
  9302                           fsr1h	equ	0xFE2
  9303                           fsr1l	equ	0xFE1
  9304                           bsr	equ	0xFE0
  9305                           indf2	equ	0xFDF
  9306                           postinc2	equ	0xFDE
  9307                           postdec2	equ	0xFDD
  9308                           fsr2h	equ	0xFDA
  9309                           fsr2l	equ	0xFD9
  9310                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         710
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      52
    BANK0           160     83      86
    BANK1           256    129     247
    BANK2           256      0     236
    BANK3           256      0     236
    BANK4           256      0     118
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 118
		 -> FromMainLow_MQ.queue(BANK3[116]), FromMainHigh_MQ.queue(BANK4[116]), ToMainHigh_MQ.queue(BANK2[116]), ToMainLow_MQ.queue(BANK1[116]), 
		 -> SensorData_MQ.queue(BANK2[116]), MotorData_MQ.queue(BANK3[116]), NULL(NULL[0]), FromMainHigh_MQ(BANK4[118]), 
		 -> FromMainLow_MQ(BANK3[118]), MotorData_MQ(BANK3[118]), SensorData_MQ(BANK2[118]), ToMainHigh_MQ(BANK2[118]), 
		 -> ToMainLow_MQ(BANK1[118]), main@msgbuffer(BANK1[27]), main@ic(BANK1[64]), main@uc(BANK1[18]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 118
		 -> FromMainLow_MQ.queue(BANK3[116]), FromMainHigh_MQ.queue(BANK4[116]), ToMainHigh_MQ.queue(BANK2[116]), ToMainLow_MQ.queue(BANK1[116]), 
		 -> SensorData_MQ.queue(BANK2[116]), MotorData_MQ.queue(BANK3[116]), NULL(NULL[0]), FromMainHigh_MQ(BANK4[118]), 
		 -> FromMainLow_MQ(BANK3[118]), MotorData_MQ(BANK3[118]), SensorData_MQ(BANK2[118]), ToMainHigh_MQ(BANK2[118]), 
		 -> ToMainLow_MQ(BANK1[118]), main@msgbuffer(BANK1[27]), main@ic(BANK1[64]), main@uc(BANK1[18]), 

    memcpy@s1	PTR const void  size(2) Largest target is 118
		 -> ToMainLow_MQ.data(BANK1[26]), ToMainHigh_MQ.data(BANK2[26]), SensorData_MQ.data(BANK2[26]), MotorData_MQ.data(BANK3[26]), 
		 -> FromMainLow_MQ.data(BANK3[26]), FromMainHigh_MQ.data(BANK4[26]), MotorData_MQ.queue.data(BANK3[26]), SensorData_MQ.queue.data(BANK2[26]), 
		 -> ToMainLow_MQ.queue.data(BANK1[26]), ToMainHigh_MQ.queue.data(BANK2[26]), FromMainHigh_MQ.queue.data(BANK4[26]), FromMainLow_MQ.queue.data(BANK3[26]), 
		 -> uart_recv_int_handler@readin(COMRAM[1]), NULL(NULL[0]), FromMainHigh_MQ(BANK4[118]), FromMainLow_MQ(BANK3[118]), 
		 -> MotorData_MQ(BANK3[118]), SensorData_MQ(BANK2[118]), ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK1[118]), 
		 -> main@msgbuffer(BANK1[27]), main@t1thread_data(BANK1[2]), main@ic(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 118
		 -> ToMainLow_MQ.data(BANK1[26]), ToMainHigh_MQ.data(BANK2[26]), SensorData_MQ.data(BANK2[26]), MotorData_MQ.data(BANK3[26]), 
		 -> FromMainLow_MQ.data(BANK3[26]), FromMainHigh_MQ.data(BANK4[26]), MotorData_MQ.queue.data(BANK3[26]), SensorData_MQ.queue.data(BANK2[26]), 
		 -> ToMainLow_MQ.queue.data(BANK1[26]), ToMainHigh_MQ.queue.data(BANK2[26]), FromMainHigh_MQ.queue.data(BANK4[26]), FromMainLow_MQ.queue.data(BANK3[26]), 
		 -> uart_recv_int_handler@readin(COMRAM[1]), NULL(NULL[0]), FromMainHigh_MQ(BANK4[118]), FromMainLow_MQ(BANK3[118]), 
		 -> MotorData_MQ(BANK3[118]), SensorData_MQ(BANK2[118]), ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK1[118]), 
		 -> main@msgbuffer(BANK1[27]), main@t1thread_data(BANK1[2]), main@ic(BANK1[64]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    uart_send@msg_buffer	PTR unsigned char  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 18
		 -> main@uc(BANK1[18]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 18
		 -> NULL(NULL[0]), main@uc(BANK1[18]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 64
		 -> main@ic(BANK1[64]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 64
		 -> NULL(NULL[0]), main@ic(BANK1[64]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 118
		 -> MotorData_MQ(BANK3[118]), SensorData_MQ(BANK2[118]), ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK1[118]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), main@ic(BANK1[64]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 18
		 -> NULL(NULL[0]), main@uc(BANK1[18]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), main@ic(BANK1[64]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 1
		 -> uart_recv_int_handler@readin(COMRAM[1]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 64
		 -> NULL(NULL[0]), main@msgbuffer(BANK1[27]), main@ic(BANK1[64]), main@uc(BANK1[18]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 118
		 -> FromMainLow_MQ.queue(BANK3[116]), FromMainHigh_MQ.queue(BANK4[116]), ToMainHigh_MQ.queue(BANK2[116]), ToMainLow_MQ.queue(BANK1[116]), 
		 -> SensorData_MQ.queue(BANK2[116]), MotorData_MQ.queue(BANK3[116]), FromMainHigh_MQ(BANK4[118]), FromMainLow_MQ(BANK3[118]), 
		 -> MotorData_MQ(BANK3[118]), SensorData_MQ(BANK2[118]), ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK1[118]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 118
		 -> FromMainHigh_MQ(BANK4[118]), FromMainLow_MQ(BANK3[118]), MotorData_MQ(BANK3[118]), SensorData_MQ(BANK2[118]), 
		 -> ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK1[118]), 

    sp__memcpy	PTR void  size(2) Largest target is 118
		 -> FromMainLow_MQ.queue(BANK3[116]), FromMainHigh_MQ.queue(BANK4[116]), ToMainHigh_MQ.queue(BANK2[116]), ToMainLow_MQ.queue(BANK1[116]), 
		 -> SensorData_MQ.queue(BANK2[116]), MotorData_MQ.queue(BANK3[116]), NULL(NULL[0]), FromMainHigh_MQ(BANK4[118]), 
		 -> FromMainLow_MQ(BANK3[118]), MotorData_MQ(BANK3[118]), SensorData_MQ(BANK2[118]), ToMainHigh_MQ(BANK2[118]), 
		 -> ToMainLow_MQ(BANK1[118]), main@msgbuffer(BANK1[27]), main@ic(BANK1[64]), main@uc(BANK1[18]), 

    send_msg@data	PTR void  size(2) Largest target is 64
		 -> uart_recv_int_handler@readin(COMRAM[1]), NULL(NULL[0]), main@msgbuffer(BANK1[27]), main@t1thread_data(BANK1[2]), 
		 -> main@ic(BANK1[64]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 118
		 -> FromMainLow_MQ.queue(BANK3[116]), FromMainHigh_MQ.queue(BANK4[116]), ToMainHigh_MQ.queue(BANK2[116]), ToMainLow_MQ.queue(BANK1[116]), 
		 -> SensorData_MQ.queue(BANK2[116]), MotorData_MQ.queue(BANK3[116]), FromMainHigh_MQ(BANK4[118]), FromMainLow_MQ(BANK3[118]), 
		 -> MotorData_MQ(BANK3[118]), SensorData_MQ(BANK2[118]), ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK1[118]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 118
		 -> FromMainHigh_MQ(BANK4[118]), FromMainLow_MQ(BANK3[118]), MotorData_MQ(BANK3[118]), SensorData_MQ(BANK2[118]), 
		 -> ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK1[118]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 118
		 -> FromMainHigh_MQ(BANK4[118]), FromMainLow_MQ(BANK3[118]), MotorData_MQ(BANK3[118]), SensorData_MQ(BANK2[118]), 
		 -> ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK1[118]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_ReadTimer1
    _timer1_int_handler->_WriteTimer1
    _timer0_int_handler->_WriteTimer0

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _uart_send->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_FromMainHigh_sendmsg
    _init_queues->_init_queue
    _i2c_master_send->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_master_int_handler
    _i2c_master_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               133   133      0   16068
                                              0 BANK1    129   129      0
                         _Open1USART
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
                          _uart_send
 ---------------------------------------------------------------------------------
 (1) _uart_send                                            4     2      2    2518
                                             74 BANK0      4     2      2
                _FromMainLow_sendmsg
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     348
                                             48 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2007
                                             70 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     300
                                             48 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    2625
                                             74 BANK0      9     1      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     211
                                             48 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             48 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     452
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     452
                                             48 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      4     1      3    3261
                                             74 BANK0      4     1      3
               _FromMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2113
                                             70 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1835
                                             58 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 2     1      1      97
                                             48 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     386
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             52 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             50 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     364
                                             48 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2029
                                             72 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2029
                                             72 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1857
                                             58 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     438
                                             48 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     119
                                             48 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     273
                                             48 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2270
                                             32 COMRAM    17    17      0
                 _timer0_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               2     2      0     907
                                             29 COMRAM     2     2      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4     907
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7     735
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                8     8      0    1037
                                             26 COMRAM     6     6      0
                         _Read1USART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3     991
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     713
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _Read1USART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0     118
                                              4 COMRAM     2     2      0
                         _ReadTimer1
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _timer0_int_handler                                   7     7      0     208
                                              4 COMRAM     1     1      0
                        _WriteTimer0
                    _i2c_master_recv
 ---------------------------------------------------------------------------------
 (7) _i2c_master_recv                                      2     1      1      97
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    2364
                                             34 BANK0     14    14      0
                        _SleepIfOkay
             _i2c_master_int_handler
 ---------------------------------------------------------------------------------
 (11) _i2c_master_int_handler                              6     6      0    2216
                                             29 BANK0      5     5      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    1309
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6     713
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4     907
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7     735
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     148
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     148
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1USART
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_master_send
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
   _uart_send
     _FromMainLow_sendmsg
       _send_msg
         _memcpy
     ___awmod

 _InterruptHandlerLow (ROOT)
   _timer0_int_handler
     _WriteTimer0
     _i2c_master_recv
   _timer1_int_handler
     _ReadTimer1
     _WriteTimer1
   _uart_recv_int_handler
     _Read1USART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_master_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      76      14       46.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      EC      12       92.2%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      EC      10       92.2%
BITBANK1           100      0       0       7        0.0%
BANK1              100     81      F7       8       96.5%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     53      56       5       53.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      34       1       54.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3CF       6        0.0%
DATA                 0      0     3CF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Oct 28 22:39:07 2014

               main@uthread_data 0120         _MQ_Main_Willing_to_block 00B5  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 19F2  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1C1E  
                   __CFG_CP0$OFF 000000                i2recv_msg@msgtype 006D  
              i2recv_msg@tlength 0074             ?_FromMainLow_recvmsg 0019  
                            l122 0684                              l125 06CC  
                            l117 064E                              l144 08C0  
                            l128 06EC                              l502 1588  
                            l506 15A0                              l435 1BF4  
                            l508 15AC                              l436 1BF6  
                            l509 15AE                              l463 19B2  
                            l464 19B4                              l749 1C78  
           ?_FromMainLow_sendmsg 00A6  __size_of_uart_trans_int_handler 00B4  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                   ___awmod@sign 0095                   _FromMainLow_MQ 0300  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
                   __CFG_IESO$ON 000000                     ?_in_high_int 0090  
               ??_init_uart_recv 0092                  ReadTimer1@timer 0003  
            i2recv_msg@maxlength 006C                             l1055 16EC  
                           l2200 18DA                             l2208 18F8  
                           l2224 0C54                             l3120 093E  
                           l3112 08EE                             l3104 0838  
                           l2170 17E2                             l3130 098E  
                           l3106 087C                             l2164 17C2  
                           l2500 16B4                             l3124 0966  
                           l3116 0916                             l3108 08C6  
                           l2502 16BA                             l3134 09B2  
                           l3070 06F2                             l2408 0AE4  
                           l2362 1972                             l2506 16DE  
                           l3082 076A                             l3074 071A  
                           l3092 07BA                             l3068 06D2  
                           l2374 166E                             l2470 0FC6  
                           l3086 0792                             l3078 0742  
                           l2392 0A2A                             l3096 07DE  
                           l2490 1030                             l2482 100E  
                           l2474 0FD8                             l2466 0FA4  
                           l3098 0806                             l2476 0FE4  
                           l2478 0FEA                             l2486 101C  
                           l2824 158A                             l2816 1578  
                           l2498 16A8                             l2836 15A2  
                           l2852 11AE                             l2870 1214  
                           l2864 11F2                             l2858 11D0  
                           l2876 1236                             u1777 1C7A  
                           i1l52 0084                      main@forward 0100  
                _FromMainHigh_MQ 0400                   Read1USART@data 0001  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 0DDE  
                           _main 0568                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@reverse 0104  
         __CFG_DSWDTOSC$T1OSCREF 000000                      main@msgtype 012D  
                     i1_send_msg 10EE                             pclat 000FFA  
            timer0_int_handler@i 0005                      i2_check_msg 1AC2  
                           prodh 000FF4                             prodl 000FF3  
                           start 00CA                       i2_recv_msg 0AE8  
                     i2_send_msg 0CF2    __size_of_i2c_configure_master 0080  
      ToMainHigh_recvmsg@msgtype 00A8                   send_msg@length 009C  
    __size_of_timer0_int_handler 001E                      _Delay1KTCYx 1C74  
                  __CFG_PLLDIV$3 000000            ??_FromMainLow_recvmsg 001D  
          ??_FromMainLow_sendmsg 00A9                            ?_main 0001  
                __end_of___awmod 103A                            _T0CON 000FD5  
                          _T1CON 000FCD                  __end_of___lwmod 16F6  
                     i1memcpy@d1 0001                            i1l519 1C2C  
                          i2l323 017E                            i2l332 033A  
                     i1memcpy@s1 0003      FromMainHigh_recvmsg@msgtype 0078  
            uart_send@msg_buffer 00AA                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                       i2memcpy@d1 0060  
                 __CFG_FCMEN$OFF 000000                       i2memcpy@s1 0062  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
                __end_of_in_main 1980       ToMainLow_recvmsg@maxlength 00AC  
                     _Read1USART 1C1E          timer0_lthread@msgbuffer 0096  
                 __CFG_T1DIG$OFF 000000                            tablat 000FF5  
                          status 000FD8           _uart_trans_int_handler 103A  
               __end_ofi1_memcpy 18C8                 __end_ofi2_memcpy 1848  
                __initialization 1848                     __end_of_main 09CA  
                     _ReadTimer1 1CAC      __size_of_timer1_int_handler 001A  
     __size_of_ToMainLow_recvmsg 0036       __size_of_ToMainLow_sendmsg 0024  
  __size_of_FromMainHigh_recvmsg 0036            __size_ofi2_in_low_int 003E  
                 __CFG_OSC$HSPLL 000000    __size_of_FromMainHigh_sendmsg 002E  
                     _Open1USART 155C                           ??_main 00B3  
                send_msg@msgtype 009D                    __activetblptr 000002  
                send_msg@tlength 00A1       FromMainLow_sendmsg@msgtype 00A6  
        ??_uart_recv_int_handler 001B                           _T1GCON 000F9A  
                         i1l2300 0E24                           i1l2180 18B6  
                         i1l2252 1126                           i1l2316 0EAC  
                         i1l2174 189A                           i1l2714 10D8  
                         i1l2706 1050                           i1l2718 10EA  
                         i1l2690 17A4                           i1l2668 1C4A  
                         i1l2684 178A                           i1l2962 0070  
                         i2l2332 0B48                           i1l2956 0066  
                         i2l2190 1832                           i2l2184 1812  
                         i1l2968 007A                       _OpenTimer0 1BD4  
                     _OpenTimer1 1980                           i2l2348 0C02  
                         i2l2276 0D40                           i2l2604 0414  
                         i2l2526 1936                           i2l2518 1918  
                         i2l2614 0486                           i2l2622 04D4  
                         i2l2542 012E                   __CFG_WDTEN$OFF 000000  
                         i2l2560 01D0                           i2l2544 0164  
                         i2l2632 0522                           i2l2554 019E  
                         i2l2538 00D0                           i2l2638 12E0  
                         i2l2582 02AC                           i2l2574 028E  
                         i2l2594 030C                           i2l2588 02C8  
                         i2l2948 151E                           _RCREG1 000FAF  
                  ??_SleepIfOkay 0064                           _RCSTA1 000FAC  
                         _OSCCON 000FD3                           _SPBRG1 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                 __CFG_WPCFG$OFF 000000                           _TXREG1 000FAE  
                    ?i1_send_msg 000B                           _TXSTA1 000FAD  
             timer0_lthread@tptr 0090                   __CFG_WPDIS$OFF 000000  
      uart_recv_int_handler@left 001C          FromMainLow_recvmsg@data 001B  
                    ?i2_recv_msg 006A        uart_recv_int_handler@stop 001E  
                   i2_in_low_int 1906                      ?i2_send_msg 006A  
                 __CFG_XINST$OFF 000000                        ??___awmod 0094  
                _i2c_master_recv 146C                  _i2c_master_send 123E  
               OpenTimer0@config 0090                           _ic_ptr 00B3  
                      ??___lwmod 0094                    main@msgbuffer 0105  
               __end_of_init_i2c 1632                 OpenTimer1@config 0092  
                         _memcpy 17A8                           clear_0 184E  
                         clear_1 185A                           clear_2 1866  
                         clear_3 1872                  ___awmod@divisor 0092  
                         _uc_ptr 0032                  ___awmod@counter 0094  
                         main@ic 0141                           main@uc 012E  
               __end_of_recv_msg 0AE8                        ??_in_main 0096  
               __end_of_send_msg 0CF2                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 0092         ToMainLow_recvmsg@msgtype 00A8  
           __size_of_in_high_int 0010                      ?_Read1USART 0001  
        FromMainLow_sendmsg@data 00A7                       __accesstop 0060  
        __end_of__initialization 187E       __end_of_ToMainHigh_recvmsg 1A28  
     __end_of_ToMainHigh_sendmsg 1BAC                  __CFG_IOL1WAY$ON 000000  
           __CFG_WPEND$PAGE_WPFP 000000      __end_of_init_timer1_lthread 1C9A  
            __end_of_SleepIfOkay 136C                   __pcstackCOMRAM 0001  
         __size_ofi2_in_high_int 0010                      ?_ReadTimer1 0001  
             __size_of_check_msg 0032                  __CFG_DSWDTPS$G2 000000  
                    ?_Open1USART 0090  i2c_configure_master@sensor_addr 0091  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 1554  
    __end_of_InterruptHandlerLow 00CA                        ?i2_memcpy 0060  
                  _ToMainHigh_MQ 0276              __size_ofi2_recv_msg 011E  
               _enter_sleep_mode 1D08              __size_ofi2_send_msg 00EC  
           timer1_lthread@length 00AE                    check_msg@qptr 0090  
           timer1_lthread@retval 00B2          ??_block_on_To_msgqueues 0096  
           __size_of_init_queues 0080                       __pbssBANK0 00B5  
                     __pbssBANK1 0181                       __pbssBANK2 0200  
                     __pbssBANK3 0300                       __pbssBANK4 0400  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 0090  
                     __pnvCOMRAM 0032                     ?i2_check_msg 0060  
        __end_of_i2c_master_recv 14E6          __end_of_i2c_master_send 12D8  
             timer1_lthread@tptr 00AA         ??_i2c_master_int_handler 007D  
              recv_msg@maxlength 009C                  recv_msg@msgtype 009D  
                recv_msg@tlength 00A4                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 0003                          ?_memcpy 0090  
               WriteTimer1@timer 0003                    ??_WriteTimer0 0003  
                  ??_WriteTimer1 0003              __size_of_Read1USART 001E  
        __size_of_timer0_lthread 000E          __size_of_timer1_lthread 005E  
               Open1USART@config 0095               __size_of_uart_send 00C6  
   __end_of_i2c_configure_master 146C                       ??i1_memcpy 0007  
                     ??i2_memcpy 0066                          _SPBRGH1 000F7F  
               i1send_msg@length 000D                          _SSP1BUF 000FC9  
                  i2_in_high_int 1CE0                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
        ?_uart_trans_int_handler 0001              __size_of_ReadTimer1 0012  
              __end_of_check_msg 1AC2                        ?_init_i2c 0090  
                    _SleepIfOkay 12D8              __size_of_Open1USART 0070  
                      ?_recv_msg 009A                       _in_low_int 18C8  
                        __Hparam 0000                        ?_send_msg 009A  
                        __Lparam 0000       __end_of_timer0_int_handler 1C5A  
    __end_of_FromMainLow_recvmsg 1BD4      __end_of_FromMainLow_sendmsg 1B22  
               init_uart_recv@uc 0090                          ___awmod 0F76  
                        ___lwmod 1696                  __CFG_STVREN$OFF 000000  
                        __pcinit 1848                  __size_of_memcpy 0050  
                     _init_queue 1632                          __ramtop 0F00  
            __size_of_OpenTimer0 0026              __size_of_OpenTimer1 003C  
                        __ptext0 0568                          __ptext1 0EB0  
                        __ptext2 0F76                          __ptext3 1AF4  
                        __ptext4 1A5E                          __ptext5 16F6  
                        __ptext6 1696                          __ptext7 1CF0  
                        __ptext8 1B22                          __ptext9 1C88  
                      _T0CONbits 000FD5                OpenTimer1@config1 0090  
                        _in_main 1944                        _T1CONbits 000FCD  
               ___awmod@dividend 0090              __end_of_WriteTimer0 1CD0  
            __end_of_WriteTimer1 1CAC                   ?i2_in_high_int 0060  
 __end_of_uart_trans_int_handler 10EE                   __pintcode_body 14E6  
   __end_of_FromMainHigh_recvmsg 1A5E             end_of_initialization 187E  
        timer1_lthread@msgbuffer 00B0     __end_of_FromMainHigh_sendmsg 1B7E  
 __size_of_uart_recv_int_handler 0054       FromMainHigh_sendmsg@length 00A9  
                        memcpy@d 0096                          memcpy@n 0094  
                        memcpy@s 0098    __end_of_uart_recv_int_handler 17A8  
                     ??_init_i2c 0092                     ??i1_recv_msg 0012  
                  __Lmediumconst 0000                          int_func 14E6  
                   ??i1_send_msg 0011                    ?_uart_lthread 0090  
        __size_of_init_uart_recv 002E                     ??i2_recv_msg 0071  
               ?_i2c_master_recv 0001                 ?_i2c_master_send 00AA  
                     ??_recv_msg 00A1                __end_of_uart_send 0F76  
                   ??i2_send_msg 0070                       ??_send_msg 00A0  
__size_of_i2c_master_int_handler 049A       __end_of_timer1_int_handler 1C74  
                      _RCSTAbits 000FAC                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 0076                 __CFG_DSBOREN$OFF 000000  
             __end_ofi1_recv_msg 0EB0                 __CFG_CPUDIV$OSC1 000000  
             __end_ofi1_send_msg 1198      FromMainHigh_sendmsg@msgtype 00A6  
                      _TRISAbits 000F92                        _TRISBbits 000F93  
                      _TRISCbits 000F94                        _TRISEbits 000F96  
   uart_recv_int_handler@forward 001B               __end_ofi2_recv_msg 0C06  
             __end_ofi2_send_msg 0DDE     uart_recv_int_handler@reverse 001F  
                   ??_Read1USART 0001    FromMainHigh_recvmsg@maxlength 007C  
       timer1_int_handler@result 0005                   ??_uart_lthread 0098  
              __CFG_WPFP$PAGE_63 000000                       main@length 0140  
                    ?_in_low_int 0092            timer0_lthread@msgtype 0092  
           _i2c_configure_master 13EC              __CFG_MSSP7B_EN$MSK7 000000  
           __size_ofi2_check_msg 0032         __end_of_enter_sleep_mode 1D0E  
                   ??_ReadTimer1 0003               _ToMainHigh_recvmsg 19F2  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1B7E  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                    _BAUDCONbits 000F7E                   _timer0_lthread 1CF0  
                   ??_Open1USART 0092                      ?_init_queue 0090  
                      i2memcpy@d 0066                      _WriteTimer0 1CBE  
                    _WriteTimer1 1C9A                        i2memcpy@n 0064  
                      i2memcpy@s 0068               __end_of_Read1USART 1C3C  
                 _timer1_lthread 16F6                   __end_of_memcpy 17F8  
              _enable_interrupts 1CFE             __size_of_Delay1KTCYx 0014  
               __CFG_DSWDTEN$OFF 000000              ?_ToMainHigh_recvmsg 00A8  
                ??i2_in_high_int 0062              ?_ToMainHigh_sendmsg 0076  
             ?_enable_interrupts 0001              start_initialization 1848  
         _i2c_master_int_handler 00CE                    ??_in_high_int 0092  
              __size_ofi1_memcpy 0040                __size_ofi2_memcpy 0050  
      FromMainLow_sendmsg@length 00A9              ??_enable_interrupts 0090  
                   ??_OpenTimer0 0090                     ??_OpenTimer1 0091  
 __size_of_block_on_To_msgqueues 00A6               __end_of_ReadTimer1 1CBE  
  __end_of_block_on_To_msgqueues 123E     __end_of_InterruptHandlerHigh 155C  
             __end_of_Open1USART 15CC                       init_i2c@ic 0090  
           ??_ToMainHigh_recvmsg 00AC             ??_ToMainHigh_sendmsg 0079  
          ?_i2c_configure_master 0090           __end_of_timer0_lthread 1CFE  
         __end_of_timer1_lthread 1754                 __CFG_LPT1OSC$OFF 000000  
      __end_of_enable_interrupts 1D08                         ??_memcpy 0096  
          timer1_lthread@msgtype 00AC             _FromMainHigh_recvmsg 1A28  
           _FromMainHigh_sendmsg 1B50     __size_of_init_timer1_lthread 0012  
             __end_of_OpenTimer0 1BFA               __end_of_OpenTimer1 19BC  
                    __pbssCOMRAM 0034                    _SensorData_MQ 0200  
                  ??_init_queues 0093                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100              __size_of_in_low_int 003E  
                Delay1KTCYx@unit 0090         ToMainLow_sendmsg@msgtype 0017  
   __size_of_InterruptHandlerLow 00B2              __end_of_in_high_int 1CE0  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 00AA  
                   _ToMainLow_MQ 0181              __size_of_init_queue 0064  
                 _init_uart_recv 1B22                        _check_msg 1A90  
                      __pnvBANK0 00B3                __size_of_init_i2c 0066  
                   recv_msg@data 009F                     recv_msg@qmsg 00A6  
                   recv_msg@slot 00A3                     recv_msg@qptr 009A  
              __size_of_recv_msg 011E                        __pintcode 0008  
              __size_of_send_msg 00EC                         ?___awmod 0090  
                ?_timer0_lthread 0090                         ?___lwmod 0090  
          ?_FromMainHigh_recvmsg 0078                  ?_timer1_lthread 00AA  
          ?_FromMainHigh_sendmsg 00A6                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 00AA                  Open1USART@spbrg 0090  
           __end_of_uart_lthread 1A90                         ?_in_main 0094  
              WriteTimer0@timer0 0001               _timer0_int_handler 1C3C  
              WriteTimer1@timer1 0001             __CFG_RTCOSC$T1OSCREF 000000  
            uart_lthread@msgtype 0092            ToMainLow_sendmsg@data 0018  
            i1recv_msg@maxlength 000D              ?_timer0_int_handler 0001  
               uart_lthread@uptr 0090           __end_of_init_uart_recv 1B50  
            __end_of_init_queues 13EC            i2c_master_recv@length 0001  
                       _LATAbits 000F89                         _LATEbits 000F8D  
         ??_i2c_configure_master 0091                  i2check_msg@qptr 0060  
                     ?_check_msg 0090                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0062  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 0077  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                 i1recv_msg@data 0010                        _uart_send 0EB0  
           ??_timer0_int_handler 0005                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
          i2c_master_send@length 00AA     FromMainLow_recvmsg@maxlength 001D  
     __size_of_enable_interrupts 000A                i1send_msg@msgtype 000E  
              i1send_msg@tlength 0012       FromMainLow_recvmsg@msgtype 0019  
   __size_of_FromMainLow_recvmsg 0028     __size_of_FromMainLow_sendmsg 002E  
           timer0_lthread@length 0094               _timer1_int_handler 1C5A  
                       i1_memcpy 1888             _InterruptHandlerHigh 0008  
                      main@right 0102                         i2_memcpy 17F8  
           timer0_lthread@msgval 0098         FromMainHigh_recvmsg@data 007A  
                    _in_high_int 1CD0                     send_msg@data 009E  
                   send_msg@qmsg 00A4                     send_msg@slot 00A3  
                   send_msg@qptr 009A                      _INTCON2bits 000FF1  
          uart_lthread@msgbuffer 0096              ?_timer1_int_handler 0001  
                ?_init_uart_recv 0090                     _MotorData_MQ 0376  
                 ??i2_in_low_int 0064                         __Hparam0 0000  
          _uart_recv_int_handler 1754                     ??_in_low_int 0094  
                       __Lparam0 0000                ?_enter_sleep_mode 0001  
         ??_FromMainHigh_recvmsg 007C                       ?_uart_send 00AA  
         ??_FromMainHigh_sendmsg 00A9             ??_timer1_int_handler 0005  
               __size_of___awmod 00C4               ??_enter_sleep_mode 0060  
       __size_of_i2c_master_recv 007A         __size_of_i2c_master_send 009A  
               __size_of___lwmod 0060                     ??_init_queue 0092  
                   ?_WriteTimer0 0001                     ?_WriteTimer1 0001  
                uart_send@length 00AD         FromMainHigh_sendmsg@data 00A7  
        ToMainLow_sendmsg@length 001A          ?_i2c_master_int_handler 0001  
              main@t0thread_data 0122            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 003C                i2send_msg@msgtype 006D  
    ToMainHigh_recvmsg@maxlength 00AC                i2send_msg@tlength 0071  
        init_timer1_lthread@tptr 0090                      _init_queues 136C  
             __end_of_in_low_int 1906                         __ptext10 136C  
                       __ptext11 1632                         __ptext20 18C8  
                       __ptext12 15CC                         __ptext21 1CD0  
                       __ptext13 123E                       _T1GCONbits 000F9A  
                       __ptext30 155C                         __ptext22 1A90  
                       __ptext14 1B50                         __ptext23 1C74  
                       __ptext15 0C06                         __ptext40 1C5A  
                       __ptext32 103A                         __ptext24 19BC  
                       __ptext16 13EC                         __ptext41 1C9A  
                       __ptext33 1BAC                         __ptext25 19F2  
                       __ptext17 1CFE                         __ptext50 1A28  
                       __ptext42 1CAC                         __ptext34 0DDE  
                       __ptext26 09CA                         __ptext18 1198  
                       __ptext51 0AE8                         __ptext43 1C3C  
                       __ptext35 1754                         __ptext27 17A8  
                       __ptext19 1944                         __ptext52 17F8  
                       __ptext44 146C                         __ptext36 1BFA  
                       __ptext28 1980                         __ptext53 12D8  
                       __ptext45 1CBE                         __ptext37 10EE  
                       __ptext29 1BD4                         __ptext54 1906  
                       __ptext38 1888                         __ptext55 1CE0  
                       __ptext47 00CE                         __ptext39 1C1E  
                       __ptext56 1AC2                         __ptext48 1B7E  
                       __ptext57 1D08                         __ptext49 0CF2  
                   _SSP1CON2bits 000FC5                   i1send_msg@data 000F  
                 i1send_msg@qmsg 0015   i2c_configure_master@motor_addr 0090  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
             uart_lthread@length 0094                         _init_i2c 15CC  
            _init_timer1_lthread 1C88                    __size_of_main 0462  
                  ??i2_check_msg 0062                main@t1thread_data 012B  
                    ??_check_msg 0092               __end_of_init_queue 1696  
           __size_of_SleepIfOkay 0094                         _recv_msg 09CA  
                       _send_msg 0C06                   init_queue@qptr 0090  
          __size_of_uart_lthread 0032                   i2recv_msg@data 006F  
                 i2recv_msg@qmsg 0076                    ??_Delay1KTCYx 0090  
                 i2recv_msg@slot 0073                   i2recv_msg@qptr 006A  
 __end_of_i2c_master_int_handler 0568                     _SSP1STATbits 000FC7  
                       main@left 0101              _InterruptHandlerLow 0018  
                       main@umsg 0124                         main@stop 0103  
           ?_init_timer1_lthread 0090                    _USART1_Status 0034  
       ??_uart_trans_int_handler 001E                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                         memcpy@d1 0090  
                       memcpy@s1 0092            __end_ofi2_in_high_int 1CF0  
               i2send_msg@length 006C                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
               ___lwmod@dividend 0090           ?_uart_recv_int_handler 0001  
                   _uart_lthread 1A5E                       _RCSTA1bits 000FAC  
          _block_on_To_msgqueues 1198                 ??_timer0_lthread 0098  
    __size_of_ToMainHigh_recvmsg 0036              i2c_master_recv@addr 0002  
    __size_of_ToMainHigh_sendmsg 002E                       _OSCCONbits 000FD3  
               ??_timer1_lthread 00B2              i2c_master_send@addr 00AD  
              i1recv_msg@msgtype 000E                i1recv_msg@tlength 0015  
       ToMainHigh_sendmsg@length 0079                      ??_uart_send 00AC  
            __end_ofi2_check_msg 1AF4            ??_init_timer1_lthread 0092  
         ??_InterruptHandlerHigh 0082                _ToMainLow_recvmsg 19BC  
              _ToMainLow_sendmsg 1BFA      uart_recv_int_handler@readin 0020  
             main@last_reg_recvd 012A                  ___lwmod@divisor 0092  
           __end_ofi2_in_low_int 1944               ?_ToMainLow_recvmsg 00A8  
            __end_of_Delay1KTCYx 1C88                  ___lwmod@counter 0094  
             ?_ToMainLow_sendmsg 0017                ??_i2c_master_recv 0002  
              ??_i2c_master_send 00AD               i2c_master_send@msg 00AB  
                    _SSPCON1bits 000FC6                   i2send_msg@data 006E  
          ??_InterruptHandlerLow 0021              ??_ToMainLow_recvmsg 00AC  
                 i2send_msg@qmsg 0074       uart_recv_int_handler@right 001D  
                 i2send_msg@slot 0073                   i2send_msg@qptr 006A  
            ??_ToMainLow_sendmsg 001A              _FromMainLow_recvmsg 1BAC  
            _FromMainLow_sendmsg 1AF4  
