

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Sun Dec 07 12:35:23 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    76                           	psect	param0,global,class=BANK0,space=1,delta=1
    77  0000                     _BAUDCONbits	set	3966
    78  0000                     _INTCON2bits	set	4081
    79  0000                     _INTCONbits	set	4082
    80  0000                     _IPR1bits	set	3999
    81  0000                     _LATAbits	set	3977
    82  0000                     _OSCCON	set	4051
    83  0000                     _OSCCONbits	set	4051
    84  0000                     _OSCTUNEbits	set	3995
    85  0000                     _PIE1bits	set	3997
    86  0000                     _PIR1bits	set	3998
    87  0000                     _PORTBbits	set	3969
    88  0000                     _RCONbits	set	4048
    89  0000                     _RCREG1	set	4015
    90  0000                     _RCSTA1	set	4012
    91  0000                     _RCSTA1bits	set	4012
    92  0000                     _RCSTAbits	set	4012
    93  0000                     _SPBRG1	set	4016
    94  0000                     _SPBRGH1	set	3967
    95  0000                     _SSPADD	set	4040
    96  0000                     _SSPBUF	set	4041
    97  0000                     _SSPCON1	set	4038
    98  0000                     _SSPCON1bits	set	4038
    99  0000                     _SSPCON2	set	4037
   100  0000                     _SSPCON2bits	set	4037
   101  0000                     _SSPSTAT	set	4039
   102  0000                     _SSPSTATbits	set	4039
   103  0000                     _T0CON	set	4053
   104  0000                     _T0CONbits	set	4053
   105  0000                     _T1CON	set	4045
   106  0000                     _T1CONbits	set	4045
   107  0000                     _T1GCON	set	3994
   108  0000                     _T1GCONbits	set	3994
   109  0000                     _TMR0H	set	4055
   110  0000                     _TMR0L	set	4054
   111  0000                     _TMR1H	set	4047
   112  0000                     _TMR1L	set	4046
   113  0000                     _TRISAbits	set	3986
   114  0000                     _TRISBbits	set	3987
   115  0000                     _TRISCbits	set	3988
   116  0000                     _TXREG	set	4014
   117  0000                     _TXSTA1	set	4013
   118  0000                     _TXSTA1bits	set	4013
   119  0000                     _TXSTAbits	set	4013
   120                           
   121                           	psect	nvCOMRAM
   122  000044                     __pnvCOMRAM:
   123                           	opt stack 0
   124  000044                     _uc_ptr:
   125                           	opt stack 0
   126  000044                     	ds	2
   127                           
   128                           	psect	nvBANK0
   129  0000BA                     __pnvBANK0:
   130                           	opt stack 0
   131  0000BA                     _ic_ptr:
   132                           	opt stack 0
   133  0000BA                     	ds	2
   134                           
   135                           ; #config settings
   136  0000                     
   137                           	psect	cinit
   138  001AA8                     __pcinit:
   139                           	opt stack 0
   140  001AA8                     start_initialization:
   141                           	opt stack 0
   142  001AA8                     __initialization:
   143                           	opt stack 0
   144                           
   145                           ; Clear objects allocated to BANK4 (118 bytes)
   146  001AA8  EE04  F000         	lfsr	0,__pbssBANK4
   147  001AAC  0E76               	movlw	118
   148  001AAE                     clear_0:
   149  001AAE  6AEE               	clrf	postinc0,c
   150  001AB0  06E8               	decf	wreg,f,c
   151  001AB2  E1FD               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to BANK3 (236 bytes)
   154  001AB4  EE03  F000         	lfsr	0,__pbssBANK3
   155  001AB8  0EEC               	movlw	236
   156  001ABA                     clear_1:
   157  001ABA  6AEE               	clrf	postinc0,c
   158  001ABC  06E8               	decf	wreg,f,c
   159  001ABE  E1FD               	bnz	clear_1
   160                           
   161                           ; Clear objects allocated to BANK2 (236 bytes)
   162  001AC0  EE02  F000         	lfsr	0,__pbssBANK2
   163  001AC4  0EEC               	movlw	236
   164  001AC6                     clear_2:
   165  001AC6  6AEE               	clrf	postinc0,c
   166  001AC8  06E8               	decf	wreg,f,c
   167  001ACA  E1FD               	bnz	clear_2
   168                           
   169                           ; Clear objects allocated to BANK0 (1 bytes)
   170  001ACC  0100               	movlb	0
   171  001ACE  6BBC               	clrf	__pbssBANK0& (0+255),b
   172                           
   173                           ; Clear objects allocated to COMRAM (1 bytes)
   174  001AD0  6A46               	clrf	__pbssCOMRAM& (0+255),c
   175  001AD2                     end_of_initialization:
   176                           	opt stack 0
   177  001AD2                     __end_of__initialization:
   178                           	opt stack 0
   179  001AD2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   180  001AD4  6EF8               	movwf	tblptru,c
   181  001AD6  0100               	movlb	0
   182  001AD8  EF48  F004         	goto	_main	;jump to C main() function
   183                           tblptru	equ	0xFF8
   184                           postinc0	equ	0xFEE
   185                           wreg	equ	0xFE8
   186                           
   187                           	psect	bssCOMRAM
   188  000046                     __pbssCOMRAM:
   189                           	opt stack 0
   190  000046                     _USART1_Status:
   191                           	opt stack 0
   192  000046                     	ds	1
   193                           tblptru	equ	0xFF8
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           
   197                           	psect	bssBANK0
   198  0000BC                     __pbssBANK0:
   199                           	opt stack 0
   200  0000BC                     _MQ_Main_Willing_to_block:
   201                           	opt stack 0
   202  0000BC                     	ds	1
   203                           tblptru	equ	0xFF8
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           
   207                           	psect	bssBANK2
   208  000200                     __pbssBANK2:
   209                           	opt stack 0
   210  000200                     _ToMainHigh_MQ:
   211                           	opt stack 0
   212  000200                     	ds	118
   213  000276                     _ToMainLow_MQ:
   214                           	opt stack 0
   215  000276                     	ds	118
   216                           tblptru	equ	0xFF8
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           
   220                           	psect	bssBANK3
   221  000300                     __pbssBANK3:
   222                           	opt stack 0
   223  000300                     _FromMainHigh_MQ:
   224                           	opt stack 0
   225  000300                     	ds	118
   226  000376                     _FromMainLow_MQ:
   227                           	opt stack 0
   228  000376                     	ds	118
   229                           tblptru	equ	0xFF8
   230                           postinc0	equ	0xFEE
   231                           wreg	equ	0xFE8
   232                           
   233                           	psect	bssBANK4
   234  000400                     __pbssBANK4:
   235                           	opt stack 0
   236  000400                     _SensorData_MQ:
   237                           	opt stack 0
   238  000400                     	ds	118
   239                           tblptru	equ	0xFF8
   240                           postinc0	equ	0xFEE
   241                           wreg	equ	0xFE8
   242                           
   243                           	psect	cstackBANK1
   244  000100                     __pcstackBANK1:
   245                           	opt stack 0
   246  000100                     main@msgbuffer:
   247                           	opt stack 0
   248                           
   249                           ; 27 bytes @ 0x0
   250  000100                     	ds	27
   251  00011B                     main@last_reg_recvd:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0x1B
   255  00011B                     	ds	1
   256  00011C                     main@t0thread_data:
   257                           	opt stack 0
   258                           
   259                           ; 2 bytes @ 0x1C
   260  00011C                     	ds	2
   261  00011E                     main@t1thread_data:
   262                           	opt stack 0
   263                           
   264                           ; 2 bytes @ 0x1E
   265  00011E                     	ds	2
   266  000120                     main@length:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x20
   270  000120                     	ds	1
   271  000121                     main@msgtype:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x21
   275  000121                     	ds	1
   276  000122                     main@uc:
   277                           	opt stack 0
   278                           
   279                           ; 57 bytes @ 0x22
   280  000122                     	ds	57
   281  00015B                     main@ic:
   282                           	opt stack 0
   283                           
   284                           ; 60 bytes @ 0x5B
   285  00015B                     	ds	60
   286                           tblptru	equ	0xFF8
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           
   290                           	psect	cstackBANK0
   291  000060                     __pcstackBANK0:
   292                           	opt stack 0
   293  000060                     ?i2_in_high_int:
   294                           	opt stack 0
   295  000060                     handle_start@data_read:
   296                           	opt stack 0
   297  000060                     start_i2c_slave_reply@msg:
   298                           	opt stack 0
   299  000060                     WriteTimer0@timer0:
   300                           	opt stack 0
   301  000060                     i2check_msg@qptr:
   302                           	opt stack 0
   303  000060                     i2memcpy@d1:
   304                           	opt stack 0
   305                           
   306                           ; 2 bytes @ 0x0
   307  000060                     	ds	2
   308  000062                     ??_start_i2c_slave_reply:
   309  000062                     ??i2_check_msg:
   310  000062                     ?i2_in_low_int:
   311                           	opt stack 0
   312  000062                     WriteTimer0@timer:
   313                           	opt stack 0
   314  000062                     i2memcpy@s1:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x2
   318  000062                     	ds	2
   319  000064                     start_i2c_slave_reply@length:
   320                           	opt stack 0
   321  000064                     i2memcpy@n:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x4
   325  000064                     	ds	2
   326  000066                     i2memcpy@d:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x6
   330  000066                     	ds	2
   331  000068                     i2memcpy@s:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x8
   335  000068                     	ds	2
   336  00006A                     i2send_msg@qptr:
   337                           	opt stack 0
   338  00006A                     i2recv_msg@qptr:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0xA
   342  00006A                     	ds	2
   343  00006C                     i2send_msg@length:
   344                           	opt stack 0
   345  00006C                     i2recv_msg@maxlength:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0xC
   349  00006C                     	ds	1
   350  00006D                     i2send_msg@msgtype:
   351                           	opt stack 0
   352  00006D                     i2recv_msg@msgtype:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0xD
   356  00006D                     	ds	1
   357  00006E                     i2send_msg@data:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0xE
   361  00006E                     	ds	1
   362  00006F                     i2recv_msg@data:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0xF
   366  00006F                     	ds	1
   367  000070                     ??i2_send_msg:
   368                           
   369                           ; 0 bytes @ 0x10
   370  000070                     	ds	1
   371  000071                     ??i2_recv_msg:
   372  000071                     i2send_msg@tlength:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x11
   376  000071                     	ds	2
   377  000073                     i2send_msg@slot:
   378                           	opt stack 0
   379  000073                     i2recv_msg@slot:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x13
   383  000073                     	ds	1
   384  000074                     i2send_msg@qmsg:
   385                           	opt stack 0
   386  000074                     i2recv_msg@tlength:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x14
   390  000074                     	ds	2
   391  000076                     ToMainHigh_sendmsg@msgtype:
   392                           	opt stack 0
   393  000076                     i2recv_msg@qmsg:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x16
   397  000076                     	ds	1
   398  000077                     ToMainHigh_sendmsg@data:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x17
   402  000077                     	ds	1
   403  000078                     FromMainHigh_recvmsg@msgtype:
   404                           	opt stack 0
   405  000078                     SensorData_recvmsg@msgtype:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x18
   409  000078                     	ds	1
   410  000079                     ToMainHigh_sendmsg@length:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x19
   414  000079                     	ds	1
   415  00007A                     FromMainHigh_recvmsg@data:
   416                           	opt stack 0
   417  00007A                     SensorData_recvmsg@data:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x1A
   421  00007A                     	ds	2
   422  00007C                     FromMainHigh_recvmsg@maxlength:
   423                           	opt stack 0
   424  00007C                     SensorData_recvmsg@maxlength:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x1C
   428  00007C                     	ds	1
   429  00007D                     ??_i2c_int_handler:
   430  00007D                     timer0_int_handler@length:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x1D
   434  00007D                     	ds	1
   435  00007E                     i2c_int_handler@error_buf:
   436                           	opt stack 0
   437                           
   438                           ; 3 bytes @ 0x1E
   439  00007E                     	ds	1
   440  00007F                     timer0_int_handler@msgtype:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x1F
   444  00007F                     	ds	2
   445  000081                     i2c_int_handler@send:
   446                           	opt stack 0
   447  000081                     timer0_int_handler@val:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x21
   451  000081                     	ds	1
   452  000082                     i2c_int_handler@data_written:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x22
   456  000082                     	ds	1
   457  000083                     i2c_int_handler@overrun_error:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x23
   461  000083                     	ds	1
   462  000084                     i2c_int_handler@i2c_data:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x24
   466  000084                     	ds	1
   467  000085                     i2c_int_handler@msg_to_send:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0x25
   471  000085                     	ds	1
   472  000086                     i2c_int_handler@msg_ready:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x26
   476  000086                     	ds	1
   477  000087                     i2c_int_handler@data_read:
   478                           	opt stack 0
   479                           
   480                           ; 1 bytes @ 0x27
   481  000087                     	ds	1
   482  000088                     ??_InterruptHandlerHigh:
   483                           
   484                           ; 0 bytes @ 0x28
   485  000088                     	ds	14
   486  000096                     ?_in_high_int:
   487                           	opt stack 0
   488  000096                     ?___lwmod:
   489                           	opt stack 0
   490  000096                     i2c_configure_slave@addr:
   491                           	opt stack 0
   492  000096                     OpenTimer0@config:
   493                           	opt stack 0
   494  000096                     OpenTimer1@config1:
   495                           	opt stack 0
   496  000096                     Delay1KTCYx@unit:
   497                           	opt stack 0
   498  000096                     init_queue@qptr:
   499                           	opt stack 0
   500  000096                     check_msg@qptr:
   501                           	opt stack 0
   502  000096                     init_i2c@ic:
   503                           	opt stack 0
   504  000096                     init_uart_recv@uc:
   505                           	opt stack 0
   506  000096                     timer0_lthread@tptr:
   507                           	opt stack 0
   508  000096                     init_timer1_lthread@tptr:
   509                           	opt stack 0
   510  000096                     Open1USART@spbrg:
   511                           	opt stack 0
   512  000096                     ___lwmod@dividend:
   513                           	opt stack 0
   514  000096                     memcpy@d1:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x36
   518  000096                     	ds	1
   519  000097                     ??_OpenTimer1:
   520                           
   521                           ; 0 bytes @ 0x37
   522  000097                     	ds	1
   523  000098                     ??_Open1USART:
   524  000098                     ??_check_msg:
   525  000098                     ?_in_low_int:
   526                           	opt stack 0
   527  000098                     init_queue@i:
   528                           	opt stack 0
   529  000098                     OpenTimer1@config:
   530                           	opt stack 0
   531  000098                     timer0_lthread@msgtype:
   532                           	opt stack 0
   533  000098                     ___lwmod@divisor:
   534                           	opt stack 0
   535  000098                     memcpy@s1:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x38
   539  000098                     	ds	1
   540  000099                     
   541                           ; 0 bytes @ 0x39
   542  000099                     	ds	1
   543  00009A                     ?_in_main:
   544                           	opt stack 0
   545  00009A                     ___lwmod@counter:
   546                           	opt stack 0
   547  00009A                     timer0_lthread@length:
   548                           	opt stack 0
   549  00009A                     memcpy@n:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x3A
   553  00009A                     	ds	1
   554  00009B                     Open1USART@config:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x3B
   558  00009B                     	ds	1
   559  00009C                     timer0_lthread@msgbuffer:
   560                           	opt stack 0
   561  00009C                     memcpy@d:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x3C
   565  00009C                     	ds	2
   566  00009E                     timer0_lthread@msgval:
   567                           	opt stack 0
   568  00009E                     memcpy@s:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x3E
   572  00009E                     	ds	2
   573  0000A0                     send_msg@qptr:
   574                           	opt stack 0
   575  0000A0                     recv_msg@qptr:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x40
   579  0000A0                     	ds	2
   580  0000A2                     send_msg@length:
   581                           	opt stack 0
   582  0000A2                     recv_msg@maxlength:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x42
   586  0000A2                     	ds	1
   587  0000A3                     send_msg@msgtype:
   588                           	opt stack 0
   589  0000A3                     recv_msg@msgtype:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x43
   593  0000A3                     	ds	1
   594  0000A4                     send_msg@data:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x44
   598  0000A4                     	ds	1
   599  0000A5                     recv_msg@data:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x45
   603  0000A5                     	ds	1
   604  0000A6                     ??_send_msg:
   605                           
   606                           ; 0 bytes @ 0x46
   607  0000A6                     	ds	1
   608  0000A7                     ??_recv_msg:
   609  0000A7                     send_msg@tlength:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x47
   613  0000A7                     	ds	2
   614  0000A9                     send_msg@slot:
   615                           	opt stack 0
   616  0000A9                     recv_msg@slot:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x49
   620  0000A9                     	ds	1
   621  0000AA                     send_msg@qmsg:
   622                           	opt stack 0
   623  0000AA                     recv_msg@tlength:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x4A
   627  0000AA                     	ds	2
   628  0000AC                     FromMainLow_sendmsg@msgtype:
   629                           	opt stack 0
   630  0000AC                     FromMainHigh_sendmsg@msgtype:
   631                           	opt stack 0
   632  0000AC                     recv_msg@qmsg:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x4C
   636  0000AC                     	ds	1
   637  0000AD                     FromMainLow_sendmsg@data:
   638                           	opt stack 0
   639  0000AD                     FromMainHigh_sendmsg@data:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x4D
   643  0000AD                     	ds	1
   644  0000AE                     ToMainLow_recvmsg@msgtype:
   645                           	opt stack 0
   646  0000AE                     ToMainHigh_recvmsg@msgtype:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x4E
   650  0000AE                     	ds	1
   651  0000AF                     FromMainLow_sendmsg@length:
   652                           	opt stack 0
   653  0000AF                     FromMainHigh_sendmsg@length:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x4F
   657  0000AF                     	ds	1
   658  0000B0                     ToMainLow_recvmsg@data:
   659                           	opt stack 0
   660  0000B0                     ToMainHigh_recvmsg@data:
   661                           	opt stack 0
   662  0000B0                     uart_send@length:
   663                           	opt stack 0
   664  0000B0                     timer1_lthread@tptr:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x50
   668  0000B0                     	ds	2
   669  0000B2                     ToMainLow_recvmsg@maxlength:
   670                           	opt stack 0
   671  0000B2                     ToMainHigh_recvmsg@maxlength:
   672                           	opt stack 0
   673  0000B2                     uart_send@msg_buffer:
   674                           	opt stack 0
   675  0000B2                     timer1_lthread@msgtype:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x52
   679  0000B2                     	ds	2
   680  0000B4                     timer1_lthread@length:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x54
   684  0000B4                     	ds	2
   685  0000B6                     timer1_lthread@msgbuffer:
   686                           	opt stack 0
   687                           
   688                           ; 2 bytes @ 0x56
   689  0000B6                     	ds	2
   690  0000B8                     timer1_lthread@retval:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x58
   694  0000B8                     	ds	1
   695  0000B9                     ??_main:
   696                           
   697                           ; 0 bytes @ 0x59
   698  0000B9                     	ds	1
   699                           tblptru	equ	0xFF8
   700                           postinc0	equ	0xFEE
   701                           wreg	equ	0xFE8
   702                           
   703                           	psect	cstackCOMRAM
   704  000001                     __pcstackCOMRAM:
   705                           	opt stack 0
   706  000001                     ?_ReadTimer1:
   707                           	opt stack 0
   708  000001                     Read1USART@data:
   709                           	opt stack 0
   710  000001                     WriteTimer1@timer1:
   711                           	opt stack 0
   712  000001                     i1memcpy@d1:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x0
   716  000001                     	ds	2
   717  000003                     ReadTimer1@timer:
   718                           	opt stack 0
   719  000003                     WriteTimer1@timer:
   720                           	opt stack 0
   721  000003                     i1memcpy@s1:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x2
   725  000003                     	ds	2
   726  000005                     i1memcpy@n:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x4
   730  000005                     	ds	2
   731  000007                     i1memcpy@d:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x6
   735  000007                     	ds	2
   736  000009                     i1memcpy@s:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x8
   740  000009                     	ds	2
   741  00000B                     i1send_msg@qptr:
   742                           	opt stack 0
   743  00000B                     i1recv_msg@qptr:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0xA
   747  00000B                     	ds	2
   748  00000D                     i1send_msg@length:
   749                           	opt stack 0
   750  00000D                     i1recv_msg@maxlength:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0xC
   754  00000D                     	ds	1
   755  00000E                     i1send_msg@msgtype:
   756                           	opt stack 0
   757  00000E                     i1recv_msg@msgtype:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0xD
   761  00000E                     	ds	1
   762  00000F                     i1send_msg@data:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0xE
   766  00000F                     	ds	1
   767  000010                     i1recv_msg@data:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0xF
   771  000010                     	ds	1
   772  000011                     ??i1_send_msg:
   773                           
   774                           ; 0 bytes @ 0x10
   775  000011                     	ds	1
   776  000012                     ??i1_recv_msg:
   777  000012                     i1send_msg@tlength:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x11
   781  000012                     	ds	2
   782  000014                     i1send_msg@slot:
   783                           	opt stack 0
   784  000014                     i1recv_msg@slot:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x13
   788  000014                     	ds	1
   789  000015                     i1send_msg@qmsg:
   790                           	opt stack 0
   791  000015                     i1recv_msg@tlength:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0x14
   795  000015                     	ds	2
   796  000017                     ToMainLow_sendmsg@msgtype:
   797                           	opt stack 0
   798  000017                     SensorData_sendmsg@msgtype:
   799                           	opt stack 0
   800  000017                     i1recv_msg@qmsg:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x16
   804  000017                     	ds	1
   805  000018                     ToMainLow_sendmsg@data:
   806                           	opt stack 0
   807  000018                     SensorData_sendmsg@data:
   808                           	opt stack 0
   809                           
   810                           ; 2 bytes @ 0x17
   811  000018                     	ds	1
   812  000019                     FromMainLow_recvmsg@msgtype:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x18
   816  000019                     	ds	1
   817  00001A                     ToMainLow_sendmsg@length:
   818                           	opt stack 0
   819  00001A                     SensorData_sendmsg@length:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x19
   823  00001A                     	ds	1
   824  00001B                     ??_uart_recv_int_handler:
   825  00001B                     FromMainLow_recvmsg@data:
   826                           	opt stack 0
   827  00001B                     timer1_int_handler@result:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x1A
   831  00001B                     	ds	1
   832  00001C                     uart_recv_int_handler@readin:
   833                           	opt stack 0
   834                           
   835                           ; 23 bytes @ 0x1B
   836  00001C                     	ds	1
   837  00001D                     FromMainLow_recvmsg@maxlength:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x1C
   841  00001D                     	ds	1
   842  00001E                     ??_uart_trans_int_handler:
   843                           
   844                           ; 0 bytes @ 0x1D
   845  00001E                     	ds	21
   846  000033                     ??_InterruptHandlerLow:
   847                           
   848                           ; 0 bytes @ 0x32
   849  000033                     	ds	17
   850                           tblptru	equ	0xFF8
   851                           postinc0	equ	0xFEE
   852                           wreg	equ	0xFE8
   853                           
   854 ;;
   855 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   856 ;;
   857 ;; *************** function _main *****************
   858 ;; Defined at:
   859 ;;		line 68 in file "../src/main.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  ic             60   91[BANK1 ] struct __i2c_comm
   864 ;;  uc             57   34[BANK1 ] struct __uart_comm
   865 ;;  msgbuffer      27    0[BANK1 ] unsigned char [27]
   866 ;;  t1thread_dat    2   30[BANK1 ] struct __timer1_thread_s
   867 ;;  t0thread_dat    2   28[BANK1 ] struct __timer0_thread_s
   868 ;;  uthread_data    2    0        struct __uart_thread_str
   869 ;;  msgtype         1   33[BANK1 ] unsigned char 
   870 ;;  length          1   32[BANK1 ] char 
   871 ;;  last_reg_rec    1   27[BANK1 ] unsigned char 
   872 ;;  i               1    0        unsigned char 
   873 ;;  c               1    0        unsigned char 
   874 ;; Return value:  Size  Location     Type
   875 ;;		None               void
   876 ;; Registers used:
   877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   884 ;;      Locals:         0       0     151       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   885 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   886 ;;      Totals:         0       1     151       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   887 ;;Total ram usage:      152 bytes
   888 ;; Hardware stack levels required when called:   14
   889 ;; This function calls:
   890 ;;		_Open1USART
   891 ;;		_OpenTimer0
   892 ;;		_OpenTimer1
   893 ;;		_ToMainHigh_recvmsg
   894 ;;		_ToMainLow_recvmsg
   895 ;;		_block_on_To_msgqueues
   896 ;;		_enable_interrupts
   897 ;;		_i2c_configure_slave
   898 ;;		_init_i2c
   899 ;;		_init_queues
   900 ;;		_init_timer1_lthread
   901 ;;		_init_uart_recv
   902 ;;		_timer0_lthread
   903 ;;		_timer1_lthread
   904 ;;		_uart_send
   905 ;; This function is called by:
   906 ;;		Startup code after reset
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text0
   911  000890                     __ptext0:
   912                           	opt stack 0
   913  000890                     _main:
   914                           	opt stack 17
   915                           
   916                           ;main.c: 69: char c;
   917                           ;main.c: 70: signed char length;
   918                           ;main.c: 71: unsigned char msgtype;
   919                           ;main.c: 72: unsigned char last_reg_recvd;
   920                           ;main.c: 73: uart_comm uc;
   921                           ;main.c: 74: i2c_comm ic;
   922                           ;main.c: 75: unsigned char msgbuffer[26 + 1];
   923                           ;main.c: 76: unsigned char i;
   924                           ;main.c: 77: uart_thread_struct uthread_data;
   925                           ;main.c: 78: timer1_thread_struct t1thread_data;
   926                           ;main.c: 79: timer0_thread_struct t0thread_data;
   927                           ;main.c: 81: OSCCON = 0xE0;
   928                           
   929                           ;incstack = 0
   930  000890  0EE0               	movlw	224
   931  000892  6ED3               	movwf	4051,c	;volatile
   932                           
   933                           ;main.c: 82: OSCTUNEbits.PLLEN = 1;
   934  000894  8C9B               	bsf	3995,6,c	;volatile
   935                           
   936                           ;main.c: 85: init_uart_recv(&uc);
   937  000896  0101               	movlb	1	; () banked
   938  000898  0E01               	movlw	high main@uc
   939  00089A  0100               	movlb	0	; () banked
   940  00089C  6F97               	movwf	(init_uart_recv@uc+1)& (0+255),b
   941  00089E  0101               	movlb	1	; () banked
   942  0008A0  0E22               	movlw	low main@uc
   943  0008A2  0100               	movlb	0	; () banked
   944  0008A4  6F96               	movwf	init_uart_recv@uc& (0+255),b
   945  0008A6  ECAA  F00B         	call	_init_uart_recv	;wreg free
   946                           
   947                           ;main.c: 88: init_i2c(&ic);
   948  0008AA  0101               	movlb	1	; () banked
   949  0008AC  0E01               	movlw	high main@ic
   950  0008AE  0100               	movlb	0	; () banked
   951  0008B0  6F97               	movwf	(init_i2c@ic+1)& (0+255),b
   952  0008B2  0101               	movlb	1	; () banked
   953  0008B4  0E5B               	movlw	low main@ic
   954  0008B6  0100               	movlb	0	; () banked
   955  0008B8  6F96               	movwf	init_i2c@ic& (0+255),b
   956  0008BA  EC85  F00A         	call	_init_i2c	;wreg free
   957                           
   958                           ;main.c: 91: init_timer1_lthread(&t1thread_data);
   959  0008BE  0101               	movlb	1	; () banked
   960  0008C0  0E01               	movlw	high main@t1thread_data
   961  0008C2  0100               	movlb	0	; () banked
   962  0008C4  6F97               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   963  0008C6  0101               	movlb	1	; () banked
   964  0008C8  0E1E               	movlw	low main@t1thread_data
   965  0008CA  0100               	movlb	0	; () banked
   966  0008CC  6F96               	movwf	init_timer1_lthread@tptr& (0+255),b
   967  0008CE  EC72  F00E         	call	_init_timer1_lthread	;wreg free
   968                           
   969                           ;main.c: 94: init_queues();
   970  0008D2  EC4F  F00A         	call	_init_queues	;wreg free
   971                           
   972                           ;main.c: 97: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
   973  0008D6  0E96               	movlw	150
   974  0008D8  EC23  F00E         	call	_OpenTimer0
   975                           
   976                           ;main.c: 98: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 &
      +                           0b11111111,0x0);
   977  0008DC  0E00               	movlw	0
   978  0008DE  0100               	movlb	0	; () banked
   979  0008E0  6F96               	movwf	OpenTimer1@config1& (0+255),b
   980  0008E2  0E9B               	movlw	155
   981  0008E4  ECCA  F00C         	call	_OpenTimer1
   982                           
   983                           ;main.c: 103: INTCON2bits.TMR0IP = 0;
   984  0008E8  94F1               	bcf	intcon2,2,c	;volatile
   985                           
   986                           ;main.c: 105: IPR1bits.TMR1IP = 0;
   987  0008EA  909F               	bcf	3999,0,c	;volatile
   988                           
   989                           ;main.c: 107: IPR1bits.RCIP = 0;
   990  0008EC  9A9F               	bcf	3999,5,c	;volatile
   991                           
   992                           ;main.c: 109: IPR1bits.TXIP = 0;
   993  0008EE  989F               	bcf	3999,4,c	;volatile
   994                           
   995                           ;main.c: 111: IPR1bits.SSPIP = 1;
   996  0008F0  869F               	bsf	3999,3,c	;volatile
   997                           
   998                           ;main.c: 120: i2c_configure_slave(0x9E);
   999  0008F2  0E9E               	movlw	158
  1000  0008F4  ECFB  F00D         	call	_i2c_configure_slave
  1001                           
  1002                           ;main.c: 130: PIE1bits.SSPIE = 1;
  1003  0008F8  869D               	bsf	3997,3,c	;volatile
  1004                           
  1005                           ;main.c: 133: Open1USART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1006                           ;main.c: 134: 0b11111111 & 0b11101111, 0x19);
  1007  0008FA  0E00               	movlw	0
  1008  0008FC  0100               	movlb	0	; () banked
  1009  0008FE  6F97               	movwf	(Open1USART@spbrg+1)& (0+255),b
  1010  000900  0E19               	movlw	25
  1011  000902  0100               	movlb	0	; () banked
  1012  000904  6F96               	movwf	Open1USART@spbrg& (0+255),b
  1013  000906  0E6C               	movlw	108
  1014  000908  ECE0  F009         	call	_Open1USART
  1015                           
  1016                           ;main.c: 138: enable_interrupts();
  1017  00090C  ECAD  F00E         	call	_enable_interrupts	;wreg free
  1018                           
  1019                           ;main.c: 140: TRISAbits.TRISA2 = 0x0;
  1020  000910  9492               	bcf	3986,2,c	;volatile
  1021                           
  1022                           ;main.c: 141: TRISAbits.TRISA3 = 0x0;
  1023  000912  9692               	bcf	3986,3,c	;volatile
  1024                           
  1025                           ;main.c: 142: TRISCbits.TRISC7 = 0x1;
  1026  000914  8E94               	bsf	3988,7,c	;volatile
  1027                           
  1028                           ;main.c: 143: TRISCbits.TRISC6 = 0x0;
  1029  000916  9C94               	bcf	3988,6,c	;volatile
  1030                           
  1031                           ;main.c: 145: SPBRGH1 = 0x00;
  1032  000918  0E00               	movlw	0
  1033  00091A  6E7F               	movwf	3967,c	;volatile
  1034                           
  1035                           ;main.c: 146: SPBRG1 = 0xCF;
  1036  00091C  0ECF               	movlw	207
  1037  00091E  6EB0               	movwf	4016,c	;volatile
  1038                           
  1039                           ;main.c: 148: TXSTA1bits.BRGH = 1;
  1040  000920  84AD               	bsf	4013,2,c	;volatile
  1041                           
  1042                           ;main.c: 149: BAUDCONbits.BRG16 = 1;
  1043  000922  867E               	bsf	3966,3,c	;volatile
  1044                           
  1045                           ;main.c: 150: TXSTA1bits.SYNC = 0;
  1046  000924  98AD               	bcf	4013,4,c	;volatile
  1047                           
  1048                           ;main.c: 151: RCSTA1bits.SPEN = 0x1;
  1049  000926  8EAC               	bsf	4012,7,c	;volatile
  1050                           
  1051                           ;main.c: 152: TXSTA1bits.TXEN = 0x1;
  1052  000928  8AAD               	bsf	4013,5,c	;volatile
  1053  00092A                     l2864:
  1054                           
  1055                           ;main.c: 169: block_on_To_msgqueues();
  1056  00092A  ECEA  F00A         	call	_block_on_To_msgqueues	;wreg free
  1057                           
  1058                           ;main.c: 176: length = ToMainHigh_recvmsg(26, &msgtype, (void *) msgbuffer);
  1059  00092E  0101               	movlb	1	; () banked
  1060  000930  0E01               	movlw	high main@msgtype
  1061  000932  0100               	movlb	0	; () banked
  1062  000934  6FAF               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1063  000936  0101               	movlb	1	; () banked
  1064  000938  0E21               	movlw	low main@msgtype
  1065  00093A  0100               	movlb	0	; () banked
  1066  00093C  6FAE               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1067  00093E  0101               	movlb	1	; () banked
  1068  000940  0E01               	movlw	high main@msgbuffer
  1069  000942  0100               	movlb	0	; () banked
  1070  000944  6FB1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1071  000946  0101               	movlb	1	; () banked
  1072  000948  0E00               	movlw	low main@msgbuffer
  1073  00094A  0100               	movlb	0	; () banked
  1074  00094C  6FB0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1075  00094E  0E1A               	movlw	26
  1076  000950  EC03  F00D         	call	_ToMainHigh_recvmsg
  1077  000954  0101               	movlb	1	; () banked
  1078  000956  6F20               	movwf	main@length& (0+255),b
  1079                           
  1080                           ; BSR set to: 1
  1081                           ;main.c: 177: if (length < 0) {
  1082  000958  0101               	movlb	1	; () banked
  1083  00095A  BF20               	btfsc	main@length& (0+255),7,b
  1084  00095C  D056               	goto	l2882
  1085  00095E  D049               	goto	l2880
  1086  000960                     l2872:
  1087                           
  1088                           ; BSR set to: 1
  1089                           ;main.c: 185: {
  1090                           ;main.c: 186: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1091  000960  0101               	movlb	1	; () banked
  1092  000962  0E01               	movlw	high main@t0thread_data
  1093  000964  0100               	movlb	0	; () banked
  1094  000966  6F97               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1095  000968  0101               	movlb	1	; () banked
  1096  00096A  0E1C               	movlw	low main@t0thread_data
  1097  00096C  0100               	movlb	0	; () banked
  1098  00096E  6F96               	movwf	timer0_lthread@tptr& (0+255),b
  1099  000970  0101               	movlb	1	; () banked
  1100  000972  0100               	movlb	0	; () banked
  1101  000974  C121  F098         	movff	main@msgtype,timer0_lthread@msgtype
  1102  000978  0100               	movlb	0	; () banked
  1103  00097A  6B99               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1104  00097C  0101               	movlb	1	; () banked
  1105  00097E  5120               	movf	main@length& (0+255),w,b
  1106  000980  0100               	movlb	0	; () banked
  1107  000982  6F9A               	movwf	timer0_lthread@length& (0+255),b
  1108  000984  0100               	movlb	0	; () banked
  1109  000986  6B9B               	clrf	(timer0_lthread@length+1)& (0+255),b
  1110  000988  0100               	movlb	0	; () banked
  1111  00098A  BF9A               	btfsc	timer0_lthread@length& (0+255),7,b
  1112  00098C  079B               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1113  00098E  0101               	movlb	1	; () banked
  1114  000990  0E01               	movlw	high main@msgbuffer
  1115  000992  0100               	movlb	0	; () banked
  1116  000994  6F9D               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1117  000996  0101               	movlb	1	; () banked
  1118  000998  0E00               	movlw	low main@msgbuffer
  1119  00099A  0100               	movlb	0	; () banked
  1120  00099C  6F9C               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1121  00099E  ECA6  F00E         	call	_timer0_lthread	;wreg free
  1122                           
  1123                           ;main.c: 187: break;
  1124  0009A2  D033               	goto	l2882
  1125  0009A4                     l2874:
  1126                           
  1127                           ;main.c: 190: {
  1128                           ;main.c: 192: LATAbits.LATA2 = !LATAbits.LATA2;
  1129  0009A4  B489               	btfsc	3977,2,c	;volatile
  1130  0009A6  D002               	goto	u1870
  1131  0009A8  0E01               	movlw	1
  1132  0009AA  D001               	goto	u1876
  1133  0009AC                     u1870:
  1134  0009AC  0E00               	movlw	0
  1135  0009AE                     u1876:
  1136  0009AE  0100               	movlb	0	; () banked
  1137  0009B0  6FB9               	movwf	??_main& (0+255),b
  1138  0009B2  0100               	movlb	0	; () banked
  1139  0009B4  47B9               	rlncf	??_main& (0+255),f,b
  1140  0009B6  47B9               	rlncf	??_main& (0+255),f,b
  1141  0009B8  5089               	movf	3977,w,c	;volatile
  1142  0009BA  0100               	movlb	0	; () banked
  1143  0009BC  19B9               	xorwf	??_main& (0+255),w,b
  1144  0009BE  0BFB               	andlw	-5
  1145  0009C0  19B9               	xorwf	??_main& (0+255),w,b
  1146  0009C2  6E89               	movwf	3977,c	;volatile
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;main.c: 193: uart_send(length, msgbuffer);
  1150  0009C4  0101               	movlb	1	; () banked
  1151  0009C6  5120               	movf	main@length& (0+255),w,b
  1152  0009C8  0100               	movlb	0	; () banked
  1153  0009CA  6FB0               	movwf	uart_send@length& (0+255),b
  1154  0009CC  0100               	movlb	0	; () banked
  1155  0009CE  6BB1               	clrf	(uart_send@length+1)& (0+255),b
  1156  0009D0  0100               	movlb	0	; () banked
  1157  0009D2  BFB0               	btfsc	uart_send@length& (0+255),7,b
  1158  0009D4  07B1               	decf	(uart_send@length+1)& (0+255),f,b
  1159  0009D6  0101               	movlb	1	; () banked
  1160  0009D8  0E01               	movlw	high main@msgbuffer
  1161  0009DA  0100               	movlb	0	; () banked
  1162  0009DC  6FB3               	movwf	(uart_send@msg_buffer+1)& (0+255),b
  1163  0009DE  0101               	movlb	1	; () banked
  1164  0009E0  0E00               	movlw	low main@msgbuffer
  1165  0009E2  0100               	movlb	0	; () banked
  1166  0009E4  6FB2               	movwf	uart_send@msg_buffer& (0+255),b
  1167  0009E6  EC29  F00C         	call	_uart_send	;wreg free
  1168                           
  1169                           ;main.c: 194: break;
  1170  0009EA  D00F               	goto	l2882
  1171  0009EC                     l119:
  1172                           
  1173                           ; BSR set to: 1
  1174                           ;main.c: 197: {
  1175                           ;main.c: 200: last_reg_recvd = msgbuffer[0];
  1176  0009EC  C100  F11B         	movff	main@msgbuffer,main@last_reg_recvd
  1177                           
  1178                           ;main.c: 201: break;
  1179  0009F0  D00C               	goto	l2882
  1180  0009F2                     l2880:
  1181                           
  1182                           ; BSR set to: 1
  1183  0009F2  0101               	movlb	1	; () banked
  1184  0009F4  5121               	movf	main@msgtype& (0+255),w,b
  1185                           
  1186                           ; Switch size 1, requested type "space"
  1187                           ; Number of cases is 4, Range of values is 10 to 42
  1188                           ; switch strategies available:
  1189                           ; Name         Instructions Cycles
  1190                           ; simple_byte           13     7 (average)
  1191                           ;	Chosen strategy is simple_byte
  1192  0009F6  0A0A               	xorlw	10	; case 10
  1193  0009F8  B4D8               	btfsc	status,2,c
  1194  0009FA  D7B2               	goto	l2872
  1195  0009FC  0A22               	xorlw	34	; case 40
  1196  0009FE  B4D8               	btfsc	status,2,c
  1197  000A00  D7D1               	goto	l2874
  1198  000A02  0A01               	xorlw	1	; case 41
  1199  000A04  B4D8               	btfsc	status,2,c
  1200  000A06  D7F2               	goto	l119
  1201  000A08  0A03               	xorlw	3	; case 42
  1202  000A0A                     l2882:
  1203                           
  1204                           ;main.c: 220: }
  1205                           ;main.c: 223: length = ToMainLow_recvmsg(26, &msgtype, (void *) msgbuffer);
  1206  000A0A  0101               	movlb	1	; () banked
  1207  000A0C  0E01               	movlw	high main@msgtype
  1208  000A0E  0100               	movlb	0	; () banked
  1209  000A10  6FAF               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1210  000A12  0101               	movlb	1	; () banked
  1211  000A14  0E21               	movlw	low main@msgtype
  1212  000A16  0100               	movlb	0	; () banked
  1213  000A18  6FAE               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1214  000A1A  0101               	movlb	1	; () banked
  1215  000A1C  0E01               	movlw	high main@msgbuffer
  1216  000A1E  0100               	movlb	0	; () banked
  1217  000A20  6FB1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1218  000A22  0101               	movlb	1	; () banked
  1219  000A24  0E00               	movlw	low main@msgbuffer
  1220  000A26  0100               	movlb	0	; () banked
  1221  000A28  6FB0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1222  000A2A  0E1A               	movlw	26
  1223  000A2C  ECE8  F00C         	call	_ToMainLow_recvmsg
  1224  000A30  0101               	movlb	1	; () banked
  1225  000A32  6F20               	movwf	main@length& (0+255),b
  1226                           
  1227                           ; BSR set to: 1
  1228                           ;main.c: 224: if (length < 0) {
  1229  000A34  0101               	movlb	1	; () banked
  1230  000A36  BF20               	btfsc	main@length& (0+255),7,b
  1231  000A38  D778               	goto	l2864
  1232  000A3A  D022               	goto	l2892
  1233  000A3C                     l2888:
  1234                           
  1235                           ; BSR set to: 1
  1236                           ;main.c: 232: {
  1237                           ;main.c: 233: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1238  000A3C  0101               	movlb	1	; () banked
  1239  000A3E  0E01               	movlw	high main@t1thread_data
  1240  000A40  0100               	movlb	0	; () banked
  1241  000A42  6FB1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1242  000A44  0101               	movlb	1	; () banked
  1243  000A46  0E1E               	movlw	low main@t1thread_data
  1244  000A48  0100               	movlb	0	; () banked
  1245  000A4A  6FB0               	movwf	timer1_lthread@tptr& (0+255),b
  1246  000A4C  0101               	movlb	1	; () banked
  1247  000A4E  0100               	movlb	0	; () banked
  1248  000A50  C121  F0B2         	movff	main@msgtype,timer1_lthread@msgtype
  1249  000A54  0100               	movlb	0	; () banked
  1250  000A56  6BB3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1251  000A58  0101               	movlb	1	; () banked
  1252  000A5A  5120               	movf	main@length& (0+255),w,b
  1253  000A5C  0100               	movlb	0	; () banked
  1254  000A5E  6FB4               	movwf	timer1_lthread@length& (0+255),b
  1255  000A60  0100               	movlb	0	; () banked
  1256  000A62  6BB5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1257  000A64  0100               	movlb	0	; () banked
  1258  000A66  BFB4               	btfsc	timer1_lthread@length& (0+255),7,b
  1259  000A68  07B5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1260  000A6A  0101               	movlb	1	; () banked
  1261  000A6C  0E01               	movlw	high main@msgbuffer
  1262  000A6E  0100               	movlb	0	; () banked
  1263  000A70  6FB7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1264  000A72  0101               	movlb	1	; () banked
  1265  000A74  0E00               	movlw	low main@msgbuffer
  1266  000A76  0100               	movlb	0	; () banked
  1267  000A78  6FB6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1268  000A7A  EC7B  F00B         	call	_timer1_lthread	;wreg free
  1269                           
  1270                           ;main.c: 234: break;
  1271  000A7E  D755               	goto	l2864
  1272  000A80                     l2892:
  1273  000A80  0101               	movlb	1	; () banked
  1274  000A82  5121               	movf	main@msgtype& (0+255),w,b
  1275                           
  1276                           ; Switch size 1, requested type "space"
  1277                           ; Number of cases is 4, Range of values is 11 to 32
  1278                           ; switch strategies available:
  1279                           ; Name         Instructions Cycles
  1280                           ; simple_byte           13     7 (average)
  1281                           ;	Chosen strategy is simple_byte
  1282  000A84  0A0B               	xorlw	11	; case 11
  1283  000A86  B4D8               	btfsc	status,2,c
  1284  000A88  D7D9               	goto	l2888
  1285  000A8A  0A15               	xorlw	21	; case 30
  1286  000A8C  B4D8               	btfsc	status,2,c
  1287  000A8E  D74D               	goto	l2864
  1288  000A90  0A01               	xorlw	1	; case 31
  1289  000A92  B4D8               	btfsc	status,2,c
  1290  000A94  D74A               	goto	l2864
  1291  000A96  0A3F               	xorlw	63	; case 32
  1292  000A98  D748               	goto	l2864
  1293  000A9A                     __end_of_main:
  1294                           	opt stack 0
  1295                           tblptru	equ	0xFF8
  1296                           intcon2	equ	0xFF1
  1297                           postinc0	equ	0xFEE
  1298                           wreg	equ	0xFE8
  1299                           status	equ	0xFD8
  1300                           
  1301 ;; *************** function _uart_send *****************
  1302 ;; Defined at:
  1303 ;;		line 70 in file "../src/my_uart.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  length          2   80[BANK0 ] int 
  1306 ;;  msg_buffer      2   82[BANK0 ] PTR unsigned char 
  1307 ;;		 -> main@msgbuffer(27), 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;		None               void
  1312 ;; Registers used:
  1313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1319 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1322 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1323 ;;Total ram usage:        4 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; Hardware stack levels required when called:   13
  1326 ;; This function calls:
  1327 ;;		_FromMainLow_sendmsg
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text1
  1334  001852                     __ptext1:
  1335                           	opt stack 0
  1336  001852                     _uart_send:
  1337                           	opt stack 17
  1338                           
  1339                           ;my_uart.c: 71: uc_ptr->outbufind = 0;
  1340                           
  1341                           ; BSR set to: 1
  1342                           ;incstack = 0
  1343  001852  EE20 F037          	lfsr	2,55
  1344  001856  5044               	movf	_uc_ptr,w,c
  1345  001858  26D9               	addwf	fsr2l,f,c
  1346  00185A  5045               	movf	_uc_ptr+1,w,c
  1347  00185C  22DA               	addwfc	fsr2h,f,c
  1348  00185E  0E00               	movlw	0
  1349  001860  6EDF               	movwf	indf2,c
  1350                           
  1351                           ;my_uart.c: 72: uc_ptr->outbuflen = length;
  1352  001862  EE20 F036          	lfsr	2,54
  1353  001866  5044               	movf	_uc_ptr,w,c
  1354  001868  26D9               	addwf	fsr2l,f,c
  1355  00186A  5045               	movf	_uc_ptr+1,w,c
  1356  00186C  22DA               	addwfc	fsr2h,f,c
  1357  00186E  0100               	movlb	0	; () banked
  1358  001870  C0B0  FFDF         	movff	uart_send@length,indf2
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;my_uart.c: 73: FromMainLow_sendmsg(uc_ptr->outbuflen, 40, (void *) msg_buffer);
  1362  001874  0E28               	movlw	40
  1363  001876  0100               	movlb	0	; () banked
  1364  001878  6FAC               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  1365  00187A  0100               	movlb	0	; () banked
  1366  00187C  C0B3  F0AE         	movff	uart_send@msg_buffer+1,FromMainLow_sendmsg@data+1
  1367  001880  0100               	movlb	0	; () banked
  1368  001882  C0B2  F0AD         	movff	uart_send@msg_buffer,FromMainLow_sendmsg@data
  1369  001886  EE20 F036          	lfsr	2,54
  1370  00188A  5044               	movf	_uc_ptr,w,c
  1371  00188C  26D9               	addwf	fsr2l,f,c
  1372  00188E  5045               	movf	_uc_ptr+1,w,c
  1373  001890  22DA               	addwfc	fsr2h,f,c
  1374  001892  50DF               	movf	indf2,w,c
  1375  001894  ECA0  F00D         	call	_FromMainLow_sendmsg
  1376                           
  1377                           ;my_uart.c: 74: PIE1bits.TXIE = 1;
  1378  001898  889D               	bsf	3997,4,c	;volatile
  1379  00189A  0012               	return	
  1380  00189C                     __end_of_uart_send:
  1381                           	opt stack 0
  1382                           tblptru	equ	0xFF8
  1383                           intcon2	equ	0xFF1
  1384                           postinc0	equ	0xFEE
  1385                           wreg	equ	0xFE8
  1386                           indf2	equ	0xFDF
  1387                           fsr2h	equ	0xFDA
  1388                           fsr2l	equ	0xFD9
  1389                           status	equ	0xFD8
  1390                           
  1391 ;; *************** function _FromMainLow_sendmsg *****************
  1392 ;; Defined at:
  1393 ;;		line 150 in file "../src/messages.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  length          1    wreg     unsigned char 
  1396 ;;  msgtype         1   76[BANK0 ] unsigned char 
  1397 ;;  data            2   77[BANK0 ] PTR void 
  1398 ;;		 -> main@msgbuffer(27), 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  length          1   79[BANK0 ] unsigned char 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      char 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1410 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1411 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1413 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1414 ;;Total ram usage:        4 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:   12
  1417 ;; This function calls:
  1418 ;;		_send_msg
  1419 ;; This function is called by:
  1420 ;;		_uart_send
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text2
  1425  001B40                     __ptext2:
  1426                           	opt stack 0
  1427  001B40                     _FromMainLow_sendmsg:
  1428                           	opt stack 17
  1429                           
  1430                           ;incstack = 0
  1431                           ;FromMainLow_sendmsg@length stored from wreg
  1432  001B40  0100               	movlb	0	; () banked
  1433  001B42  6FAF               	movwf	FromMainLow_sendmsg@length& (0+255),b
  1434                           
  1435                           ; BSR set to: 0
  1436                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1437                           ;	Return value of _FromMainLow_sendmsg is never used
  1438  001B44  0103               	movlb	3	; () banked
  1439  001B46  0E03               	movlw	high _FromMainLow_MQ
  1440  001B48  0100               	movlb	0	; () banked
  1441  001B4A  6FA1               	movwf	(send_msg@qptr+1)& (0+255),b
  1442  001B4C  0103               	movlb	3	; () banked
  1443  001B4E  0E76               	movlw	low _FromMainLow_MQ
  1444  001B50  0100               	movlb	0	; () banked
  1445  001B52  6FA0               	movwf	send_msg@qptr& (0+255),b
  1446  001B54  C0AF  F0A2         	movff	FromMainLow_sendmsg@length,send_msg@length
  1447  001B58  C0AC  F0A3         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1448  001B5C  0100               	movlb	0	; () banked
  1449  001B5E  C0AE  F0A5         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1450  001B62  0100               	movlb	0	; () banked
  1451  001B64  C0AD  F0A4         	movff	FromMainLow_sendmsg@data,send_msg@data
  1452  001B68  ECED  F006         	call	_send_msg	;wreg free
  1453  001B6C  0012               	return	
  1454  001B6E                     __end_of_FromMainLow_sendmsg:
  1455                           	opt stack 0
  1456                           tblptru	equ	0xFF8
  1457                           intcon2	equ	0xFF1
  1458                           postinc0	equ	0xFEE
  1459                           wreg	equ	0xFE8
  1460                           indf2	equ	0xFDF
  1461                           fsr2h	equ	0xFDA
  1462                           fsr2l	equ	0xFD9
  1463                           status	equ	0xFD8
  1464                           
  1465 ;; *************** function _timer1_lthread *****************
  1466 ;; Defined at:
  1467 ;;		line 14 in file "../src/timer1_thread.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  tptr            2   80[BANK0 ] PTR struct __timer1_thre
  1470 ;;		 -> main@t1thread_data(2), 
  1471 ;;  msgtype         2   82[BANK0 ] int 
  1472 ;;  length          2   84[BANK0 ] int 
  1473 ;;  msgbuffer       2   86[BANK0 ] PTR unsigned char 
  1474 ;;		 -> main@msgbuffer(27), 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  retval          1   88[BANK0 ] char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2   80[BANK0 ] int 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1486 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1487 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1489 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1490 ;;Total ram usage:        9 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:   13
  1493 ;; This function calls:
  1494 ;;		_FromMainHigh_sendmsg
  1495 ;;		___lwmod
  1496 ;; This function is called by:
  1497 ;;		_main
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text3
  1502  0016F6                     __ptext3:
  1503                           	opt stack 0
  1504  0016F6                     _timer1_lthread:
  1505                           	opt stack 17
  1506                           
  1507                           ;timer1_thread.c: 15: signed char retval;
  1508                           ;timer1_thread.c: 17: tptr->msgcount++;
  1509                           
  1510                           ;incstack = 0
  1511  0016F6  C0B0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1512  0016FA  C0B1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1513  0016FE  2ADE               	incf	postinc2,f,c
  1514  001700  0E00               	movlw	0
  1515  001702  22DD               	addwfc	postdec2,f,c
  1516                           
  1517                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1518  001704  C0B0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1519  001708  C0B1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1520  00170C  0100               	movlb	0	; () banked
  1521  00170E  CFDE F096          	movff	postinc2,___lwmod@dividend
  1522  001712  0100               	movlb	0	; () banked
  1523  001714  CFDD F097          	movff	postdec2,___lwmod@dividend+1
  1524  001718  0E00               	movlw	0
  1525  00171A  0100               	movlb	0	; () banked
  1526  00171C  6F99               	movwf	(___lwmod@divisor+1)& (0+255),b
  1527  00171E  0E0A               	movlw	10
  1528  001720  0100               	movlb	0	; () banked
  1529  001722  6F98               	movwf	___lwmod@divisor& (0+255),b
  1530  001724  EC1B  F00B         	call	___lwmod	;wreg free
  1531  001728  0100               	movlb	0	; () banked
  1532  00172A  5196               	movf	?___lwmod& (0+255),w,b
  1533  00172C  0A09               	xorlw	9
  1534  00172E  0100               	movlb	0	; () banked
  1535  001730  1197               	iorwf	(?___lwmod+1)& (0+255),w,b
  1536  001732  A4D8               	btfss	status,2,c
  1537  001734  0012               	return	
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1541  001736  0E14               	movlw	20
  1542  001738  0100               	movlb	0	; () banked
  1543  00173A  6FAC               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1544  00173C  0100               	movlb	0	; () banked
  1545  00173E  C0B1  F0AE         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1546  001742  0100               	movlb	0	; () banked
  1547  001744  C0B0  F0AD         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1548  001748  0E02               	movlw	2
  1549  00174A  ECB7  F00D         	call	_FromMainHigh_sendmsg
  1550  00174E  0100               	movlb	0	; () banked
  1551  001750  6FB8               	movwf	timer1_lthread@retval& (0+255),b
  1552  001752  0012               	return	
  1553  001754                     __end_of_timer1_lthread:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           intcon2	equ	0xFF1
  1557                           postinc0	equ	0xFEE
  1558                           wreg	equ	0xFE8
  1559                           indf2	equ	0xFDF
  1560                           postinc2	equ	0xFDE
  1561                           postdec2	equ	0xFDD
  1562                           fsr2h	equ	0xFDA
  1563                           fsr2l	equ	0xFD9
  1564                           status	equ	0xFD8
  1565                           
  1566 ;; *************** function ___lwmod *****************
  1567 ;; Defined at:
  1568 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  dividend        2   54[BANK0 ] unsigned int 
  1571 ;;  divisor         2   56[BANK0 ] unsigned int 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  counter         1   58[BANK0 ] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  2   54[BANK0 ] unsigned int 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1583 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1584 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1586 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1587 ;;Total ram usage:        5 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:   10
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_timer1_lthread
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text4
  1598  001636                     __ptext4:
  1599                           	opt stack 0
  1600  001636                     ___lwmod:
  1601                           	opt stack 19
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;incstack = 0
  1605  001636  0100               	movlb	0	; () banked
  1606  001638  5199               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1607  00163A  1198               	iorwf	___lwmod@divisor& (0+255),w,b
  1608  00163C  B4D8               	btfsc	status,2,c
  1609  00163E  D026               	goto	l1039
  1610                           
  1611                           ; BSR set to: 0
  1612  001640  0E01               	movlw	1
  1613  001642  0100               	movlb	0	; () banked
  1614  001644  6F9A               	movwf	___lwmod@counter& (0+255),b
  1615  001646  D006               	goto	l2356
  1616  001648                     l2354:
  1617                           
  1618                           ; BSR set to: 0
  1619  001648  0100               	movlb	0	; () banked
  1620  00164A  90D8               	bcf	status,0,c
  1621  00164C  3798               	rlcf	___lwmod@divisor& (0+255),f,b
  1622  00164E  3799               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1623  001650  0100               	movlb	0	; () banked
  1624  001652  2B9A               	incf	___lwmod@counter& (0+255),f,b
  1625  001654                     l2356:
  1626                           
  1627                           ; BSR set to: 0
  1628  001654  0100               	movlb	0	; () banked
  1629  001656  AF99               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1630  001658  D7F7               	goto	l2354
  1631  00165A                     l2358:
  1632                           
  1633                           ; BSR set to: 0
  1634  00165A  0100               	movlb	0	; () banked
  1635  00165C  5198               	movf	___lwmod@divisor& (0+255),w,b
  1636  00165E  0100               	movlb	0	; () banked
  1637  001660  5D96               	subwf	___lwmod@dividend& (0+255),w,b
  1638  001662  0100               	movlb	0	; () banked
  1639  001664  5199               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1640  001666  0100               	movlb	0	; () banked
  1641  001668  5997               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1642  00166A  A0D8               	btfss	status,0,c
  1643  00166C  D008               	goto	l2362
  1644                           
  1645                           ; BSR set to: 0
  1646  00166E  0100               	movlb	0	; () banked
  1647  001670  5198               	movf	___lwmod@divisor& (0+255),w,b
  1648  001672  0100               	movlb	0	; () banked
  1649  001674  5F96               	subwf	___lwmod@dividend& (0+255),f,b
  1650  001676  0100               	movlb	0	; () banked
  1651  001678  5199               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1652  00167A  0100               	movlb	0	; () banked
  1653  00167C  5B97               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1654  00167E                     l2362:
  1655                           
  1656                           ; BSR set to: 0
  1657  00167E  0100               	movlb	0	; () banked
  1658  001680  90D8               	bcf	status,0,c
  1659  001682  3399               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1660  001684  3398               	rrcf	___lwmod@divisor& (0+255),f,b
  1661                           
  1662                           ; BSR set to: 0
  1663  001686  0100               	movlb	0	; () banked
  1664  001688  2F9A               	decfsz	___lwmod@counter& (0+255),f,b
  1665  00168A  D7E7               	goto	l2358
  1666  00168C                     l1039:
  1667                           
  1668                           ; BSR set to: 0
  1669  00168C  C096  F096         	movff	___lwmod@dividend,?___lwmod
  1670  001690  C097  F097         	movff	___lwmod@dividend+1,?___lwmod+1
  1671                           
  1672                           ; BSR set to: 0
  1673  001694  0012               	return	
  1674  001696                     __end_of___lwmod:
  1675                           	opt stack 0
  1676                           tblptru	equ	0xFF8
  1677                           intcon2	equ	0xFF1
  1678                           postinc0	equ	0xFEE
  1679                           wreg	equ	0xFE8
  1680                           indf2	equ	0xFDF
  1681                           postinc2	equ	0xFDE
  1682                           postdec2	equ	0xFDD
  1683                           fsr2h	equ	0xFDA
  1684                           fsr2l	equ	0xFD9
  1685                           status	equ	0xFD8
  1686                           
  1687 ;; *************** function _FromMainHigh_sendmsg *****************
  1688 ;; Defined at:
  1689 ;;		line 174 in file "../src/messages.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  length          1    wreg     unsigned char 
  1692 ;;  msgtype         1   76[BANK0 ] unsigned char 
  1693 ;;  data            2   77[BANK0 ] PTR void 
  1694 ;;		 -> main@t1thread_data(2), 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  length          1   79[BANK0 ] unsigned char 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      char 
  1699 ;; Registers used:
  1700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1706 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1707 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1709 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1710 ;;Total ram usage:        4 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:   12
  1713 ;; This function calls:
  1714 ;;		_send_msg
  1715 ;; This function is called by:
  1716 ;;		_timer1_lthread
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text5
  1721  001B6E                     __ptext5:
  1722                           	opt stack 0
  1723  001B6E                     _FromMainHigh_sendmsg:
  1724                           	opt stack 17
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;incstack = 0
  1728                           ;FromMainHigh_sendmsg@length stored from wreg
  1729  001B6E  0100               	movlb	0	; () banked
  1730  001B70  6FAF               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  1734  001B72  0103               	movlb	3	; () banked
  1735  001B74  0E03               	movlw	high _FromMainHigh_MQ
  1736  001B76  0100               	movlb	0	; () banked
  1737  001B78  6FA1               	movwf	(send_msg@qptr+1)& (0+255),b
  1738  001B7A  0103               	movlb	3	; () banked
  1739  001B7C  0E00               	movlw	low _FromMainHigh_MQ
  1740  001B7E  0100               	movlb	0	; () banked
  1741  001B80  6FA0               	movwf	send_msg@qptr& (0+255),b
  1742  001B82  C0AF  F0A2         	movff	FromMainHigh_sendmsg@length,send_msg@length
  1743  001B86  C0AC  F0A3         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  1744  001B8A  0100               	movlb	0	; () banked
  1745  001B8C  C0AE  F0A5         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  1746  001B90  0100               	movlb	0	; () banked
  1747  001B92  C0AD  F0A4         	movff	FromMainHigh_sendmsg@data,send_msg@data
  1748  001B96  ECED  F006         	call	_send_msg	;wreg free
  1749  001B9A  0012               	return	
  1750  001B9C                     __end_of_FromMainHigh_sendmsg:
  1751                           	opt stack 0
  1752                           tblptru	equ	0xFF8
  1753                           intcon2	equ	0xFF1
  1754                           postinc0	equ	0xFEE
  1755                           wreg	equ	0xFE8
  1756                           indf2	equ	0xFDF
  1757                           postinc2	equ	0xFDE
  1758                           postdec2	equ	0xFDD
  1759                           fsr2h	equ	0xFDA
  1760                           fsr2l	equ	0xFD9
  1761                           status	equ	0xFD8
  1762                           
  1763 ;; *************** function _send_msg *****************
  1764 ;; Defined at:
  1765 ;;		line 24 in file "../src/messages.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  qptr            2   64[BANK0 ] PTR struct __msg_queue
  1768 ;;		 -> SensorData_MQ(118), FromMainHigh_MQ(118), FromMainLow_MQ(118), ToMainHigh_MQ(118), 
  1769 ;;		 -> ToMainLow_MQ(118), 
  1770 ;;  length          1   66[BANK0 ] unsigned char 
  1771 ;;  msgtype         1   67[BANK0 ] unsigned char 
  1772 ;;  data            2   68[BANK0 ] PTR void 
  1773 ;;		 -> timer0_int_handler@val(2), NULL(0), uart_recv_int_handler@readin(23), i2c_int_handler@error_buf(3), 
  1774 ;;		 -> main@msgbuffer(27), main@t1thread_data(2), main@ic(60), 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  qmsg            2   74[BANK0 ] PTR struct __msg
  1777 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), SensorData_MQ.queue(116), ToMainHigh_MQ.queue(116), 
  1778 ;;		 -> ToMainLow_MQ.queue(116), SensorData_MQ(118), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  1779 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  1780 ;;  tlength         2   71[BANK0 ] unsigned int 
  1781 ;;  slot            1   73[BANK0 ] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      char 
  1784 ;; Registers used:
  1785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1791 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1792 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1793 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1794 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1795 ;;Total ram usage:       12 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; Hardware stack levels required when called:   11
  1798 ;; This function calls:
  1799 ;;		_memcpy
  1800 ;; This function is called by:
  1801 ;;		_FromMainLow_sendmsg
  1802 ;;		_FromMainHigh_sendmsg
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text6
  1807  000DDA                     __ptext6:
  1808                           	opt stack 0
  1809  000DDA                     _send_msg:
  1810                           	opt stack 17
  1811                           
  1812                           ;messages.c: 25: unsigned char slot;
  1813                           ;messages.c: 27: msg *qmsg;
  1814                           ;messages.c: 28: size_t tlength = length;
  1815                           
  1816                           ;incstack = 0
  1817  000DDA  0100               	movlb	0	; () banked
  1818  000DDC  C0A2  F0A7         	movff	send_msg@length,send_msg@tlength
  1819  000DE0  0100               	movlb	0	; () banked
  1820  000DE2  6BA8               	clrf	(send_msg@tlength+1)& (0+255),b
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;messages.c: 38: slot = qptr->cur_write_ind;
  1824  000DE4  0100               	movlb	0	; () banked
  1825  000DE6  EE20 F074          	lfsr	2,116
  1826  000DEA  0100               	movlb	0	; () banked
  1827  000DEC  51A0               	movf	send_msg@qptr& (0+255),w,b
  1828  000DEE  26D9               	addwf	fsr2l,f,c
  1829  000DF0  0100               	movlb	0	; () banked
  1830  000DF2  51A1               	movf	(send_msg@qptr+1)& (0+255),w,b
  1831  000DF4  22DA               	addwfc	fsr2h,f,c
  1832  000DF6  50DF               	movf	indf2,w,c
  1833  000DF8  0100               	movlb	0	; () banked
  1834  000DFA  6FA9               	movwf	send_msg@slot& (0+255),b
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  1838  000DFC  0100               	movlb	0	; () banked
  1839  000DFE  51A9               	movf	send_msg@slot& (0+255),w,b
  1840  000E00  0D1D               	mullw	29
  1841  000E02  50F3               	movf	prodl,w,c
  1842  000E04  0100               	movlb	0	; () banked
  1843  000E06  25A0               	addwf	send_msg@qptr& (0+255),w,b
  1844  000E08  0100               	movlb	0	; () banked
  1845  000E0A  6FAA               	movwf	send_msg@qmsg& (0+255),b
  1846  000E0C  50F4               	movf	prodh,w,c
  1847  000E0E  0100               	movlb	0	; () banked
  1848  000E10  21A1               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  1849  000E12  0100               	movlb	0	; () banked
  1850  000E14  6FAB               	movwf	(send_msg@qmsg+1)& (0+255),b
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;messages.c: 41: if (qmsg->full != 0) {
  1854  000E16  C0AA  FFD9         	movff	send_msg@qmsg,fsr2l
  1855  000E1A  C0AB  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1856  000E1E  50DF               	movf	indf2,w,c
  1857  000E20  B4D8               	btfsc	status,2,c
  1858  000E22  D002               	goto	l2076
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;messages.c: 42: return (-1);
  1862  000E24  0EFF               	movlw	255
  1863  000E26  0012               	return	
  1864  000E28                     l2076:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;messages.c: 43: }
  1868                           ;messages.c: 46: qmsg->length = length;
  1869  000E28  0100               	movlb	0	; () banked
  1870  000E2A  EE20 F001          	lfsr	2,1
  1871  000E2E  0100               	movlb	0	; () banked
  1872  000E30  51AA               	movf	send_msg@qmsg& (0+255),w,b
  1873  000E32  26D9               	addwf	fsr2l,f,c
  1874  000E34  0100               	movlb	0	; () banked
  1875  000E36  51AB               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1876  000E38  22DA               	addwfc	fsr2h,f,c
  1877  000E3A  0100               	movlb	0	; () banked
  1878  000E3C  C0A2  FFDF         	movff	send_msg@length,indf2
  1879                           
  1880                           ;messages.c: 47: qmsg->msgtype = msgtype;
  1881  000E40  0100               	movlb	0	; () banked
  1882  000E42  EE20 F002          	lfsr	2,2
  1883  000E46  0100               	movlb	0	; () banked
  1884  000E48  51AA               	movf	send_msg@qmsg& (0+255),w,b
  1885  000E4A  26D9               	addwf	fsr2l,f,c
  1886  000E4C  0100               	movlb	0	; () banked
  1887  000E4E  51AB               	movf	(send_msg@qmsg+1)& (0+255),w,b
  1888  000E50  22DA               	addwfc	fsr2h,f,c
  1889  000E52  0100               	movlb	0	; () banked
  1890  000E54  C0A3  FFDF         	movff	send_msg@msgtype,indf2
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  1894  000E58  0E03               	movlw	3
  1895  000E5A  0100               	movlb	0	; () banked
  1896  000E5C  25AA               	addwf	send_msg@qmsg& (0+255),w,b
  1897  000E5E  0100               	movlb	0	; () banked
  1898  000E60  6F96               	movwf	memcpy@d1& (0+255),b
  1899  000E62  0E00               	movlw	0
  1900  000E64  0100               	movlb	0	; () banked
  1901  000E66  21AB               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  1902  000E68  0100               	movlb	0	; () banked
  1903  000E6A  6F97               	movwf	(memcpy@d1+1)& (0+255),b
  1904  000E6C  0100               	movlb	0	; () banked
  1905  000E6E  C0A5  F099         	movff	send_msg@data+1,memcpy@s1+1
  1906  000E72  0100               	movlb	0	; () banked
  1907  000E74  C0A4  F098         	movff	send_msg@data,memcpy@s1
  1908  000E78  C0A7  F09A         	movff	send_msg@tlength,memcpy@n
  1909  000E7C  C0A8  F09B         	movff	send_msg@tlength+1,memcpy@n+1
  1910  000E80  ECD9  F00B         	call	_memcpy	;wreg free
  1911                           
  1912                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  1913  000E84  0100               	movlb	0	; () banked
  1914  000E86  EE20 F074          	lfsr	2,116
  1915  000E8A  0100               	movlb	0	; () banked
  1916  000E8C  51A0               	movf	send_msg@qptr& (0+255),w,b
  1917  000E8E  26D9               	addwf	fsr2l,f,c
  1918  000E90  0100               	movlb	0	; () banked
  1919  000E92  51A1               	movf	(send_msg@qptr+1)& (0+255),w,b
  1920  000E94  22DA               	addwfc	fsr2h,f,c
  1921  000E96  0100               	movlb	0	; () banked
  1922  000E98  EE10 F074          	lfsr	1,116
  1923  000E9C  0100               	movlb	0	; () banked
  1924  000E9E  51A0               	movf	send_msg@qptr& (0+255),w,b
  1925  000EA0  26E1               	addwf	fsr1l,f,c
  1926  000EA2  0100               	movlb	0	; () banked
  1927  000EA4  51A1               	movf	(send_msg@qptr+1)& (0+255),w,b
  1928  000EA6  22E2               	addwfc	fsr1h,f,c
  1929  000EA8  50E7               	movf	indf1,w,c
  1930  000EAA  0100               	movlb	0	; () banked
  1931  000EAC  6FA6               	movwf	??_send_msg& (0+255),b
  1932  000EAE  0100               	movlb	0	; () banked
  1933  000EB0  29A6               	incf	??_send_msg& (0+255),w,b
  1934  000EB2  0B03               	andlw	3
  1935  000EB4  6EDF               	movwf	indf2,c
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;messages.c: 59: qmsg->full = 1;
  1939  000EB6  C0AA  FFD9         	movff	send_msg@qmsg,fsr2l
  1940  000EBA  C0AB  FFDA         	movff	send_msg@qmsg+1,fsr2h
  1941  000EBE  0E01               	movlw	1
  1942  000EC0  6EDF               	movwf	indf2,c
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;messages.c: 60: return (1);
  1946  000EC2  0E01               	movlw	1
  1947  000EC4  0012               	return	
  1948  000EC6                     __end_of_send_msg:
  1949                           	opt stack 0
  1950                           tblptru	equ	0xFF8
  1951                           prodh	equ	0xFF4
  1952                           prodl	equ	0xFF3
  1953                           intcon2	equ	0xFF1
  1954                           postinc0	equ	0xFEE
  1955                           wreg	equ	0xFE8
  1956                           indf1	equ	0xFE7
  1957                           fsr1h	equ	0xFE2
  1958                           fsr1l	equ	0xFE1
  1959                           indf2	equ	0xFDF
  1960                           postinc2	equ	0xFDE
  1961                           postdec2	equ	0xFDD
  1962                           fsr2h	equ	0xFDA
  1963                           fsr2l	equ	0xFD9
  1964                           status	equ	0xFD8
  1965                           
  1966 ;; *************** function _timer0_lthread *****************
  1967 ;; Defined at:
  1968 ;;		line 9 in file "../src/timer0_thread.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  tptr            2   54[BANK0 ] PTR struct __timer0_thre
  1971 ;;		 -> main@t0thread_data(2), 
  1972 ;;  msgtype         2   56[BANK0 ] int 
  1973 ;;  length          2   58[BANK0 ] int 
  1974 ;;  msgbuffer       2   60[BANK0 ] PTR unsigned char 
  1975 ;;		 -> main@msgbuffer(27), 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  msgval          2   62[BANK0 ] PTR unsigned int 
  1978 ;;		 -> main@msgbuffer(27), 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  2   54[BANK0 ] int 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2, status,0
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1988 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1989 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1991 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;Total ram usage:       10 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:   10
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text7
  2003  001D4C                     __ptext7:
  2004                           	opt stack 0
  2005  001D4C                     _timer0_lthread:
  2006                           	opt stack 20
  2007                           
  2008                           ;timer0_thread.c: 10: unsigned int *msgval;
  2009                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;incstack = 0
  2013  001D4C  0100               	movlb	0	; () banked
  2014  001D4E  C09D  F09F         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2015  001D52  0100               	movlb	0	; () banked
  2016  001D54  C09C  F09E         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2017                           
  2018                           ; BSR set to: 0
  2019  001D58  0012               	return	
  2020  001D5A                     __end_of_timer0_lthread:
  2021                           	opt stack 0
  2022                           tblptru	equ	0xFF8
  2023                           prodh	equ	0xFF4
  2024                           prodl	equ	0xFF3
  2025                           intcon2	equ	0xFF1
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           indf1	equ	0xFE7
  2029                           fsr1h	equ	0xFE2
  2030                           fsr1l	equ	0xFE1
  2031                           indf2	equ	0xFDF
  2032                           postinc2	equ	0xFDE
  2033                           postdec2	equ	0xFDD
  2034                           fsr2h	equ	0xFDA
  2035                           fsr2l	equ	0xFD9
  2036                           status	equ	0xFD8
  2037                           
  2038 ;; *************** function _init_uart_recv *****************
  2039 ;; Defined at:
  2040 ;;		line 47 in file "../src/my_uart.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  uc              2   54[BANK0 ] PTR struct __uart_comm
  2043 ;;		 -> main@uc(57), 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;		None               void
  2048 ;; Registers used:
  2049 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2055 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2058 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2059 ;;Total ram usage:        2 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; Hardware stack levels required when called:   10
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		_main
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text8
  2070  001754                     __ptext8:
  2071                           	opt stack 0
  2072  001754                     _init_uart_recv:
  2073                           	opt stack 20
  2074                           
  2075                           ;my_uart.c: 48: uc_ptr = uc;
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;incstack = 0
  2079  001754  0100               	movlb	0	; () banked
  2080  001756  C097  F045         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2081  00175A  0100               	movlb	0	; () banked
  2082  00175C  C096  F044         	movff	init_uart_recv@uc,_uc_ptr
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;my_uart.c: 49: uc_ptr->buflen = 0;
  2086  001760  EE20 F01A          	lfsr	2,26
  2087  001764  5044               	movf	_uc_ptr,w,c
  2088  001766  26D9               	addwf	fsr2l,f,c
  2089  001768  5045               	movf	_uc_ptr+1,w,c
  2090  00176A  22DA               	addwfc	fsr2h,f,c
  2091  00176C  0E00               	movlw	0
  2092  00176E  6EDF               	movwf	indf2,c
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;my_uart.c: 50: uc_ptr->bufind = 0;
  2096  001770  EE20 F01B          	lfsr	2,27
  2097  001774  5044               	movf	_uc_ptr,w,c
  2098  001776  26D9               	addwf	fsr2l,f,c
  2099  001778  5045               	movf	_uc_ptr+1,w,c
  2100  00177A  22DA               	addwfc	fsr2h,f,c
  2101  00177C  0E00               	movlw	0
  2102  00177E  6EDF               	movwf	indf2,c
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;my_uart.c: 51: uc_ptr->outbuflen = 0;
  2106  001780  EE20 F036          	lfsr	2,54
  2107  001784  5044               	movf	_uc_ptr,w,c
  2108  001786  26D9               	addwf	fsr2l,f,c
  2109  001788  5045               	movf	_uc_ptr+1,w,c
  2110  00178A  22DA               	addwfc	fsr2h,f,c
  2111  00178C  0E00               	movlw	0
  2112  00178E  6EDF               	movwf	indf2,c
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;my_uart.c: 52: uc_ptr->outbufind = 0;
  2116  001790  EE20 F037          	lfsr	2,55
  2117  001794  5044               	movf	_uc_ptr,w,c
  2118  001796  26D9               	addwf	fsr2l,f,c
  2119  001798  5045               	movf	_uc_ptr+1,w,c
  2120  00179A  22DA               	addwfc	fsr2h,f,c
  2121  00179C  0E00               	movlw	0
  2122  00179E  6EDF               	movwf	indf2,c
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;my_uart.c: 53: uc_ptr->msg_count = 0;
  2126  0017A0  EE20 F038          	lfsr	2,56
  2127  0017A4  5044               	movf	_uc_ptr,w,c
  2128  0017A6  26D9               	addwf	fsr2l,f,c
  2129  0017A8  5045               	movf	_uc_ptr+1,w,c
  2130  0017AA  22DA               	addwfc	fsr2h,f,c
  2131  0017AC  0E00               	movlw	0
  2132  0017AE  6EDF               	movwf	indf2,c
  2133                           
  2134                           ; BSR set to: 0
  2135  0017B0  0012               	return	
  2136  0017B2                     __end_of_init_uart_recv:
  2137                           	opt stack 0
  2138                           tblptru	equ	0xFF8
  2139                           prodh	equ	0xFF4
  2140                           prodl	equ	0xFF3
  2141                           intcon2	equ	0xFF1
  2142                           postinc0	equ	0xFEE
  2143                           wreg	equ	0xFE8
  2144                           indf1	equ	0xFE7
  2145                           fsr1h	equ	0xFE2
  2146                           fsr1l	equ	0xFE1
  2147                           indf2	equ	0xFDF
  2148                           postinc2	equ	0xFDE
  2149                           postdec2	equ	0xFDD
  2150                           fsr2h	equ	0xFDA
  2151                           fsr2l	equ	0xFD9
  2152                           status	equ	0xFD8
  2153                           
  2154 ;; *************** function _init_timer1_lthread *****************
  2155 ;; Defined at:
  2156 ;;		line 6 in file "../src/timer1_thread.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  tptr            2   54[BANK0 ] PTR struct __timer1_thre
  2159 ;;		 -> main@t1thread_data(2), 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;		None               void
  2164 ;; Registers used:
  2165 ;;		wreg, fsr2l, fsr2h
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2171 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2174 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2175 ;;Total ram usage:        2 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:   10
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_main
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text9
  2186  001CE4                     __ptext9:
  2187                           	opt stack 0
  2188  001CE4                     _init_timer1_lthread:
  2189                           	opt stack 20
  2190                           
  2191                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;incstack = 0
  2195  001CE4  C096  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2196  001CE8  C097  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2197  001CEC  0E00               	movlw	0
  2198  001CEE  6EDE               	movwf	postinc2,c
  2199  001CF0  0E00               	movlw	0
  2200  001CF2  6EDD               	movwf	postdec2,c
  2201  001CF4  0012               	return	
  2202  001CF6                     __end_of_init_timer1_lthread:
  2203                           	opt stack 0
  2204                           tblptru	equ	0xFF8
  2205                           prodh	equ	0xFF4
  2206                           prodl	equ	0xFF3
  2207                           intcon2	equ	0xFF1
  2208                           postinc0	equ	0xFEE
  2209                           wreg	equ	0xFE8
  2210                           indf1	equ	0xFE7
  2211                           fsr1h	equ	0xFE2
  2212                           fsr1l	equ	0xFE1
  2213                           indf2	equ	0xFDF
  2214                           postinc2	equ	0xFDE
  2215                           postdec2	equ	0xFDD
  2216                           fsr2h	equ	0xFDA
  2217                           fsr2l	equ	0xFD9
  2218                           status	equ	0xFD8
  2219                           
  2220 ;; *************** function _init_queues *****************
  2221 ;; Defined at:
  2222 ;;		line 214 in file "../src/messages.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;		None               void
  2229 ;; Registers used:
  2230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2240 ;;Total ram usage:        0 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:   11
  2243 ;; This function calls:
  2244 ;;		_init_queue
  2245 ;; This function is called by:
  2246 ;;		_main
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text10
  2251  00149E                     __ptext10:
  2252                           	opt stack 0
  2253  00149E                     _init_queues:
  2254                           	opt stack 19
  2255                           
  2256                           ;messages.c: 215: MQ_Main_Willing_to_block = 0;
  2257                           
  2258                           ;incstack = 0
  2259  00149E  0E00               	movlw	0
  2260  0014A0  0100               	movlb	0	; () banked
  2261  0014A2  6FBC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;messages.c: 216: init_queue(&ToMainLow_MQ);
  2265  0014A4  0102               	movlb	2	; () banked
  2266  0014A6  0E02               	movlw	high _ToMainLow_MQ
  2267  0014A8  0100               	movlb	0	; () banked
  2268  0014AA  6F97               	movwf	(init_queue@qptr+1)& (0+255),b
  2269  0014AC  0102               	movlb	2	; () banked
  2270  0014AE  0E76               	movlw	low _ToMainLow_MQ
  2271  0014B0  0100               	movlb	0	; () banked
  2272  0014B2  6F96               	movwf	init_queue@qptr& (0+255),b
  2273  0014B4  ECB8  F00A         	call	_init_queue	;wreg free
  2274                           
  2275                           ;messages.c: 217: init_queue(&ToMainHigh_MQ);
  2276  0014B8  0102               	movlb	2	; () banked
  2277  0014BA  0E02               	movlw	high _ToMainHigh_MQ
  2278  0014BC  0100               	movlb	0	; () banked
  2279  0014BE  6F97               	movwf	(init_queue@qptr+1)& (0+255),b
  2280  0014C0  0102               	movlb	2	; () banked
  2281  0014C2  0E00               	movlw	low _ToMainHigh_MQ
  2282  0014C4  0100               	movlb	0	; () banked
  2283  0014C6  6F96               	movwf	init_queue@qptr& (0+255),b
  2284  0014C8  ECB8  F00A         	call	_init_queue	;wreg free
  2285                           
  2286                           ;messages.c: 218: init_queue(&FromMainLow_MQ);
  2287  0014CC  0103               	movlb	3	; () banked
  2288  0014CE  0E03               	movlw	high _FromMainLow_MQ
  2289  0014D0  0100               	movlb	0	; () banked
  2290  0014D2  6F97               	movwf	(init_queue@qptr+1)& (0+255),b
  2291  0014D4  0103               	movlb	3	; () banked
  2292  0014D6  0E76               	movlw	low _FromMainLow_MQ
  2293  0014D8  0100               	movlb	0	; () banked
  2294  0014DA  6F96               	movwf	init_queue@qptr& (0+255),b
  2295  0014DC  ECB8  F00A         	call	_init_queue	;wreg free
  2296                           
  2297                           ;messages.c: 219: init_queue(&FromMainHigh_MQ);
  2298  0014E0  0103               	movlb	3	; () banked
  2299  0014E2  0E03               	movlw	high _FromMainHigh_MQ
  2300  0014E4  0100               	movlb	0	; () banked
  2301  0014E6  6F97               	movwf	(init_queue@qptr+1)& (0+255),b
  2302  0014E8  0103               	movlb	3	; () banked
  2303  0014EA  0E00               	movlw	low _FromMainHigh_MQ
  2304  0014EC  0100               	movlb	0	; () banked
  2305  0014EE  6F96               	movwf	init_queue@qptr& (0+255),b
  2306  0014F0  ECB8  F00A         	call	_init_queue	;wreg free
  2307                           
  2308                           ;messages.c: 220: init_queue(&SensorData_MQ);
  2309  0014F4  0104               	movlb	4	; () banked
  2310  0014F6  0E04               	movlw	high _SensorData_MQ
  2311  0014F8  0100               	movlb	0	; () banked
  2312  0014FA  6F97               	movwf	(init_queue@qptr+1)& (0+255),b
  2313  0014FC  0104               	movlb	4	; () banked
  2314  0014FE  0E00               	movlw	low _SensorData_MQ
  2315  001500  0100               	movlb	0	; () banked
  2316  001502  6F96               	movwf	init_queue@qptr& (0+255),b
  2317  001504  ECB8  F00A         	call	_init_queue	;wreg free
  2318  001508  0012               	return	
  2319  00150A                     __end_of_init_queues:
  2320                           	opt stack 0
  2321                           tblptru	equ	0xFF8
  2322                           prodh	equ	0xFF4
  2323                           prodl	equ	0xFF3
  2324                           intcon2	equ	0xFF1
  2325                           postinc0	equ	0xFEE
  2326                           wreg	equ	0xFE8
  2327                           indf1	equ	0xFE7
  2328                           fsr1h	equ	0xFE2
  2329                           fsr1l	equ	0xFE1
  2330                           indf2	equ	0xFDF
  2331                           postinc2	equ	0xFDE
  2332                           postdec2	equ	0xFDD
  2333                           fsr2h	equ	0xFDA
  2334                           fsr2l	equ	0xFD9
  2335                           status	equ	0xFD8
  2336                           
  2337 ;; *************** function _init_queue *****************
  2338 ;; Defined at:
  2339 ;;		line 14 in file "../src/messages.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;  qptr            2   54[BANK0 ] PTR struct __msg_queue
  2342 ;;		 -> SensorData_MQ(118), FromMainHigh_MQ(118), FromMainLow_MQ(118), ToMainHigh_MQ(118), 
  2343 ;;		 -> ToMainLow_MQ(118), 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  i               1   56[BANK0 ] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;		None               void
  2348 ;; Registers used:
  2349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2355 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2356 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2358 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2359 ;;Total ram usage:        3 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:   10
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_init_queues
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text11
  2370  001570                     __ptext11:
  2371                           	opt stack 0
  2372  001570                     _init_queue:
  2373                           	opt stack 19
  2374                           
  2375                           ;messages.c: 15: unsigned char i;
  2376                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2377                           
  2378                           ;incstack = 0
  2379  001570  0100               	movlb	0	; () banked
  2380  001572  EE20 F074          	lfsr	2,116
  2381  001576  0100               	movlb	0	; () banked
  2382  001578  5196               	movf	init_queue@qptr& (0+255),w,b
  2383  00157A  26D9               	addwf	fsr2l,f,c
  2384  00157C  0100               	movlb	0	; () banked
  2385  00157E  5197               	movf	(init_queue@qptr+1)& (0+255),w,b
  2386  001580  22DA               	addwfc	fsr2h,f,c
  2387  001582  0E00               	movlw	0
  2388  001584  6EDF               	movwf	indf2,c
  2389                           
  2390                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2391  001586  0100               	movlb	0	; () banked
  2392  001588  EE20 F075          	lfsr	2,117
  2393  00158C  0100               	movlb	0	; () banked
  2394  00158E  5196               	movf	init_queue@qptr& (0+255),w,b
  2395  001590  26D9               	addwf	fsr2l,f,c
  2396  001592  0100               	movlb	0	; () banked
  2397  001594  5197               	movf	(init_queue@qptr+1)& (0+255),w,b
  2398  001596  22DA               	addwfc	fsr2h,f,c
  2399  001598  0E00               	movlw	0
  2400  00159A  6EDF               	movwf	indf2,c
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2404  00159C  0E00               	movlw	0
  2405  00159E  0100               	movlb	0	; () banked
  2406  0015A0  6F98               	movwf	init_queue@i& (0+255),b
  2407                           
  2408                           ; BSR set to: 0
  2409  0015A2  0E03               	movlw	3
  2410  0015A4  0100               	movlb	0	; () banked
  2411  0015A6  6598               	cpfsgt	init_queue@i& (0+255),b
  2412  0015A8  D001               	goto	l2226
  2413  0015AA  0012               	return	
  2414  0015AC                     l2226:
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;messages.c: 20: qptr->queue[i].full = 0;
  2418  0015AC  0100               	movlb	0	; () banked
  2419  0015AE  5198               	movf	init_queue@i& (0+255),w,b
  2420  0015B0  0D1D               	mullw	29
  2421  0015B2  50F3               	movf	prodl,w,c
  2422  0015B4  0100               	movlb	0	; () banked
  2423  0015B6  2596               	addwf	init_queue@qptr& (0+255),w,b
  2424  0015B8  6ED9               	movwf	fsr2l,c
  2425  0015BA  50F4               	movf	prodh,w,c
  2426  0015BC  0100               	movlb	0	; () banked
  2427  0015BE  2197               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2428  0015C0  6EDA               	movwf	fsr2h,c
  2429  0015C2  0E00               	movlw	0
  2430  0015C4  6EDF               	movwf	indf2,c
  2431                           
  2432                           ; BSR set to: 0
  2433  0015C6  0100               	movlb	0	; () banked
  2434  0015C8  2B98               	incf	init_queue@i& (0+255),f,b
  2435                           
  2436                           ; BSR set to: 0
  2437  0015CA  0E03               	movlw	3
  2438  0015CC  0100               	movlb	0	; () banked
  2439  0015CE  6598               	cpfsgt	init_queue@i& (0+255),b
  2440  0015D0  D7ED               	goto	l2226
  2441  0015D2  0012               	return	
  2442  0015D4                     __end_of_init_queue:
  2443                           	opt stack 0
  2444                           tblptru	equ	0xFF8
  2445                           prodh	equ	0xFF4
  2446                           prodl	equ	0xFF3
  2447                           intcon2	equ	0xFF1
  2448                           postinc0	equ	0xFEE
  2449                           wreg	equ	0xFE8
  2450                           indf1	equ	0xFE7
  2451                           fsr1h	equ	0xFE2
  2452                           fsr1l	equ	0xFE1
  2453                           indf2	equ	0xFDF
  2454                           postinc2	equ	0xFDE
  2455                           postdec2	equ	0xFDD
  2456                           fsr2h	equ	0xFDA
  2457                           fsr2l	equ	0xFD9
  2458                           status	equ	0xFD8
  2459                           
  2460 ;; *************** function _init_i2c *****************
  2461 ;; Defined at:
  2462 ;;		line 270 in file "../src/my_i2c.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  ic              2   54[BANK0 ] PTR struct __i2c_comm
  2465 ;;		 -> main@ic(60), 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;		None               void
  2470 ;; Registers used:
  2471 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2477 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2480 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2481 ;;Total ram usage:        2 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:   10
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text12
  2492  00150A                     __ptext12:
  2493                           	opt stack 0
  2494  00150A                     _init_i2c:
  2495                           	opt stack 20
  2496                           
  2497                           ;my_i2c.c: 271: ic_ptr = ic;
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;incstack = 0
  2501  00150A  0100               	movlb	0	; () banked
  2502  00150C  C097  F0BB         	movff	init_i2c@ic+1,_ic_ptr+1
  2503  001510  0100               	movlb	0	; () banked
  2504  001512  C096  F0BA         	movff	init_i2c@ic,_ic_ptr
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;my_i2c.c: 272: ic_ptr->buflen = 0;
  2508  001516  0100               	movlb	0	; () banked
  2509  001518  EE20 F01A          	lfsr	2,26
  2510  00151C  0100               	movlb	0	; () banked
  2511  00151E  51BA               	movf	_ic_ptr& (0+255),w,b
  2512  001520  26D9               	addwf	fsr2l,f,c
  2513  001522  0100               	movlb	0	; () banked
  2514  001524  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  2515  001526  22DA               	addwfc	fsr2h,f,c
  2516  001528  0E00               	movlw	0
  2517  00152A  6EDF               	movwf	indf2,c
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;my_i2c.c: 273: ic_ptr->event_count = 0;
  2521  00152C  0100               	movlb	0	; () banked
  2522  00152E  EE20 F01B          	lfsr	2,27
  2523  001532  0100               	movlb	0	; () banked
  2524  001534  51BA               	movf	_ic_ptr& (0+255),w,b
  2525  001536  26D9               	addwf	fsr2l,f,c
  2526  001538  0100               	movlb	0	; () banked
  2527  00153A  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  2528  00153C  22DA               	addwfc	fsr2h,f,c
  2529  00153E  0E00               	movlw	0
  2530  001540  6EDF               	movwf	indf2,c
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;my_i2c.c: 274: ic_ptr->status = 0x5;
  2534  001542  0100               	movlb	0	; () banked
  2535  001544  EE20 F01C          	lfsr	2,28
  2536  001548  0100               	movlb	0	; () banked
  2537  00154A  51BA               	movf	_ic_ptr& (0+255),w,b
  2538  00154C  26D9               	addwf	fsr2l,f,c
  2539  00154E  0100               	movlb	0	; () banked
  2540  001550  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  2541  001552  22DA               	addwfc	fsr2h,f,c
  2542  001554  0E05               	movlw	5
  2543  001556  6EDF               	movwf	indf2,c
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;my_i2c.c: 275: ic_ptr->error_count = 0;
  2547  001558  0100               	movlb	0	; () banked
  2548  00155A  EE20 F01E          	lfsr	2,30
  2549  00155E  0100               	movlb	0	; () banked
  2550  001560  51BA               	movf	_ic_ptr& (0+255),w,b
  2551  001562  26D9               	addwf	fsr2l,f,c
  2552  001564  0100               	movlb	0	; () banked
  2553  001566  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  2554  001568  22DA               	addwfc	fsr2h,f,c
  2555  00156A  0E00               	movlw	0
  2556  00156C  6EDF               	movwf	indf2,c
  2557                           
  2558                           ; BSR set to: 0
  2559  00156E  0012               	return	
  2560  001570                     __end_of_init_i2c:
  2561                           	opt stack 0
  2562                           tblptru	equ	0xFF8
  2563                           prodh	equ	0xFF4
  2564                           prodl	equ	0xFF3
  2565                           intcon2	equ	0xFF1
  2566                           postinc0	equ	0xFEE
  2567                           wreg	equ	0xFE8
  2568                           indf1	equ	0xFE7
  2569                           fsr1h	equ	0xFE2
  2570                           fsr1l	equ	0xFE1
  2571                           indf2	equ	0xFDF
  2572                           postinc2	equ	0xFDE
  2573                           postdec2	equ	0xFDD
  2574                           fsr2h	equ	0xFDA
  2575                           fsr2l	equ	0xFD9
  2576                           status	equ	0xFD8
  2577                           
  2578 ;; *************** function _i2c_configure_slave *****************
  2579 ;; Defined at:
  2580 ;;		line 281 in file "../src/my_i2c.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  addr            1    wreg     unsigned char 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  addr            1   54[BANK0 ] unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;		None               void
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2595 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2597 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2598 ;;Total ram usage:        1 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:   10
  2601 ;; This function calls:
  2602 ;;		Nothing
  2603 ;; This function is called by:
  2604 ;;		_main
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text13
  2609  001BF6                     __ptext13:
  2610                           	opt stack 0
  2611  001BF6                     _i2c_configure_slave:
  2612                           	opt stack 20
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;incstack = 0
  2616                           ;i2c_configure_slave@addr stored from wreg
  2617  001BF6  0100               	movlb	0	; () banked
  2618  001BF8  6F96               	movwf	i2c_configure_slave@addr& (0+255),b
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;my_i2c.c: 290: TRISBbits.TRISB4 = 1;
  2622  001BFA  8893               	bsf	3987,4,c	;volatile
  2623                           
  2624                           ;my_i2c.c: 291: TRISBbits.TRISB5 = 1;
  2625  001BFC  8A93               	bsf	3987,5,c	;volatile
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;my_i2c.c: 299: SSPADD = addr;
  2629  001BFE  C096  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;my_i2c.c: 301: SSPSTAT = 0x0;
  2633  001C02  0E00               	movlw	0
  2634  001C04  6EC7               	movwf	4039,c	;volatile
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;my_i2c.c: 302: SSPCON1 = 0x0;
  2638  001C06  0E00               	movlw	0
  2639  001C08  6EC6               	movwf	4038,c	;volatile
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;my_i2c.c: 303: SSPCON2 = 0x0;
  2643  001C0A  0E00               	movlw	0
  2644  001C0C  6EC5               	movwf	4037,c	;volatile
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;my_i2c.c: 304: SSPCON1 |= 0x0E;
  2648  001C0E  0E0E               	movlw	14
  2649  001C10  12C6               	iorwf	4038,f,c	;volatile
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;my_i2c.c: 305: SSPSTAT |= 0b10000000;
  2653  001C12  8EC7               	bsf	4039,7,c	;volatile
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;my_i2c.c: 320: PORTBbits.SCL1 = 1;
  2657  001C14  8881               	bsf	3969,4,c	;volatile
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;my_i2c.c: 321: PORTBbits.SDA1 = 1;
  2661  001C16  8A81               	bsf	3969,5,c	;volatile
  2662                           
  2663                           ; BSR set to: 0
  2664                           ;my_i2c.c: 330: SSPCON2bits.SEN = 1;
  2665  001C18  80C5               	bsf	4037,0,c	;volatile
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;my_i2c.c: 331: SSPCON1 |= 0b00100000;
  2669  001C1A  8AC6               	bsf	4038,5,c	;volatile
  2670                           
  2671                           ; BSR set to: 0
  2672  001C1C  0012               	return	
  2673  001C1E                     __end_of_i2c_configure_slave:
  2674                           	opt stack 0
  2675                           tblptru	equ	0xFF8
  2676                           prodh	equ	0xFF4
  2677                           prodl	equ	0xFF3
  2678                           intcon2	equ	0xFF1
  2679                           postinc0	equ	0xFEE
  2680                           wreg	equ	0xFE8
  2681                           indf1	equ	0xFE7
  2682                           fsr1h	equ	0xFE2
  2683                           fsr1l	equ	0xFE1
  2684                           indf2	equ	0xFDF
  2685                           postinc2	equ	0xFDE
  2686                           postdec2	equ	0xFDD
  2687                           fsr2h	equ	0xFDA
  2688                           fsr2l	equ	0xFD9
  2689                           status	equ	0xFD8
  2690                           
  2691 ;; *************** function _enable_interrupts *****************
  2692 ;; Defined at:
  2693 ;;		line 14 in file "../src/interrupts.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;		None
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;		None
  2698 ;; Return value:  Size  Location     Type
  2699 ;;		None               void
  2700 ;; Registers used:
  2701 ;;		None
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2711 ;;Total ram usage:        0 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; Hardware stack levels required when called:   10
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_main
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720                           
  2721                           	psect	text14
  2722  001D5A                     __ptext14:
  2723                           	opt stack 0
  2724  001D5A                     _enable_interrupts:
  2725                           	opt stack 20
  2726                           
  2727                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;incstack = 0
  2731  001D5A  8ED0               	bsf	4048,7,c	;volatile
  2732                           
  2733                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  2734  001D5C  8EF2               	bsf	intcon,7,c	;volatile
  2735                           
  2736                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  2737  001D5E  8CF2               	bsf	intcon,6,c	;volatile
  2738  001D60  0012               	return	
  2739  001D62                     __end_of_enable_interrupts:
  2740                           	opt stack 0
  2741                           tblptru	equ	0xFF8
  2742                           prodh	equ	0xFF4
  2743                           prodl	equ	0xFF3
  2744                           intcon	equ	0xFF2
  2745                           intcon2	equ	0xFF1
  2746                           postinc0	equ	0xFEE
  2747                           wreg	equ	0xFE8
  2748                           indf1	equ	0xFE7
  2749                           fsr1h	equ	0xFE2
  2750                           fsr1l	equ	0xFE1
  2751                           indf2	equ	0xFDF
  2752                           postinc2	equ	0xFDE
  2753                           postdec2	equ	0xFDD
  2754                           fsr2h	equ	0xFDA
  2755                           fsr2l	equ	0xFD9
  2756                           status	equ	0xFD8
  2757                           
  2758 ;; *************** function _block_on_To_msgqueues *****************
  2759 ;; Defined at:
  2760 ;;		line 277 in file "../src/messages.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;		None               void
  2767 ;; Registers used:
  2768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2778 ;;Total ram usage:        0 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:   13
  2781 ;; This function calls:
  2782 ;;		_Delay1KTCYx
  2783 ;;		_check_msg
  2784 ;;		_in_main
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text15
  2791  0015D4                     __ptext15:
  2792                           	opt stack 0
  2793  0015D4                     _block_on_To_msgqueues:
  2794                           	opt stack 17
  2795                           
  2796                           ;messages.c: 278: if (!in_main()) {
  2797                           
  2798                           ;incstack = 0
  2799  0015D4  ECAC  F00C         	call	_in_main	;wreg free
  2800  0015D8  0100               	movlb	0	; () banked
  2801  0015DA  519B               	movf	(?_in_main+1)& (0+255),w,b
  2802  0015DC  0100               	movlb	0	; () banked
  2803  0015DE  119A               	iorwf	?_in_main& (0+255),w,b
  2804  0015E0  B4D8               	btfsc	status,2,c
  2805  0015E2  0012               	return	
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;messages.c: 280: }
  2809                           ;messages.c: 284: MQ_Main_Willing_to_block = 1;
  2810                           
  2811                           ; BSR set to: 0
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;messages.c: 279: return;
  2815  0015E4  0E01               	movlw	1
  2816  0015E6  0100               	movlb	0	; () banked
  2817  0015E8  6FBC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2818  0015EA                     l2738:
  2819                           
  2820                           ;messages.c: 286: if (check_msg(&ToMainHigh_MQ)) {
  2821  0015EA  0102               	movlb	2	; () banked
  2822  0015EC  0E02               	movlw	high _ToMainHigh_MQ
  2823  0015EE  0100               	movlb	0	; () banked
  2824  0015F0  6F97               	movwf	(check_msg@qptr+1)& (0+255),b
  2825  0015F2  0102               	movlb	2	; () banked
  2826  0015F4  0E00               	movlw	low _ToMainHigh_MQ
  2827  0015F6  0100               	movlb	0	; () banked
  2828  0015F8  6F96               	movwf	check_msg@qptr& (0+255),b
  2829  0015FA  EC6E  F00D         	call	_check_msg	;wreg free
  2830  0015FE  0900               	iorlw	0
  2831  001600  B4D8               	btfsc	status,2,c
  2832  001602  D004               	goto	l2744
  2833                           
  2834                           ;messages.c: 287: MQ_Main_Willing_to_block = 0;
  2835  001604  0E00               	movlw	0
  2836  001606  0100               	movlb	0	; () banked
  2837  001608  6FBC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2838  00160A  0012               	return	
  2839  00160C                     l2744:
  2840                           
  2841                           ;messages.c: 292: }
  2842                           ;messages.c: 293: if (check_msg(&ToMainLow_MQ)) {
  2843  00160C  0102               	movlb	2	; () banked
  2844  00160E  0E02               	movlw	high _ToMainLow_MQ
  2845  001610  0100               	movlb	0	; () banked
  2846  001612  6F97               	movwf	(check_msg@qptr+1)& (0+255),b
  2847  001614  0102               	movlb	2	; () banked
  2848  001616  0E76               	movlw	low _ToMainLow_MQ
  2849  001618  0100               	movlb	0	; () banked
  2850  00161A  6F96               	movwf	check_msg@qptr& (0+255),b
  2851  00161C  EC6E  F00D         	call	_check_msg	;wreg free
  2852  001620  0900               	iorlw	0
  2853  001622  B4D8               	btfsc	status,2,c
  2854  001624  D004               	goto	l2750
  2855                           
  2856                           ;messages.c: 294: MQ_Main_Willing_to_block = 0;
  2857  001626  0E00               	movlw	0
  2858  001628  0100               	movlb	0	; () banked
  2859  00162A  6FBC               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2860  00162C  0012               	return	
  2861  00162E                     l2750:
  2862                           
  2863                           ;messages.c: 299: }
  2864                           ;messages.c: 300: Delay1KTCYx(10);
  2865  00162E  0E0A               	movlw	10
  2866  001630  EC68  F00E         	call	_Delay1KTCYx
  2867  001634  D7DA               	goto	l2738
  2868  001636                     __end_of_block_on_To_msgqueues:
  2869                           	opt stack 0
  2870                           tblptru	equ	0xFF8
  2871                           prodh	equ	0xFF4
  2872                           prodl	equ	0xFF3
  2873                           intcon	equ	0xFF2
  2874                           intcon2	equ	0xFF1
  2875                           postinc0	equ	0xFEE
  2876                           wreg	equ	0xFE8
  2877                           indf1	equ	0xFE7
  2878                           fsr1h	equ	0xFE2
  2879                           fsr1l	equ	0xFE1
  2880                           indf2	equ	0xFDF
  2881                           postinc2	equ	0xFDE
  2882                           postdec2	equ	0xFDD
  2883                           fsr2h	equ	0xFDA
  2884                           fsr2l	equ	0xFD9
  2885                           status	equ	0xFD8
  2886                           
  2887 ;; *************** function _in_main *****************
  2888 ;; Defined at:
  2889 ;;		line 40 in file "../src/interrupts.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;		None
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  2   58[BANK0 ] int 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2903 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2906 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2907 ;;Total ram usage:        2 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:   12
  2910 ;; This function calls:
  2911 ;;		_in_high_int
  2912 ;;		_in_low_int
  2913 ;; This function is called by:
  2914 ;;		_block_on_To_msgqueues
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text16
  2919  001958                     __ptext16:
  2920                           	opt stack 0
  2921  001958                     _in_main:
  2922                           	opt stack 17
  2923                           
  2924                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  2925                           
  2926                           ;incstack = 0
  2927  001958  EC6E  F00C         	call	_in_low_int	;wreg free
  2928  00195C  0100               	movlb	0	; () banked
  2929  00195E  5199               	movf	(?_in_low_int+1)& (0+255),w,b
  2930  001960  0100               	movlb	0	; () banked
  2931  001962  1198               	iorwf	?_in_low_int& (0+255),w,b
  2932  001964  A4D8               	btfss	status,2,c
  2933  001966  D00F               	goto	l2214
  2934                           
  2935                           ; BSR set to: 0
  2936  001968  EC96  F00E         	call	_in_high_int	;wreg free
  2937  00196C  0100               	movlb	0	; () banked
  2938  00196E  5197               	movf	(?_in_high_int+1)& (0+255),w,b
  2939  001970  0100               	movlb	0	; () banked
  2940  001972  1196               	iorwf	?_in_high_int& (0+255),w,b
  2941  001974  A4D8               	btfss	status,2,c
  2942  001976  D007               	goto	l2214
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;interrupts.c: 42: return (1);
  2946  001978  0E00               	movlw	0
  2947  00197A  0100               	movlb	0	; () banked
  2948  00197C  6F9B               	movwf	(?_in_main+1)& (0+255),b
  2949  00197E  0E01               	movlw	1
  2950  001980  0100               	movlb	0	; () banked
  2951  001982  6F9A               	movwf	?_in_main& (0+255),b
  2952  001984  0012               	return	
  2953  001986                     l2214:
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;interrupts.c: 44: return (0);
  2957  001986  0E00               	movlw	0
  2958  001988  0100               	movlb	0	; () banked
  2959  00198A  6F9B               	movwf	(?_in_main+1)& (0+255),b
  2960  00198C  0E00               	movlw	0
  2961  00198E  0100               	movlb	0	; () banked
  2962  001990  6F9A               	movwf	?_in_main& (0+255),b
  2963  001992  0012               	return	
  2964  001994                     __end_of_in_main:
  2965                           	opt stack 0
  2966                           tblptru	equ	0xFF8
  2967                           prodh	equ	0xFF4
  2968                           prodl	equ	0xFF3
  2969                           intcon	equ	0xFF2
  2970                           intcon2	equ	0xFF1
  2971                           postinc0	equ	0xFEE
  2972                           wreg	equ	0xFE8
  2973                           indf1	equ	0xFE7
  2974                           fsr1h	equ	0xFE2
  2975                           fsr1l	equ	0xFE1
  2976                           indf2	equ	0xFDF
  2977                           postinc2	equ	0xFDE
  2978                           postdec2	equ	0xFDD
  2979                           fsr2h	equ	0xFDA
  2980                           fsr2l	equ	0xFD9
  2981                           status	equ	0xFD8
  2982                           
  2983 ;; *************** function _in_low_int *****************
  2984 ;; Defined at:
  2985 ;;		line 30 in file "../src/interrupts.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  2   56[BANK0 ] int 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, status,0, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2999 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3002 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3003 ;;Total ram usage:        2 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:   11
  3006 ;; This function calls:
  3007 ;;		_in_high_int
  3008 ;; This function is called by:
  3009 ;;		_in_main
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text17
  3014  0018DC                     __ptext17:
  3015                           	opt stack 0
  3016  0018DC                     _in_low_int:
  3017                           	opt stack 17
  3018                           
  3019                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;incstack = 0
  3023  0018DC  ACF2               	btfss	intcon,6,c	;volatile
  3024  0018DE  D007               	goto	l2052
  3025                           
  3026                           ;interrupts.c: 32: return (0);
  3027  0018E0  0E00               	movlw	0
  3028  0018E2  0100               	movlb	0	; () banked
  3029  0018E4  6F99               	movwf	(?_in_low_int+1)& (0+255),b
  3030  0018E6  0E00               	movlw	0
  3031  0018E8  0100               	movlb	0	; () banked
  3032  0018EA  6F98               	movwf	?_in_low_int& (0+255),b
  3033  0018EC  0012               	return	
  3034  0018EE                     l2052:
  3035  0018EE  EC96  F00E         	call	_in_high_int	;wreg free
  3036  0018F2  0100               	movlb	0	; () banked
  3037  0018F4  5197               	movf	(?_in_high_int+1)& (0+255),w,b
  3038  0018F6  0100               	movlb	0	; () banked
  3039  0018F8  1196               	iorwf	?_in_high_int& (0+255),w,b
  3040  0018FA  B4D8               	btfsc	status,2,c
  3041  0018FC  D007               	goto	l2060
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;interrupts.c: 34: return (0);
  3045  0018FE  0E00               	movlw	0
  3046  001900  0100               	movlb	0	; () banked
  3047  001902  6F99               	movwf	(?_in_low_int+1)& (0+255),b
  3048  001904  0E00               	movlw	0
  3049  001906  0100               	movlb	0	; () banked
  3050  001908  6F98               	movwf	?_in_low_int& (0+255),b
  3051  00190A  0012               	return	
  3052  00190C                     l2060:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;interrupts.c: 36: return (1);
  3056  00190C  0E00               	movlw	0
  3057  00190E  0100               	movlb	0	; () banked
  3058  001910  6F99               	movwf	(?_in_low_int+1)& (0+255),b
  3059  001912  0E01               	movlw	1
  3060  001914  0100               	movlb	0	; () banked
  3061  001916  6F98               	movwf	?_in_low_int& (0+255),b
  3062  001918  0012               	return	
  3063  00191A                     __end_of_in_low_int:
  3064                           	opt stack 0
  3065                           tblptru	equ	0xFF8
  3066                           prodh	equ	0xFF4
  3067                           prodl	equ	0xFF3
  3068                           intcon	equ	0xFF2
  3069                           intcon2	equ	0xFF1
  3070                           postinc0	equ	0xFEE
  3071                           wreg	equ	0xFE8
  3072                           indf1	equ	0xFE7
  3073                           fsr1h	equ	0xFE2
  3074                           fsr1l	equ	0xFE1
  3075                           indf2	equ	0xFDF
  3076                           postinc2	equ	0xFDE
  3077                           postdec2	equ	0xFDD
  3078                           fsr2h	equ	0xFDA
  3079                           fsr2l	equ	0xFD9
  3080                           status	equ	0xFD8
  3081                           
  3082 ;; *************** function _in_high_int *****************
  3083 ;; Defined at:
  3084 ;;		line 22 in file "../src/interrupts.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  2   54[BANK0 ] int 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3098 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3101 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3102 ;;Total ram usage:        2 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; Hardware stack levels required when called:   10
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_in_low_int
  3109 ;;		_in_main
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text18
  3114  001D2C                     __ptext18:
  3115                           	opt stack 0
  3116  001D2C                     _in_high_int:
  3117                           	opt stack 17
  3118                           
  3119                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;incstack = 0
  3123  001D2C  0E00               	movlw	0
  3124  001D2E  AEF2               	btfss	intcon,7,c	;volatile
  3125  001D30  0E01               	movlw	1
  3126  001D32  0100               	movlb	0	; () banked
  3127  001D34  6F96               	movwf	?_in_high_int& (0+255),b
  3128  001D36  0100               	movlb	0	; () banked
  3129  001D38  6B97               	clrf	(?_in_high_int+1)& (0+255),b
  3130  001D3A  0012               	return	
  3131  001D3C                     __end_of_in_high_int:
  3132                           	opt stack 0
  3133                           tblptru	equ	0xFF8
  3134                           prodh	equ	0xFF4
  3135                           prodl	equ	0xFF3
  3136                           intcon	equ	0xFF2
  3137                           intcon2	equ	0xFF1
  3138                           postinc0	equ	0xFEE
  3139                           wreg	equ	0xFE8
  3140                           indf1	equ	0xFE7
  3141                           fsr1h	equ	0xFE2
  3142                           fsr1l	equ	0xFE1
  3143                           indf2	equ	0xFDF
  3144                           postinc2	equ	0xFDE
  3145                           postdec2	equ	0xFDD
  3146                           fsr2h	equ	0xFDA
  3147                           fsr2l	equ	0xFD9
  3148                           status	equ	0xFD8
  3149                           
  3150 ;; *************** function _check_msg *****************
  3151 ;; Defined at:
  3152 ;;		line 241 in file "../src/messages.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  qptr            2   54[BANK0 ] PTR struct __msg_queue
  3155 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;		None
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      unsigned char 
  3160 ;; Registers used:
  3161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3167 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3169 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3170 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3171 ;;Total ram usage:        3 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:   10
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_block_on_To_msgqueues
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text19
  3182  001ADC                     __ptext19:
  3183                           	opt stack 0
  3184  001ADC                     _check_msg:
  3185                           	opt stack 19
  3186                           
  3187                           ;messages.c: 242: return (qptr->queue[qptr->cur_read_ind].full);
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;incstack = 0
  3191  001ADC  0100               	movlb	0	; () banked
  3192  001ADE  EE20 F075          	lfsr	2,117
  3193  001AE2  0100               	movlb	0	; () banked
  3194  001AE4  5196               	movf	check_msg@qptr& (0+255),w,b
  3195  001AE6  26D9               	addwf	fsr2l,f,c
  3196  001AE8  0100               	movlb	0	; () banked
  3197  001AEA  5197               	movf	(check_msg@qptr+1)& (0+255),w,b
  3198  001AEC  22DA               	addwfc	fsr2h,f,c
  3199  001AEE  50DF               	movf	indf2,w,c
  3200  001AF0  0100               	movlb	0	; () banked
  3201  001AF2  6F98               	movwf	??_check_msg& (0+255),b
  3202  001AF4  0100               	movlb	0	; () banked
  3203  001AF6  5198               	movf	??_check_msg& (0+255),w,b
  3204  001AF8  0D1D               	mullw	29
  3205  001AFA  50F3               	movf	prodl,w,c
  3206  001AFC  0100               	movlb	0	; () banked
  3207  001AFE  2596               	addwf	check_msg@qptr& (0+255),w,b
  3208  001B00  6ED9               	movwf	fsr2l,c
  3209  001B02  50F4               	movf	prodh,w,c
  3210  001B04  0100               	movlb	0	; () banked
  3211  001B06  2197               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3212  001B08  6EDA               	movwf	fsr2h,c
  3213  001B0A  50DF               	movf	indf2,w,c
  3214  001B0C  0012               	return	
  3215  001B0E                     __end_of_check_msg:
  3216                           	opt stack 0
  3217                           tblptru	equ	0xFF8
  3218                           prodh	equ	0xFF4
  3219                           prodl	equ	0xFF3
  3220                           intcon	equ	0xFF2
  3221                           intcon2	equ	0xFF1
  3222                           postinc0	equ	0xFEE
  3223                           wreg	equ	0xFE8
  3224                           indf1	equ	0xFE7
  3225                           fsr1h	equ	0xFE2
  3226                           fsr1l	equ	0xFE1
  3227                           indf2	equ	0xFDF
  3228                           postinc2	equ	0xFDE
  3229                           postdec2	equ	0xFDD
  3230                           fsr2h	equ	0xFDA
  3231                           fsr2l	equ	0xFD9
  3232                           status	equ	0xFD8
  3233                           
  3234 ;; *************** function _Delay1KTCYx *****************
  3235 ;; Defined at:
  3236 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  unit            1    wreg     unsigned char 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  unit            1   54[BANK0 ] unsigned char 
  3241 ;; Return value:  Size  Location     Type
  3242 ;;		None               void
  3243 ;; Registers used:
  3244 ;;		wreg
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3253 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3254 ;;Total ram usage:        1 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:   10
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_block_on_To_msgqueues
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text20
  3265  001CD0                     __ptext20:
  3266                           	opt stack 0
  3267  001CD0                     _Delay1KTCYx:
  3268                           	opt stack 19
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;incstack = 0
  3272                           ;Delay1KTCYx@unit stored from wreg
  3273  001CD0  0100               	movlb	0	; () banked
  3274  001CD2  6F96               	movwf	Delay1KTCYx@unit& (0+255),b
  3275  001CD4                     l733:
  3276                           
  3277                           ; BSR set to: 0
  3278                           
  3279                           ; BSR set to: 0
  3280  001CD4  0EFA               	movlw	250
  3281  001CD6                     u1897:
  3282  001CD6  F000               	nop	
  3283  001CD8  2EE8               	decfsz	wreg,f,c
  3284  001CDA  D7FD               	goto	u1897
  3285  001CDC  0100               	movlb	0	; () banked
  3286  001CDE  2F96               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3287  001CE0  D7F9               	goto	l733
  3288  001CE2  0012               	return	
  3289  001CE4                     __end_of_Delay1KTCYx:
  3290                           	opt stack 0
  3291                           tblptru	equ	0xFF8
  3292                           prodh	equ	0xFF4
  3293                           prodl	equ	0xFF3
  3294                           intcon	equ	0xFF2
  3295                           intcon2	equ	0xFF1
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           indf1	equ	0xFE7
  3299                           fsr1h	equ	0xFE2
  3300                           fsr1l	equ	0xFE1
  3301                           indf2	equ	0xFDF
  3302                           postinc2	equ	0xFDE
  3303                           postdec2	equ	0xFDD
  3304                           fsr2h	equ	0xFDA
  3305                           fsr2l	equ	0xFD9
  3306                           status	equ	0xFD8
  3307                           
  3308 ;; *************** function _ToMainLow_recvmsg *****************
  3309 ;; Defined at:
  3310 ;;		line 112 in file "../src/messages.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  maxlength       1    wreg     unsigned char 
  3313 ;;  msgtype         2   78[BANK0 ] PTR unsigned char 
  3314 ;;		 -> main@msgtype(1), 
  3315 ;;  data            2   80[BANK0 ] PTR void 
  3316 ;;		 -> main@msgbuffer(27), 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  maxlength       1   82[BANK0 ] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      char 
  3321 ;; Registers used:
  3322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3328 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3329 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3331 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3332 ;;Total ram usage:        5 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:   12
  3335 ;; This function calls:
  3336 ;;		_recv_msg
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text21
  3343  0019D0                     __ptext21:
  3344                           	opt stack 0
  3345  0019D0                     _ToMainLow_recvmsg:
  3346                           	opt stack 18
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;incstack = 0
  3350                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3351  0019D0  0100               	movlb	0	; () banked
  3352  0019D2  6FB2               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3356  0019D4  0102               	movlb	2	; () banked
  3357  0019D6  0E02               	movlw	high _ToMainLow_MQ
  3358  0019D8  0100               	movlb	0	; () banked
  3359  0019DA  6FA1               	movwf	(recv_msg@qptr+1)& (0+255),b
  3360  0019DC  0102               	movlb	2	; () banked
  3361  0019DE  0E76               	movlw	low _ToMainLow_MQ
  3362  0019E0  0100               	movlb	0	; () banked
  3363  0019E2  6FA0               	movwf	recv_msg@qptr& (0+255),b
  3364  0019E4  C0B2  F0A2         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3365  0019E8  0100               	movlb	0	; () banked
  3366  0019EA  C0AF  F0A4         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3367  0019EE  0100               	movlb	0	; () banked
  3368  0019F0  C0AE  F0A3         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3369  0019F4  0100               	movlb	0	; () banked
  3370  0019F6  C0B1  F0A6         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3371  0019FA  0100               	movlb	0	; () banked
  3372  0019FC  C0B0  F0A5         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3373  001A00  EC4D  F005         	call	_recv_msg	;wreg free
  3374  001A04  0012               	return	
  3375  001A06                     __end_of_ToMainLow_recvmsg:
  3376                           	opt stack 0
  3377                           tblptru	equ	0xFF8
  3378                           prodh	equ	0xFF4
  3379                           prodl	equ	0xFF3
  3380                           intcon	equ	0xFF2
  3381                           intcon2	equ	0xFF1
  3382                           postinc0	equ	0xFEE
  3383                           wreg	equ	0xFE8
  3384                           indf1	equ	0xFE7
  3385                           fsr1h	equ	0xFE2
  3386                           fsr1l	equ	0xFE1
  3387                           indf2	equ	0xFDF
  3388                           postinc2	equ	0xFDE
  3389                           postdec2	equ	0xFDD
  3390                           fsr2h	equ	0xFDA
  3391                           fsr2l	equ	0xFD9
  3392                           status	equ	0xFD8
  3393                           
  3394 ;; *************** function _ToMainHigh_recvmsg *****************
  3395 ;; Defined at:
  3396 ;;		line 135 in file "../src/messages.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  maxlength       1    wreg     unsigned char 
  3399 ;;  msgtype         2   78[BANK0 ] PTR unsigned char 
  3400 ;;		 -> main@msgtype(1), 
  3401 ;;  data            2   80[BANK0 ] PTR void 
  3402 ;;		 -> main@msgbuffer(27), 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  maxlength       1   82[BANK0 ] unsigned char 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  1    wreg      char 
  3407 ;; Registers used:
  3408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3414 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3415 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3417 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3418 ;;Total ram usage:        5 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:   12
  3421 ;; This function calls:
  3422 ;;		_recv_msg
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text22
  3429  001A06                     __ptext22:
  3430                           	opt stack 0
  3431  001A06                     _ToMainHigh_recvmsg:
  3432                           	opt stack 18
  3433                           
  3434                           ;incstack = 0
  3435                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3436  001A06  0100               	movlb	0	; () banked
  3437  001A08  6FB2               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3441  001A0A  0102               	movlb	2	; () banked
  3442  001A0C  0E02               	movlw	high _ToMainHigh_MQ
  3443  001A0E  0100               	movlb	0	; () banked
  3444  001A10  6FA1               	movwf	(recv_msg@qptr+1)& (0+255),b
  3445  001A12  0102               	movlb	2	; () banked
  3446  001A14  0E00               	movlw	low _ToMainHigh_MQ
  3447  001A16  0100               	movlb	0	; () banked
  3448  001A18  6FA0               	movwf	recv_msg@qptr& (0+255),b
  3449  001A1A  C0B2  F0A2         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3450  001A1E  0100               	movlb	0	; () banked
  3451  001A20  C0AF  F0A4         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3452  001A24  0100               	movlb	0	; () banked
  3453  001A26  C0AE  F0A3         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3454  001A2A  0100               	movlb	0	; () banked
  3455  001A2C  C0B1  F0A6         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3456  001A30  0100               	movlb	0	; () banked
  3457  001A32  C0B0  F0A5         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3458  001A36  EC4D  F005         	call	_recv_msg	;wreg free
  3459  001A3A  0012               	return	
  3460  001A3C                     __end_of_ToMainHigh_recvmsg:
  3461                           	opt stack 0
  3462                           tblptru	equ	0xFF8
  3463                           prodh	equ	0xFF4
  3464                           prodl	equ	0xFF3
  3465                           intcon	equ	0xFF2
  3466                           intcon2	equ	0xFF1
  3467                           postinc0	equ	0xFEE
  3468                           wreg	equ	0xFE8
  3469                           indf1	equ	0xFE7
  3470                           fsr1h	equ	0xFE2
  3471                           fsr1l	equ	0xFE1
  3472                           indf2	equ	0xFDF
  3473                           postinc2	equ	0xFDE
  3474                           postdec2	equ	0xFDD
  3475                           fsr2h	equ	0xFDA
  3476                           fsr2l	equ	0xFD9
  3477                           status	equ	0xFD8
  3478                           
  3479 ;; *************** function _recv_msg *****************
  3480 ;; Defined at:
  3481 ;;		line 63 in file "../src/messages.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  qptr            2   64[BANK0 ] PTR struct __msg_queue
  3484 ;;		 -> SensorData_MQ(118), FromMainHigh_MQ(118), FromMainLow_MQ(118), ToMainHigh_MQ(118), 
  3485 ;;		 -> ToMainLow_MQ(118), 
  3486 ;;  maxlength       1   66[BANK0 ] unsigned char 
  3487 ;;  msgtype         2   67[BANK0 ] PTR unsigned char 
  3488 ;;		 -> timer0_int_handler@msgtype(2), RAM(3775), main@msgtype(1), 
  3489 ;;  data            2   69[BANK0 ] PTR void 
  3490 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(27), main@ic(60), 
  3491 ;;		 -> main@uc(57), 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  qmsg            2   76[BANK0 ] PTR struct __msg
  3494 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), SensorData_MQ.queue(116), ToMainHigh_MQ.queue(116), 
  3495 ;;		 -> ToMainLow_MQ.queue(116), SensorData_MQ(118), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  3496 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  3497 ;;  tlength         2   74[BANK0 ] unsigned int 
  3498 ;;  slot            1   73[BANK0 ] unsigned char 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      char 
  3501 ;; Registers used:
  3502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3508 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3509 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3510 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3511 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3512 ;;Total ram usage:       14 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:   11
  3515 ;; This function calls:
  3516 ;;		_memcpy
  3517 ;; This function is called by:
  3518 ;;		_ToMainLow_recvmsg
  3519 ;;		_ToMainHigh_recvmsg
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text23
  3524  000A9A                     __ptext23:
  3525                           	opt stack 0
  3526  000A9A                     _recv_msg:
  3527                           	opt stack 18
  3528                           
  3529                           ;messages.c: 64: unsigned char slot;
  3530                           ;messages.c: 68: msg *qmsg;
  3531                           ;messages.c: 69: size_t tlength;
  3532                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3533                           
  3534                           ;incstack = 0
  3535  000A9A  0100               	movlb	0	; () banked
  3536  000A9C  EE20 F075          	lfsr	2,117
  3537  000AA0  0100               	movlb	0	; () banked
  3538  000AA2  51A0               	movf	recv_msg@qptr& (0+255),w,b
  3539  000AA4  26D9               	addwf	fsr2l,f,c
  3540  000AA6  0100               	movlb	0	; () banked
  3541  000AA8  51A1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3542  000AAA  22DA               	addwfc	fsr2h,f,c
  3543  000AAC  50DF               	movf	indf2,w,c
  3544  000AAE  0100               	movlb	0	; () banked
  3545  000AB0  6FA9               	movwf	recv_msg@slot& (0+255),b
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3549  000AB2  0100               	movlb	0	; () banked
  3550  000AB4  51A9               	movf	recv_msg@slot& (0+255),w,b
  3551  000AB6  0D1D               	mullw	29
  3552  000AB8  50F3               	movf	prodl,w,c
  3553  000ABA  0100               	movlb	0	; () banked
  3554  000ABC  25A0               	addwf	recv_msg@qptr& (0+255),w,b
  3555  000ABE  0100               	movlb	0	; () banked
  3556  000AC0  6FAC               	movwf	recv_msg@qmsg& (0+255),b
  3557  000AC2  50F4               	movf	prodh,w,c
  3558  000AC4  0100               	movlb	0	; () banked
  3559  000AC6  21A1               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3560  000AC8  0100               	movlb	0	; () banked
  3561  000ACA  6FAD               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;messages.c: 74: if (qmsg->full == 1) {
  3565  000ACC  0E01               	movlw	1
  3566  000ACE  C0AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  3567  000AD2  C0AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3568  000AD6  62DF               	cpfseq	indf2,c
  3569  000AD8  D06D               	goto	l2260
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3573  000ADA  0100               	movlb	0	; () banked
  3574  000ADC  EE20 F001          	lfsr	2,1
  3575  000AE0  0100               	movlb	0	; () banked
  3576  000AE2  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3577  000AE4  26D9               	addwf	fsr2l,f,c
  3578  000AE6  0100               	movlb	0	; () banked
  3579  000AE8  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3580  000AEA  22DA               	addwfc	fsr2h,f,c
  3581  000AEC  50DF               	movf	indf2,w,c
  3582  000AEE  0100               	movlb	0	; () banked
  3583  000AF0  5DA2               	subwf	recv_msg@maxlength& (0+255),w,b
  3584  000AF2  B0D8               	btfsc	status,0,c
  3585  000AF4  D002               	goto	l2244
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;messages.c: 77: return (-3);
  3589  000AF6  0EFD               	movlw	253
  3590  000AF8  0012               	return	
  3591  000AFA                     l2244:
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;messages.c: 78: }
  3595                           ;messages.c: 80: tlength = qmsg->length;
  3596  000AFA  0100               	movlb	0	; () banked
  3597  000AFC  EE20 F001          	lfsr	2,1
  3598  000B00  0100               	movlb	0	; () banked
  3599  000B02  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3600  000B04  26D9               	addwf	fsr2l,f,c
  3601  000B06  0100               	movlb	0	; () banked
  3602  000B08  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3603  000B0A  22DA               	addwfc	fsr2h,f,c
  3604  000B0C  50DF               	movf	indf2,w,c
  3605  000B0E  0100               	movlb	0	; () banked
  3606  000B10  6FA7               	movwf	??_recv_msg& (0+255),b
  3607  000B12  0100               	movlb	0	; () banked
  3608  000B14  51A7               	movf	??_recv_msg& (0+255),w,b
  3609  000B16  0100               	movlb	0	; () banked
  3610  000B18  6FAA               	movwf	recv_msg@tlength& (0+255),b
  3611  000B1A  0100               	movlb	0	; () banked
  3612  000B1C  6BAB               	clrf	(recv_msg@tlength+1)& (0+255),b
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3616  000B1E  0100               	movlb	0	; () banked
  3617  000B20  C0A6  F097         	movff	recv_msg@data+1,memcpy@d1+1
  3618  000B24  0100               	movlb	0	; () banked
  3619  000B26  C0A5  F096         	movff	recv_msg@data,memcpy@d1
  3620  000B2A  0E03               	movlw	3
  3621  000B2C  0100               	movlb	0	; () banked
  3622  000B2E  25AC               	addwf	recv_msg@qmsg& (0+255),w,b
  3623  000B30  0100               	movlb	0	; () banked
  3624  000B32  6FA7               	movwf	??_recv_msg& (0+255),b
  3625  000B34  0E00               	movlw	0
  3626  000B36  0100               	movlb	0	; () banked
  3627  000B38  21AD               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3628  000B3A  0100               	movlb	0	; () banked
  3629  000B3C  6FA8               	movwf	(??_recv_msg+1)& (0+255),b
  3630  000B3E  C0A7  F098         	movff	??_recv_msg,memcpy@s1
  3631  000B42  C0A8  F099         	movff	??_recv_msg+1,memcpy@s1+1
  3632  000B46  C0AA  F09A         	movff	recv_msg@tlength,memcpy@n
  3633  000B4A  C0AB  F09B         	movff	recv_msg@tlength+1,memcpy@n+1
  3634  000B4E  ECD9  F00B         	call	_memcpy	;wreg free
  3635                           
  3636                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3637  000B52  0100               	movlb	0	; () banked
  3638  000B54  EE20 F075          	lfsr	2,117
  3639  000B58  0100               	movlb	0	; () banked
  3640  000B5A  51A0               	movf	recv_msg@qptr& (0+255),w,b
  3641  000B5C  26D9               	addwf	fsr2l,f,c
  3642  000B5E  0100               	movlb	0	; () banked
  3643  000B60  51A1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3644  000B62  22DA               	addwfc	fsr2h,f,c
  3645  000B64  0100               	movlb	0	; () banked
  3646  000B66  EE10 F075          	lfsr	1,117
  3647  000B6A  0100               	movlb	0	; () banked
  3648  000B6C  51A0               	movf	recv_msg@qptr& (0+255),w,b
  3649  000B6E  26E1               	addwf	fsr1l,f,c
  3650  000B70  0100               	movlb	0	; () banked
  3651  000B72  51A1               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3652  000B74  22E2               	addwfc	fsr1h,f,c
  3653  000B76  50E7               	movf	indf1,w,c
  3654  000B78  0100               	movlb	0	; () banked
  3655  000B7A  6FA7               	movwf	??_recv_msg& (0+255),b
  3656  000B7C  0100               	movlb	0	; () banked
  3657  000B7E  29A7               	incf	??_recv_msg& (0+255),w,b
  3658  000B80  0B03               	andlw	3
  3659  000B82  6EDF               	movwf	indf2,c
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3663  000B84  0100               	movlb	0	; () banked
  3664  000B86  EE20 F002          	lfsr	2,2
  3665  000B8A  0100               	movlb	0	; () banked
  3666  000B8C  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3667  000B8E  26D9               	addwf	fsr2l,f,c
  3668  000B90  0100               	movlb	0	; () banked
  3669  000B92  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3670  000B94  22DA               	addwfc	fsr2h,f,c
  3671  000B96  C0A3  FFE1         	movff	recv_msg@msgtype,fsr1l
  3672  000B9A  C0A4  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3673  000B9E  CFDF FFE7          	movff	indf2,indf1
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;messages.c: 91: qmsg->full = 0;
  3677  000BA2  C0AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  3678  000BA6  C0AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3679  000BAA  0E00               	movlw	0
  3680  000BAC  6EDF               	movwf	indf2,c
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;messages.c: 92: return (tlength);
  3684  000BAE  0100               	movlb	0	; () banked
  3685  000BB0  51AA               	movf	recv_msg@tlength& (0+255),w,b
  3686  000BB2  0012               	return	
  3687  000BB4                     l2260:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;messages.c: 94: return (-4);
  3691  000BB4  0EFC               	movlw	252
  3692  000BB6  0012               	return	
  3693  000BB8                     __end_of_recv_msg:
  3694                           	opt stack 0
  3695                           tblptru	equ	0xFF8
  3696                           prodh	equ	0xFF4
  3697                           prodl	equ	0xFF3
  3698                           intcon	equ	0xFF2
  3699                           intcon2	equ	0xFF1
  3700                           postinc0	equ	0xFEE
  3701                           wreg	equ	0xFE8
  3702                           indf1	equ	0xFE7
  3703                           fsr1h	equ	0xFE2
  3704                           fsr1l	equ	0xFE1
  3705                           indf2	equ	0xFDF
  3706                           postinc2	equ	0xFDE
  3707                           postdec2	equ	0xFDD
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8
  3711                           
  3712 ;; *************** function _memcpy *****************
  3713 ;; Defined at:
  3714 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\memcpy.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  d1              2   54[BANK0 ] PTR void 
  3717 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), SensorData_MQ.queue(116), ToMainHigh_MQ.queue(116), 
  3718 ;;		 -> ToMainLow_MQ.queue(116), timer0_int_handler@val(2), NULL(0), SensorData_MQ(118), 
  3719 ;;		 -> FromMainHigh_MQ(118), FromMainLow_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  3720 ;;		 -> main@msgbuffer(27), main@ic(60), main@uc(57), 
  3721 ;;  s1              2   56[BANK0 ] PTR const void 
  3722 ;;		 -> ToMainLow_MQ.data(26), ToMainHigh_MQ.data(26), FromMainLow_MQ.data(26), FromMainHigh_MQ.data(26), 
  3723 ;;		 -> SensorData_MQ.data(26), ToMainLow_MQ.queue.data(26), ToMainHigh_MQ.queue.data(26), SensorData_MQ.queue.data(26),
      + 
  3724 ;;		 -> FromMainHigh_MQ.queue.data(26), FromMainLow_MQ.queue.data(26), timer0_int_handler@val(2), NULL(0), 
  3725 ;;		 -> uart_recv_int_handler@readin(23), i2c_int_handler@error_buf(3), SensorData_MQ(118), FromMainHigh_MQ(118), 
  3726 ;;		 -> FromMainLow_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), main@msgbuffer(27), 
  3727 ;;		 -> main@t1thread_data(2), main@ic(60), 
  3728 ;;  n               2   58[BANK0 ] unsigned int 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  s               2   62[BANK0 ] PTR const unsigned char 
  3731 ;;		 -> ToMainLow_MQ.data(26), ToMainHigh_MQ.data(26), FromMainLow_MQ.data(26), FromMainHigh_MQ.data(26), 
  3732 ;;		 -> SensorData_MQ.data(26), ToMainLow_MQ.queue.data(26), ToMainHigh_MQ.queue.data(26), SensorData_MQ.queue.data(26),
      + 
  3733 ;;		 -> FromMainHigh_MQ.queue.data(26), FromMainLow_MQ.queue.data(26), timer0_int_handler@val(2), NULL(0), 
  3734 ;;		 -> uart_recv_int_handler@readin(23), i2c_int_handler@error_buf(3), SensorData_MQ(118), FromMainHigh_MQ(118), 
  3735 ;;		 -> FromMainLow_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), main@msgbuffer(27), 
  3736 ;;		 -> main@t1thread_data(2), main@ic(60), 
  3737 ;;  d               2   60[BANK0 ] PTR unsigned char 
  3738 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), SensorData_MQ.queue(116), ToMainHigh_MQ.queue(116), 
  3739 ;;		 -> ToMainLow_MQ.queue(116), timer0_int_handler@val(2), NULL(0), SensorData_MQ(118), 
  3740 ;;		 -> FromMainHigh_MQ(118), FromMainLow_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  3741 ;;		 -> main@msgbuffer(27), main@ic(60), main@uc(57), 
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  2   54[BANK0 ] PTR void 
  3744 ;; Registers used:
  3745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3751 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3755 ;;Total ram usage:       10 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; Hardware stack levels required when called:   10
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_send_msg
  3762 ;;		_recv_msg
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text24
  3767  0017B2                     __ptext24:
  3768                           	opt stack 0
  3769  0017B2                     _memcpy:
  3770                           	opt stack 17
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;incstack = 0
  3774  0017B2  0100               	movlb	0	; () banked
  3775  0017B4  C099  F09F         	movff	memcpy@s1+1,memcpy@s+1
  3776  0017B8  0100               	movlb	0	; () banked
  3777  0017BA  C098  F09E         	movff	memcpy@s1,memcpy@s
  3778  0017BE  0100               	movlb	0	; () banked
  3779  0017C0  C097  F09D         	movff	memcpy@d1+1,memcpy@d+1
  3780  0017C4  0100               	movlb	0	; () banked
  3781  0017C6  C096  F09C         	movff	memcpy@d1,memcpy@d
  3782  0017CA  D010               	goto	l2022
  3783  0017CC                     l2016:
  3784                           
  3785                           ; BSR set to: 0
  3786  0017CC  C09E  FFD9         	movff	memcpy@s,fsr2l
  3787  0017D0  C09F  FFDA         	movff	memcpy@s+1,fsr2h
  3788  0017D4  C09C  FFE1         	movff	memcpy@d,fsr1l
  3789  0017D8  C09D  FFE2         	movff	memcpy@d+1,fsr1h
  3790  0017DC  CFDF FFE7          	movff	indf2,indf1
  3791                           
  3792                           ; BSR set to: 0
  3793  0017E0  0100               	movlb	0	; () banked
  3794  0017E2  4B9E               	infsnz	memcpy@s& (0+255),f,b
  3795  0017E4  2B9F               	incf	(memcpy@s+1)& (0+255),f,b
  3796                           
  3797                           ; BSR set to: 0
  3798  0017E6  0100               	movlb	0	; () banked
  3799  0017E8  4B9C               	infsnz	memcpy@d& (0+255),f,b
  3800  0017EA  2B9D               	incf	(memcpy@d+1)& (0+255),f,b
  3801  0017EC                     l2022:
  3802                           
  3803                           ; BSR set to: 0
  3804  0017EC  0100               	movlb	0	; () banked
  3805  0017EE  079A               	decf	memcpy@n& (0+255),f,b
  3806  0017F0  A0D8               	btfss	status,0,c
  3807  0017F2  079B               	decf	(memcpy@n+1)& (0+255),f,b
  3808  0017F4  0100               	movlb	0	; () banked
  3809  0017F6  299A               	incf	memcpy@n& (0+255),w,b
  3810  0017F8  B4D8               	btfsc	status,2,c
  3811  0017FA  299B               	incf	(memcpy@n+1)& (0+255),w,b
  3812  0017FC  B4D8               	btfsc	status,2,c
  3813                           
  3814                           ; BSR set to: 0
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;	Return value of _memcpy is never used
  3818  0017FE  0012               	return	
  3819  001800  D7E5               	goto	l2016
  3820  001802                     __end_of_memcpy:
  3821                           	opt stack 0
  3822                           tblptru	equ	0xFF8
  3823                           prodh	equ	0xFF4
  3824                           prodl	equ	0xFF3
  3825                           intcon	equ	0xFF2
  3826                           intcon2	equ	0xFF1
  3827                           postinc0	equ	0xFEE
  3828                           wreg	equ	0xFE8
  3829                           indf1	equ	0xFE7
  3830                           fsr1h	equ	0xFE2
  3831                           fsr1l	equ	0xFE1
  3832                           indf2	equ	0xFDF
  3833                           postinc2	equ	0xFDE
  3834                           postdec2	equ	0xFDD
  3835                           fsr2h	equ	0xFDA
  3836                           fsr2l	equ	0xFD9
  3837                           status	equ	0xFD8
  3838                           
  3839 ;; *************** function _OpenTimer1 *****************
  3840 ;; Defined at:
  3841 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  config          1    wreg     unsigned char 
  3844 ;;  config1         1   54[BANK0 ] unsigned char 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  config          1   56[BANK0 ] unsigned char 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;		None               void
  3849 ;; Registers used:
  3850 ;;		wreg, status,2, status,0
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3856 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3858 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3859 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3860 ;;Total ram usage:        3 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:   10
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_main
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text25
  3871  001994                     __ptext25:
  3872                           	opt stack 0
  3873  001994                     _OpenTimer1:
  3874                           	opt stack 20
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;incstack = 0
  3878                           ;OpenTimer1@config stored from wreg
  3879  001994  0100               	movlb	0	; () banked
  3880  001996  6F98               	movwf	OpenTimer1@config& (0+255),b
  3881                           
  3882                           ; BSR set to: 0
  3883  001998  0100               	movlb	0	; () banked
  3884  00199A  5196               	movf	OpenTimer1@config1& (0+255),w,b
  3885  00199C  0BF3               	andlw	243
  3886  00199E  6E9A               	movwf	3994,c	;volatile
  3887  0019A0  C098  F097         	movff	OpenTimer1@config,??_OpenTimer1
  3888  0019A4  0E7F               	movlw	127
  3889  0019A6  0100               	movlb	0	; () banked
  3890  0019A8  1797               	andwf	??_OpenTimer1& (0+255),f,b
  3891  0019AA  0100               	movlb	0	; () banked
  3892  0019AC  90D8               	bcf	status,0,c
  3893  0019AE  3597               	rlcf	??_OpenTimer1& (0+255),w,b
  3894  0019B0  6ECD               	movwf	4045,c	;volatile
  3895                           
  3896                           ; BSR set to: 0
  3897  0019B2  0E00               	movlw	0
  3898  0019B4  6ECF               	movwf	4047,c	;volatile
  3899                           
  3900                           ; BSR set to: 0
  3901  0019B6  0E00               	movlw	0
  3902  0019B8  6ECE               	movwf	4046,c	;volatile
  3903                           
  3904                           ; BSR set to: 0
  3905  0019BA  909E               	bcf	3998,0,c	;volatile
  3906                           
  3907                           ; BSR set to: 0
  3908  0019BC  0100               	movlb	0	; () banked
  3909  0019BE  AF98               	btfss	OpenTimer1@config& (0+255),7,b
  3910  0019C0  D002               	goto	l447
  3911                           
  3912                           ; BSR set to: 0
  3913  0019C2  809D               	bsf	3997,0,c	;volatile
  3914  0019C4  D001               	goto	l448
  3915  0019C6                     l447:
  3916                           
  3917                           ; BSR set to: 0
  3918  0019C6  909D               	bcf	3997,0,c	;volatile
  3919  0019C8                     l448:
  3920                           
  3921                           ; BSR set to: 0
  3922  0019C8  BE9A               	btfsc	3994,7,c	;volatile
  3923                           
  3924                           ; BSR set to: 0
  3925  0019CA  869A               	bsf	3994,3,c	;volatile
  3926                           
  3927                           ; BSR set to: 0
  3928  0019CC  80CD               	bsf	4045,0,c	;volatile
  3929                           
  3930                           ; BSR set to: 0
  3931  0019CE  0012               	return	
  3932  0019D0                     __end_of_OpenTimer1:
  3933                           	opt stack 0
  3934                           tblptru	equ	0xFF8
  3935                           prodh	equ	0xFF4
  3936                           prodl	equ	0xFF3
  3937                           intcon	equ	0xFF2
  3938                           intcon2	equ	0xFF1
  3939                           postinc0	equ	0xFEE
  3940                           wreg	equ	0xFE8
  3941                           indf1	equ	0xFE7
  3942                           fsr1h	equ	0xFE2
  3943                           fsr1l	equ	0xFE1
  3944                           indf2	equ	0xFDF
  3945                           postinc2	equ	0xFDE
  3946                           postdec2	equ	0xFDD
  3947                           fsr2h	equ	0xFDA
  3948                           fsr2l	equ	0xFD9
  3949                           status	equ	0xFD8
  3950                           
  3951 ;; *************** function _OpenTimer0 *****************
  3952 ;; Defined at:
  3953 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  config          1    wreg     unsigned char 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;  config          1   54[BANK0 ] unsigned char 
  3958 ;; Return value:  Size  Location     Type
  3959 ;;		None               void
  3960 ;; Registers used:
  3961 ;;		wreg, status,2, status,0
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3971 ;;Total ram usage:        1 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; Hardware stack levels required when called:   10
  3974 ;; This function calls:
  3975 ;;		Nothing
  3976 ;; This function is called by:
  3977 ;;		_main
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text26
  3982  001C46                     __ptext26:
  3983                           	opt stack 0
  3984  001C46                     _OpenTimer0:
  3985                           	opt stack 20
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;incstack = 0
  3989                           ;OpenTimer0@config stored from wreg
  3990  001C46  0100               	movlb	0	; () banked
  3991  001C48  6F96               	movwf	OpenTimer0@config& (0+255),b
  3992                           
  3993                           ; BSR set to: 0
  3994  001C4A  0100               	movlb	0	; () banked
  3995  001C4C  5196               	movf	OpenTimer0@config& (0+255),w,b
  3996  001C4E  0B7F               	andlw	127
  3997  001C50  6ED5               	movwf	4053,c	;volatile
  3998                           
  3999                           ; BSR set to: 0
  4000  001C52  0E00               	movlw	0
  4001  001C54  6ED7               	movwf	4055,c	;volatile
  4002                           
  4003                           ; BSR set to: 0
  4004  001C56  0E00               	movlw	0
  4005  001C58  6ED6               	movwf	4054,c	;volatile
  4006                           
  4007                           ; BSR set to: 0
  4008  001C5A  94F2               	bcf	intcon,2,c	;volatile
  4009                           
  4010                           ; BSR set to: 0
  4011  001C5C  0100               	movlb	0	; () banked
  4012  001C5E  AF96               	btfss	OpenTimer0@config& (0+255),7,b
  4013  001C60  D002               	goto	l419
  4014                           
  4015                           ; BSR set to: 0
  4016  001C62  8AF2               	bsf	intcon,5,c	;volatile
  4017  001C64  D001               	goto	l420
  4018  001C66                     l419:
  4019                           
  4020                           ; BSR set to: 0
  4021  001C66  9AF2               	bcf	intcon,5,c	;volatile
  4022  001C68                     l420:
  4023                           
  4024                           ; BSR set to: 0
  4025  001C68  8ED5               	bsf	4053,7,c	;volatile
  4026                           
  4027                           ; BSR set to: 0
  4028  001C6A  0012               	return	
  4029  001C6C                     __end_of_OpenTimer0:
  4030                           	opt stack 0
  4031                           tblptru	equ	0xFF8
  4032                           prodh	equ	0xFF4
  4033                           prodl	equ	0xFF3
  4034                           intcon	equ	0xFF2
  4035                           intcon2	equ	0xFF1
  4036                           postinc0	equ	0xFEE
  4037                           wreg	equ	0xFE8
  4038                           indf1	equ	0xFE7
  4039                           fsr1h	equ	0xFE2
  4040                           fsr1l	equ	0xFE1
  4041                           indf2	equ	0xFDF
  4042                           postinc2	equ	0xFDE
  4043                           postdec2	equ	0xFDD
  4044                           fsr2h	equ	0xFDA
  4045                           fsr2l	equ	0xFD9
  4046                           status	equ	0xFD8
  4047                           
  4048 ;; *************** function _Open1USART *****************
  4049 ;; Defined at:
  4050 ;;		line 124 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\USART\u1open.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  config          1    wreg     unsigned char 
  4053 ;;  spbrg           2   54[BANK0 ] unsigned int 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  config          1   59[BANK0 ] unsigned char 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;		None               void
  4058 ;; Registers used:
  4059 ;;		wreg, status,2
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4065 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4067 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4068 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4069 ;;Total ram usage:        6 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:   10
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_main
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text27
  4080  0013C0                     __ptext27:
  4081                           	opt stack 0
  4082  0013C0                     _Open1USART:
  4083                           	opt stack 20
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;incstack = 0
  4087                           ;Open1USART@config stored from wreg
  4088  0013C0  0100               	movlb	0	; () banked
  4089  0013C2  6F9B               	movwf	Open1USART@config& (0+255),b
  4090                           
  4091                           ; BSR set to: 0
  4092  0013C4  0E00               	movlw	0
  4093  0013C6  6EAD               	movwf	4013,c	;volatile
  4094  0013C8  0E00               	movlw	0
  4095  0013CA  6EAC               	movwf	4012,c	;volatile
  4096                           
  4097                           ; BSR set to: 0
  4098  0013CC  0100               	movlb	0	; () banked
  4099  0013CE  B19B               	btfsc	Open1USART@config& (0+255),0,b
  4100                           
  4101                           ; BSR set to: 0
  4102  0013D0  88AD               	bsf	4013,4,c	;volatile
  4103                           
  4104                           ; BSR set to: 0
  4105                           
  4106                           ; BSR set to: 0
  4107  0013D2  0100               	movlb	0	; () banked
  4108  0013D4  A39B               	btfss	Open1USART@config& (0+255),1,b
  4109  0013D6  D002               	goto	l2702
  4110                           
  4111                           ; BSR set to: 0
  4112  0013D8  8CAD               	bsf	4013,6,c	;volatile
  4113  0013DA  8CAC               	bsf	4012,6,c	;volatile
  4114  0013DC                     l2702:
  4115                           
  4116                           ; BSR set to: 0
  4117  0013DC  0100               	movlb	0	; () banked
  4118  0013DE  B59B               	btfsc	Open1USART@config& (0+255),2,b
  4119                           
  4120                           ; BSR set to: 0
  4121  0013E0  8EAD               	bsf	4013,7,c	;volatile
  4122                           
  4123                           ; BSR set to: 0
  4124                           
  4125                           ; BSR set to: 0
  4126  0013E2  0100               	movlb	0	; () banked
  4127  0013E4  A79B               	btfss	Open1USART@config& (0+255),3,b
  4128  0013E6  D002               	goto	l486
  4129                           
  4130                           ; BSR set to: 0
  4131  0013E8  88AC               	bsf	4012,4,c	;volatile
  4132  0013EA  D001               	goto	l2710
  4133  0013EC                     l486:
  4134                           
  4135                           ; BSR set to: 0
  4136  0013EC  8AAC               	bsf	4012,5,c	;volatile
  4137  0013EE                     l2710:
  4138                           
  4139                           ; BSR set to: 0
  4140  0013EE  0100               	movlb	0	; () banked
  4141  0013F0  B99B               	btfsc	Open1USART@config& (0+255),4,b
  4142                           
  4143                           ; BSR set to: 0
  4144  0013F2  84AD               	bsf	4013,2,c	;volatile
  4145                           
  4146                           ; BSR set to: 0
  4147                           
  4148                           ; BSR set to: 0
  4149  0013F4  0100               	movlb	0	; () banked
  4150  0013F6  BB9B               	btfsc	Open1USART@config& (0+255),5,b
  4151                           
  4152                           ; BSR set to: 0
  4153  0013F8  86AC               	bsf	4012,3,c	;volatile
  4154                           
  4155                           ; BSR set to: 0
  4156                           
  4157                           ; BSR set to: 0
  4158  0013FA  0100               	movlb	0	; () banked
  4159  0013FC  AD9B               	btfss	Open1USART@config& (0+255),6,b
  4160  0013FE  D002               	goto	l490
  4161                           
  4162                           ; BSR set to: 0
  4163  001400  8A9D               	bsf	3997,5,c	;volatile
  4164  001402  D001               	goto	l2722
  4165  001404                     l490:
  4166                           
  4167                           ; BSR set to: 0
  4168  001404  9A9D               	bcf	3997,5,c	;volatile
  4169  001406                     l2722:
  4170                           
  4171                           ; BSR set to: 0
  4172  001406  0100               	movlb	0	; () banked
  4173  001408  AF9B               	btfss	Open1USART@config& (0+255),7,b
  4174  00140A  D002               	goto	l492
  4175                           
  4176                           ; BSR set to: 0
  4177  00140C  889D               	bsf	3997,4,c	;volatile
  4178  00140E  D001               	goto	l493
  4179  001410                     l492:
  4180                           
  4181                           ; BSR set to: 0
  4182  001410  989D               	bcf	3997,4,c	;volatile
  4183  001412                     l493:
  4184                           
  4185                           ; BSR set to: 0
  4186  001412  C096  FFB0         	movff	Open1USART@spbrg,4016	;volatile
  4187                           
  4188                           ; BSR set to: 0
  4189  001416  0100               	movlb	0	; () banked
  4190  001418  C097  F098         	movff	Open1USART@spbrg+1,??_Open1USART
  4191  00141C  C098  F099         	movff	??_Open1USART,??_Open1USART+1
  4192  001420  0100               	movlb	0	; () banked
  4193  001422  6B9A               	clrf	(??_Open1USART+2)& (0+255),b
  4194  001424  0100               	movlb	0	; () banked
  4195  001426  5199               	movf	(??_Open1USART+1)& (0+255),w,b
  4196  001428  6E7F               	movwf	3967,c	;volatile
  4197                           
  4198                           ; BSR set to: 0
  4199  00142A  8AAD               	bsf	4013,5,c	;volatile
  4200                           
  4201                           ; BSR set to: 0
  4202  00142C  8EAC               	bsf	4012,7,c	;volatile
  4203                           
  4204                           ; BSR set to: 0
  4205  00142E  0012               	return	
  4206  001430                     __end_of_Open1USART:
  4207                           	opt stack 0
  4208                           tblptru	equ	0xFF8
  4209                           prodh	equ	0xFF4
  4210                           prodl	equ	0xFF3
  4211                           intcon	equ	0xFF2
  4212                           intcon2	equ	0xFF1
  4213                           postinc0	equ	0xFEE
  4214                           wreg	equ	0xFE8
  4215                           indf1	equ	0xFE7
  4216                           fsr1h	equ	0xFE2
  4217                           fsr1l	equ	0xFE1
  4218                           indf2	equ	0xFDF
  4219                           postinc2	equ	0xFDE
  4220                           postdec2	equ	0xFDD
  4221                           fsr2h	equ	0xFDA
  4222                           fsr2l	equ	0xFD9
  4223                           status	equ	0xFD8
  4224                           
  4225 ;; *************** function _InterruptHandlerLow *****************
  4226 ;; Defined at:
  4227 ;;		line 122 in file "../src/interrupts.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;		None               void
  4234 ;; Registers used:
  4235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4243 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4244 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4245 ;;Total ram usage:       17 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    9
  4248 ;; This function calls:
  4249 ;;		_timer1_int_handler
  4250 ;;		_uart_recv_int_handler
  4251 ;;		_uart_trans_int_handler
  4252 ;; This function is called by:
  4253 ;;		Interrupt level 1
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	intcodelo
  4258  000018                     __pintcodelo:
  4259                           	opt stack 0
  4260  000018                     _InterruptHandlerLow:
  4261                           	opt stack 17
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;incstack = 0
  4265  000018  CFD8 F033          	movff	status,??_InterruptHandlerLow
  4266  00001C  CFE8 F034          	movff	wreg,??_InterruptHandlerLow+1
  4267  000020  CFE0 F035          	movff	bsr,??_InterruptHandlerLow+2
  4268  000024  CFFA F036          	movff	pclath,??_InterruptHandlerLow+3
  4269  000028  CFFB F037          	movff	pclatu,??_InterruptHandlerLow+4
  4270  00002C  CFE9 F038          	movff	fsr0l,??_InterruptHandlerLow+5
  4271  000030  CFEA F039          	movff	fsr0h,??_InterruptHandlerLow+6
  4272  000034  CFE1 F03A          	movff	fsr1l,??_InterruptHandlerLow+7
  4273  000038  CFE2 F03B          	movff	fsr1h,??_InterruptHandlerLow+8
  4274  00003C  CFD9 F03C          	movff	fsr2l,??_InterruptHandlerLow+9
  4275  000040  CFDA F03D          	movff	fsr2h,??_InterruptHandlerLow+10
  4276  000044  CFF3 F03E          	movff	prodl,??_InterruptHandlerLow+11
  4277  000048  CFF4 F03F          	movff	prodh,??_InterruptHandlerLow+12
  4278  00004C  CFF6 F040          	movff	tblptrl,??_InterruptHandlerLow+13
  4279  000050  CFF7 F041          	movff	tblptrh,??_InterruptHandlerLow+14
  4280  000054  CFF8 F042          	movff	tblptru,??_InterruptHandlerLow+15
  4281  000058  CFF5 F043          	movff	tablat,??_InterruptHandlerLow+16
  4282                           
  4283                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  4284  00005C  A09E               	btfss	3998,0,c	;volatile
  4285  00005E  D003               	goto	i1l2796
  4286                           
  4287                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  4288  000060  909E               	bcf	3998,0,c	;volatile
  4289                           
  4290                           ;interrupts.c: 126: timer1_int_handler();
  4291  000062  ECE5  F00D         	call	_timer1_int_handler	;wreg free
  4292  000066                     i1l2796:
  4293                           
  4294                           ;interrupts.c: 127: }
  4295                           ;interrupts.c: 130: if (PIR1bits.RCIF) {
  4296  000066  AA9E               	btfss	3998,5,c	;volatile
  4297  000068  D003               	goto	i1l2802
  4298                           
  4299                           ;interrupts.c: 131: PIR1bits.RCIF = 0;
  4300  00006A  9A9E               	bcf	3998,5,c	;volatile
  4301                           
  4302                           ;interrupts.c: 132: uart_recv_int_handler();
  4303  00006C  EC52  F009         	call	_uart_recv_int_handler	;wreg free
  4304  000070                     i1l2802:
  4305                           
  4306                           ;interrupts.c: 133: }
  4307                           ;interrupts.c: 136: if (PIR1bits.TXIF && PIE1bits.TX1IE) {
  4308  000070  B89E               	btfsc	3998,4,c	;volatile
  4309  000072  A89D               	btfss	3997,4,c	;volatile
  4310  000074  D002               	goto	i1l52
  4311                           
  4312                           ;interrupts.c: 137: uart_trans_int_handler();
  4313  000076  ECA7  F008         	call	_uart_trans_int_handler	;wreg free
  4314  00007A                     i1l52:
  4315  00007A  C043  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4316  00007E  C042  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4317  000082  C041  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4318  000086  C040  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4319  00008A  C03F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4320  00008E  C03E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4321  000092  C03D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4322  000096  C03C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4323  00009A  C03B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4324  00009E  C03A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4325  0000A2  C039  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4326  0000A6  C038  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4327  0000AA  C037  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4328  0000AE  C036  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4329  0000B2  C035  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4330  0000B6  C034  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4331  0000BA  C033  FFD8         	movff	??_InterruptHandlerLow,status
  4332  0000BE  0010               	retfie	
  4333  0000C0                     __end_of_InterruptHandlerLow:
  4334                           	opt stack 0
  4335                           pclatu	equ	0xFFB
  4336                           pclath	equ	0xFFA
  4337                           tblptru	equ	0xFF8
  4338                           tblptrh	equ	0xFF7
  4339                           tblptrl	equ	0xFF6
  4340                           tablat	equ	0xFF5
  4341                           prodh	equ	0xFF4
  4342                           prodl	equ	0xFF3
  4343                           intcon	equ	0xFF2
  4344                           intcon2	equ	0xFF1
  4345                           postinc0	equ	0xFEE
  4346                           fsr0h	equ	0xFEA
  4347                           fsr0l	equ	0xFE9
  4348                           wreg	equ	0xFE8
  4349                           indf1	equ	0xFE7
  4350                           fsr1h	equ	0xFE2
  4351                           fsr1l	equ	0xFE1
  4352                           bsr	equ	0xFE0
  4353                           indf2	equ	0xFDF
  4354                           postinc2	equ	0xFDE
  4355                           postdec2	equ	0xFDD
  4356                           fsr2h	equ	0xFDA
  4357                           fsr2l	equ	0xFD9
  4358                           status	equ	0xFD8
  4359                           
  4360 ;; *************** function _uart_trans_int_handler *****************
  4361 ;; Defined at:
  4362 ;;		line 56 in file "../src/my_uart.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;		None
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;		None
  4367 ;; Return value:  Size  Location     Type
  4368 ;;		None               void
  4369 ;; Registers used:
  4370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4379 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4380 ;;Total ram usage:        2 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:    8
  4383 ;; This function calls:
  4384 ;;		_FromMainLow_recvmsg
  4385 ;; This function is called by:
  4386 ;;		_InterruptHandlerLow
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text29
  4391  00114E                     __ptext29:
  4392                           	opt stack 0
  4393  00114E                     _uart_trans_int_handler:
  4394                           	opt stack 17
  4395                           
  4396                           ;my_uart.c: 57: FromMainLow_recvmsg(uc_ptr->outbuflen, (void *) 40, (void *) uc_ptr->out
      +                          buffer);
  4397                           
  4398                           ;incstack = 0
  4399  00114E  0E00               	movlw	0
  4400  001150  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4401  001152  0E28               	movlw	40
  4402  001154  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4403  001156  0E1C               	movlw	28
  4404  001158  2444               	addwf	_uc_ptr,w,c
  4405  00115A  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4406  00115C  0E00               	movlw	0
  4407  00115E  2045               	addwfc	_uc_ptr+1,w,c
  4408  001160  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4409  001162  EE20 F036          	lfsr	2,54
  4410  001166  5044               	movf	_uc_ptr,w,c
  4411  001168  26D9               	addwf	fsr2l,f,c
  4412  00116A  5045               	movf	_uc_ptr+1,w,c
  4413  00116C  22DA               	addwfc	fsr2h,f,c
  4414  00116E  50DF               	movf	indf2,w,c
  4415  001170  EC0F  F00E         	call	_FromMainLow_recvmsg
  4416                           
  4417                           ;my_uart.c: 58: if (TXSTAbits.TRMT == 1) {
  4418  001174  A2AD               	btfss	4013,1,c	;volatile
  4419  001176  0012               	return	
  4420                           
  4421                           ;my_uart.c: 59: uc_ptr->outbufind++;
  4422  001178  EE20 F037          	lfsr	2,55
  4423  00117C  5044               	movf	_uc_ptr,w,c
  4424  00117E  26D9               	addwf	fsr2l,f,c
  4425  001180  5045               	movf	_uc_ptr+1,w,c
  4426  001182  22DA               	addwfc	fsr2h,f,c
  4427  001184  2ADF               	incf	indf2,f,c
  4428                           
  4429                           ;my_uart.c: 60: if (uc_ptr->outbufind < uc_ptr->outbuflen) {
  4430  001186  EE20 F037          	lfsr	2,55
  4431  00118A  5044               	movf	_uc_ptr,w,c
  4432  00118C  26D9               	addwf	fsr2l,f,c
  4433  00118E  5045               	movf	_uc_ptr+1,w,c
  4434  001190  22DA               	addwfc	fsr2h,f,c
  4435  001192  50DF               	movf	indf2,w,c
  4436  001194  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  4437  001196  EE20 F036          	lfsr	2,54
  4438  00119A  5044               	movf	_uc_ptr,w,c
  4439  00119C  26D9               	addwf	fsr2l,f,c
  4440  00119E  5045               	movf	_uc_ptr+1,w,c
  4441  0011A0  22DA               	addwfc	fsr2h,f,c
  4442  0011A2  50DF               	movf	indf2,w,c
  4443  0011A4  5C1E               	subwf	??_uart_trans_int_handler,w,c
  4444  0011A6  B0D8               	btfsc	status,0,c
  4445  0011A8  D016               	goto	i1l2604
  4446                           
  4447                           ;my_uart.c: 61: TXREG = uc_ptr->outbuffer[uc_ptr->outbufind - 1];
  4448  0011AA  EE20 F037          	lfsr	2,55
  4449  0011AE  5044               	movf	_uc_ptr,w,c
  4450  0011B0  26D9               	addwf	fsr2l,f,c
  4451  0011B2  5045               	movf	_uc_ptr+1,w,c
  4452  0011B4  22DA               	addwfc	fsr2h,f,c
  4453  0011B6  50DF               	movf	indf2,w,c
  4454  0011B8  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  4455  0011BA  6A1F               	clrf	(??_uart_trans_int_handler+1)& (0+255),c
  4456  0011BC  0E1B               	movlw	27
  4457  0011BE  261E               	addwf	??_uart_trans_int_handler,f,c
  4458  0011C0  0E00               	movlw	0
  4459  0011C2  221F               	addwfc	??_uart_trans_int_handler+1,f,c
  4460  0011C4  501E               	movf	??_uart_trans_int_handler,w,c
  4461  0011C6  2444               	addwf	_uc_ptr,w,c
  4462  0011C8  6ED9               	movwf	fsr2l,c
  4463  0011CA  501F               	movf	??_uart_trans_int_handler+1,w,c
  4464  0011CC  2045               	addwfc	_uc_ptr+1,w,c
  4465  0011CE  6EDA               	movwf	fsr2h,c
  4466  0011D0  50DF               	movf	indf2,w,c
  4467  0011D2  6EAE               	movwf	4014,c	;volatile
  4468                           
  4469                           ;my_uart.c: 62: } else {
  4470  0011D4  0012               	return	
  4471  0011D6                     i1l2604:
  4472                           
  4473                           ;my_uart.c: 63: uc_ptr->outbuflen = 0;
  4474  0011D6  EE20 F036          	lfsr	2,54
  4475  0011DA  5044               	movf	_uc_ptr,w,c
  4476  0011DC  26D9               	addwf	fsr2l,f,c
  4477  0011DE  5045               	movf	_uc_ptr+1,w,c
  4478  0011E0  22DA               	addwfc	fsr2h,f,c
  4479  0011E2  0E00               	movlw	0
  4480  0011E4  6EDF               	movwf	indf2,c
  4481                           
  4482                           ;my_uart.c: 64: uc_ptr->outbufind = 0;
  4483  0011E6  EE20 F037          	lfsr	2,55
  4484  0011EA  5044               	movf	_uc_ptr,w,c
  4485  0011EC  26D9               	addwf	fsr2l,f,c
  4486  0011EE  5045               	movf	_uc_ptr+1,w,c
  4487  0011F0  22DA               	addwfc	fsr2h,f,c
  4488  0011F2  0E00               	movlw	0
  4489  0011F4  6EDF               	movwf	indf2,c
  4490                           
  4491                           ;my_uart.c: 65: PIE1bits.TXIE = 0;
  4492  0011F6  989D               	bcf	3997,4,c	;volatile
  4493  0011F8  0012               	return	
  4494  0011FA                     __end_of_uart_trans_int_handler:
  4495                           	opt stack 0
  4496                           pclatu	equ	0xFFB
  4497                           pclath	equ	0xFFA
  4498                           tblptru	equ	0xFF8
  4499                           tblptrh	equ	0xFF7
  4500                           tblptrl	equ	0xFF6
  4501                           tablat	equ	0xFF5
  4502                           prodh	equ	0xFF4
  4503                           prodl	equ	0xFF3
  4504                           intcon	equ	0xFF2
  4505                           intcon2	equ	0xFF1
  4506                           postinc0	equ	0xFEE
  4507                           fsr0h	equ	0xFEA
  4508                           fsr0l	equ	0xFE9
  4509                           wreg	equ	0xFE8
  4510                           indf1	equ	0xFE7
  4511                           fsr1h	equ	0xFE2
  4512                           fsr1l	equ	0xFE1
  4513                           bsr	equ	0xFE0
  4514                           indf2	equ	0xFDF
  4515                           postinc2	equ	0xFDE
  4516                           postdec2	equ	0xFDD
  4517                           fsr2h	equ	0xFDA
  4518                           fsr2l	equ	0xFD9
  4519                           status	equ	0xFD8
  4520                           
  4521 ;; *************** function _FromMainLow_recvmsg *****************
  4522 ;; Defined at:
  4523 ;;		line 159 in file "../src/messages.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  maxlength       1    wreg     unsigned char 
  4526 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  4527 ;;		 -> RAM(3775), 
  4528 ;;  data            2   26[COMRAM] PTR void 
  4529 ;;		 -> NULL(0), main@uc(57), 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  maxlength       1   28[COMRAM] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      char 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4541 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4544 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4545 ;;Total ram usage:        5 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    7
  4548 ;; This function calls:
  4549 ;;		i1_recv_msg
  4550 ;; This function is called by:
  4551 ;;		_uart_trans_int_handler
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text30
  4556  001C1E                     __ptext30:
  4557                           	opt stack 0
  4558  001C1E                     _FromMainLow_recvmsg:
  4559                           	opt stack 17
  4560                           
  4561                           ;incstack = 0
  4562                           ;FromMainLow_recvmsg@maxlength stored from wreg
  4563  001C1E  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  4564                           
  4565                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  4566                           ;	Return value of _FromMainLow_recvmsg is never used
  4567  001C20  0103               	movlb	3	; () banked
  4568  001C22  0E03               	movlw	high _FromMainLow_MQ
  4569  001C24  6E0C               	movwf	i1recv_msg@qptr+1,c
  4570  001C26  0103               	movlb	3	; () banked
  4571  001C28  0E76               	movlw	low _FromMainLow_MQ
  4572  001C2A  6E0B               	movwf	i1recv_msg@qptr,c
  4573  001C2C  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  4574  001C30  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  4575  001C34  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  4576  001C38  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  4577  001C3C  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  4578  001C40  ECD9  F007         	call	i1_recv_msg	;wreg free
  4579  001C44  0012               	return	
  4580  001C46                     __end_of_FromMainLow_recvmsg:
  4581                           	opt stack 0
  4582                           pclatu	equ	0xFFB
  4583                           pclath	equ	0xFFA
  4584                           tblptru	equ	0xFF8
  4585                           tblptrh	equ	0xFF7
  4586                           tblptrl	equ	0xFF6
  4587                           tablat	equ	0xFF5
  4588                           prodh	equ	0xFF4
  4589                           prodl	equ	0xFF3
  4590                           intcon	equ	0xFF2
  4591                           intcon2	equ	0xFF1
  4592                           postinc0	equ	0xFEE
  4593                           fsr0h	equ	0xFEA
  4594                           fsr0l	equ	0xFE9
  4595                           wreg	equ	0xFE8
  4596                           indf1	equ	0xFE7
  4597                           fsr1h	equ	0xFE2
  4598                           fsr1l	equ	0xFE1
  4599                           bsr	equ	0xFE0
  4600                           indf2	equ	0xFDF
  4601                           postinc2	equ	0xFDE
  4602                           postdec2	equ	0xFDD
  4603                           fsr2h	equ	0xFDA
  4604                           fsr2l	equ	0xFD9
  4605                           status	equ	0xFD8
  4606                           
  4607 ;; *************** function i1_recv_msg *****************
  4608 ;; Defined at:
  4609 ;;		line 63 in file "../src/messages.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4612 ;;		 -> SensorData_MQ(118), FromMainHigh_MQ(118), FromMainLow_MQ(118), ToMainHigh_MQ(118), 
  4613 ;;		 -> ToMainLow_MQ(118), 
  4614 ;;  maxlength       1   12[COMRAM] unsigned char 
  4615 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  4616 ;;		 -> timer0_int_handler@msgtype(2), RAM(3775), main@msgtype(1), 
  4617 ;;  data            2   15[COMRAM] PTR void 
  4618 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(27), main@ic(60), 
  4619 ;;		 -> main@uc(57), 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  4622 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), SensorData_MQ.queue(116), ToMainHigh_MQ.queue(116), 
  4623 ;;		 -> ToMainLow_MQ.queue(116), SensorData_MQ(118), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  4624 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  4625 ;;  recv_msg        2   20[COMRAM] unsigned int 
  4626 ;;  recv_msg        1   19[COMRAM] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      char 
  4629 ;; Registers used:
  4630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4636 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4637 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4638 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4639 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4640 ;;Total ram usage:       14 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    6
  4643 ;; This function calls:
  4644 ;;		i1_memcpy
  4645 ;; This function is called by:
  4646 ;;		_FromMainLow_recvmsg
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text31
  4651  000FB2                     __ptext31:
  4652                           	opt stack 0
  4653  000FB2                     i1_recv_msg:
  4654                           	opt stack 17
  4655                           
  4656                           ;messages.c: 64: unsigned char slot;
  4657                           ;messages.c: 68: msg *qmsg;
  4658                           ;messages.c: 69: size_t tlength;
  4659                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4660                           
  4661                           ;incstack = 0
  4662  000FB2  EE20 F075          	lfsr	2,117
  4663  000FB6  500B               	movf	i1recv_msg@qptr,w,c
  4664  000FB8  26D9               	addwf	fsr2l,f,c
  4665  000FBA  500C               	movf	i1recv_msg@qptr+1,w,c
  4666  000FBC  22DA               	addwfc	fsr2h,f,c
  4667  000FBE  50DF               	movf	indf2,w,c
  4668  000FC0  6E14               	movwf	i1recv_msg@slot,c
  4669                           
  4670                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4671  000FC2  5014               	movf	i1recv_msg@slot,w,c
  4672  000FC4  0D1D               	mullw	29
  4673  000FC6  50F3               	movf	prodl,w,c
  4674  000FC8  240B               	addwf	i1recv_msg@qptr,w,c
  4675  000FCA  6E17               	movwf	i1recv_msg@qmsg,c
  4676  000FCC  50F4               	movf	prodh,w,c
  4677  000FCE  200C               	addwfc	i1recv_msg@qptr+1,w,c
  4678  000FD0  6E18               	movwf	i1recv_msg@qmsg+1,c
  4679                           
  4680                           ;messages.c: 74: if (qmsg->full == 1) {
  4681  000FD2  0E01               	movlw	1
  4682  000FD4  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  4683  000FD8  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  4684  000FDC  62DF               	cpfseq	indf2,c
  4685  000FDE  D050               	goto	i1l2168
  4686                           
  4687                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4688  000FE0  EE20 F001          	lfsr	2,1
  4689  000FE4  5017               	movf	i1recv_msg@qmsg,w,c
  4690  000FE6  26D9               	addwf	fsr2l,f,c
  4691  000FE8  5018               	movf	i1recv_msg@qmsg+1,w,c
  4692  000FEA  22DA               	addwfc	fsr2h,f,c
  4693  000FEC  50DF               	movf	indf2,w,c
  4694  000FEE  5C0D               	subwf	i1recv_msg@maxlength,w,c
  4695  000FF0  B0D8               	btfsc	status,0,c
  4696  000FF2  D002               	goto	i1l2152
  4697                           
  4698                           ;messages.c: 77: return (-3);
  4699  000FF4  0EFD               	movlw	253
  4700  000FF6  0012               	return	
  4701  000FF8                     i1l2152:
  4702                           
  4703                           ;messages.c: 78: }
  4704                           ;messages.c: 80: tlength = qmsg->length;
  4705  000FF8  EE20 F001          	lfsr	2,1
  4706  000FFC  5017               	movf	i1recv_msg@qmsg,w,c
  4707  000FFE  26D9               	addwf	fsr2l,f,c
  4708  001000  5018               	movf	i1recv_msg@qmsg+1,w,c
  4709  001002  22DA               	addwfc	fsr2h,f,c
  4710  001004  50DF               	movf	indf2,w,c
  4711  001006  6E12               	movwf	??i1_recv_msg& (0+255),c
  4712  001008  5012               	movf	??i1_recv_msg,w,c
  4713  00100A  6E15               	movwf	i1recv_msg@tlength,c
  4714  00100C  6A16               	clrf	i1recv_msg@tlength+1,c
  4715                           
  4716                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4717  00100E  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  4718  001012  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  4719  001016  0E03               	movlw	3
  4720  001018  2417               	addwf	i1recv_msg@qmsg,w,c
  4721  00101A  6E12               	movwf	??i1_recv_msg& (0+255),c
  4722  00101C  0E00               	movlw	0
  4723  00101E  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  4724  001020  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  4725  001022  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  4726  001026  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  4727  00102A  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  4728  00102E  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  4729  001032  EC4E  F00C         	call	i1_memcpy	;wreg free
  4730                           
  4731                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4732  001036  EE20 F075          	lfsr	2,117
  4733  00103A  500B               	movf	i1recv_msg@qptr,w,c
  4734  00103C  26D9               	addwf	fsr2l,f,c
  4735  00103E  500C               	movf	i1recv_msg@qptr+1,w,c
  4736  001040  22DA               	addwfc	fsr2h,f,c
  4737  001042  EE10 F075          	lfsr	1,117
  4738  001046  500B               	movf	i1recv_msg@qptr,w,c
  4739  001048  26E1               	addwf	fsr1l,f,c
  4740  00104A  500C               	movf	i1recv_msg@qptr+1,w,c
  4741  00104C  22E2               	addwfc	fsr1h,f,c
  4742  00104E  50E7               	movf	indf1,w,c
  4743  001050  6E12               	movwf	??i1_recv_msg& (0+255),c
  4744  001052  2812               	incf	??i1_recv_msg,w,c
  4745  001054  0B03               	andlw	3
  4746  001056  6EDF               	movwf	indf2,c
  4747                           
  4748                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4749  001058  EE20 F002          	lfsr	2,2
  4750  00105C  5017               	movf	i1recv_msg@qmsg,w,c
  4751  00105E  26D9               	addwf	fsr2l,f,c
  4752  001060  5018               	movf	i1recv_msg@qmsg+1,w,c
  4753  001062  22DA               	addwfc	fsr2h,f,c
  4754  001064  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  4755  001068  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  4756  00106C  CFDF FFE7          	movff	indf2,indf1
  4757                           
  4758                           ;messages.c: 91: qmsg->full = 0;
  4759  001070  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  4760  001074  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  4761  001078  0E00               	movlw	0
  4762  00107A  6EDF               	movwf	indf2,c
  4763                           
  4764                           ;messages.c: 92: return (tlength);
  4765  00107C  5015               	movf	i1recv_msg@tlength,w,c
  4766  00107E  0012               	return	
  4767  001080                     i1l2168:
  4768                           
  4769                           ;messages.c: 94: return (-4);
  4770  001080  0EFC               	movlw	252
  4771  001082  0012               	return	
  4772  001084                     __end_ofi1_recv_msg:
  4773                           	opt stack 0
  4774                           pclatu	equ	0xFFB
  4775                           pclath	equ	0xFFA
  4776                           tblptru	equ	0xFF8
  4777                           tblptrh	equ	0xFF7
  4778                           tblptrl	equ	0xFF6
  4779                           tablat	equ	0xFF5
  4780                           prodh	equ	0xFF4
  4781                           prodl	equ	0xFF3
  4782                           intcon	equ	0xFF2
  4783                           intcon2	equ	0xFF1
  4784                           postinc0	equ	0xFEE
  4785                           fsr0h	equ	0xFEA
  4786                           fsr0l	equ	0xFE9
  4787                           wreg	equ	0xFE8
  4788                           indf1	equ	0xFE7
  4789                           fsr1h	equ	0xFE2
  4790                           fsr1l	equ	0xFE1
  4791                           bsr	equ	0xFE0
  4792                           indf2	equ	0xFDF
  4793                           postinc2	equ	0xFDE
  4794                           postdec2	equ	0xFDD
  4795                           fsr2h	equ	0xFDA
  4796                           fsr2l	equ	0xFD9
  4797                           status	equ	0xFD8
  4798                           
  4799 ;; *************** function _uart_recv_int_handler *****************
  4800 ;; Defined at:
  4801 ;;		line 11 in file "../src/my_uart.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;		None
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  readin         23   27[COMRAM] unsigned char [23]
  4806 ;;  echo            3    0        unsigned char [3]
  4807 ;; Return value:  Size  Location     Type
  4808 ;;		None               void
  4809 ;; Registers used:
  4810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4817 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4818 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4819 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4820 ;;Total ram usage:       24 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; Hardware stack levels required when called:    8
  4823 ;; This function calls:
  4824 ;;		_Read1USART
  4825 ;;		_SensorData_sendmsg
  4826 ;;		_ToMainLow_sendmsg
  4827 ;; This function is called by:
  4828 ;;		_InterruptHandlerLow
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text32
  4833  0012A4                     __ptext32:
  4834                           	opt stack 0
  4835  0012A4                     _uart_recv_int_handler:
  4836                           	opt stack 17
  4837                           
  4838                           ;my_uart.c: 12: unsigned char echo[3];
  4839                           ;my_uart.c: 13: unsigned char readin[23];
  4840                           ;my_uart.c: 14: if ((PIR1bits.RC1IF)) {
  4841                           
  4842                           ;incstack = 0
  4843  0012A4  AA9E               	btfss	3998,5,c	;volatile
  4844  0012A6  D03F               	goto	i1l2590
  4845                           
  4846                           ;my_uart.c: 15: readin[uc_ptr->msg_count] = Read1USART();
  4847  0012A8  EE20 F038          	lfsr	2,56
  4848  0012AC  5044               	movf	_uc_ptr,w,c
  4849  0012AE  26D9               	addwf	fsr2l,f,c
  4850  0012B0  5045               	movf	_uc_ptr+1,w,c
  4851  0012B2  22DA               	addwfc	fsr2h,f,c
  4852  0012B4  50DF               	movf	indf2,w,c
  4853  0012B6  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4854  0012B8  501B               	movf	??_uart_recv_int_handler,w,c
  4855  0012BA  0D01               	mullw	1
  4856  0012BC  0E1C               	movlw	low uart_recv_int_handler@readin
  4857  0012BE  24F3               	addwf	prodl,w,c
  4858  0012C0  6ED9               	movwf	fsr2l,c
  4859  0012C2  0E00               	movlw	high uart_recv_int_handler@readin
  4860  0012C4  20F4               	addwfc	prodh,w,c
  4861  0012C6  6EDA               	movwf	fsr2h,c
  4862  0012C8  EC59  F00E         	call	_Read1USART	;wreg free
  4863  0012CC  6EDF               	movwf	indf2,c
  4864                           
  4865                           ;my_uart.c: 19: if(readin[uc_ptr->msg_count] == 0xFF)
  4866  0012CE  EE20 F038          	lfsr	2,56
  4867  0012D2  5044               	movf	_uc_ptr,w,c
  4868  0012D4  26D9               	addwf	fsr2l,f,c
  4869  0012D6  5045               	movf	_uc_ptr+1,w,c
  4870  0012D8  22DA               	addwfc	fsr2h,f,c
  4871  0012DA  50DF               	movf	indf2,w,c
  4872  0012DC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4873  0012DE  501B               	movf	??_uart_recv_int_handler,w,c
  4874  0012E0  0D01               	mullw	1
  4875  0012E2  0E1C               	movlw	low uart_recv_int_handler@readin
  4876  0012E4  24F3               	addwf	prodl,w,c
  4877  0012E6  6ED9               	movwf	fsr2l,c
  4878  0012E8  0E00               	movlw	high uart_recv_int_handler@readin
  4879  0012EA  20F4               	addwfc	prodh,w,c
  4880  0012EC  6EDA               	movwf	fsr2h,c
  4881  0012EE  0EFF               	movlw	255
  4882  0012F0  62DF               	cpfseq	indf2,c
  4883  0012F2  D012               	goto	i1l2588
  4884                           
  4885                           ;my_uart.c: 20: {
  4886                           ;my_uart.c: 24: SensorData_sendmsg(23, 42, readin);
  4887  0012F4  0E2A               	movlw	42
  4888  0012F6  6E17               	movwf	SensorData_sendmsg@msgtype,c
  4889  0012F8  0E00               	movlw	high uart_recv_int_handler@readin
  4890  0012FA  6E19               	movwf	SensorData_sendmsg@data+1,c
  4891  0012FC  0E1C               	movlw	low uart_recv_int_handler@readin
  4892  0012FE  6E18               	movwf	SensorData_sendmsg@data,c
  4893  001300  0E17               	movlw	23
  4894  001302  EC36  F00E         	call	_SensorData_sendmsg
  4895                           
  4896                           ;my_uart.c: 31: uc_ptr->msg_count = 0;
  4897  001306  EE20 F038          	lfsr	2,56
  4898  00130A  5044               	movf	_uc_ptr,w,c
  4899  00130C  26D9               	addwf	fsr2l,f,c
  4900  00130E  5045               	movf	_uc_ptr+1,w,c
  4901  001310  22DA               	addwfc	fsr2h,f,c
  4902  001312  0E00               	movlw	0
  4903  001314  6EDF               	movwf	indf2,c
  4904                           
  4905                           ;my_uart.c: 32: }
  4906  001316  D007               	goto	i1l2590
  4907  001318                     i1l2588:
  4908                           
  4909                           ;my_uart.c: 33: else {
  4910                           ;my_uart.c: 34: uc_ptr->msg_count++;
  4911  001318  EE20 F038          	lfsr	2,56
  4912  00131C  5044               	movf	_uc_ptr,w,c
  4913  00131E  26D9               	addwf	fsr2l,f,c
  4914  001320  5045               	movf	_uc_ptr+1,w,c
  4915  001322  22DA               	addwfc	fsr2h,f,c
  4916  001324  2ADF               	incf	indf2,f,c
  4917  001326                     i1l2590:
  4918                           
  4919                           ;my_uart.c: 35: }
  4920                           ;my_uart.c: 36: }
  4921                           ;my_uart.c: 38: if (USART1_Status.OVERRUN_ERROR == 1) {
  4922  001326  A646               	btfss	_USART1_Status,3,c
  4923  001328  0012               	return	
  4924                           
  4925                           ;my_uart.c: 41: RCSTAbits.CREN = 0;
  4926  00132A  98AC               	bcf	4012,4,c	;volatile
  4927                           
  4928                           ;my_uart.c: 42: RCSTAbits.CREN = 1;
  4929  00132C  88AC               	bsf	4012,4,c	;volatile
  4930                           
  4931                           ;my_uart.c: 43: ToMainLow_sendmsg(0, 30, (void *) 0);
  4932  00132E  0E1E               	movlw	30
  4933  001330  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  4934  001332  0E00               	movlw	0
  4935  001334  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  4936  001336  0E00               	movlw	0
  4937  001338  6E18               	movwf	ToMainLow_sendmsg@data,c
  4938  00133A  0E00               	movlw	0
  4939  00133C  EC48  F00E         	call	_ToMainLow_sendmsg
  4940  001340  0012               	return	
  4941  001342                     __end_of_uart_recv_int_handler:
  4942                           	opt stack 0
  4943                           pclatu	equ	0xFFB
  4944                           pclath	equ	0xFFA
  4945                           tblptru	equ	0xFF8
  4946                           tblptrh	equ	0xFF7
  4947                           tblptrl	equ	0xFF6
  4948                           tablat	equ	0xFF5
  4949                           prodh	equ	0xFF4
  4950                           prodl	equ	0xFF3
  4951                           intcon	equ	0xFF2
  4952                           intcon2	equ	0xFF1
  4953                           postinc0	equ	0xFEE
  4954                           fsr0h	equ	0xFEA
  4955                           fsr0l	equ	0xFE9
  4956                           wreg	equ	0xFE8
  4957                           indf1	equ	0xFE7
  4958                           fsr1h	equ	0xFE2
  4959                           fsr1l	equ	0xFE1
  4960                           bsr	equ	0xFE0
  4961                           indf2	equ	0xFDF
  4962                           postinc2	equ	0xFDE
  4963                           postdec2	equ	0xFDD
  4964                           fsr2h	equ	0xFDA
  4965                           fsr2l	equ	0xFD9
  4966                           status	equ	0xFD8
  4967                           
  4968 ;; *************** function _SensorData_sendmsg *****************
  4969 ;; Defined at:
  4970 ;;		line 194 in file "../src/messages.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  length          1    wreg     unsigned char 
  4973 ;;  msgtype         1   22[COMRAM] unsigned char 
  4974 ;;  data            2   23[COMRAM] PTR void 
  4975 ;;		 -> uart_recv_int_handler@readin(23), 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  length          1   25[COMRAM] unsigned char 
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      char 
  4980 ;; Registers used:
  4981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4987 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4990 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4991 ;;Total ram usage:        4 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    7
  4994 ;; This function calls:
  4995 ;;		i1_send_msg
  4996 ;; This function is called by:
  4997 ;;		_uart_recv_int_handler
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text33
  5002  001C6C                     __ptext33:
  5003                           	opt stack 0
  5004  001C6C                     _SensorData_sendmsg:
  5005                           	opt stack 17
  5006                           
  5007                           ;incstack = 0
  5008                           ;SensorData_sendmsg@length stored from wreg
  5009  001C6C  6E1A               	movwf	SensorData_sendmsg@length,c
  5010                           
  5011                           ;messages.c: 200: return (send_msg(&SensorData_MQ, length, msgtype, data));
  5012                           ;	Return value of _SensorData_sendmsg is never used
  5013  001C6E  0104               	movlb	4	; () banked
  5014  001C70  0E04               	movlw	high _SensorData_MQ
  5015  001C72  6E0C               	movwf	i1send_msg@qptr+1,c
  5016  001C74  0104               	movlb	4	; () banked
  5017  001C76  0E00               	movlw	low _SensorData_MQ
  5018  001C78  6E0B               	movwf	i1send_msg@qptr,c
  5019  001C7A  C01A  F00D         	movff	SensorData_sendmsg@length,i1send_msg@length
  5020  001C7E  C017  F00E         	movff	SensorData_sendmsg@msgtype,i1send_msg@msgtype
  5021  001C82  C019  F010         	movff	SensorData_sendmsg@data+1,i1send_msg@data+1
  5022  001C86  C018  F00F         	movff	SensorData_sendmsg@data,i1send_msg@data
  5023  001C8A  ECFD  F008         	call	i1_send_msg	;wreg free
  5024  001C8E  0012               	return	
  5025  001C90                     __end_of_SensorData_sendmsg:
  5026                           	opt stack 0
  5027                           pclatu	equ	0xFFB
  5028                           pclath	equ	0xFFA
  5029                           tblptru	equ	0xFF8
  5030                           tblptrh	equ	0xFF7
  5031                           tblptrl	equ	0xFF6
  5032                           tablat	equ	0xFF5
  5033                           prodh	equ	0xFF4
  5034                           prodl	equ	0xFF3
  5035                           intcon	equ	0xFF2
  5036                           intcon2	equ	0xFF1
  5037                           postinc0	equ	0xFEE
  5038                           fsr0h	equ	0xFEA
  5039                           fsr0l	equ	0xFE9
  5040                           wreg	equ	0xFE8
  5041                           indf1	equ	0xFE7
  5042                           fsr1h	equ	0xFE2
  5043                           fsr1l	equ	0xFE1
  5044                           bsr	equ	0xFE0
  5045                           indf2	equ	0xFDF
  5046                           postinc2	equ	0xFDE
  5047                           postdec2	equ	0xFDD
  5048                           fsr2h	equ	0xFDA
  5049                           fsr2l	equ	0xFD9
  5050                           status	equ	0xFD8
  5051                           
  5052 ;; *************** function _Read1USART *****************
  5053 ;; Defined at:
  5054 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\USART\u1read.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;		None
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;  data            1    0[COMRAM] unsigned char 
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      unsigned char 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2, status,0
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5072 ;;Total ram usage:        1 bytes
  5073 ;; Hardware stack levels used:    1
  5074 ;; Hardware stack levels required when called:    5
  5075 ;; This function calls:
  5076 ;;		Nothing
  5077 ;; This function is called by:
  5078 ;;		_uart_recv_int_handler
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           	psect	text34
  5083  001CB2                     __ptext34:
  5084                           	opt stack 0
  5085  001CB2                     _Read1USART:
  5086                           	opt stack 19
  5087                           
  5088                           ;incstack = 0
  5089  001CB2  0EF2               	movlw	242
  5090  001CB4  1646               	andwf	_USART1_Status,f,c
  5091  001CB6  ACAC               	btfss	4012,6,c	;volatile
  5092  001CB8  D003               	goto	i1l503
  5093  001CBA  9046               	bcf	_USART1_Status,0,c
  5094  001CBC  B0AC               	btfsc	4012,0,c	;volatile
  5095  001CBE  8046               	bsf	_USART1_Status,0,c
  5096  001CC0                     i1l503:
  5097  001CC0  B4AC               	btfsc	4012,2,c	;volatile
  5098  001CC2  8446               	bsf	_USART1_Status,2,c
  5099  001CC4  B2AC               	btfsc	4012,1,c	;volatile
  5100  001CC6  8646               	bsf	_USART1_Status,3,c
  5101  001CC8  CFAF F001          	movff	4015,Read1USART@data	;volatile
  5102  001CCC  5001               	movf	Read1USART@data,w,c
  5103  001CCE  0012               	return	
  5104  001CD0                     __end_of_Read1USART:
  5105                           	opt stack 0
  5106                           pclatu	equ	0xFFB
  5107                           pclath	equ	0xFFA
  5108                           tblptru	equ	0xFF8
  5109                           tblptrh	equ	0xFF7
  5110                           tblptrl	equ	0xFF6
  5111                           tablat	equ	0xFF5
  5112                           prodh	equ	0xFF4
  5113                           prodl	equ	0xFF3
  5114                           intcon	equ	0xFF2
  5115                           intcon2	equ	0xFF1
  5116                           postinc0	equ	0xFEE
  5117                           fsr0h	equ	0xFEA
  5118                           fsr0l	equ	0xFE9
  5119                           wreg	equ	0xFE8
  5120                           indf1	equ	0xFE7
  5121                           fsr1h	equ	0xFE2
  5122                           fsr1l	equ	0xFE1
  5123                           bsr	equ	0xFE0
  5124                           indf2	equ	0xFDF
  5125                           postinc2	equ	0xFDE
  5126                           postdec2	equ	0xFDD
  5127                           fsr2h	equ	0xFDA
  5128                           fsr2l	equ	0xFD9
  5129                           status	equ	0xFD8
  5130                           
  5131 ;; *************** function _timer1_int_handler *****************
  5132 ;; Defined at:
  5133 ;;		line 34 in file "../src/user_interrupts.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  result          2   26[COMRAM] unsigned int 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;		None               void
  5140 ;; Registers used:
  5141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5148 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5151 ;;Total ram usage:        2 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    8
  5154 ;; This function calls:
  5155 ;;		_ReadTimer1
  5156 ;;		_ToMainLow_sendmsg
  5157 ;;		_WriteTimer1
  5158 ;; This function is called by:
  5159 ;;		_InterruptHandlerLow
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text35
  5164  001BCA                     __ptext35:
  5165                           	opt stack 0
  5166  001BCA                     _timer1_int_handler:
  5167                           	opt stack 17
  5168                           
  5169                           ;user_interrupts.c: 35: unsigned int result;
  5170                           ;user_interrupts.c: 40: result = ReadTimer1();
  5171                           
  5172                           ;incstack = 0
  5173  001BCA  EC84  F00E         	call	_ReadTimer1	;wreg free
  5174  001BCE  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5175  001BD2  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5176                           
  5177                           ;user_interrupts.c: 41: ToMainLow_sendmsg(0, 11, (void *) 0);
  5178  001BD6  0E0B               	movlw	11
  5179  001BD8  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5180  001BDA  0E00               	movlw	0
  5181  001BDC  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5182  001BDE  0E00               	movlw	0
  5183  001BE0  6E18               	movwf	ToMainLow_sendmsg@data,c
  5184  001BE2  0E00               	movlw	0
  5185  001BE4  EC48  F00E         	call	_ToMainLow_sendmsg
  5186                           
  5187                           ;user_interrupts.c: 44: WriteTimer1(0);
  5188  001BE8  0E00               	movlw	0
  5189  001BEA  6E02               	movwf	WriteTimer1@timer1+1,c
  5190  001BEC  0E00               	movlw	0
  5191  001BEE  6E01               	movwf	WriteTimer1@timer1,c
  5192  001BF0  EC7B  F00E         	call	_WriteTimer1	;wreg free
  5193  001BF4  0012               	return	
  5194  001BF6                     __end_of_timer1_int_handler:
  5195                           	opt stack 0
  5196                           pclatu	equ	0xFFB
  5197                           pclath	equ	0xFFA
  5198                           tblptru	equ	0xFF8
  5199                           tblptrh	equ	0xFF7
  5200                           tblptrl	equ	0xFF6
  5201                           tablat	equ	0xFF5
  5202                           prodh	equ	0xFF4
  5203                           prodl	equ	0xFF3
  5204                           intcon	equ	0xFF2
  5205                           intcon2	equ	0xFF1
  5206                           postinc0	equ	0xFEE
  5207                           fsr0h	equ	0xFEA
  5208                           fsr0l	equ	0xFE9
  5209                           wreg	equ	0xFE8
  5210                           indf1	equ	0xFE7
  5211                           fsr1h	equ	0xFE2
  5212                           fsr1l	equ	0xFE1
  5213                           bsr	equ	0xFE0
  5214                           indf2	equ	0xFDF
  5215                           postinc2	equ	0xFDE
  5216                           postdec2	equ	0xFDD
  5217                           fsr2h	equ	0xFDA
  5218                           fsr2l	equ	0xFD9
  5219                           status	equ	0xFD8
  5220                           
  5221 ;; *************** function _WriteTimer1 *****************
  5222 ;; Defined at:
  5223 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  timer1          2    0[COMRAM] unsigned int 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  timer           2    2[COMRAM] struct Timers
  5228 ;; Return value:  Size  Location     Type
  5229 ;;		None               void
  5230 ;; Registers used:
  5231 ;;		None
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5238 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5240 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5241 ;;Total ram usage:        4 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    5
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_timer1_int_handler
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text36
  5252  001CF6                     __ptext36:
  5253                           	opt stack 0
  5254  001CF6                     _WriteTimer1:
  5255                           	opt stack 19
  5256                           
  5257                           ;incstack = 0
  5258  001CF6  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5259  001CFA  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5260  001CFE  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5261  001D02  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5262  001D06  0012               	return	
  5263  001D08                     __end_of_WriteTimer1:
  5264                           	opt stack 0
  5265                           pclatu	equ	0xFFB
  5266                           pclath	equ	0xFFA
  5267                           tblptru	equ	0xFF8
  5268                           tblptrh	equ	0xFF7
  5269                           tblptrl	equ	0xFF6
  5270                           tablat	equ	0xFF5
  5271                           prodh	equ	0xFF4
  5272                           prodl	equ	0xFF3
  5273                           intcon	equ	0xFF2
  5274                           intcon2	equ	0xFF1
  5275                           postinc0	equ	0xFEE
  5276                           fsr0h	equ	0xFEA
  5277                           fsr0l	equ	0xFE9
  5278                           wreg	equ	0xFE8
  5279                           indf1	equ	0xFE7
  5280                           fsr1h	equ	0xFE2
  5281                           fsr1l	equ	0xFE1
  5282                           bsr	equ	0xFE0
  5283                           indf2	equ	0xFDF
  5284                           postinc2	equ	0xFDE
  5285                           postdec2	equ	0xFDD
  5286                           fsr2h	equ	0xFDA
  5287                           fsr2l	equ	0xFD9
  5288                           status	equ	0xFD8
  5289                           
  5290 ;; *************** function _ToMainLow_sendmsg *****************
  5291 ;; Defined at:
  5292 ;;		line 103 in file "../src/messages.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  length          1    wreg     unsigned char 
  5295 ;;  msgtype         1   22[COMRAM] unsigned char 
  5296 ;;  data            2   23[COMRAM] PTR void 
  5297 ;;		 -> NULL(0), 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  length          1   25[COMRAM] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      char 
  5302 ;; Registers used:
  5303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5309 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5312 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5313 ;;Total ram usage:        4 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; Hardware stack levels required when called:    7
  5316 ;; This function calls:
  5317 ;;		i1_send_msg
  5318 ;; This function is called by:
  5319 ;;		_uart_recv_int_handler
  5320 ;;		_timer1_int_handler
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           	psect	text37
  5325  001C90                     __ptext37:
  5326                           	opt stack 0
  5327  001C90                     _ToMainLow_sendmsg:
  5328                           	opt stack 17
  5329                           
  5330                           ;incstack = 0
  5331                           ;ToMainLow_sendmsg@length stored from wreg
  5332  001C90  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5333                           
  5334                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5335                           ;	Return value of _ToMainLow_sendmsg is never used
  5336  001C92  0102               	movlb	2	; () banked
  5337  001C94  0E02               	movlw	high _ToMainLow_MQ
  5338  001C96  6E0C               	movwf	i1send_msg@qptr+1,c
  5339  001C98  0102               	movlb	2	; () banked
  5340  001C9A  0E76               	movlw	low _ToMainLow_MQ
  5341  001C9C  6E0B               	movwf	i1send_msg@qptr,c
  5342  001C9E  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5343  001CA2  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5344  001CA6  6A10               	clrf	i1send_msg@data+1,c
  5345  001CA8  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5346  001CAC  ECFD  F008         	call	i1_send_msg	;wreg free
  5347  001CB0  0012               	return	
  5348  001CB2                     __end_of_ToMainLow_sendmsg:
  5349                           	opt stack 0
  5350                           pclatu	equ	0xFFB
  5351                           pclath	equ	0xFFA
  5352                           tblptru	equ	0xFF8
  5353                           tblptrh	equ	0xFF7
  5354                           tblptrl	equ	0xFF6
  5355                           tablat	equ	0xFF5
  5356                           prodh	equ	0xFF4
  5357                           prodl	equ	0xFF3
  5358                           intcon	equ	0xFF2
  5359                           intcon2	equ	0xFF1
  5360                           postinc0	equ	0xFEE
  5361                           fsr0h	equ	0xFEA
  5362                           fsr0l	equ	0xFE9
  5363                           wreg	equ	0xFE8
  5364                           indf1	equ	0xFE7
  5365                           fsr1h	equ	0xFE2
  5366                           fsr1l	equ	0xFE1
  5367                           bsr	equ	0xFE0
  5368                           indf2	equ	0xFDF
  5369                           postinc2	equ	0xFDE
  5370                           postdec2	equ	0xFDD
  5371                           fsr2h	equ	0xFDA
  5372                           fsr2l	equ	0xFD9
  5373                           status	equ	0xFD8
  5374                           
  5375 ;; *************** function i1_send_msg *****************
  5376 ;; Defined at:
  5377 ;;		line 24 in file "../src/messages.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5380 ;;		 -> SensorData_MQ(118), FromMainHigh_MQ(118), FromMainLow_MQ(118), ToMainHigh_MQ(118), 
  5381 ;;		 -> ToMainLow_MQ(118), 
  5382 ;;  length          1   12[COMRAM] unsigned char 
  5383 ;;  msgtype         1   13[COMRAM] unsigned char 
  5384 ;;  data            2   14[COMRAM] PTR void 
  5385 ;;		 -> timer0_int_handler@val(2), NULL(0), uart_recv_int_handler@readin(23), i2c_int_handler@error_buf(3), 
  5386 ;;		 -> main@msgbuffer(27), main@t1thread_data(2), main@ic(60), 
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5389 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), SensorData_MQ.queue(116), ToMainHigh_MQ.queue(116), 
  5390 ;;		 -> ToMainLow_MQ.queue(116), SensorData_MQ(118), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  5391 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  5392 ;;  send_msg        2   17[COMRAM] unsigned int 
  5393 ;;  send_msg        1   19[COMRAM] unsigned char 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      char 
  5396 ;; Registers used:
  5397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5403 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5404 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5406 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5407 ;;Total ram usage:       12 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; Hardware stack levels required when called:    6
  5410 ;; This function calls:
  5411 ;;		i1_memcpy
  5412 ;; This function is called by:
  5413 ;;		_ToMainLow_sendmsg
  5414 ;;		_SensorData_sendmsg
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text38
  5419  0011FA                     __ptext38:
  5420                           	opt stack 0
  5421  0011FA                     i1_send_msg:
  5422                           	opt stack 17
  5423                           
  5424                           ;messages.c: 25: unsigned char slot;
  5425                           ;messages.c: 27: msg *qmsg;
  5426                           ;messages.c: 28: size_t tlength = length;
  5427                           
  5428                           ;incstack = 0
  5429  0011FA  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5430  0011FE  6A13               	clrf	i1send_msg@tlength+1,c
  5431                           
  5432                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5433  001200  EE20 F074          	lfsr	2,116
  5434  001204  500B               	movf	i1send_msg@qptr,w,c
  5435  001206  26D9               	addwf	fsr2l,f,c
  5436  001208  500C               	movf	i1send_msg@qptr+1,w,c
  5437  00120A  22DA               	addwfc	fsr2h,f,c
  5438  00120C  50DF               	movf	indf2,w,c
  5439  00120E  6E14               	movwf	i1send_msg@slot,c
  5440                           
  5441                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5442  001210  5014               	movf	i1send_msg@slot,w,c
  5443  001212  0D1D               	mullw	29
  5444  001214  50F3               	movf	prodl,w,c
  5445  001216  240B               	addwf	i1send_msg@qptr,w,c
  5446  001218  6E15               	movwf	i1send_msg@qmsg,c
  5447  00121A  50F4               	movf	prodh,w,c
  5448  00121C  200C               	addwfc	i1send_msg@qptr+1,w,c
  5449  00121E  6E16               	movwf	i1send_msg@qmsg+1,c
  5450                           
  5451                           ;messages.c: 41: if (qmsg->full != 0) {
  5452  001220  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5453  001224  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5454  001228  50DF               	movf	indf2,w,c
  5455  00122A  B4D8               	btfsc	status,2,c
  5456  00122C  D002               	goto	i1l2104
  5457                           
  5458                           ;messages.c: 42: return (-1);
  5459  00122E  0EFF               	movlw	255
  5460  001230  0012               	return	
  5461  001232                     i1l2104:
  5462                           
  5463                           ;messages.c: 43: }
  5464                           ;messages.c: 46: qmsg->length = length;
  5465  001232  EE20 F001          	lfsr	2,1
  5466  001236  5015               	movf	i1send_msg@qmsg,w,c
  5467  001238  26D9               	addwf	fsr2l,f,c
  5468  00123A  5016               	movf	i1send_msg@qmsg+1,w,c
  5469  00123C  22DA               	addwfc	fsr2h,f,c
  5470  00123E  C00D  FFDF         	movff	i1send_msg@length,indf2
  5471                           
  5472                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5473  001242  EE20 F002          	lfsr	2,2
  5474  001246  5015               	movf	i1send_msg@qmsg,w,c
  5475  001248  26D9               	addwf	fsr2l,f,c
  5476  00124A  5016               	movf	i1send_msg@qmsg+1,w,c
  5477  00124C  22DA               	addwfc	fsr2h,f,c
  5478  00124E  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5479                           
  5480                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5481  001252  0E03               	movlw	3
  5482  001254  2415               	addwf	i1send_msg@qmsg,w,c
  5483  001256  6E01               	movwf	i1memcpy@d1,c
  5484  001258  0E00               	movlw	0
  5485  00125A  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5486  00125C  6E02               	movwf	i1memcpy@d1+1,c
  5487  00125E  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5488  001262  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5489  001266  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5490  00126A  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5491  00126E  EC4E  F00C         	call	i1_memcpy	;wreg free
  5492                           
  5493                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5494  001272  EE20 F074          	lfsr	2,116
  5495  001276  500B               	movf	i1send_msg@qptr,w,c
  5496  001278  26D9               	addwf	fsr2l,f,c
  5497  00127A  500C               	movf	i1send_msg@qptr+1,w,c
  5498  00127C  22DA               	addwfc	fsr2h,f,c
  5499  00127E  EE10 F074          	lfsr	1,116
  5500  001282  500B               	movf	i1send_msg@qptr,w,c
  5501  001284  26E1               	addwf	fsr1l,f,c
  5502  001286  500C               	movf	i1send_msg@qptr+1,w,c
  5503  001288  22E2               	addwfc	fsr1h,f,c
  5504  00128A  50E7               	movf	indf1,w,c
  5505  00128C  6E11               	movwf	??i1_send_msg& (0+255),c
  5506  00128E  2811               	incf	??i1_send_msg,w,c
  5507  001290  0B03               	andlw	3
  5508  001292  6EDF               	movwf	indf2,c
  5509                           
  5510                           ;messages.c: 59: qmsg->full = 1;
  5511  001294  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5512  001298  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5513  00129C  0E01               	movlw	1
  5514  00129E  6EDF               	movwf	indf2,c
  5515                           
  5516                           ;messages.c: 60: return (1);
  5517  0012A0  0E01               	movlw	1
  5518  0012A2  0012               	return	
  5519  0012A4                     __end_ofi1_send_msg:
  5520                           	opt stack 0
  5521                           pclatu	equ	0xFFB
  5522                           pclath	equ	0xFFA
  5523                           tblptru	equ	0xFF8
  5524                           tblptrh	equ	0xFF7
  5525                           tblptrl	equ	0xFF6
  5526                           tablat	equ	0xFF5
  5527                           prodh	equ	0xFF4
  5528                           prodl	equ	0xFF3
  5529                           intcon	equ	0xFF2
  5530                           intcon2	equ	0xFF1
  5531                           postinc0	equ	0xFEE
  5532                           fsr0h	equ	0xFEA
  5533                           fsr0l	equ	0xFE9
  5534                           wreg	equ	0xFE8
  5535                           indf1	equ	0xFE7
  5536                           fsr1h	equ	0xFE2
  5537                           fsr1l	equ	0xFE1
  5538                           bsr	equ	0xFE0
  5539                           indf2	equ	0xFDF
  5540                           postinc2	equ	0xFDE
  5541                           postdec2	equ	0xFDD
  5542                           fsr2h	equ	0xFDA
  5543                           fsr2l	equ	0xFD9
  5544                           status	equ	0xFD8
  5545                           
  5546 ;; *************** function i1_memcpy *****************
  5547 ;; Defined at:
  5548 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\memcpy.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  d1              2    0[COMRAM] PTR void 
  5551 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), SensorData_MQ.queue(116), ToMainHigh_MQ.queue(116), 
  5552 ;;		 -> ToMainLow_MQ.queue(116), timer0_int_handler@val(2), NULL(0), SensorData_MQ(118), 
  5553 ;;		 -> FromMainHigh_MQ(118), FromMainLow_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  5554 ;;		 -> main@msgbuffer(27), main@ic(60), main@uc(57), 
  5555 ;;  s1              2    2[COMRAM] PTR const void 
  5556 ;;		 -> ToMainLow_MQ.data(26), ToMainHigh_MQ.data(26), FromMainLow_MQ.data(26), FromMainHigh_MQ.data(26), 
  5557 ;;		 -> SensorData_MQ.data(26), ToMainLow_MQ.queue.data(26), ToMainHigh_MQ.queue.data(26), SensorData_MQ.queue.data(26),
      + 
  5558 ;;		 -> FromMainHigh_MQ.queue.data(26), FromMainLow_MQ.queue.data(26), timer0_int_handler@val(2), NULL(0), 
  5559 ;;		 -> uart_recv_int_handler@readin(23), i2c_int_handler@error_buf(3), SensorData_MQ(118), FromMainHigh_MQ(118), 
  5560 ;;		 -> FromMainLow_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), main@msgbuffer(27), 
  5561 ;;		 -> main@t1thread_data(2), main@ic(60), 
  5562 ;;  n               2    4[COMRAM] unsigned int 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5565 ;;		 -> ToMainLow_MQ.data(26), ToMainHigh_MQ.data(26), FromMainLow_MQ.data(26), FromMainHigh_MQ.data(26), 
  5566 ;;		 -> SensorData_MQ.data(26), ToMainLow_MQ.queue.data(26), ToMainHigh_MQ.queue.data(26), SensorData_MQ.queue.data(26),
      + 
  5567 ;;		 -> FromMainHigh_MQ.queue.data(26), FromMainLow_MQ.queue.data(26), timer0_int_handler@val(2), NULL(0), 
  5568 ;;		 -> uart_recv_int_handler@readin(23), i2c_int_handler@error_buf(3), SensorData_MQ(118), FromMainHigh_MQ(118), 
  5569 ;;		 -> FromMainLow_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), main@msgbuffer(27), 
  5570 ;;		 -> main@t1thread_data(2), main@ic(60), 
  5571 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5572 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), SensorData_MQ.queue(116), ToMainHigh_MQ.queue(116), 
  5573 ;;		 -> ToMainLow_MQ.queue(116), timer0_int_handler@val(2), NULL(0), SensorData_MQ(118), 
  5574 ;;		 -> FromMainHigh_MQ(118), FromMainLow_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  5575 ;;		 -> main@msgbuffer(27), main@ic(60), main@uc(57), 
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  2    0[COMRAM] PTR void 
  5578 ;; Registers used:
  5579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5585 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5586 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5588 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5589 ;;Total ram usage:       10 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    5
  5592 ;; This function calls:
  5593 ;;		Nothing
  5594 ;; This function is called by:
  5595 ;;		i1_send_msg
  5596 ;;		i1_recv_msg
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text39
  5601  00189C                     __ptext39:
  5602                           	opt stack 0
  5603  00189C                     i1_memcpy:
  5604                           	opt stack 17
  5605                           
  5606                           ;incstack = 0
  5607  00189C  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5608  0018A0  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5609  0018A4  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5610  0018A8  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5611  0018AC  D00E               	goto	i1l2032
  5612  0018AE                     i1l2026:
  5613  0018AE  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5614  0018B2  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5615  0018B6  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5616  0018BA  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5617  0018BE  CFDF FFE7          	movff	indf2,indf1
  5618  0018C2  4A09               	infsnz	i1memcpy@s,f,c
  5619  0018C4  2A0A               	incf	i1memcpy@s+1,f,c
  5620  0018C6  4A07               	infsnz	i1memcpy@d,f,c
  5621  0018C8  2A08               	incf	i1memcpy@d+1,f,c
  5622  0018CA                     i1l2032:
  5623  0018CA  0605               	decf	i1memcpy@n,f,c
  5624  0018CC  A0D8               	btfss	status,0,c
  5625  0018CE  0606               	decf	i1memcpy@n+1,f,c
  5626  0018D0  2805               	incf	i1memcpy@n& (0+255),w,c
  5627  0018D2  B4D8               	btfsc	status,2,c
  5628  0018D4  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5629  0018D6  B4D8               	btfsc	status,2,c
  5630                           
  5631                           ;	Return value of i1_memcpy is never used
  5632  0018D8  0012               	return	
  5633  0018DA  D7E9               	goto	i1l2026
  5634  0018DC                     __end_ofi1_memcpy:
  5635                           	opt stack 0
  5636                           pclatu	equ	0xFFB
  5637                           pclath	equ	0xFFA
  5638                           tblptru	equ	0xFF8
  5639                           tblptrh	equ	0xFF7
  5640                           tblptrl	equ	0xFF6
  5641                           tablat	equ	0xFF5
  5642                           prodh	equ	0xFF4
  5643                           prodl	equ	0xFF3
  5644                           intcon	equ	0xFF2
  5645                           intcon2	equ	0xFF1
  5646                           postinc0	equ	0xFEE
  5647                           fsr0h	equ	0xFEA
  5648                           fsr0l	equ	0xFE9
  5649                           wreg	equ	0xFE8
  5650                           indf1	equ	0xFE7
  5651                           fsr1h	equ	0xFE2
  5652                           fsr1l	equ	0xFE1
  5653                           bsr	equ	0xFE0
  5654                           indf2	equ	0xFDF
  5655                           postinc2	equ	0xFDE
  5656                           postdec2	equ	0xFDD
  5657                           fsr2h	equ	0xFDA
  5658                           fsr2l	equ	0xFD9
  5659                           status	equ	0xFD8
  5660                           
  5661 ;; *************** function _ReadTimer1 *****************
  5662 ;; Defined at:
  5663 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1read.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  timer           2    2[COMRAM] struct Timers
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  2    0[COMRAM] unsigned int 
  5670 ;; Registers used:
  5671 ;;		None
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5681 ;;Total ram usage:        4 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    5
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_timer1_int_handler
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text40
  5692  001D08                     __ptext40:
  5693                           	opt stack 0
  5694  001D08                     _ReadTimer1:
  5695                           	opt stack 19
  5696                           
  5697                           ;incstack = 0
  5698  001D08  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5699  001D0C  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5700  001D10  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5701  001D14  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5702  001D18  0012               	return	
  5703  001D1A                     __end_of_ReadTimer1:
  5704                           	opt stack 0
  5705                           pclatu	equ	0xFFB
  5706                           pclath	equ	0xFFA
  5707                           tblptru	equ	0xFF8
  5708                           tblptrh	equ	0xFF7
  5709                           tblptrl	equ	0xFF6
  5710                           tablat	equ	0xFF5
  5711                           prodh	equ	0xFF4
  5712                           prodl	equ	0xFF3
  5713                           intcon	equ	0xFF2
  5714                           intcon2	equ	0xFF1
  5715                           postinc0	equ	0xFEE
  5716                           fsr0h	equ	0xFEA
  5717                           fsr0l	equ	0xFE9
  5718                           wreg	equ	0xFE8
  5719                           indf1	equ	0xFE7
  5720                           fsr1h	equ	0xFE2
  5721                           fsr1l	equ	0xFE1
  5722                           bsr	equ	0xFE0
  5723                           indf2	equ	0xFDF
  5724                           postinc2	equ	0xFDE
  5725                           postdec2	equ	0xFDD
  5726                           fsr2h	equ	0xFDA
  5727                           fsr2l	equ	0xFD9
  5728                           status	equ	0xFD8
  5729                           
  5730 ;; *************** function _InterruptHandlerHigh *****************
  5731 ;; Defined at:
  5732 ;;		line 83 in file "../src/interrupts.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;		None
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;		None               void
  5739 ;; Registers used:
  5740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5748 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5749 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5750 ;;Total ram usage:       14 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; Hardware stack levels required when called:    4
  5753 ;; This function calls:
  5754 ;;		_SleepIfOkay
  5755 ;;		_i2c_int_handler
  5756 ;;		_timer0_int_handler
  5757 ;; This function is called by:
  5758 ;;		Interrupt level 2
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           	psect	intcode
  5763  000008                     __pintcode:
  5764                           	opt stack 0
  5765  000008                     _InterruptHandlerHigh:
  5766                           	opt stack 17
  5767                           
  5768                           ;incstack = 0
  5769  000008  CFFA F088          	movff	pclath,??_InterruptHandlerHigh
  5770  00000C  CFFB F089          	movff	pclatu,??_InterruptHandlerHigh+1
  5771  000010  CFE9 F08A          	movff	fsr0l,??_InterruptHandlerHigh+2
  5772  000014  EFA1  F009         	goto	int_func
  5773                           pclatu	equ	0xFFB
  5774                           pclath	equ	0xFFA
  5775                           tblptru	equ	0xFF8
  5776                           tblptrh	equ	0xFF7
  5777                           tblptrl	equ	0xFF6
  5778                           tablat	equ	0xFF5
  5779                           prodh	equ	0xFF4
  5780                           prodl	equ	0xFF3
  5781                           intcon	equ	0xFF2
  5782                           intcon2	equ	0xFF1
  5783                           postinc0	equ	0xFEE
  5784                           fsr0h	equ	0xFEA
  5785                           fsr0l	equ	0xFE9
  5786                           wreg	equ	0xFE8
  5787                           indf1	equ	0xFE7
  5788                           fsr1h	equ	0xFE2
  5789                           fsr1l	equ	0xFE1
  5790                           bsr	equ	0xFE0
  5791                           indf2	equ	0xFDF
  5792                           postinc2	equ	0xFDE
  5793                           postdec2	equ	0xFDD
  5794                           fsr2h	equ	0xFDA
  5795                           fsr2l	equ	0xFD9
  5796                           status	equ	0xFD8
  5797                           
  5798                           	psect	intcode_body
  5799  001342                     __pintcode_body:
  5800                           	opt stack 17
  5801  001342                     int_func:
  5802                           	opt stack 17
  5803  001342  CFEA F08B          	movff	fsr0h,??_InterruptHandlerHigh+3
  5804  001346  CFE1 F08C          	movff	fsr1l,??_InterruptHandlerHigh+4
  5805  00134A  CFE2 F08D          	movff	fsr1h,??_InterruptHandlerHigh+5
  5806  00134E  CFD9 F08E          	movff	fsr2l,??_InterruptHandlerHigh+6
  5807  001352  CFDA F08F          	movff	fsr2h,??_InterruptHandlerHigh+7
  5808  001356  CFF3 F090          	movff	prodl,??_InterruptHandlerHigh+8
  5809  00135A  CFF4 F091          	movff	prodh,??_InterruptHandlerHigh+9
  5810  00135E  CFF6 F092          	movff	tblptrl,??_InterruptHandlerHigh+10
  5811  001362  CFF7 F093          	movff	tblptrh,??_InterruptHandlerHigh+11
  5812  001366  CFF8 F094          	movff	tblptru,??_InterruptHandlerHigh+12
  5813  00136A  CFF5 F095          	movff	tablat,??_InterruptHandlerHigh+13
  5814                           
  5815                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
  5816  00136E  A69E               	btfss	3998,3,c	;volatile
  5817  001370  D003               	goto	i2l2782
  5818                           
  5819                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
  5820  001372  969E               	bcf	3998,3,c	;volatile
  5821                           
  5822                           ;interrupts.c: 92: i2c_int_handler();
  5823  001374  EC62  F000         	call	_i2c_int_handler	;wreg free
  5824  001378                     i2l2782:
  5825                           
  5826                           ;interrupts.c: 93: }
  5827                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
  5828  001378  A4F2               	btfss	intcon,2,c	;volatile
  5829  00137A  D003               	goto	i2l2788
  5830                           
  5831                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
  5832  00137C  94F2               	bcf	intcon,2,c	;volatile
  5833                           
  5834                           ;interrupts.c: 99: timer0_int_handler();
  5835  00137E  EC18  F00A         	call	_timer0_int_handler	;wreg free
  5836  001382                     i2l2788:
  5837                           
  5838                           ;interrupts.c: 100: }
  5839                           ;interrupts.c: 109: SleepIfOkay();
  5840  001382  EC4B  F00B         	call	_SleepIfOkay	;wreg free
  5841  001386  C095  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  5842  00138A  C094  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  5843  00138E  C093  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  5844  001392  C092  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  5845  001396  C091  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  5846  00139A  C090  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  5847  00139E  C08F  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  5848  0013A2  C08E  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  5849  0013A6  C08D  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  5850  0013AA  C08C  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  5851  0013AE  C08B  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  5852  0013B2  C08A  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  5853  0013B6  C089  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  5854  0013BA  C088  FFFA         	movff	??_InterruptHandlerHigh,pclath
  5855  0013BE  0011               	retfie		f
  5856  0013C0                     __end_of_InterruptHandlerHigh:
  5857                           	opt stack 0
  5858                           pclatu	equ	0xFFB
  5859                           pclath	equ	0xFFA
  5860                           tblptru	equ	0xFF8
  5861                           tblptrh	equ	0xFF7
  5862                           tblptrl	equ	0xFF6
  5863                           tablat	equ	0xFF5
  5864                           prodh	equ	0xFF4
  5865                           prodl	equ	0xFF3
  5866                           intcon	equ	0xFF2
  5867                           intcon2	equ	0xFF1
  5868                           postinc0	equ	0xFEE
  5869                           fsr0h	equ	0xFEA
  5870                           fsr0l	equ	0xFE9
  5871                           wreg	equ	0xFE8
  5872                           indf1	equ	0xFE7
  5873                           fsr1h	equ	0xFE2
  5874                           fsr1l	equ	0xFE1
  5875                           bsr	equ	0xFE0
  5876                           indf2	equ	0xFDF
  5877                           postinc2	equ	0xFDE
  5878                           postdec2	equ	0xFDD
  5879                           fsr2h	equ	0xFDA
  5880                           fsr2l	equ	0xFD9
  5881                           status	equ	0xFD8
  5882                           
  5883 ;; *************** function _timer0_int_handler *****************
  5884 ;; Defined at:
  5885 ;;		line 16 in file "../src/user_interrupts.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;		None
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  val             2   33[BANK0 ] unsigned int 
  5890 ;;  msgtype         2   31[BANK0 ] int 
  5891 ;;  length          2   29[BANK0 ] int 
  5892 ;; Return value:  Size  Location     Type
  5893 ;;		None               void
  5894 ;; Registers used:
  5895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5902 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5904 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5905 ;;Total ram usage:        6 bytes
  5906 ;; Hardware stack levels used:    1
  5907 ;; Hardware stack levels required when called:    3
  5908 ;; This function calls:
  5909 ;;		_FromMainHigh_recvmsg
  5910 ;;		_ToMainHigh_sendmsg
  5911 ;;		_WriteTimer0
  5912 ;; This function is called by:
  5913 ;;		_InterruptHandlerHigh
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text42
  5918  001430                     __ptext42:
  5919                           	opt stack 0
  5920  001430                     _timer0_int_handler:
  5921                           	opt stack 17
  5922                           
  5923                           ;user_interrupts.c: 17: unsigned int val;
  5924                           ;user_interrupts.c: 18: int length, msgtype;
  5925                           ;user_interrupts.c: 23: WriteTimer0(0);
  5926                           
  5927                           ;incstack = 0
  5928  001430  0E00               	movlw	0
  5929  001432  0100               	movlb	0	; () banked
  5930  001434  6F61               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  5931  001436  0E00               	movlw	0
  5932  001438  0100               	movlb	0	; () banked
  5933  00143A  6F60               	movwf	WriteTimer0@timer0& (0+255),b
  5934  00143C  EC8D  F00E         	call	_WriteTimer0	;wreg free
  5935                           
  5936                           ;user_interrupts.c: 25: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  5937  001440  0100               	movlb	0	; () banked
  5938  001442  0E00               	movlw	high timer0_int_handler@msgtype
  5939  001444  0100               	movlb	0	; () banked
  5940  001446  6F79               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  5941  001448  0100               	movlb	0	; () banked
  5942  00144A  0E7F               	movlw	low timer0_int_handler@msgtype
  5943  00144C  0100               	movlb	0	; () banked
  5944  00144E  6F78               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  5945  001450  0100               	movlb	0	; () banked
  5946  001452  0E00               	movlw	high timer0_int_handler@val
  5947  001454  0100               	movlb	0	; () banked
  5948  001456  6F7B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  5949  001458  0100               	movlb	0	; () banked
  5950  00145A  0E81               	movlw	low timer0_int_handler@val
  5951  00145C  0100               	movlb	0	; () banked
  5952  00145E  6F7A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  5953  001460  0E02               	movlw	2
  5954  001462  EC1E  F00D         	call	_FromMainHigh_recvmsg
  5955  001466  0100               	movlb	0	; () banked
  5956  001468  6F7D               	movwf	timer0_int_handler@length& (0+255),b
  5957  00146A  0100               	movlb	0	; () banked
  5958  00146C  6B7E               	clrf	(timer0_int_handler@length+1)& (0+255),b
  5959  00146E  0100               	movlb	0	; () banked
  5960  001470  BF7D               	btfsc	timer0_int_handler@length& (0+255),7,b
  5961  001472  077E               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;user_interrupts.c: 26: if (length == sizeof (val)) {
  5965  001474  0100               	movlb	0	; () banked
  5966  001476  517D               	movf	timer0_int_handler@length& (0+255),w,b
  5967  001478  0A02               	xorlw	2
  5968  00147A  117E               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  5969  00147C  A4D8               	btfss	status,2,c
  5970  00147E  0012               	return	
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;user_interrupts.c: 27: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  5974  001480  0E0A               	movlw	10
  5975  001482  0100               	movlb	0	; () banked
  5976  001484  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  5977  001486  0100               	movlb	0	; () banked
  5978  001488  0E00               	movlw	high timer0_int_handler@val
  5979  00148A  0100               	movlb	0	; () banked
  5980  00148C  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  5981  00148E  0100               	movlb	0	; () banked
  5982  001490  0E81               	movlw	low timer0_int_handler@val
  5983  001492  0100               	movlb	0	; () banked
  5984  001494  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  5985  001496  0E02               	movlw	2
  5986  001498  ECCE  F00D         	call	_ToMainHigh_sendmsg
  5987  00149C  0012               	return	
  5988  00149E                     __end_of_timer0_int_handler:
  5989                           	opt stack 0
  5990                           pclatu	equ	0xFFB
  5991                           pclath	equ	0xFFA
  5992                           tblptru	equ	0xFF8
  5993                           tblptrh	equ	0xFF7
  5994                           tblptrl	equ	0xFF6
  5995                           tablat	equ	0xFF5
  5996                           prodh	equ	0xFF4
  5997                           prodl	equ	0xFF3
  5998                           intcon	equ	0xFF2
  5999                           intcon2	equ	0xFF1
  6000                           postinc0	equ	0xFEE
  6001                           fsr0h	equ	0xFEA
  6002                           fsr0l	equ	0xFE9
  6003                           wreg	equ	0xFE8
  6004                           indf1	equ	0xFE7
  6005                           fsr1h	equ	0xFE2
  6006                           fsr1l	equ	0xFE1
  6007                           bsr	equ	0xFE0
  6008                           indf2	equ	0xFDF
  6009                           postinc2	equ	0xFDE
  6010                           postdec2	equ	0xFDD
  6011                           fsr2h	equ	0xFDA
  6012                           fsr2l	equ	0xFD9
  6013                           status	equ	0xFD8
  6014                           
  6015 ;; *************** function _WriteTimer0 *****************
  6016 ;; Defined at:
  6017 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  timer0          2    0[BANK0 ] unsigned int 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  timer           2    2[BANK0 ] struct Timers
  6022 ;; Return value:  Size  Location     Type
  6023 ;;		None               void
  6024 ;; Registers used:
  6025 ;;		None
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6031 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6032 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6034 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6035 ;;Total ram usage:        4 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; This function calls:
  6038 ;;		Nothing
  6039 ;; This function is called by:
  6040 ;;		_timer0_int_handler
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           	psect	text43
  6045  001D1A                     __ptext43:
  6046                           	opt stack 0
  6047  001D1A                     _WriteTimer0:
  6048                           	opt stack 19
  6049                           
  6050                           ;incstack = 0
  6051  001D1A  C060  F062         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6052  001D1E  C061  F063         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6053  001D22  C063  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6054  001D26  C062  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6055  001D2A  0012               	return	
  6056  001D2C                     __end_of_WriteTimer0:
  6057                           	opt stack 0
  6058                           pclatu	equ	0xFFB
  6059                           pclath	equ	0xFFA
  6060                           tblptru	equ	0xFF8
  6061                           tblptrh	equ	0xFF7
  6062                           tblptrl	equ	0xFF6
  6063                           tablat	equ	0xFF5
  6064                           prodh	equ	0xFF4
  6065                           prodl	equ	0xFF3
  6066                           intcon	equ	0xFF2
  6067                           intcon2	equ	0xFF1
  6068                           postinc0	equ	0xFEE
  6069                           fsr0h	equ	0xFEA
  6070                           fsr0l	equ	0xFE9
  6071                           wreg	equ	0xFE8
  6072                           indf1	equ	0xFE7
  6073                           fsr1h	equ	0xFE2
  6074                           fsr1l	equ	0xFE1
  6075                           bsr	equ	0xFE0
  6076                           indf2	equ	0xFDF
  6077                           postinc2	equ	0xFDE
  6078                           postdec2	equ	0xFDD
  6079                           fsr2h	equ	0xFDA
  6080                           fsr2l	equ	0xFD9
  6081                           status	equ	0xFD8
  6082                           
  6083 ;; *************** function _FromMainHigh_recvmsg *****************
  6084 ;; Defined at:
  6085 ;;		line 183 in file "../src/messages.c"
  6086 ;; Parameters:    Size  Location     Type
  6087 ;;  maxlength       1    wreg     unsigned char 
  6088 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  6089 ;;		 -> timer0_int_handler@msgtype(2), 
  6090 ;;  data            2   26[BANK0 ] PTR void 
  6091 ;;		 -> timer0_int_handler@val(2), 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;  maxlength       1   28[BANK0 ] unsigned char 
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1    wreg      char 
  6096 ;; Registers used:
  6097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6103 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6106 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6107 ;;Total ram usage:        5 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    2
  6110 ;; This function calls:
  6111 ;;		i2_recv_msg
  6112 ;; This function is called by:
  6113 ;;		_timer0_int_handler
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           	psect	text44
  6118  001A3C                     __ptext44:
  6119                           	opt stack 0
  6120  001A3C                     _FromMainHigh_recvmsg:
  6121                           	opt stack 17
  6122                           
  6123                           ;incstack = 0
  6124                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6125  001A3C  0100               	movlb	0	; () banked
  6126  001A3E  6F7C               	movwf	FromMainHigh_recvmsg@maxlength& (0+255),b
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6130  001A40  0103               	movlb	3	; () banked
  6131  001A42  0E03               	movlw	high _FromMainHigh_MQ
  6132  001A44  0100               	movlb	0	; () banked
  6133  001A46  6F6B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  6134  001A48  0103               	movlb	3	; () banked
  6135  001A4A  0E00               	movlw	low _FromMainHigh_MQ
  6136  001A4C  0100               	movlb	0	; () banked
  6137  001A4E  6F6A               	movwf	i2recv_msg@qptr& (0+255),b
  6138  001A50  C07C  F06C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6139  001A54  0100               	movlb	0	; () banked
  6140  001A56  C079  F06E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6141  001A5A  0100               	movlb	0	; () banked
  6142  001A5C  C078  F06D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6143  001A60  0100               	movlb	0	; () banked
  6144  001A62  C07B  F070         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6145  001A66  0100               	movlb	0	; () banked
  6146  001A68  C07A  F06F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6147  001A6C  ECDC  F005         	call	i2_recv_msg	;wreg free
  6148  001A70  0012               	return	
  6149  001A72                     __end_of_FromMainHigh_recvmsg:
  6150                           	opt stack 0
  6151                           pclatu	equ	0xFFB
  6152                           pclath	equ	0xFFA
  6153                           tblptru	equ	0xFF8
  6154                           tblptrh	equ	0xFF7
  6155                           tblptrl	equ	0xFF6
  6156                           tablat	equ	0xFF5
  6157                           prodh	equ	0xFF4
  6158                           prodl	equ	0xFF3
  6159                           intcon	equ	0xFF2
  6160                           intcon2	equ	0xFF1
  6161                           postinc0	equ	0xFEE
  6162                           fsr0h	equ	0xFEA
  6163                           fsr0l	equ	0xFE9
  6164                           wreg	equ	0xFE8
  6165                           indf1	equ	0xFE7
  6166                           fsr1h	equ	0xFE2
  6167                           fsr1l	equ	0xFE1
  6168                           bsr	equ	0xFE0
  6169                           indf2	equ	0xFDF
  6170                           postinc2	equ	0xFDE
  6171                           postdec2	equ	0xFDD
  6172                           fsr2h	equ	0xFDA
  6173                           fsr2l	equ	0xFD9
  6174                           status	equ	0xFD8
  6175                           
  6176 ;; *************** function _i2c_int_handler *****************
  6177 ;; Defined at:
  6178 ;;		line 58 in file "../src/my_i2c.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  send            1   33[BANK0 ] char 
  6183 ;;  error_buf       3   30[BANK0 ] unsigned char [3]
  6184 ;;  data_read       1   39[BANK0 ] unsigned char 
  6185 ;;  msg_ready       1   38[BANK0 ] unsigned char 
  6186 ;;  msg_to_send     1   37[BANK0 ] unsigned char 
  6187 ;;  i2c_data        1   36[BANK0 ] unsigned char 
  6188 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
  6189 ;;  data_written    1   34[BANK0 ] unsigned char 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;		None               void
  6192 ;; Registers used:
  6193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6200 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6201 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6202 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6203 ;;Total ram usage:       11 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    3
  6206 ;; This function calls:
  6207 ;;		_SensorData_recvmsg
  6208 ;;		_ToMainHigh_sendmsg
  6209 ;;		_handle_start
  6210 ;;		_start_i2c_slave_reply
  6211 ;; This function is called by:
  6212 ;;		_InterruptHandlerHigh
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           	psect	text45
  6217  0000C4                     __ptext45:
  6218                           	opt stack 0
  6219  0000C4                     _i2c_int_handler:
  6220                           	opt stack 17
  6221                           
  6222                           ;my_i2c.c: 59: unsigned char i2c_data;
  6223                           ;my_i2c.c: 60: unsigned char data_read = 0;
  6224                           
  6225                           ;incstack = 0
  6226  0000C4  0E00               	movlw	0
  6227  0000C6  0100               	movlb	0	; () banked
  6228  0000C8  6F87               	movwf	i2c_int_handler@data_read& (0+255),b
  6229                           
  6230                           ;my_i2c.c: 61: unsigned char data_written = 0;
  6231  0000CA  0E00               	movlw	0
  6232  0000CC  0100               	movlb	0	; () banked
  6233  0000CE  6F82               	movwf	i2c_int_handler@data_written& (0+255),b
  6234                           
  6235                           ;my_i2c.c: 62: unsigned char msg_ready = 0;
  6236  0000D0  0E00               	movlw	0
  6237  0000D2  0100               	movlb	0	; () banked
  6238  0000D4  6F86               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6239                           
  6240                           ;my_i2c.c: 63: unsigned char msg_to_send = 0;
  6241  0000D6  0E00               	movlw	0
  6242  0000D8  0100               	movlb	0	; () banked
  6243  0000DA  6F85               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6244                           
  6245                           ;my_i2c.c: 64: unsigned char overrun_error = 0;
  6246  0000DC  0E00               	movlw	0
  6247  0000DE  0100               	movlb	0	; () banked
  6248  0000E0  6F83               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;my_i2c.c: 65: unsigned char error_buf[3];
  6252                           ;my_i2c.c: 68: if (SSPCON1bits.SSPOV == 1) {
  6253  0000E2  ACC6               	btfss	4038,6,c	;volatile
  6254  0000E4  D024               	goto	i2l2406
  6255                           
  6256                           ; BSR set to: 0
  6257                           ;my_i2c.c: 69: SSPCON1bits.SSPOV = 0;
  6258  0000E6  9CC6               	bcf	4038,6,c	;volatile
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;my_i2c.c: 73: ic_ptr->status = 0x5;
  6262  0000E8  0100               	movlb	0	; () banked
  6263  0000EA  EE20 F01C          	lfsr	2,28
  6264  0000EE  0100               	movlb	0	; () banked
  6265  0000F0  51BA               	movf	_ic_ptr& (0+255),w,b
  6266  0000F2  26D9               	addwf	fsr2l,f,c
  6267  0000F4  0100               	movlb	0	; () banked
  6268  0000F6  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6269  0000F8  22DA               	addwfc	fsr2h,f,c
  6270  0000FA  0E05               	movlw	5
  6271  0000FC  6EDF               	movwf	indf2,c
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;my_i2c.c: 74: overrun_error = 1;
  6275  0000FE  0E01               	movlw	1
  6276  000100  0100               	movlb	0	; () banked
  6277  000102  6F83               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;my_i2c.c: 75: ic_ptr->error_count++;
  6281  000104  0100               	movlb	0	; () banked
  6282  000106  EE20 F01E          	lfsr	2,30
  6283  00010A  0100               	movlb	0	; () banked
  6284  00010C  51BA               	movf	_ic_ptr& (0+255),w,b
  6285  00010E  26D9               	addwf	fsr2l,f,c
  6286  000110  0100               	movlb	0	; () banked
  6287  000112  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6288  000114  22DA               	addwfc	fsr2h,f,c
  6289  000116  2ADF               	incf	indf2,f,c
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;my_i2c.c: 76: ic_ptr->error_code = 0x4;
  6293  000118  0100               	movlb	0	; () banked
  6294  00011A  EE20 F01D          	lfsr	2,29
  6295  00011E  0100               	movlb	0	; () banked
  6296  000120  51BA               	movf	_ic_ptr& (0+255),w,b
  6297  000122  26D9               	addwf	fsr2l,f,c
  6298  000124  0100               	movlb	0	; () banked
  6299  000126  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6300  000128  22DA               	addwfc	fsr2h,f,c
  6301  00012A  0E04               	movlw	4
  6302  00012C  6EDF               	movwf	indf2,c
  6303  00012E                     i2l2406:
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;my_i2c.c: 77: }
  6307                           ;my_i2c.c: 79: if (SSPSTATbits.BF == 1) {
  6308  00012E  A0C7               	btfss	4039,0,c	;volatile
  6309  000130  D005               	goto	i2l2412
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;my_i2c.c: 80: i2c_data = SSPBUF;
  6313  000132  CFC9 F084          	movff	4041,i2c_int_handler@i2c_data	;volatile
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;my_i2c.c: 81: data_read = 1;
  6317  000136  0E01               	movlw	1
  6318  000138  0100               	movlb	0	; () banked
  6319  00013A  6F87               	movwf	i2c_int_handler@data_read& (0+255),b
  6320  00013C                     i2l2412:
  6321                           
  6322                           ; BSR set to: 0
  6323                           ;my_i2c.c: 82: }
  6324                           ;my_i2c.c: 84: if (!overrun_error) {
  6325  00013C  0100               	movlb	0	; () banked
  6326  00013E  6783               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  6327  000140  D19F               	goto	i2l277
  6328  000142  D188               	goto	i2l2500
  6329  000144                     i2l279:
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;my_i2c.c: 87: {
  6333                           ;my_i2c.c: 89: if (SSPSTATbits.S == 1) {
  6334  000144  A6C7               	btfss	4039,3,c	;volatile
  6335  000146  D19C               	goto	i2l277
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;my_i2c.c: 90: handle_start(data_read);
  6339  000148  0100               	movlb	0	; () banked
  6340  00014A  5187               	movf	i2c_int_handler@data_read& (0+255),w,b
  6341  00014C  EC42  F008         	call	_handle_start
  6342                           
  6343                           ;my_i2c.c: 92: if (ic_ptr->status == 0x8) {
  6344  000150  0100               	movlb	0	; () banked
  6345  000152  EE20 F01C          	lfsr	2,28
  6346  000156  0100               	movlb	0	; () banked
  6347  000158  51BA               	movf	_ic_ptr& (0+255),w,b
  6348  00015A  26D9               	addwf	fsr2l,f,c
  6349  00015C  0100               	movlb	0	; () banked
  6350  00015E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6351  000160  22DA               	addwfc	fsr2h,f,c
  6352  000162  0E08               	movlw	8
  6353  000164  62DF               	cpfseq	indf2,c
  6354  000166  D18C               	goto	i2l277
  6355                           
  6356                           ; BSR set to: 0
  6357                           ;my_i2c.c: 93: data_read = 0;
  6358  000168  0E00               	movlw	0
  6359  00016A  0100               	movlb	0	; () banked
  6360  00016C  6F87               	movwf	i2c_int_handler@data_read& (0+255),b
  6361                           
  6362                           ;my_i2c.c: 94: msg_to_send = 1;
  6363  00016E  0E01               	movlw	1
  6364  000170  0100               	movlb	0	; () banked
  6365  000172  6F85               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6366  000174  D185               	goto	i2l277
  6367  000176                     i2l283:
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;my_i2c.c: 100: {
  6371                           ;my_i2c.c: 102: if (SSPSTATbits.P == 1) {
  6372  000176  A8C7               	btfss	4039,4,c	;volatile
  6373  000178  D02A               	goto	i2l2432
  6374                           
  6375                           ; BSR set to: 0
  6376                           ;my_i2c.c: 105: ic_ptr->event_count++;
  6377  00017A  0100               	movlb	0	; () banked
  6378  00017C  EE20 F01B          	lfsr	2,27
  6379  000180  0100               	movlb	0	; () banked
  6380  000182  51BA               	movf	_ic_ptr& (0+255),w,b
  6381  000184  26D9               	addwf	fsr2l,f,c
  6382  000186  0100               	movlb	0	; () banked
  6383  000188  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6384  00018A  22DA               	addwfc	fsr2h,f,c
  6385  00018C  2ADF               	incf	indf2,f,c
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;my_i2c.c: 106: if (data_read) {
  6389  00018E  0100               	movlb	0	; () banked
  6390  000190  5187               	movf	i2c_int_handler@data_read& (0+255),w,b
  6391  000192  B4D8               	btfsc	status,2,c
  6392  000194  D154               	goto	L6
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;my_i2c.c: 107: if (SSPSTATbits.D_A == 0) {
  6396  000196  BAC7               	btfsc	4039,5,c	;volatile
  6397  000198  D004               	goto	i2l2430
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;my_i2c.c: 108: msg_ready = 1;
  6401  00019A  0E01               	movlw	1
  6402  00019C  0100               	movlb	0	; () banked
  6403  00019E  6F86               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6404                           
  6405                           ;my_i2c.c: 109: } else {
  6406  0001A0  D14E               	goto	L6
  6407  0001A2                     i2l2430:
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;my_i2c.c: 110: ic_ptr->error_count++;
  6411  0001A2  0100               	movlb	0	; () banked
  6412  0001A4  EE20 F01E          	lfsr	2,30
  6413  0001A8  0100               	movlb	0	; () banked
  6414  0001AA  51BA               	movf	_ic_ptr& (0+255),w,b
  6415  0001AC  26D9               	addwf	fsr2l,f,c
  6416  0001AE  0100               	movlb	0	; () banked
  6417  0001B0  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6418  0001B2  22DA               	addwfc	fsr2h,f,c
  6419  0001B4  2ADF               	incf	indf2,f,c
  6420                           
  6421                           ;my_i2c.c: 111: ic_ptr->error_code = 0x6;
  6422  0001B6  0100               	movlb	0	; () banked
  6423  0001B8  EE20 F01D          	lfsr	2,29
  6424  0001BC  0100               	movlb	0	; () banked
  6425  0001BE  51BA               	movf	_ic_ptr& (0+255),w,b
  6426  0001C0  26D9               	addwf	fsr2l,f,c
  6427  0001C2  0100               	movlb	0	; () banked
  6428  0001C4  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6429  0001C6  22DA               	addwfc	fsr2h,f,c
  6430  0001C8  0E06               	movlw	6
  6431  0001CA  6EDF               	movwf	indf2,c
  6432                           
  6433                           ; BSR set to: 0
  6434  0001CC  D138               	goto	L6
  6435  0001CE                     i2l2432:
  6436                           
  6437                           ; BSR set to: 0
  6438  0001CE  0100               	movlb	0	; () banked
  6439  0001D0  5187               	movf	i2c_int_handler@data_read& (0+255),w,b
  6440  0001D2  B4D8               	btfsc	status,2,c
  6441  0001D4  D155               	goto	i2l277
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;my_i2c.c: 116: ic_ptr->event_count++;
  6445  0001D6  0100               	movlb	0	; () banked
  6446  0001D8  EE20 F01B          	lfsr	2,27
  6447  0001DC  0100               	movlb	0	; () banked
  6448  0001DE  51BA               	movf	_ic_ptr& (0+255),w,b
  6449  0001E0  26D9               	addwf	fsr2l,f,c
  6450  0001E2  0100               	movlb	0	; () banked
  6451  0001E4  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6452  0001E6  22DA               	addwfc	fsr2h,f,c
  6453  0001E8  2ADF               	incf	indf2,f,c
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;my_i2c.c: 117: if (SSPSTATbits.D_A == 0) {
  6457  0001EA  BAC7               	btfsc	4039,5,c	;volatile
  6458  0001EC  D019               	goto	i2l2448
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;my_i2c.c: 118: if (SSPSTATbits.R_W == 0) {
  6462  0001EE  B4C7               	btfsc	4039,2,c	;volatile
  6463  0001F0  D00B               	goto	i2l2442
  6464                           
  6465                           ; BSR set to: 0
  6466                           ;my_i2c.c: 119: ic_ptr->status = 0x7;
  6467  0001F2  0100               	movlb	0	; () banked
  6468  0001F4  EE20 F01C          	lfsr	2,28
  6469  0001F8  0100               	movlb	0	; () banked
  6470  0001FA  51BA               	movf	_ic_ptr& (0+255),w,b
  6471  0001FC  26D9               	addwf	fsr2l,f,c
  6472  0001FE  0100               	movlb	0	; () banked
  6473  000200  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6474  000202  22DA               	addwfc	fsr2h,f,c
  6475  000204  0E07               	movlw	7
  6476  000206  D071               	goto	L4
  6477  000208                     i2l2442:
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;my_i2c.c: 121: ic_ptr->status = 0x8;
  6481  000208  0100               	movlb	0	; () banked
  6482  00020A  EE20 F01C          	lfsr	2,28
  6483  00020E  0100               	movlb	0	; () banked
  6484  000210  51BA               	movf	_ic_ptr& (0+255),w,b
  6485  000212  26D9               	addwf	fsr2l,f,c
  6486  000214  0100               	movlb	0	; () banked
  6487  000216  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6488  000218  22DA               	addwfc	fsr2h,f,c
  6489  00021A  0E08               	movlw	8
  6490  00021C  6EDF               	movwf	indf2,c
  6491  00021E  D108               	goto	L3
  6492  000220                     i2l2448:
  6493                           
  6494                           ; BSR set to: 0
  6495                           ;my_i2c.c: 127: ic_ptr->error_count++;
  6496  000220  0100               	movlb	0	; () banked
  6497  000222  EE20 F01E          	lfsr	2,30
  6498  000226  0100               	movlb	0	; () banked
  6499  000228  51BA               	movf	_ic_ptr& (0+255),w,b
  6500  00022A  26D9               	addwf	fsr2l,f,c
  6501  00022C  0100               	movlb	0	; () banked
  6502  00022E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6503  000230  22DA               	addwfc	fsr2h,f,c
  6504  000232  2ADF               	incf	indf2,f,c
  6505                           
  6506                           ;my_i2c.c: 128: ic_ptr->status = 0x5;
  6507  000234  0100               	movlb	0	; () banked
  6508  000236  EE20 F01C          	lfsr	2,28
  6509  00023A  0100               	movlb	0	; () banked
  6510  00023C  51BA               	movf	_ic_ptr& (0+255),w,b
  6511  00023E  26D9               	addwf	fsr2l,f,c
  6512  000240  0100               	movlb	0	; () banked
  6513  000242  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6514  000244  22DA               	addwfc	fsr2h,f,c
  6515  000246  0E05               	movlw	5
  6516  000248  6EDF               	movwf	indf2,c
  6517                           
  6518                           ;my_i2c.c: 129: ic_ptr->error_code = 0x6;
  6519  00024A  0100               	movlb	0	; () banked
  6520  00024C  EE20 F01D          	lfsr	2,29
  6521  000250  0100               	movlb	0	; () banked
  6522  000252  51BA               	movf	_ic_ptr& (0+255),w,b
  6523  000254  26D9               	addwf	fsr2l,f,c
  6524  000256  0100               	movlb	0	; () banked
  6525  000258  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6526  00025A  22DA               	addwfc	fsr2h,f,c
  6527  00025C  0E06               	movlw	6
  6528  00025E  D045               	goto	L4
  6529  000260                     i2l2450:
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;my_i2c.c: 135: {
  6533                           ;my_i2c.c: 136: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  6534  000260  0100               	movlb	0	; () banked
  6535  000262  EE20 F03A          	lfsr	2,58
  6536  000266  0100               	movlb	0	; () banked
  6537  000268  51BA               	movf	_ic_ptr& (0+255),w,b
  6538  00026A  26D9               	addwf	fsr2l,f,c
  6539  00026C  0100               	movlb	0	; () banked
  6540  00026E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6541  000270  22DA               	addwfc	fsr2h,f,c
  6542  000272  50DF               	movf	indf2,w,c
  6543  000274  0100               	movlb	0	; () banked
  6544  000276  6F7D               	movwf	??_i2c_int_handler& (0+255),b
  6545  000278  0100               	movlb	0	; () banked
  6546  00027A  EE20 F039          	lfsr	2,57
  6547  00027E  0100               	movlb	0	; () banked
  6548  000280  51BA               	movf	_ic_ptr& (0+255),w,b
  6549  000282  26D9               	addwf	fsr2l,f,c
  6550  000284  0100               	movlb	0	; () banked
  6551  000286  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6552  000288  22DA               	addwfc	fsr2h,f,c
  6553  00028A  50DF               	movf	indf2,w,c
  6554  00028C  0100               	movlb	0	; () banked
  6555  00028E  5D7D               	subwf	??_i2c_int_handler& (0+255),w,b
  6556  000290  B0D8               	btfsc	status,0,c
  6557  000292  D0D5               	goto	L6
  6558                           
  6559                           ; BSR set to: 0
  6560                           ;my_i2c.c: 137: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  6561  000294  0100               	movlb	0	; () banked
  6562  000296  EE20 F03A          	lfsr	2,58
  6563  00029A  0100               	movlb	0	; () banked
  6564  00029C  51BA               	movf	_ic_ptr& (0+255),w,b
  6565  00029E  26D9               	addwf	fsr2l,f,c
  6566  0002A0  0100               	movlb	0	; () banked
  6567  0002A2  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6568  0002A4  22DA               	addwfc	fsr2h,f,c
  6569  0002A6  50DF               	movf	indf2,w,c
  6570  0002A8  0100               	movlb	0	; () banked
  6571  0002AA  6F7D               	movwf	??_i2c_int_handler& (0+255),b
  6572  0002AC  0100               	movlb	0	; () banked
  6573  0002AE  517D               	movf	??_i2c_int_handler& (0+255),w,b
  6574  0002B0  0D01               	mullw	1
  6575  0002B2  0E1F               	movlw	31
  6576  0002B4  26F3               	addwf	prodl,f,c
  6577  0002B6  0E00               	movlw	0
  6578  0002B8  22F4               	addwfc	prodh,f,c
  6579  0002BA  50F3               	movf	prodl,w,c
  6580  0002BC  0100               	movlb	0	; () banked
  6581  0002BE  25BA               	addwf	_ic_ptr& (0+255),w,b
  6582  0002C0  6ED9               	movwf	fsr2l,c
  6583  0002C2  50F4               	movf	prodh,w,c
  6584  0002C4  0100               	movlb	0	; () banked
  6585  0002C6  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6586  0002C8  6EDA               	movwf	fsr2h,c
  6587  0002CA  50DF               	movf	indf2,w,c
  6588  0002CC  6EC9               	movwf	4041,c	;volatile
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;my_i2c.c: 138: ic_ptr->outbufind++;
  6592  0002CE  0100               	movlb	0	; () banked
  6593  0002D0  EE20 F03A          	lfsr	2,58
  6594  0002D4  0100               	movlb	0	; () banked
  6595  0002D6  51BA               	movf	_ic_ptr& (0+255),w,b
  6596  0002D8  26D9               	addwf	fsr2l,f,c
  6597  0002DA  0100               	movlb	0	; () banked
  6598  0002DC  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6599  0002DE  22DA               	addwfc	fsr2h,f,c
  6600  0002E0  2ADF               	incf	indf2,f,c
  6601                           
  6602                           ; BSR set to: 0
  6603                           ;my_i2c.c: 139: data_written = 1;
  6604  0002E2  0E01               	movlw	1
  6605  0002E4  0100               	movlb	0	; () banked
  6606  0002E6  6F82               	movwf	i2c_int_handler@data_written& (0+255),b
  6607                           
  6608                           ;my_i2c.c: 140: } else {
  6609  0002E8  D0CB               	goto	i2l277
  6610  0002EA                     L4:
  6611  0002EA  6EDF               	movwf	indf2,c
  6612  0002EC  D0C9               	goto	i2l277
  6613  0002EE                     i2l297:
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;my_i2c.c: 147: {
  6617                           ;my_i2c.c: 149: if (SSPSTATbits.P == 1) {
  6618  0002EE  A8C7               	btfss	4039,4,c	;volatile
  6619  0002F0  D05A               	goto	i2l2478
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;my_i2c.c: 151: ic_ptr->event_count++;
  6623  0002F2  0100               	movlb	0	; () banked
  6624  0002F4  EE20 F01B          	lfsr	2,27
  6625  0002F8  0100               	movlb	0	; () banked
  6626  0002FA  51BA               	movf	_ic_ptr& (0+255),w,b
  6627  0002FC  26D9               	addwf	fsr2l,f,c
  6628  0002FE  0100               	movlb	0	; () banked
  6629  000300  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6630  000302  22DA               	addwfc	fsr2h,f,c
  6631  000304  2ADF               	incf	indf2,f,c
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;my_i2c.c: 152: if (data_read) {
  6635  000306  0100               	movlb	0	; () banked
  6636  000308  5187               	movf	i2c_int_handler@data_read& (0+255),w,b
  6637  00030A  B4D8               	btfsc	status,2,c
  6638  00030C  D048               	goto	i2l2474
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;my_i2c.c: 153: if (SSPSTATbits.D_A == 1) {
  6642  00030E  AAC7               	btfss	4039,5,c	;volatile
  6643  000310  D025               	goto	i2l2472
  6644                           
  6645                           ; BSR set to: 0
  6646                           ;my_i2c.c: 154: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6647  000312  0100               	movlb	0	; () banked
  6648  000314  EE20 F01A          	lfsr	2,26
  6649  000318  0100               	movlb	0	; () banked
  6650  00031A  51BA               	movf	_ic_ptr& (0+255),w,b
  6651  00031C  26D9               	addwf	fsr2l,f,c
  6652  00031E  0100               	movlb	0	; () banked
  6653  000320  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6654  000322  22DA               	addwfc	fsr2h,f,c
  6655  000324  50DF               	movf	indf2,w,c
  6656  000326  0100               	movlb	0	; () banked
  6657  000328  6F7D               	movwf	??_i2c_int_handler& (0+255),b
  6658  00032A  0100               	movlb	0	; () banked
  6659  00032C  517D               	movf	??_i2c_int_handler& (0+255),w,b
  6660  00032E  0D01               	mullw	1
  6661  000330  50F3               	movf	prodl,w,c
  6662  000332  0100               	movlb	0	; () banked
  6663  000334  25BA               	addwf	_ic_ptr& (0+255),w,b
  6664  000336  6ED9               	movwf	fsr2l,c
  6665  000338  50F4               	movf	prodh,w,c
  6666  00033A  0100               	movlb	0	; () banked
  6667  00033C  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6668  00033E  6EDA               	movwf	fsr2h,c
  6669  000340  0100               	movlb	0	; () banked
  6670  000342  C084  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;my_i2c.c: 155: ic_ptr->buflen++;
  6674  000346  0100               	movlb	0	; () banked
  6675  000348  EE20 F01A          	lfsr	2,26
  6676  00034C  0100               	movlb	0	; () banked
  6677  00034E  51BA               	movf	_ic_ptr& (0+255),w,b
  6678  000350  26D9               	addwf	fsr2l,f,c
  6679  000352  0100               	movlb	0	; () banked
  6680  000354  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6681  000356  22DA               	addwfc	fsr2h,f,c
  6682  000358  2ADF               	incf	indf2,f,c
  6683  00035A  D021               	goto	i2l2474
  6684  00035C                     i2l2472:
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;my_i2c.c: 158: ic_ptr->error_count++;
  6688  00035C  0100               	movlb	0	; () banked
  6689  00035E  EE20 F01E          	lfsr	2,30
  6690  000362  0100               	movlb	0	; () banked
  6691  000364  51BA               	movf	_ic_ptr& (0+255),w,b
  6692  000366  26D9               	addwf	fsr2l,f,c
  6693  000368  0100               	movlb	0	; () banked
  6694  00036A  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6695  00036C  22DA               	addwfc	fsr2h,f,c
  6696  00036E  2ADF               	incf	indf2,f,c
  6697                           
  6698                           ;my_i2c.c: 159: ic_ptr->error_code = 0x6;
  6699  000370  0100               	movlb	0	; () banked
  6700  000372  EE20 F01D          	lfsr	2,29
  6701  000376  0100               	movlb	0	; () banked
  6702  000378  51BA               	movf	_ic_ptr& (0+255),w,b
  6703  00037A  26D9               	addwf	fsr2l,f,c
  6704  00037C  0100               	movlb	0	; () banked
  6705  00037E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6706  000380  22DA               	addwfc	fsr2h,f,c
  6707  000382  0E06               	movlw	6
  6708  000384  6EDF               	movwf	indf2,c
  6709                           
  6710                           ;my_i2c.c: 160: ic_ptr->status = 0x5;
  6711  000386  0100               	movlb	0	; () banked
  6712  000388  EE20 F01C          	lfsr	2,28
  6713  00038C  0100               	movlb	0	; () banked
  6714  00038E  51BA               	movf	_ic_ptr& (0+255),w,b
  6715  000390  26D9               	addwf	fsr2l,f,c
  6716  000392  0100               	movlb	0	; () banked
  6717  000394  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6718  000396  22DA               	addwfc	fsr2h,f,c
  6719  000398  0E05               	movlw	5
  6720  00039A  6EDF               	movwf	indf2,c
  6721  00039C  D050               	goto	L6
  6722  00039E                     i2l2474:
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;my_i2c.c: 163: msg_ready = 1;
  6726  00039E  0E01               	movlw	1
  6727  0003A0  0100               	movlb	0	; () banked
  6728  0003A2  6F86               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6729                           
  6730                           ; BSR set to: 0
  6731  0003A4  D04C               	goto	L6
  6732  0003A6                     i2l2478:
  6733                           
  6734                           ; BSR set to: 0
  6735  0003A6  0100               	movlb	0	; () banked
  6736  0003A8  5187               	movf	i2c_int_handler@data_read& (0+255),w,b
  6737  0003AA  B4D8               	btfsc	status,2,c
  6738  0003AC  D069               	goto	i2l277
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;my_i2c.c: 167: ic_ptr->event_count++;
  6742  0003AE  0100               	movlb	0	; () banked
  6743  0003B0  EE20 F01B          	lfsr	2,27
  6744  0003B4  0100               	movlb	0	; () banked
  6745  0003B6  51BA               	movf	_ic_ptr& (0+255),w,b
  6746  0003B8  26D9               	addwf	fsr2l,f,c
  6747  0003BA  0100               	movlb	0	; () banked
  6748  0003BC  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6749  0003BE  22DA               	addwfc	fsr2h,f,c
  6750  0003C0  2ADF               	incf	indf2,f,c
  6751                           
  6752                           ; BSR set to: 0
  6753                           ;my_i2c.c: 168: if (SSPSTATbits.D_A == 1) {
  6754  0003C2  AAC7               	btfss	4039,5,c	;volatile
  6755  0003C4  D025               	goto	i2l305
  6756                           
  6757                           ; BSR set to: 0
  6758                           ;my_i2c.c: 169: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  6759  0003C6  0100               	movlb	0	; () banked
  6760  0003C8  EE20 F01A          	lfsr	2,26
  6761  0003CC  0100               	movlb	0	; () banked
  6762  0003CE  51BA               	movf	_ic_ptr& (0+255),w,b
  6763  0003D0  26D9               	addwf	fsr2l,f,c
  6764  0003D2  0100               	movlb	0	; () banked
  6765  0003D4  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6766  0003D6  22DA               	addwfc	fsr2h,f,c
  6767  0003D8  50DF               	movf	indf2,w,c
  6768  0003DA  0100               	movlb	0	; () banked
  6769  0003DC  6F7D               	movwf	??_i2c_int_handler& (0+255),b
  6770  0003DE  0100               	movlb	0	; () banked
  6771  0003E0  517D               	movf	??_i2c_int_handler& (0+255),w,b
  6772  0003E2  0D01               	mullw	1
  6773  0003E4  50F3               	movf	prodl,w,c
  6774  0003E6  0100               	movlb	0	; () banked
  6775  0003E8  25BA               	addwf	_ic_ptr& (0+255),w,b
  6776  0003EA  6ED9               	movwf	fsr2l,c
  6777  0003EC  50F4               	movf	prodh,w,c
  6778  0003EE  0100               	movlb	0	; () banked
  6779  0003F0  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  6780  0003F2  6EDA               	movwf	fsr2h,c
  6781  0003F4  0100               	movlb	0	; () banked
  6782  0003F6  C084  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;my_i2c.c: 170: ic_ptr->buflen++;
  6786  0003FA  0100               	movlb	0	; () banked
  6787  0003FC  EE20 F01A          	lfsr	2,26
  6788  000400  0100               	movlb	0	; () banked
  6789  000402  51BA               	movf	_ic_ptr& (0+255),w,b
  6790  000404  26D9               	addwf	fsr2l,f,c
  6791  000406  0100               	movlb	0	; () banked
  6792  000408  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6793  00040A  22DA               	addwfc	fsr2h,f,c
  6794  00040C  2ADF               	incf	indf2,f,c
  6795                           
  6796                           ;my_i2c.c: 171: } else {
  6797  00040E  D038               	goto	i2l277
  6798  000410                     i2l305:
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;my_i2c.c: 172: if (SSPSTATbits.R_W == 1) {
  6802  000410  A4C7               	btfss	4039,2,c	;volatile
  6803  000412  D6C7               	goto	i2l2430
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;my_i2c.c: 173: ic_ptr->status = 0x8;
  6807  000414  0100               	movlb	0	; () banked
  6808  000416  EE20 F01C          	lfsr	2,28
  6809  00041A  0100               	movlb	0	; () banked
  6810  00041C  51BA               	movf	_ic_ptr& (0+255),w,b
  6811  00041E  26D9               	addwf	fsr2l,f,c
  6812  000420  0100               	movlb	0	; () banked
  6813  000422  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6814  000424  22DA               	addwfc	fsr2h,f,c
  6815  000426  0E08               	movlw	8
  6816  000428  6EDF               	movwf	indf2,c
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;my_i2c.c: 174: msg_ready = 1;
  6820  00042A  0E01               	movlw	1
  6821  00042C  0100               	movlb	0	; () banked
  6822  00042E  6F86               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6823  000430                     L3:
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;my_i2c.c: 175: msg_to_send = 1;
  6827  000430  0E01               	movlw	1
  6828  000432  0100               	movlb	0	; () banked
  6829  000434  6F85               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;my_i2c.c: 177: data_read = 0;
  6833  000436  0E00               	movlw	0
  6834  000438  0100               	movlb	0	; () banked
  6835  00043A  6F87               	movwf	i2c_int_handler@data_read& (0+255),b
  6836                           
  6837                           ;my_i2c.c: 178: } else {
  6838  00043C  D021               	goto	i2l277
  6839  00043E                     L6:
  6840                           
  6841                           ;my_i2c.c: 181: ic_ptr->status = 0x5;
  6842  00043E  0100               	movlb	0	; () banked
  6843  000440  EE20 F01C          	lfsr	2,28
  6844  000444  0100               	movlb	0	; () banked
  6845  000446  51BA               	movf	_ic_ptr& (0+255),w,b
  6846  000448  26D9               	addwf	fsr2l,f,c
  6847  00044A  0100               	movlb	0	; () banked
  6848  00044C  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6849  00044E  22DA               	addwfc	fsr2h,f,c
  6850  000450  0E05               	movlw	5
  6851  000452  D74B               	goto	L4
  6852  000454                     i2l2500:
  6853                           
  6854                           ; BSR set to: 0
  6855  000454  0100               	movlb	0	; () banked
  6856  000456  EE20 F01C          	lfsr	2,28
  6857  00045A  0100               	movlb	0	; () banked
  6858  00045C  51BA               	movf	_ic_ptr& (0+255),w,b
  6859  00045E  26D9               	addwf	fsr2l,f,c
  6860  000460  0100               	movlb	0	; () banked
  6861  000462  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6862  000464  22DA               	addwfc	fsr2h,f,c
  6863  000466  50DF               	movf	indf2,w,c
  6864                           
  6865                           ; Switch size 1, requested type "space"
  6866                           ; Number of cases is 4, Range of values is 5 to 8
  6867                           ; switch strategies available:
  6868                           ; Name         Instructions Cycles
  6869                           ; simple_byte           13     7 (average)
  6870                           ;	Chosen strategy is simple_byte
  6871  000468  0A05               	xorlw	5	; case 5
  6872  00046A  B4D8               	btfsc	status,2,c
  6873  00046C  D66B               	goto	i2l279
  6874  00046E  0A03               	xorlw	3	; case 6
  6875  000470  B4D8               	btfsc	status,2,c
  6876  000472  D681               	goto	i2l283
  6877  000474  0A01               	xorlw	1	; case 7
  6878  000476  B4D8               	btfsc	status,2,c
  6879  000478  D73A               	goto	i2l297
  6880  00047A  0A0F               	xorlw	15	; case 8
  6881  00047C  B4D8               	btfsc	status,2,c
  6882  00047E  D6F0               	goto	i2l2450
  6883  000480                     i2l277:
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;my_i2c.c: 188: }
  6887                           ;my_i2c.c: 191: if (data_read || data_written) {
  6888  000480  0100               	movlb	0	; () banked
  6889  000482  6787               	tstfsz	i2c_int_handler@data_read& (0+255),b
  6890  000484  D004               	goto	i2l311
  6891                           
  6892                           ; BSR set to: 0
  6893  000486  0100               	movlb	0	; () banked
  6894  000488  5182               	movf	i2c_int_handler@data_written& (0+255),w,b
  6895  00048A  B4D8               	btfsc	status,2,c
  6896  00048C  D002               	goto	i2l2506
  6897  00048E                     i2l311:
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;my_i2c.c: 193: if (SSPCON1bits.CKP == 0) {
  6901  00048E  A8C6               	btfss	4038,4,c	;volatile
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;my_i2c.c: 194: SSPCON1bits.CKP = 1;
  6905  000490  88C6               	bsf	4038,4,c	;volatile
  6906  000492                     i2l2506:
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;my_i2c.c: 195: }
  6910                           ;my_i2c.c: 196: }
  6911                           ;my_i2c.c: 199: if ((ic_ptr->buflen > 26 - 2) && (!msg_ready)) {
  6912  000492  0100               	movlb	0	; () banked
  6913  000494  EE20 F01A          	lfsr	2,26
  6914  000498  0100               	movlb	0	; () banked
  6915  00049A  51BA               	movf	_ic_ptr& (0+255),w,b
  6916  00049C  26D9               	addwf	fsr2l,f,c
  6917  00049E  0100               	movlb	0	; () banked
  6918  0004A0  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6919  0004A2  22DA               	addwfc	fsr2h,f,c
  6920  0004A4  0E18               	movlw	24
  6921  0004A6  64DF               	cpfsgt	indf2,c
  6922  0004A8  D023               	goto	i2l2512
  6923                           
  6924                           ; BSR set to: 0
  6925  0004AA  0100               	movlb	0	; () banked
  6926  0004AC  6786               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  6927  0004AE  D020               	goto	i2l2512
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;my_i2c.c: 200: ic_ptr->status = 0x5;
  6931  0004B0  0100               	movlb	0	; () banked
  6932  0004B2  EE20 F01C          	lfsr	2,28
  6933  0004B6  0100               	movlb	0	; () banked
  6934  0004B8  51BA               	movf	_ic_ptr& (0+255),w,b
  6935  0004BA  26D9               	addwf	fsr2l,f,c
  6936  0004BC  0100               	movlb	0	; () banked
  6937  0004BE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6938  0004C0  22DA               	addwfc	fsr2h,f,c
  6939  0004C2  0E05               	movlw	5
  6940  0004C4  6EDF               	movwf	indf2,c
  6941                           
  6942                           ;my_i2c.c: 201: ic_ptr->error_count++;
  6943  0004C6  0100               	movlb	0	; () banked
  6944  0004C8  EE20 F01E          	lfsr	2,30
  6945  0004CC  0100               	movlb	0	; () banked
  6946  0004CE  51BA               	movf	_ic_ptr& (0+255),w,b
  6947  0004D0  26D9               	addwf	fsr2l,f,c
  6948  0004D2  0100               	movlb	0	; () banked
  6949  0004D4  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6950  0004D6  22DA               	addwfc	fsr2h,f,c
  6951  0004D8  2ADF               	incf	indf2,f,c
  6952                           
  6953                           ;my_i2c.c: 202: ic_ptr->error_code = 0x7;
  6954  0004DA  0100               	movlb	0	; () banked
  6955  0004DC  EE20 F01D          	lfsr	2,29
  6956  0004E0  0100               	movlb	0	; () banked
  6957  0004E2  51BA               	movf	_ic_ptr& (0+255),w,b
  6958  0004E4  26D9               	addwf	fsr2l,f,c
  6959  0004E6  0100               	movlb	0	; () banked
  6960  0004E8  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6961  0004EA  22DA               	addwfc	fsr2h,f,c
  6962  0004EC  0E07               	movlw	7
  6963  0004EE  6EDF               	movwf	indf2,c
  6964  0004F0                     i2l2512:
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;my_i2c.c: 203: }
  6968                           ;my_i2c.c: 205: if (msg_ready) {
  6969  0004F0  0100               	movlb	0	; () banked
  6970  0004F2  5186               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  6971  0004F4  B4D8               	btfsc	status,2,c
  6972  0004F6  D03F               	goto	i2l2520
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;my_i2c.c: 206: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  6976  0004F8  0100               	movlb	0	; () banked
  6977  0004FA  EE20 F01B          	lfsr	2,27
  6978  0004FE  0100               	movlb	0	; () banked
  6979  000500  51BA               	movf	_ic_ptr& (0+255),w,b
  6980  000502  26D9               	addwf	fsr2l,f,c
  6981  000504  0100               	movlb	0	; () banked
  6982  000506  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6983  000508  22DA               	addwfc	fsr2h,f,c
  6984  00050A  0100               	movlb	0	; () banked
  6985  00050C  EE10 F01A          	lfsr	1,26
  6986  000510  0100               	movlb	0	; () banked
  6987  000512  51BA               	movf	_ic_ptr& (0+255),w,b
  6988  000514  26E1               	addwf	fsr1l,f,c
  6989  000516  0100               	movlb	0	; () banked
  6990  000518  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  6991  00051A  22E2               	addwfc	fsr1h,f,c
  6992  00051C  50E7               	movf	indf1,w,c
  6993  00051E  0100               	movlb	0	; () banked
  6994  000520  6F7D               	movwf	??_i2c_int_handler& (0+255),b
  6995  000522  0100               	movlb	0	; () banked
  6996  000524  517D               	movf	??_i2c_int_handler& (0+255),w,b
  6997  000526  0D01               	mullw	1
  6998  000528  50F3               	movf	prodl,w,c
  6999  00052A  0100               	movlb	0	; () banked
  7000  00052C  25BA               	addwf	_ic_ptr& (0+255),w,b
  7001  00052E  6EE1               	movwf	fsr1l,c
  7002  000530  50F4               	movf	prodh,w,c
  7003  000532  0100               	movlb	0	; () banked
  7004  000534  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7005  000536  6EE2               	movwf	fsr1h,c
  7006  000538  CFDF FFE7          	movff	indf2,indf1
  7007                           
  7008                           ; BSR set to: 0
  7009                           ;my_i2c.c: 207: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7010  00053C  0E28               	movlw	40
  7011  00053E  0100               	movlb	0	; () banked
  7012  000540  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7013  000542  0100               	movlb	0	; () banked
  7014  000544  C0BB  F078         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7015  000548  0100               	movlb	0	; () banked
  7016  00054A  C0BA  F077         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7017  00054E  0100               	movlb	0	; () banked
  7018  000550  EE20 F01A          	lfsr	2,26
  7019  000554  0100               	movlb	0	; () banked
  7020  000556  51BA               	movf	_ic_ptr& (0+255),w,b
  7021  000558  26D9               	addwf	fsr2l,f,c
  7022  00055A  0100               	movlb	0	; () banked
  7023  00055C  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7024  00055E  22DA               	addwfc	fsr2h,f,c
  7025  000560  50DF               	movf	indf2,w,c
  7026  000562  0100               	movlb	0	; () banked
  7027  000564  6F7D               	movwf	??_i2c_int_handler& (0+255),b
  7028  000566  0100               	movlb	0	; () banked
  7029  000568  297D               	incf	??_i2c_int_handler& (0+255),w,b
  7030  00056A  ECCE  F00D         	call	_ToMainHigh_sendmsg
  7031                           
  7032                           ;my_i2c.c: 208: ic_ptr->buflen = 0;
  7033  00056E  0100               	movlb	0	; () banked
  7034  000570  EE20 F01A          	lfsr	2,26
  7035  000574  D041               	goto	L5
  7036  000576                     i2l2520:
  7037                           
  7038                           ; BSR set to: 0
  7039  000576  0100               	movlb	0	; () banked
  7040  000578  EE20 F01E          	lfsr	2,30
  7041  00057C  0100               	movlb	0	; () banked
  7042  00057E  51BA               	movf	_ic_ptr& (0+255),w,b
  7043  000580  26D9               	addwf	fsr2l,f,c
  7044  000582  0100               	movlb	0	; () banked
  7045  000584  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7046  000586  22DA               	addwfc	fsr2h,f,c
  7047  000588  50DF               	movf	indf2,w,c
  7048  00058A  B4D8               	btfsc	status,2,c
  7049  00058C  D03D               	goto	i2l2528
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;my_i2c.c: 210: error_buf[0] = ic_ptr->error_count;
  7053  00058E  0100               	movlb	0	; () banked
  7054  000590  EE20 F01E          	lfsr	2,30
  7055  000594  0100               	movlb	0	; () banked
  7056  000596  51BA               	movf	_ic_ptr& (0+255),w,b
  7057  000598  26D9               	addwf	fsr2l,f,c
  7058  00059A  0100               	movlb	0	; () banked
  7059  00059C  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7060  00059E  22DA               	addwfc	fsr2h,f,c
  7061  0005A0  50DF               	movf	indf2,w,c
  7062  0005A2  0100               	movlb	0	; () banked
  7063  0005A4  6F7E               	movwf	i2c_int_handler@error_buf& (0+255),b
  7064                           
  7065                           ;my_i2c.c: 211: error_buf[1] = ic_ptr->error_code;
  7066  0005A6  0100               	movlb	0	; () banked
  7067  0005A8  EE20 F01D          	lfsr	2,29
  7068  0005AC  0100               	movlb	0	; () banked
  7069  0005AE  51BA               	movf	_ic_ptr& (0+255),w,b
  7070  0005B0  26D9               	addwf	fsr2l,f,c
  7071  0005B2  0100               	movlb	0	; () banked
  7072  0005B4  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7073  0005B6  22DA               	addwfc	fsr2h,f,c
  7074  0005B8  50DF               	movf	indf2,w,c
  7075  0005BA  0100               	movlb	0	; () banked
  7076  0005BC  6F7F               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7077                           
  7078                           ;my_i2c.c: 212: error_buf[2] = ic_ptr->event_count;
  7079  0005BE  0100               	movlb	0	; () banked
  7080  0005C0  EE20 F01B          	lfsr	2,27
  7081  0005C4  0100               	movlb	0	; () banked
  7082  0005C6  51BA               	movf	_ic_ptr& (0+255),w,b
  7083  0005C8  26D9               	addwf	fsr2l,f,c
  7084  0005CA  0100               	movlb	0	; () banked
  7085  0005CC  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7086  0005CE  22DA               	addwfc	fsr2h,f,c
  7087  0005D0  50DF               	movf	indf2,w,c
  7088  0005D2  0100               	movlb	0	; () banked
  7089  0005D4  6F80               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;my_i2c.c: 213: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7093  0005D6  0E29               	movlw	41
  7094  0005D8  0100               	movlb	0	; () banked
  7095  0005DA  6F76               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7096  0005DC  0100               	movlb	0	; () banked
  7097  0005DE  0E00               	movlw	high i2c_int_handler@error_buf
  7098  0005E0  0100               	movlb	0	; () banked
  7099  0005E2  6F78               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7100  0005E4  0100               	movlb	0	; () banked
  7101  0005E6  0E7E               	movlw	low i2c_int_handler@error_buf
  7102  0005E8  0100               	movlb	0	; () banked
  7103  0005EA  6F77               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7104  0005EC  0E03               	movlw	3
  7105  0005EE  ECCE  F00D         	call	_ToMainHigh_sendmsg
  7106                           
  7107                           ;my_i2c.c: 214: ic_ptr->error_count = 0;
  7108  0005F2  0100               	movlb	0	; () banked
  7109  0005F4  EE20 F01E          	lfsr	2,30
  7110  0005F8                     L5:
  7111  0005F8  0100               	movlb	0	; () banked
  7112  0005FA  51BA               	movf	_ic_ptr& (0+255),w,b
  7113  0005FC  26D9               	addwf	fsr2l,f,c
  7114  0005FE  0100               	movlb	0	; () banked
  7115  000600  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7116  000602  22DA               	addwfc	fsr2h,f,c
  7117  000604  0E00               	movlw	0
  7118  000606  6EDF               	movwf	indf2,c
  7119  000608                     i2l2528:
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;my_i2c.c: 215: }
  7123                           ;my_i2c.c: 216: if (msg_to_send) {
  7124  000608  0100               	movlb	0	; () banked
  7125  00060A  5185               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7126  00060C  B4D8               	btfsc	status,2,c
  7127  00060E  0012               	return	
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;my_i2c.c: 217: signed char send;
  7131                           ;my_i2c.c: 219: send = SensorData_recvmsg(ic_ptr->outbuflen, (void *) 42, (void *) ic_pt
      +                          r->outbuffer);
  7132  000610  0E00               	movlw	0
  7133  000612  0100               	movlb	0	; () banked
  7134  000614  6F79               	movwf	(SensorData_recvmsg@msgtype+1)& (0+255),b
  7135  000616  0E2A               	movlw	42
  7136  000618  0100               	movlb	0	; () banked
  7137  00061A  6F78               	movwf	SensorData_recvmsg@msgtype& (0+255),b
  7138  00061C  0E1F               	movlw	31
  7139  00061E  0100               	movlb	0	; () banked
  7140  000620  25BA               	addwf	_ic_ptr& (0+255),w,b
  7141  000622  0100               	movlb	0	; () banked
  7142  000624  6F7A               	movwf	SensorData_recvmsg@data& (0+255),b
  7143  000626  0E00               	movlw	0
  7144  000628  0100               	movlb	0	; () banked
  7145  00062A  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7146  00062C  0100               	movlb	0	; () banked
  7147  00062E  6F7B               	movwf	(SensorData_recvmsg@data+1)& (0+255),b
  7148  000630  0100               	movlb	0	; () banked
  7149  000632  EE20 F039          	lfsr	2,57
  7150  000636  0100               	movlb	0	; () banked
  7151  000638  51BA               	movf	_ic_ptr& (0+255),w,b
  7152  00063A  26D9               	addwf	fsr2l,f,c
  7153  00063C  0100               	movlb	0	; () banked
  7154  00063E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7155  000640  22DA               	addwfc	fsr2h,f,c
  7156  000642  50DF               	movf	indf2,w,c
  7157  000644  EC39  F00D         	call	_SensorData_recvmsg
  7158  000648  0100               	movlb	0	; () banked
  7159  00064A  6F81               	movwf	i2c_int_handler@send& (0+255),b
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;my_i2c.c: 222: if (send < 0) {
  7163  00064C  0100               	movlb	0	; () banked
  7164  00064E  AF81               	btfss	i2c_int_handler@send& (0+255),7,b
  7165  000650  D0FD               	goto	i2l2536
  7166                           
  7167                           ; BSR set to: 0
  7168                           ;my_i2c.c: 223: ic_ptr->outbuffer[0] = 0x0;
  7169  000652  0100               	movlb	0	; () banked
  7170  000654  EE20 F01F          	lfsr	2,31
  7171  000658  0100               	movlb	0	; () banked
  7172  00065A  51BA               	movf	_ic_ptr& (0+255),w,b
  7173  00065C  26D9               	addwf	fsr2l,f,c
  7174  00065E  0100               	movlb	0	; () banked
  7175  000660  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7176  000662  22DA               	addwfc	fsr2h,f,c
  7177  000664  0E00               	movlw	0
  7178  000666  6EDF               	movwf	indf2,c
  7179                           
  7180                           ;my_i2c.c: 224: ic_ptr->outbuffer[1] = 0x0;
  7181  000668  0100               	movlb	0	; () banked
  7182  00066A  EE20 F020          	lfsr	2,32
  7183  00066E  0100               	movlb	0	; () banked
  7184  000670  51BA               	movf	_ic_ptr& (0+255),w,b
  7185  000672  26D9               	addwf	fsr2l,f,c
  7186  000674  0100               	movlb	0	; () banked
  7187  000676  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7188  000678  22DA               	addwfc	fsr2h,f,c
  7189  00067A  0E00               	movlw	0
  7190  00067C  6EDF               	movwf	indf2,c
  7191                           
  7192                           ;my_i2c.c: 225: ic_ptr->outbuffer[2] = 0x0;
  7193  00067E  0100               	movlb	0	; () banked
  7194  000680  EE20 F021          	lfsr	2,33
  7195  000684  0100               	movlb	0	; () banked
  7196  000686  51BA               	movf	_ic_ptr& (0+255),w,b
  7197  000688  26D9               	addwf	fsr2l,f,c
  7198  00068A  0100               	movlb	0	; () banked
  7199  00068C  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7200  00068E  22DA               	addwfc	fsr2h,f,c
  7201  000690  0E00               	movlw	0
  7202  000692  6EDF               	movwf	indf2,c
  7203                           
  7204                           ;my_i2c.c: 226: ic_ptr->outbuffer[3] = 0x0;
  7205  000694  0100               	movlb	0	; () banked
  7206  000696  EE20 F022          	lfsr	2,34
  7207  00069A  0100               	movlb	0	; () banked
  7208  00069C  51BA               	movf	_ic_ptr& (0+255),w,b
  7209  00069E  26D9               	addwf	fsr2l,f,c
  7210  0006A0  0100               	movlb	0	; () banked
  7211  0006A2  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7212  0006A4  22DA               	addwfc	fsr2h,f,c
  7213  0006A6  0E00               	movlw	0
  7214  0006A8  6EDF               	movwf	indf2,c
  7215                           
  7216                           ;my_i2c.c: 227: ic_ptr->outbuffer[4] = 0x0;
  7217  0006AA  0100               	movlb	0	; () banked
  7218  0006AC  EE20 F023          	lfsr	2,35
  7219  0006B0  0100               	movlb	0	; () banked
  7220  0006B2  51BA               	movf	_ic_ptr& (0+255),w,b
  7221  0006B4  26D9               	addwf	fsr2l,f,c
  7222  0006B6  0100               	movlb	0	; () banked
  7223  0006B8  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7224  0006BA  22DA               	addwfc	fsr2h,f,c
  7225  0006BC  0E00               	movlw	0
  7226  0006BE  6EDF               	movwf	indf2,c
  7227                           
  7228                           ;my_i2c.c: 228: ic_ptr->outbuffer[5] = 0x0;
  7229  0006C0  0100               	movlb	0	; () banked
  7230  0006C2  EE20 F024          	lfsr	2,36
  7231  0006C6  0100               	movlb	0	; () banked
  7232  0006C8  51BA               	movf	_ic_ptr& (0+255),w,b
  7233  0006CA  26D9               	addwf	fsr2l,f,c
  7234  0006CC  0100               	movlb	0	; () banked
  7235  0006CE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7236  0006D0  22DA               	addwfc	fsr2h,f,c
  7237  0006D2  0E00               	movlw	0
  7238  0006D4  6EDF               	movwf	indf2,c
  7239                           
  7240                           ;my_i2c.c: 229: ic_ptr->outbuffer[6] = 0x0;
  7241  0006D6  0100               	movlb	0	; () banked
  7242  0006D8  EE20 F025          	lfsr	2,37
  7243  0006DC  0100               	movlb	0	; () banked
  7244  0006DE  51BA               	movf	_ic_ptr& (0+255),w,b
  7245  0006E0  26D9               	addwf	fsr2l,f,c
  7246  0006E2  0100               	movlb	0	; () banked
  7247  0006E4  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7248  0006E6  22DA               	addwfc	fsr2h,f,c
  7249  0006E8  0E00               	movlw	0
  7250  0006EA  6EDF               	movwf	indf2,c
  7251                           
  7252                           ;my_i2c.c: 230: ic_ptr->outbuffer[7] = 0x0;
  7253  0006EC  0100               	movlb	0	; () banked
  7254  0006EE  EE20 F026          	lfsr	2,38
  7255  0006F2  0100               	movlb	0	; () banked
  7256  0006F4  51BA               	movf	_ic_ptr& (0+255),w,b
  7257  0006F6  26D9               	addwf	fsr2l,f,c
  7258  0006F8  0100               	movlb	0	; () banked
  7259  0006FA  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7260  0006FC  22DA               	addwfc	fsr2h,f,c
  7261  0006FE  0E00               	movlw	0
  7262  000700  6EDF               	movwf	indf2,c
  7263                           
  7264                           ;my_i2c.c: 231: ic_ptr->outbuffer[8] = 0x0;
  7265  000702  0100               	movlb	0	; () banked
  7266  000704  EE20 F027          	lfsr	2,39
  7267  000708  0100               	movlb	0	; () banked
  7268  00070A  51BA               	movf	_ic_ptr& (0+255),w,b
  7269  00070C  26D9               	addwf	fsr2l,f,c
  7270  00070E  0100               	movlb	0	; () banked
  7271  000710  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7272  000712  22DA               	addwfc	fsr2h,f,c
  7273  000714  0E00               	movlw	0
  7274  000716  6EDF               	movwf	indf2,c
  7275                           
  7276                           ;my_i2c.c: 232: ic_ptr->outbuffer[9] = 0x0;
  7277  000718  0100               	movlb	0	; () banked
  7278  00071A  EE20 F028          	lfsr	2,40
  7279  00071E  0100               	movlb	0	; () banked
  7280  000720  51BA               	movf	_ic_ptr& (0+255),w,b
  7281  000722  26D9               	addwf	fsr2l,f,c
  7282  000724  0100               	movlb	0	; () banked
  7283  000726  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7284  000728  22DA               	addwfc	fsr2h,f,c
  7285  00072A  0E00               	movlw	0
  7286  00072C  6EDF               	movwf	indf2,c
  7287                           
  7288                           ;my_i2c.c: 233: ic_ptr->outbuffer[10] = 0x0;
  7289  00072E  0100               	movlb	0	; () banked
  7290  000730  EE20 F029          	lfsr	2,41
  7291  000734  0100               	movlb	0	; () banked
  7292  000736  51BA               	movf	_ic_ptr& (0+255),w,b
  7293  000738  26D9               	addwf	fsr2l,f,c
  7294  00073A  0100               	movlb	0	; () banked
  7295  00073C  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7296  00073E  22DA               	addwfc	fsr2h,f,c
  7297  000740  0E00               	movlw	0
  7298  000742  6EDF               	movwf	indf2,c
  7299                           
  7300                           ;my_i2c.c: 234: ic_ptr->outbuffer[11] = 0x0;
  7301  000744  0100               	movlb	0	; () banked
  7302  000746  EE20 F02A          	lfsr	2,42
  7303  00074A  0100               	movlb	0	; () banked
  7304  00074C  51BA               	movf	_ic_ptr& (0+255),w,b
  7305  00074E  26D9               	addwf	fsr2l,f,c
  7306  000750  0100               	movlb	0	; () banked
  7307  000752  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7308  000754  22DA               	addwfc	fsr2h,f,c
  7309  000756  0E00               	movlw	0
  7310  000758  6EDF               	movwf	indf2,c
  7311                           
  7312                           ;my_i2c.c: 235: ic_ptr->outbuffer[12] = 0x0;
  7313  00075A  0100               	movlb	0	; () banked
  7314  00075C  EE20 F02B          	lfsr	2,43
  7315  000760  0100               	movlb	0	; () banked
  7316  000762  51BA               	movf	_ic_ptr& (0+255),w,b
  7317  000764  26D9               	addwf	fsr2l,f,c
  7318  000766  0100               	movlb	0	; () banked
  7319  000768  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7320  00076A  22DA               	addwfc	fsr2h,f,c
  7321  00076C  0E00               	movlw	0
  7322  00076E  6EDF               	movwf	indf2,c
  7323                           
  7324                           ;my_i2c.c: 236: ic_ptr->outbuffer[13] = 0x0;
  7325  000770  0100               	movlb	0	; () banked
  7326  000772  EE20 F02C          	lfsr	2,44
  7327  000776  0100               	movlb	0	; () banked
  7328  000778  51BA               	movf	_ic_ptr& (0+255),w,b
  7329  00077A  26D9               	addwf	fsr2l,f,c
  7330  00077C  0100               	movlb	0	; () banked
  7331  00077E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7332  000780  22DA               	addwfc	fsr2h,f,c
  7333  000782  0E00               	movlw	0
  7334  000784  6EDF               	movwf	indf2,c
  7335                           
  7336                           ;my_i2c.c: 237: ic_ptr->outbuffer[14] = 0x0;
  7337  000786  0100               	movlb	0	; () banked
  7338  000788  EE20 F02D          	lfsr	2,45
  7339  00078C  0100               	movlb	0	; () banked
  7340  00078E  51BA               	movf	_ic_ptr& (0+255),w,b
  7341  000790  26D9               	addwf	fsr2l,f,c
  7342  000792  0100               	movlb	0	; () banked
  7343  000794  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7344  000796  22DA               	addwfc	fsr2h,f,c
  7345  000798  0E00               	movlw	0
  7346  00079A  6EDF               	movwf	indf2,c
  7347                           
  7348                           ;my_i2c.c: 238: ic_ptr->outbuffer[15] = 0x0;
  7349  00079C  0100               	movlb	0	; () banked
  7350  00079E  EE20 F02E          	lfsr	2,46
  7351  0007A2  0100               	movlb	0	; () banked
  7352  0007A4  51BA               	movf	_ic_ptr& (0+255),w,b
  7353  0007A6  26D9               	addwf	fsr2l,f,c
  7354  0007A8  0100               	movlb	0	; () banked
  7355  0007AA  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7356  0007AC  22DA               	addwfc	fsr2h,f,c
  7357  0007AE  0E00               	movlw	0
  7358  0007B0  6EDF               	movwf	indf2,c
  7359                           
  7360                           ;my_i2c.c: 239: ic_ptr->outbuffer[16] = 0x0;
  7361  0007B2  0100               	movlb	0	; () banked
  7362  0007B4  EE20 F02F          	lfsr	2,47
  7363  0007B8  0100               	movlb	0	; () banked
  7364  0007BA  51BA               	movf	_ic_ptr& (0+255),w,b
  7365  0007BC  26D9               	addwf	fsr2l,f,c
  7366  0007BE  0100               	movlb	0	; () banked
  7367  0007C0  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7368  0007C2  22DA               	addwfc	fsr2h,f,c
  7369  0007C4  0E00               	movlw	0
  7370  0007C6  6EDF               	movwf	indf2,c
  7371                           
  7372                           ;my_i2c.c: 240: ic_ptr->outbuffer[17] = 0x0;
  7373  0007C8  0100               	movlb	0	; () banked
  7374  0007CA  EE20 F030          	lfsr	2,48
  7375  0007CE  0100               	movlb	0	; () banked
  7376  0007D0  51BA               	movf	_ic_ptr& (0+255),w,b
  7377  0007D2  26D9               	addwf	fsr2l,f,c
  7378  0007D4  0100               	movlb	0	; () banked
  7379  0007D6  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7380  0007D8  22DA               	addwfc	fsr2h,f,c
  7381  0007DA  0E00               	movlw	0
  7382  0007DC  6EDF               	movwf	indf2,c
  7383                           
  7384                           ;my_i2c.c: 241: ic_ptr->outbuffer[18] = 0x0;
  7385  0007DE  0100               	movlb	0	; () banked
  7386  0007E0  EE20 F031          	lfsr	2,49
  7387  0007E4  0100               	movlb	0	; () banked
  7388  0007E6  51BA               	movf	_ic_ptr& (0+255),w,b
  7389  0007E8  26D9               	addwf	fsr2l,f,c
  7390  0007EA  0100               	movlb	0	; () banked
  7391  0007EC  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7392  0007EE  22DA               	addwfc	fsr2h,f,c
  7393  0007F0  0E00               	movlw	0
  7394  0007F2  6EDF               	movwf	indf2,c
  7395                           
  7396                           ;my_i2c.c: 242: ic_ptr->outbuffer[19] = 0x0;
  7397  0007F4  0100               	movlb	0	; () banked
  7398  0007F6  EE20 F032          	lfsr	2,50
  7399  0007FA  0100               	movlb	0	; () banked
  7400  0007FC  51BA               	movf	_ic_ptr& (0+255),w,b
  7401  0007FE  26D9               	addwf	fsr2l,f,c
  7402  000800  0100               	movlb	0	; () banked
  7403  000802  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7404  000804  22DA               	addwfc	fsr2h,f,c
  7405  000806  0E00               	movlw	0
  7406  000808  6EDF               	movwf	indf2,c
  7407                           
  7408                           ;my_i2c.c: 243: ic_ptr->outbuffer[20] = 0x0;
  7409  00080A  0100               	movlb	0	; () banked
  7410  00080C  EE20 F033          	lfsr	2,51
  7411  000810  0100               	movlb	0	; () banked
  7412  000812  51BA               	movf	_ic_ptr& (0+255),w,b
  7413  000814  26D9               	addwf	fsr2l,f,c
  7414  000816  0100               	movlb	0	; () banked
  7415  000818  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7416  00081A  22DA               	addwfc	fsr2h,f,c
  7417  00081C  0E00               	movlw	0
  7418  00081E  6EDF               	movwf	indf2,c
  7419                           
  7420                           ;my_i2c.c: 244: ic_ptr->outbuffer[21] = 0x0;
  7421  000820  0100               	movlb	0	; () banked
  7422  000822  EE20 F034          	lfsr	2,52
  7423  000826  0100               	movlb	0	; () banked
  7424  000828  51BA               	movf	_ic_ptr& (0+255),w,b
  7425  00082A  26D9               	addwf	fsr2l,f,c
  7426  00082C  0100               	movlb	0	; () banked
  7427  00082E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7428  000830  22DA               	addwfc	fsr2h,f,c
  7429  000832  0E00               	movlw	0
  7430  000834  6EDF               	movwf	indf2,c
  7431                           
  7432                           ;my_i2c.c: 245: ic_ptr->outbuffer[22] = 0x0;
  7433  000836  0100               	movlb	0	; () banked
  7434  000838  EE20 F035          	lfsr	2,53
  7435  00083C  0100               	movlb	0	; () banked
  7436  00083E  51BA               	movf	_ic_ptr& (0+255),w,b
  7437  000840  26D9               	addwf	fsr2l,f,c
  7438  000842  0100               	movlb	0	; () banked
  7439  000844  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7440  000846  22DA               	addwfc	fsr2h,f,c
  7441  000848  0E00               	movlw	0
  7442  00084A  6EDF               	movwf	indf2,c
  7443  00084C                     i2l2536:
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;my_i2c.c: 246: }
  7447                           ;my_i2c.c: 248: LATAbits.LATA3 = !LATAbits.LATA3;
  7448  00084C  B689               	btfsc	3977,3,c	;volatile
  7449  00084E  D002               	goto	i2u153_40
  7450  000850  0E01               	movlw	1
  7451  000852  D001               	goto	i2u153_46
  7452  000854                     i2u153_40:
  7453  000854  0E00               	movlw	0
  7454  000856                     i2u153_46:
  7455  000856  0100               	movlb	0	; () banked
  7456  000858  6F7D               	movwf	??_i2c_int_handler& (0+255),b
  7457  00085A  0100               	movlb	0	; () banked
  7458  00085C  477D               	rlncf	??_i2c_int_handler& (0+255),f,b
  7459  00085E  477D               	rlncf	??_i2c_int_handler& (0+255),f,b
  7460  000860  477D               	rlncf	??_i2c_int_handler& (0+255),f,b
  7461  000862  5089               	movf	3977,w,c	;volatile
  7462  000864  0100               	movlb	0	; () banked
  7463  000866  197D               	xorwf	??_i2c_int_handler& (0+255),w,b
  7464  000868  0BF7               	andlw	-9
  7465  00086A  197D               	xorwf	??_i2c_int_handler& (0+255),w,b
  7466  00086C  6E89               	movwf	3977,c	;volatile
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;my_i2c.c: 249: start_i2c_slave_reply(23, ic_ptr->outbuffer);
  7470  00086E  0E1F               	movlw	31
  7471  000870  0100               	movlb	0	; () banked
  7472  000872  25BA               	addwf	_ic_ptr& (0+255),w,b
  7473  000874  0100               	movlb	0	; () banked
  7474  000876  6F60               	movwf	start_i2c_slave_reply@msg& (0+255),b
  7475  000878  0E00               	movlw	0
  7476  00087A  0100               	movlb	0	; () banked
  7477  00087C  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7478  00087E  0100               	movlb	0	; () banked
  7479  000880  6F61               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  7480  000882  0E17               	movlw	23
  7481  000884  EC6B  F006         	call	_start_i2c_slave_reply
  7482                           
  7483                           ;my_i2c.c: 250: msg_to_send = 0;
  7484  000888  0E00               	movlw	0
  7485  00088A  0100               	movlb	0	; () banked
  7486  00088C  6F85               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7487  00088E  0012               	return	
  7488  000890                     __end_of_i2c_int_handler:
  7489                           	opt stack 0
  7490                           pclatu	equ	0xFFB
  7491                           pclath	equ	0xFFA
  7492                           tblptru	equ	0xFF8
  7493                           tblptrh	equ	0xFF7
  7494                           tblptrl	equ	0xFF6
  7495                           tablat	equ	0xFF5
  7496                           prodh	equ	0xFF4
  7497                           prodl	equ	0xFF3
  7498                           intcon	equ	0xFF2
  7499                           intcon2	equ	0xFF1
  7500                           postinc0	equ	0xFEE
  7501                           fsr0h	equ	0xFEA
  7502                           fsr0l	equ	0xFE9
  7503                           wreg	equ	0xFE8
  7504                           indf1	equ	0xFE7
  7505                           fsr1h	equ	0xFE2
  7506                           fsr1l	equ	0xFE1
  7507                           bsr	equ	0xFE0
  7508                           indf2	equ	0xFDF
  7509                           postinc2	equ	0xFDE
  7510                           postdec2	equ	0xFDD
  7511                           fsr2h	equ	0xFDA
  7512                           fsr2l	equ	0xFD9
  7513                           status	equ	0xFD8
  7514                           
  7515 ;; *************** function _start_i2c_slave_reply *****************
  7516 ;; Defined at:
  7517 ;;		line 11 in file "../src/my_i2c.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;  length          1    wreg     unsigned char 
  7520 ;;  msg             2    0[BANK0 ] PTR unsigned char 
  7521 ;;		 -> NULL(0), main@ic(60), 
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  length          1    4[BANK0 ] unsigned char 
  7524 ;; Return value:  Size  Location     Type
  7525 ;;		None               void
  7526 ;; Registers used:
  7527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7533 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7534 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7535 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7536 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7537 ;;Total ram usage:        5 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; This function calls:
  7540 ;;		Nothing
  7541 ;; This function is called by:
  7542 ;;		_i2c_int_handler
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text46
  7547  000CD6                     __ptext46:
  7548                           	opt stack 0
  7549  000CD6                     _start_i2c_slave_reply:
  7550                           	opt stack 19
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;incstack = 0
  7554                           ;start_i2c_slave_reply@length stored from wreg
  7555  000CD6  0100               	movlb	0	; () banked
  7556  000CD8  6F64               	movwf	start_i2c_slave_reply@length& (0+255),b
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;my_i2c.c: 13: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  7560  000CDA  0100               	movlb	0	; () banked
  7561  000CDC  EE20 F039          	lfsr	2,57
  7562  000CE0  0100               	movlb	0	; () banked
  7563  000CE2  51BA               	movf	_ic_ptr& (0+255),w,b
  7564  000CE4  26D9               	addwf	fsr2l,f,c
  7565  000CE6  0100               	movlb	0	; () banked
  7566  000CE8  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7567  000CEA  22DA               	addwfc	fsr2h,f,c
  7568  000CEC  0E00               	movlw	0
  7569  000CEE  6EDF               	movwf	indf2,c
  7570  000CF0  D03E               	goto	i2l2312
  7571  000CF2                     i2l2308:
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;my_i2c.c: 14: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  7575  000CF2  0100               	movlb	0	; () banked
  7576  000CF4  EE20 F039          	lfsr	2,57
  7577  000CF8  0100               	movlb	0	; () banked
  7578  000CFA  51BA               	movf	_ic_ptr& (0+255),w,b
  7579  000CFC  26D9               	addwf	fsr2l,f,c
  7580  000CFE  0100               	movlb	0	; () banked
  7581  000D00  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7582  000D02  22DA               	addwfc	fsr2h,f,c
  7583  000D04  50DF               	movf	indf2,w,c
  7584  000D06  0100               	movlb	0	; () banked
  7585  000D08  6F62               	movwf	??_start_i2c_slave_reply& (0+255),b
  7586  000D0A  0100               	movlb	0	; () banked
  7587  000D0C  5162               	movf	??_start_i2c_slave_reply& (0+255),w,b
  7588  000D0E  0D01               	mullw	1
  7589  000D10  50F3               	movf	prodl,w,c
  7590  000D12  0100               	movlb	0	; () banked
  7591  000D14  2560               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  7592  000D16  6ED9               	movwf	fsr2l,c
  7593  000D18  50F4               	movf	prodh,w,c
  7594  000D1A  0100               	movlb	0	; () banked
  7595  000D1C  2161               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  7596  000D1E  6EDA               	movwf	fsr2h,c
  7597  000D20  0100               	movlb	0	; () banked
  7598  000D22  EE10 F039          	lfsr	1,57
  7599  000D26  0100               	movlb	0	; () banked
  7600  000D28  51BA               	movf	_ic_ptr& (0+255),w,b
  7601  000D2A  26E1               	addwf	fsr1l,f,c
  7602  000D2C  0100               	movlb	0	; () banked
  7603  000D2E  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7604  000D30  22E2               	addwfc	fsr1h,f,c
  7605  000D32  50E7               	movf	indf1,w,c
  7606  000D34  0100               	movlb	0	; () banked
  7607  000D36  6F63               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  7608  000D38  0100               	movlb	0	; () banked
  7609  000D3A  5163               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  7610  000D3C  0D01               	mullw	1
  7611  000D3E  0E1F               	movlw	31
  7612  000D40  26F3               	addwf	prodl,f,c
  7613  000D42  0E00               	movlw	0
  7614  000D44  22F4               	addwfc	prodh,f,c
  7615  000D46  50F3               	movf	prodl,w,c
  7616  000D48  0100               	movlb	0	; () banked
  7617  000D4A  25BA               	addwf	_ic_ptr& (0+255),w,b
  7618  000D4C  6EE1               	movwf	fsr1l,c
  7619  000D4E  50F4               	movf	prodh,w,c
  7620  000D50  0100               	movlb	0	; () banked
  7621  000D52  21BB               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7622  000D54  6EE2               	movwf	fsr1h,c
  7623  000D56  CFDF FFE7          	movff	indf2,indf1
  7624                           
  7625                           ; BSR set to: 0
  7626  000D5A  0100               	movlb	0	; () banked
  7627  000D5C  EE20 F039          	lfsr	2,57
  7628  000D60  0100               	movlb	0	; () banked
  7629  000D62  51BA               	movf	_ic_ptr& (0+255),w,b
  7630  000D64  26D9               	addwf	fsr2l,f,c
  7631  000D66  0100               	movlb	0	; () banked
  7632  000D68  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7633  000D6A  22DA               	addwfc	fsr2h,f,c
  7634  000D6C  2ADF               	incf	indf2,f,c
  7635  000D6E                     i2l2312:
  7636                           
  7637                           ; BSR set to: 0
  7638  000D6E  0100               	movlb	0	; () banked
  7639  000D70  EE20 F039          	lfsr	2,57
  7640  000D74  0100               	movlb	0	; () banked
  7641  000D76  51BA               	movf	_ic_ptr& (0+255),w,b
  7642  000D78  26D9               	addwf	fsr2l,f,c
  7643  000D7A  0100               	movlb	0	; () banked
  7644  000D7C  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7645  000D7E  22DA               	addwfc	fsr2h,f,c
  7646  000D80  50DF               	movf	indf2,w,c
  7647  000D82  0100               	movlb	0	; () banked
  7648  000D84  6F62               	movwf	??_start_i2c_slave_reply& (0+255),b
  7649  000D86  0100               	movlb	0	; () banked
  7650  000D88  5164               	movf	start_i2c_slave_reply@length& (0+255),w,b
  7651  000D8A  0100               	movlb	0	; () banked
  7652  000D8C  5D62               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  7653  000D8E  A0D8               	btfss	status,0,c
  7654  000D90  D7B0               	goto	i2l2308
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;my_i2c.c: 15: }
  7658                           ;my_i2c.c: 16: ic_ptr->outbuflen = length;
  7659                           
  7660                           ; BSR set to: 0
  7661  000D92  0100               	movlb	0	; () banked
  7662  000D94  EE20 F039          	lfsr	2,57
  7663  000D98  0100               	movlb	0	; () banked
  7664  000D9A  51BA               	movf	_ic_ptr& (0+255),w,b
  7665  000D9C  26D9               	addwf	fsr2l,f,c
  7666  000D9E  0100               	movlb	0	; () banked
  7667  000DA0  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7668  000DA2  22DA               	addwfc	fsr2h,f,c
  7669  000DA4  0100               	movlb	0	; () banked
  7670  000DA6  C064  FFDF         	movff	start_i2c_slave_reply@length,indf2
  7671                           
  7672                           ;my_i2c.c: 17: ic_ptr->outbufind = 1;
  7673  000DAA  0100               	movlb	0	; () banked
  7674  000DAC  EE20 F03A          	lfsr	2,58
  7675  000DB0  0100               	movlb	0	; () banked
  7676  000DB2  51BA               	movf	_ic_ptr& (0+255),w,b
  7677  000DB4  26D9               	addwf	fsr2l,f,c
  7678  000DB6  0100               	movlb	0	; () banked
  7679  000DB8  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7680  000DBA  22DA               	addwfc	fsr2h,f,c
  7681  000DBC  0E01               	movlw	1
  7682  000DBE  6EDF               	movwf	indf2,c
  7683                           
  7684                           ;my_i2c.c: 20: SSPBUF = ic_ptr->outbuffer[0];
  7685  000DC0  0100               	movlb	0	; () banked
  7686  000DC2  EE20 F01F          	lfsr	2,31
  7687  000DC6  0100               	movlb	0	; () banked
  7688  000DC8  51BA               	movf	_ic_ptr& (0+255),w,b
  7689  000DCA  26D9               	addwf	fsr2l,f,c
  7690  000DCC  0100               	movlb	0	; () banked
  7691  000DCE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7692  000DD0  22DA               	addwfc	fsr2h,f,c
  7693  000DD2  50DF               	movf	indf2,w,c
  7694  000DD4  6EC9               	movwf	4041,c	;volatile
  7695                           
  7696                           ; BSR set to: 0
  7697                           ;my_i2c.c: 23: SSPCON1bits.CKP = 1;
  7698  000DD6  88C6               	bsf	4038,4,c	;volatile
  7699                           
  7700                           ; BSR set to: 0
  7701  000DD8  0012               	return	
  7702  000DDA                     __end_of_start_i2c_slave_reply:
  7703                           	opt stack 0
  7704                           pclatu	equ	0xFFB
  7705                           pclath	equ	0xFFA
  7706                           tblptru	equ	0xFF8
  7707                           tblptrh	equ	0xFF7
  7708                           tblptrl	equ	0xFF6
  7709                           tablat	equ	0xFF5
  7710                           prodh	equ	0xFF4
  7711                           prodl	equ	0xFF3
  7712                           intcon	equ	0xFF2
  7713                           intcon2	equ	0xFF1
  7714                           postinc0	equ	0xFEE
  7715                           fsr0h	equ	0xFEA
  7716                           fsr0l	equ	0xFE9
  7717                           wreg	equ	0xFE8
  7718                           indf1	equ	0xFE7
  7719                           fsr1h	equ	0xFE2
  7720                           fsr1l	equ	0xFE1
  7721                           bsr	equ	0xFE0
  7722                           indf2	equ	0xFDF
  7723                           postinc2	equ	0xFDE
  7724                           postdec2	equ	0xFDD
  7725                           fsr2h	equ	0xFDA
  7726                           fsr2l	equ	0xFD9
  7727                           status	equ	0xFD8
  7728                           
  7729 ;; *************** function _handle_start *****************
  7730 ;; Defined at:
  7731 ;;		line 29 in file "../src/my_i2c.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  data_read       1    wreg     unsigned char 
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;  data_read       1    0[BANK0 ] unsigned char 
  7736 ;; Return value:  Size  Location     Type
  7737 ;;		None               void
  7738 ;; Registers used:
  7739 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7746 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7748 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7749 ;;Total ram usage:        1 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; This function calls:
  7752 ;;		Nothing
  7753 ;; This function is called by:
  7754 ;;		_i2c_int_handler
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text47
  7759  001084                     __ptext47:
  7760                           	opt stack 0
  7761  001084                     _handle_start:
  7762                           	opt stack 19
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;incstack = 0
  7766                           ;handle_start@data_read stored from wreg
  7767  001084  0100               	movlb	0	; () banked
  7768  001086  6F60               	movwf	handle_start@data_read& (0+255),b
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;my_i2c.c: 30: ic_ptr->event_count = 1;
  7772  001088  0100               	movlb	0	; () banked
  7773  00108A  EE20 F01B          	lfsr	2,27
  7774  00108E  0100               	movlb	0	; () banked
  7775  001090  51BA               	movf	_ic_ptr& (0+255),w,b
  7776  001092  26D9               	addwf	fsr2l,f,c
  7777  001094  0100               	movlb	0	; () banked
  7778  001096  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7779  001098  22DA               	addwfc	fsr2h,f,c
  7780  00109A  0E01               	movlw	1
  7781  00109C  6EDF               	movwf	indf2,c
  7782                           
  7783                           ;my_i2c.c: 31: ic_ptr->buflen = 0;
  7784  00109E  0100               	movlb	0	; () banked
  7785  0010A0  EE20 F01A          	lfsr	2,26
  7786  0010A4  0100               	movlb	0	; () banked
  7787  0010A6  51BA               	movf	_ic_ptr& (0+255),w,b
  7788  0010A8  26D9               	addwf	fsr2l,f,c
  7789  0010AA  0100               	movlb	0	; () banked
  7790  0010AC  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7791  0010AE  22DA               	addwfc	fsr2h,f,c
  7792  0010B0  0E00               	movlw	0
  7793  0010B2  6EDF               	movwf	indf2,c
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;my_i2c.c: 33: if (data_read) {
  7797  0010B4  0100               	movlb	0	; () banked
  7798  0010B6  5160               	movf	handle_start@data_read& (0+255),w,b
  7799  0010B8  B4D8               	btfsc	status,2,c
  7800  0010BA  D03D               	goto	i2l2330
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;my_i2c.c: 34: if (SSPSTATbits.D_A == 1) {
  7804  0010BC  AAC7               	btfss	4039,5,c	;volatile
  7805  0010BE  D021               	goto	i2l267
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;my_i2c.c: 37: ic_ptr->status = 0x5;
  7809  0010C0  0100               	movlb	0	; () banked
  7810  0010C2  EE20 F01C          	lfsr	2,28
  7811  0010C6  0100               	movlb	0	; () banked
  7812  0010C8  51BA               	movf	_ic_ptr& (0+255),w,b
  7813  0010CA  26D9               	addwf	fsr2l,f,c
  7814  0010CC  0100               	movlb	0	; () banked
  7815  0010CE  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7816  0010D0  22DA               	addwfc	fsr2h,f,c
  7817  0010D2  0E05               	movlw	5
  7818  0010D4  6EDF               	movwf	indf2,c
  7819                           
  7820                           ;my_i2c.c: 38: ic_ptr->error_count++;
  7821  0010D6  0100               	movlb	0	; () banked
  7822  0010D8  EE20 F01E          	lfsr	2,30
  7823  0010DC  0100               	movlb	0	; () banked
  7824  0010DE  51BA               	movf	_ic_ptr& (0+255),w,b
  7825  0010E0  26D9               	addwf	fsr2l,f,c
  7826  0010E2  0100               	movlb	0	; () banked
  7827  0010E4  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7828  0010E6  22DA               	addwfc	fsr2h,f,c
  7829  0010E8  2ADF               	incf	indf2,f,c
  7830                           
  7831                           ;my_i2c.c: 39: ic_ptr->error_code = 0x5;
  7832  0010EA  0100               	movlb	0	; () banked
  7833  0010EC  EE20 F01D          	lfsr	2,29
  7834  0010F0  0100               	movlb	0	; () banked
  7835  0010F2  51BA               	movf	_ic_ptr& (0+255),w,b
  7836  0010F4  26D9               	addwf	fsr2l,f,c
  7837  0010F6  0100               	movlb	0	; () banked
  7838  0010F8  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7839  0010FA  22DA               	addwfc	fsr2h,f,c
  7840  0010FC  0E05               	movlw	5
  7841  0010FE  6EDF               	movwf	indf2,c
  7842                           
  7843                           ;my_i2c.c: 40: } else {
  7844  001100  0012               	return	
  7845  001102                     i2l267:
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;my_i2c.c: 41: if (SSPSTATbits.R_W == 1) {
  7849  001102  A4C7               	btfss	4039,2,c	;volatile
  7850  001104  D00C               	goto	i2l2328
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;my_i2c.c: 42: ic_ptr->status = 0x8;
  7854  001106  0100               	movlb	0	; () banked
  7855  001108  EE20 F01C          	lfsr	2,28
  7856  00110C  0100               	movlb	0	; () banked
  7857  00110E  51BA               	movf	_ic_ptr& (0+255),w,b
  7858  001110  26D9               	addwf	fsr2l,f,c
  7859  001112  0100               	movlb	0	; () banked
  7860  001114  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7861  001116  22DA               	addwfc	fsr2h,f,c
  7862  001118  0E08               	movlw	8
  7863  00111A  6EDF               	movwf	indf2,c
  7864                           
  7865                           ;my_i2c.c: 43: } else {
  7866  00111C  0012               	return	
  7867  00111E                     i2l2328:
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;my_i2c.c: 44: ic_ptr->status = 0x7;
  7871  00111E  0100               	movlb	0	; () banked
  7872  001120  EE20 F01C          	lfsr	2,28
  7873  001124  0100               	movlb	0	; () banked
  7874  001126  51BA               	movf	_ic_ptr& (0+255),w,b
  7875  001128  26D9               	addwf	fsr2l,f,c
  7876  00112A  0100               	movlb	0	; () banked
  7877  00112C  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7878  00112E  22DA               	addwfc	fsr2h,f,c
  7879  001130  0E07               	movlw	7
  7880  001132  6EDF               	movwf	indf2,c
  7881  001134  0012               	return	
  7882  001136                     i2l2330:
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;my_i2c.c: 48: ic_ptr->status = 0x6;
  7886  001136  0100               	movlb	0	; () banked
  7887  001138  EE20 F01C          	lfsr	2,28
  7888  00113C  0100               	movlb	0	; () banked
  7889  00113E  51BA               	movf	_ic_ptr& (0+255),w,b
  7890  001140  26D9               	addwf	fsr2l,f,c
  7891  001142  0100               	movlb	0	; () banked
  7892  001144  51BB               	movf	(_ic_ptr+1)& (0+255),w,b
  7893  001146  22DA               	addwfc	fsr2h,f,c
  7894  001148  0E06               	movlw	6
  7895  00114A  6EDF               	movwf	indf2,c
  7896  00114C  0012               	return	
  7897  00114E                     __end_of_handle_start:
  7898                           	opt stack 0
  7899                           pclatu	equ	0xFFB
  7900                           pclath	equ	0xFFA
  7901                           tblptru	equ	0xFF8
  7902                           tblptrh	equ	0xFF7
  7903                           tblptrl	equ	0xFF6
  7904                           tablat	equ	0xFF5
  7905                           prodh	equ	0xFF4
  7906                           prodl	equ	0xFF3
  7907                           intcon	equ	0xFF2
  7908                           intcon2	equ	0xFF1
  7909                           postinc0	equ	0xFEE
  7910                           fsr0h	equ	0xFEA
  7911                           fsr0l	equ	0xFE9
  7912                           wreg	equ	0xFE8
  7913                           indf1	equ	0xFE7
  7914                           fsr1h	equ	0xFE2
  7915                           fsr1l	equ	0xFE1
  7916                           bsr	equ	0xFE0
  7917                           indf2	equ	0xFDF
  7918                           postinc2	equ	0xFDE
  7919                           postdec2	equ	0xFDD
  7920                           fsr2h	equ	0xFDA
  7921                           fsr2l	equ	0xFD9
  7922                           status	equ	0xFD8
  7923                           
  7924 ;; *************** function _ToMainHigh_sendmsg *****************
  7925 ;; Defined at:
  7926 ;;		line 126 in file "../src/messages.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  length          1    wreg     unsigned char 
  7929 ;;  msgtype         1   22[BANK0 ] unsigned char 
  7930 ;;  data            2   23[BANK0 ] PTR void 
  7931 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(60), 
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;  length          1   25[BANK0 ] unsigned char 
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  1    wreg      char 
  7936 ;; Registers used:
  7937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7943 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7944 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7946 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7947 ;;Total ram usage:        4 bytes
  7948 ;; Hardware stack levels used:    1
  7949 ;; Hardware stack levels required when called:    2
  7950 ;; This function calls:
  7951 ;;		i2_send_msg
  7952 ;; This function is called by:
  7953 ;;		_i2c_int_handler
  7954 ;;		_timer0_int_handler
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           	psect	text48
  7959  001B9C                     __ptext48:
  7960                           	opt stack 0
  7961  001B9C                     _ToMainHigh_sendmsg:
  7962                           	opt stack 17
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;incstack = 0
  7966                           ;ToMainHigh_sendmsg@length stored from wreg
  7967  001B9C  0100               	movlb	0	; () banked
  7968  001B9E  6F79               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7972                           ;	Return value of _ToMainHigh_sendmsg is never used
  7973  001BA0  0102               	movlb	2	; () banked
  7974  001BA2  0E02               	movlw	high _ToMainHigh_MQ
  7975  001BA4  0100               	movlb	0	; () banked
  7976  001BA6  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  7977  001BA8  0102               	movlb	2	; () banked
  7978  001BAA  0E00               	movlw	low _ToMainHigh_MQ
  7979  001BAC  0100               	movlb	0	; () banked
  7980  001BAE  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  7981  001BB0  C079  F06C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  7982  001BB4  C076  F06D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7983  001BB8  0100               	movlb	0	; () banked
  7984  001BBA  C078  F06F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7985  001BBE  0100               	movlb	0	; () banked
  7986  001BC0  C077  F06E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  7987  001BC4  EC63  F007         	call	i2_send_msg	;wreg free
  7988  001BC8  0012               	return	
  7989  001BCA                     __end_of_ToMainHigh_sendmsg:
  7990                           	opt stack 0
  7991                           pclatu	equ	0xFFB
  7992                           pclath	equ	0xFFA
  7993                           tblptru	equ	0xFF8
  7994                           tblptrh	equ	0xFF7
  7995                           tblptrl	equ	0xFF6
  7996                           tablat	equ	0xFF5
  7997                           prodh	equ	0xFF4
  7998                           prodl	equ	0xFF3
  7999                           intcon	equ	0xFF2
  8000                           intcon2	equ	0xFF1
  8001                           postinc0	equ	0xFEE
  8002                           fsr0h	equ	0xFEA
  8003                           fsr0l	equ	0xFE9
  8004                           wreg	equ	0xFE8
  8005                           indf1	equ	0xFE7
  8006                           fsr1h	equ	0xFE2
  8007                           fsr1l	equ	0xFE1
  8008                           bsr	equ	0xFE0
  8009                           indf2	equ	0xFDF
  8010                           postinc2	equ	0xFDE
  8011                           postdec2	equ	0xFDD
  8012                           fsr2h	equ	0xFDA
  8013                           fsr2l	equ	0xFD9
  8014                           status	equ	0xFD8
  8015                           
  8016 ;; *************** function i2_send_msg *****************
  8017 ;; Defined at:
  8018 ;;		line 24 in file "../src/messages.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8021 ;;		 -> SensorData_MQ(118), FromMainHigh_MQ(118), FromMainLow_MQ(118), ToMainHigh_MQ(118), 
  8022 ;;		 -> ToMainLow_MQ(118), 
  8023 ;;  length          1   12[BANK0 ] unsigned char 
  8024 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8025 ;;  data            2   14[BANK0 ] PTR void 
  8026 ;;		 -> timer0_int_handler@val(2), NULL(0), uart_recv_int_handler@readin(23), i2c_int_handler@error_buf(3), 
  8027 ;;		 -> main@msgbuffer(27), main@t1thread_data(2), main@ic(60), 
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8030 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), SensorData_MQ.queue(116), ToMainHigh_MQ.queue(116), 
  8031 ;;		 -> ToMainLow_MQ.queue(116), SensorData_MQ(118), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  8032 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  8033 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8034 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  1    wreg      char 
  8037 ;; Registers used:
  8038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8044 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8045 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8046 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8047 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8048 ;;Total ram usage:       12 bytes
  8049 ;; Hardware stack levels used:    1
  8050 ;; Hardware stack levels required when called:    1
  8051 ;; This function calls:
  8052 ;;		i2_memcpy
  8053 ;; This function is called by:
  8054 ;;		_ToMainHigh_sendmsg
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           	psect	text49
  8059  000EC6                     __ptext49:
  8060                           	opt stack 0
  8061  000EC6                     i2_send_msg:
  8062                           	opt stack 17
  8063                           
  8064                           ;messages.c: 25: unsigned char slot;
  8065                           ;messages.c: 27: msg *qmsg;
  8066                           ;messages.c: 28: size_t tlength = length;
  8067                           
  8068                           ;incstack = 0
  8069  000EC6  0100               	movlb	0	; () banked
  8070  000EC8  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  8071  000ECC  0100               	movlb	0	; () banked
  8072  000ECE  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8073                           
  8074                           ; BSR set to: 0
  8075                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8076  000ED0  0100               	movlb	0	; () banked
  8077  000ED2  EE20 F074          	lfsr	2,116
  8078  000ED6  0100               	movlb	0	; () banked
  8079  000ED8  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8080  000EDA  26D9               	addwf	fsr2l,f,c
  8081  000EDC  0100               	movlb	0	; () banked
  8082  000EDE  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8083  000EE0  22DA               	addwfc	fsr2h,f,c
  8084  000EE2  50DF               	movf	indf2,w,c
  8085  000EE4  0100               	movlb	0	; () banked
  8086  000EE6  6F73               	movwf	i2send_msg@slot& (0+255),b
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8090  000EE8  0100               	movlb	0	; () banked
  8091  000EEA  5173               	movf	i2send_msg@slot& (0+255),w,b
  8092  000EEC  0D1D               	mullw	29
  8093  000EEE  50F3               	movf	prodl,w,c
  8094  000EF0  0100               	movlb	0	; () banked
  8095  000EF2  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  8096  000EF4  0100               	movlb	0	; () banked
  8097  000EF6  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  8098  000EF8  50F4               	movf	prodh,w,c
  8099  000EFA  0100               	movlb	0	; () banked
  8100  000EFC  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8101  000EFE  0100               	movlb	0	; () banked
  8102  000F00  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;messages.c: 41: if (qmsg->full != 0) {
  8106  000F02  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8107  000F06  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8108  000F0A  50DF               	movf	indf2,w,c
  8109  000F0C  B4D8               	btfsc	status,2,c
  8110  000F0E  D002               	goto	i2l2128
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;messages.c: 42: return (-1);
  8114  000F10  0EFF               	movlw	255
  8115  000F12  0012               	return	
  8116  000F14                     i2l2128:
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;messages.c: 43: }
  8120                           ;messages.c: 46: qmsg->length = length;
  8121  000F14  0100               	movlb	0	; () banked
  8122  000F16  EE20 F001          	lfsr	2,1
  8123  000F1A  0100               	movlb	0	; () banked
  8124  000F1C  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8125  000F1E  26D9               	addwf	fsr2l,f,c
  8126  000F20  0100               	movlb	0	; () banked
  8127  000F22  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8128  000F24  22DA               	addwfc	fsr2h,f,c
  8129  000F26  0100               	movlb	0	; () banked
  8130  000F28  C06C  FFDF         	movff	i2send_msg@length,indf2
  8131                           
  8132                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8133  000F2C  0100               	movlb	0	; () banked
  8134  000F2E  EE20 F002          	lfsr	2,2
  8135  000F32  0100               	movlb	0	; () banked
  8136  000F34  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8137  000F36  26D9               	addwf	fsr2l,f,c
  8138  000F38  0100               	movlb	0	; () banked
  8139  000F3A  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8140  000F3C  22DA               	addwfc	fsr2h,f,c
  8141  000F3E  0100               	movlb	0	; () banked
  8142  000F40  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8146  000F44  0E03               	movlw	3
  8147  000F46  0100               	movlb	0	; () banked
  8148  000F48  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  8149  000F4A  0100               	movlb	0	; () banked
  8150  000F4C  6F60               	movwf	i2memcpy@d1& (0+255),b
  8151  000F4E  0E00               	movlw	0
  8152  000F50  0100               	movlb	0	; () banked
  8153  000F52  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8154  000F54  0100               	movlb	0	; () banked
  8155  000F56  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  8156  000F58  0100               	movlb	0	; () banked
  8157  000F5A  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8158  000F5E  0100               	movlb	0	; () banked
  8159  000F60  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  8160  000F64  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  8161  000F68  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8162  000F6C  EC01  F00C         	call	i2_memcpy	;wreg free
  8163                           
  8164                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8165  000F70  0100               	movlb	0	; () banked
  8166  000F72  EE20 F074          	lfsr	2,116
  8167  000F76  0100               	movlb	0	; () banked
  8168  000F78  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8169  000F7A  26D9               	addwf	fsr2l,f,c
  8170  000F7C  0100               	movlb	0	; () banked
  8171  000F7E  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8172  000F80  22DA               	addwfc	fsr2h,f,c
  8173  000F82  0100               	movlb	0	; () banked
  8174  000F84  EE10 F074          	lfsr	1,116
  8175  000F88  0100               	movlb	0	; () banked
  8176  000F8A  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8177  000F8C  26E1               	addwf	fsr1l,f,c
  8178  000F8E  0100               	movlb	0	; () banked
  8179  000F90  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8180  000F92  22E2               	addwfc	fsr1h,f,c
  8181  000F94  50E7               	movf	indf1,w,c
  8182  000F96  0100               	movlb	0	; () banked
  8183  000F98  6F70               	movwf	??i2_send_msg& (0+255),b
  8184  000F9A  0100               	movlb	0	; () banked
  8185  000F9C  2970               	incf	??i2_send_msg& (0+255),w,b
  8186  000F9E  0B03               	andlw	3
  8187  000FA0  6EDF               	movwf	indf2,c
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;messages.c: 59: qmsg->full = 1;
  8191  000FA2  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8192  000FA6  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8193  000FAA  0E01               	movlw	1
  8194  000FAC  6EDF               	movwf	indf2,c
  8195                           
  8196                           ; BSR set to: 0
  8197                           ;messages.c: 60: return (1);
  8198  000FAE  0E01               	movlw	1
  8199  000FB0  0012               	return	
  8200  000FB2                     __end_ofi2_send_msg:
  8201                           	opt stack 0
  8202                           pclatu	equ	0xFFB
  8203                           pclath	equ	0xFFA
  8204                           tblptru	equ	0xFF8
  8205                           tblptrh	equ	0xFF7
  8206                           tblptrl	equ	0xFF6
  8207                           tablat	equ	0xFF5
  8208                           prodh	equ	0xFF4
  8209                           prodl	equ	0xFF3
  8210                           intcon	equ	0xFF2
  8211                           intcon2	equ	0xFF1
  8212                           postinc0	equ	0xFEE
  8213                           fsr0h	equ	0xFEA
  8214                           fsr0l	equ	0xFE9
  8215                           wreg	equ	0xFE8
  8216                           indf1	equ	0xFE7
  8217                           fsr1h	equ	0xFE2
  8218                           fsr1l	equ	0xFE1
  8219                           bsr	equ	0xFE0
  8220                           indf2	equ	0xFDF
  8221                           postinc2	equ	0xFDE
  8222                           postdec2	equ	0xFDD
  8223                           fsr2h	equ	0xFDA
  8224                           fsr2l	equ	0xFD9
  8225                           status	equ	0xFD8
  8226                           
  8227 ;; *************** function _SensorData_recvmsg *****************
  8228 ;; Defined at:
  8229 ;;		line 203 in file "../src/messages.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;  maxlength       1    wreg     unsigned char 
  8232 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8233 ;;		 -> RAM(3775), 
  8234 ;;  data            2   26[BANK0 ] PTR void 
  8235 ;;		 -> NULL(0), main@ic(60), 
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  1    wreg      char 
  8240 ;; Registers used:
  8241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8247 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8250 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8251 ;;Total ram usage:        5 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; Hardware stack levels required when called:    2
  8254 ;; This function calls:
  8255 ;;		i2_recv_msg
  8256 ;; This function is called by:
  8257 ;;		_i2c_int_handler
  8258 ;; This function uses a non-reentrant model
  8259 ;;
  8260                           
  8261                           	psect	text50
  8262  001A72                     __ptext50:
  8263                           	opt stack 0
  8264  001A72                     _SensorData_recvmsg:
  8265                           	opt stack 17
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;incstack = 0
  8269                           ;SensorData_recvmsg@maxlength stored from wreg
  8270  001A72  0100               	movlb	0	; () banked
  8271  001A74  6F7C               	movwf	SensorData_recvmsg@maxlength& (0+255),b
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;messages.c: 209: return (recv_msg(&SensorData_MQ, maxlength, msgtype, data));
  8275  001A76  0104               	movlb	4	; () banked
  8276  001A78  0E04               	movlw	high _SensorData_MQ
  8277  001A7A  0100               	movlb	0	; () banked
  8278  001A7C  6F6B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8279  001A7E  0104               	movlb	4	; () banked
  8280  001A80  0E00               	movlw	low _SensorData_MQ
  8281  001A82  0100               	movlb	0	; () banked
  8282  001A84  6F6A               	movwf	i2recv_msg@qptr& (0+255),b
  8283  001A86  C07C  F06C         	movff	SensorData_recvmsg@maxlength,i2recv_msg@maxlength
  8284  001A8A  0100               	movlb	0	; () banked
  8285  001A8C  C079  F06E         	movff	SensorData_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8286  001A90  0100               	movlb	0	; () banked
  8287  001A92  C078  F06D         	movff	SensorData_recvmsg@msgtype,i2recv_msg@msgtype
  8288  001A96  0100               	movlb	0	; () banked
  8289  001A98  C07B  F070         	movff	SensorData_recvmsg@data+1,i2recv_msg@data+1
  8290  001A9C  0100               	movlb	0	; () banked
  8291  001A9E  C07A  F06F         	movff	SensorData_recvmsg@data,i2recv_msg@data
  8292  001AA2  ECDC  F005         	call	i2_recv_msg	;wreg free
  8293  001AA6  0012               	return	
  8294  001AA8                     __end_of_SensorData_recvmsg:
  8295                           	opt stack 0
  8296                           pclatu	equ	0xFFB
  8297                           pclath	equ	0xFFA
  8298                           tblptru	equ	0xFF8
  8299                           tblptrh	equ	0xFF7
  8300                           tblptrl	equ	0xFF6
  8301                           tablat	equ	0xFF5
  8302                           prodh	equ	0xFF4
  8303                           prodl	equ	0xFF3
  8304                           intcon	equ	0xFF2
  8305                           intcon2	equ	0xFF1
  8306                           postinc0	equ	0xFEE
  8307                           fsr0h	equ	0xFEA
  8308                           fsr0l	equ	0xFE9
  8309                           wreg	equ	0xFE8
  8310                           indf1	equ	0xFE7
  8311                           fsr1h	equ	0xFE2
  8312                           fsr1l	equ	0xFE1
  8313                           bsr	equ	0xFE0
  8314                           indf2	equ	0xFDF
  8315                           postinc2	equ	0xFDE
  8316                           postdec2	equ	0xFDD
  8317                           fsr2h	equ	0xFDA
  8318                           fsr2l	equ	0xFD9
  8319                           status	equ	0xFD8
  8320                           
  8321 ;; *************** function i2_recv_msg *****************
  8322 ;; Defined at:
  8323 ;;		line 63 in file "../src/messages.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8326 ;;		 -> SensorData_MQ(118), FromMainHigh_MQ(118), FromMainLow_MQ(118), ToMainHigh_MQ(118), 
  8327 ;;		 -> ToMainLow_MQ(118), 
  8328 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8329 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8330 ;;		 -> timer0_int_handler@msgtype(2), RAM(3775), main@msgtype(1), 
  8331 ;;  data            2   15[BANK0 ] PTR void 
  8332 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(27), main@ic(60), 
  8333 ;;		 -> main@uc(57), 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8336 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), SensorData_MQ.queue(116), ToMainHigh_MQ.queue(116), 
  8337 ;;		 -> ToMainLow_MQ.queue(116), SensorData_MQ(118), FromMainHigh_MQ(118), FromMainLow_MQ(118), 
  8338 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  8339 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8340 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  1    wreg      char 
  8343 ;; Registers used:
  8344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8350 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8351 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8352 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8353 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8354 ;;Total ram usage:       14 bytes
  8355 ;; Hardware stack levels used:    1
  8356 ;; Hardware stack levels required when called:    1
  8357 ;; This function calls:
  8358 ;;		i2_memcpy
  8359 ;; This function is called by:
  8360 ;;		_FromMainHigh_recvmsg
  8361 ;;		_SensorData_recvmsg
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           	psect	text51
  8366  000BB8                     __ptext51:
  8367                           	opt stack 0
  8368  000BB8                     i2_recv_msg:
  8369                           	opt stack 17
  8370                           
  8371                           ;messages.c: 64: unsigned char slot;
  8372                           ;messages.c: 68: msg *qmsg;
  8373                           ;messages.c: 69: size_t tlength;
  8374                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8375                           
  8376                           ;incstack = 0
  8377  000BB8  0100               	movlb	0	; () banked
  8378  000BBA  EE20 F075          	lfsr	2,117
  8379  000BBE  0100               	movlb	0	; () banked
  8380  000BC0  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8381  000BC2  26D9               	addwf	fsr2l,f,c
  8382  000BC4  0100               	movlb	0	; () banked
  8383  000BC6  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8384  000BC8  22DA               	addwfc	fsr2h,f,c
  8385  000BCA  50DF               	movf	indf2,w,c
  8386  000BCC  0100               	movlb	0	; () banked
  8387  000BCE  6F73               	movwf	i2recv_msg@slot& (0+255),b
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8391  000BD0  0100               	movlb	0	; () banked
  8392  000BD2  5173               	movf	i2recv_msg@slot& (0+255),w,b
  8393  000BD4  0D1D               	mullw	29
  8394  000BD6  50F3               	movf	prodl,w,c
  8395  000BD8  0100               	movlb	0	; () banked
  8396  000BDA  256A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8397  000BDC  0100               	movlb	0	; () banked
  8398  000BDE  6F76               	movwf	i2recv_msg@qmsg& (0+255),b
  8399  000BE0  50F4               	movf	prodh,w,c
  8400  000BE2  0100               	movlb	0	; () banked
  8401  000BE4  216B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8402  000BE6  0100               	movlb	0	; () banked
  8403  000BE8  6F77               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;messages.c: 74: if (qmsg->full == 1) {
  8407  000BEA  0E01               	movlw	1
  8408  000BEC  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8409  000BF0  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8410  000BF4  62DF               	cpfseq	indf2,c
  8411  000BF6  D06D               	goto	i2l2200
  8412                           
  8413                           ; BSR set to: 0
  8414                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8415  000BF8  0100               	movlb	0	; () banked
  8416  000BFA  EE20 F001          	lfsr	2,1
  8417  000BFE  0100               	movlb	0	; () banked
  8418  000C00  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8419  000C02  26D9               	addwf	fsr2l,f,c
  8420  000C04  0100               	movlb	0	; () banked
  8421  000C06  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8422  000C08  22DA               	addwfc	fsr2h,f,c
  8423  000C0A  50DF               	movf	indf2,w,c
  8424  000C0C  0100               	movlb	0	; () banked
  8425  000C0E  5D6C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8426  000C10  B0D8               	btfsc	status,0,c
  8427  000C12  D002               	goto	i2l2184
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;messages.c: 77: return (-3);
  8431  000C14  0EFD               	movlw	253
  8432  000C16  0012               	return	
  8433  000C18                     i2l2184:
  8434                           
  8435                           ; BSR set to: 0
  8436                           ;messages.c: 78: }
  8437                           ;messages.c: 80: tlength = qmsg->length;
  8438  000C18  0100               	movlb	0	; () banked
  8439  000C1A  EE20 F001          	lfsr	2,1
  8440  000C1E  0100               	movlb	0	; () banked
  8441  000C20  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8442  000C22  26D9               	addwf	fsr2l,f,c
  8443  000C24  0100               	movlb	0	; () banked
  8444  000C26  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8445  000C28  22DA               	addwfc	fsr2h,f,c
  8446  000C2A  50DF               	movf	indf2,w,c
  8447  000C2C  0100               	movlb	0	; () banked
  8448  000C2E  6F71               	movwf	??i2_recv_msg& (0+255),b
  8449  000C30  0100               	movlb	0	; () banked
  8450  000C32  5171               	movf	??i2_recv_msg& (0+255),w,b
  8451  000C34  0100               	movlb	0	; () banked
  8452  000C36  6F74               	movwf	i2recv_msg@tlength& (0+255),b
  8453  000C38  0100               	movlb	0	; () banked
  8454  000C3A  6B75               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  8455                           
  8456                           ; BSR set to: 0
  8457                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  8458  000C3C  0100               	movlb	0	; () banked
  8459  000C3E  C070  F061         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  8460  000C42  0100               	movlb	0	; () banked
  8461  000C44  C06F  F060         	movff	i2recv_msg@data,i2memcpy@d1
  8462  000C48  0E03               	movlw	3
  8463  000C4A  0100               	movlb	0	; () banked
  8464  000C4C  2576               	addwf	i2recv_msg@qmsg& (0+255),w,b
  8465  000C4E  0100               	movlb	0	; () banked
  8466  000C50  6F71               	movwf	??i2_recv_msg& (0+255),b
  8467  000C52  0E00               	movlw	0
  8468  000C54  0100               	movlb	0	; () banked
  8469  000C56  2177               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  8470  000C58  0100               	movlb	0	; () banked
  8471  000C5A  6F72               	movwf	(??i2_recv_msg+1)& (0+255),b
  8472  000C5C  C071  F062         	movff	??i2_recv_msg,i2memcpy@s1
  8473  000C60  C072  F063         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  8474  000C64  C074  F064         	movff	i2recv_msg@tlength,i2memcpy@n
  8475  000C68  C075  F065         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  8476  000C6C  EC01  F00C         	call	i2_memcpy	;wreg free
  8477                           
  8478                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  8479  000C70  0100               	movlb	0	; () banked
  8480  000C72  EE20 F075          	lfsr	2,117
  8481  000C76  0100               	movlb	0	; () banked
  8482  000C78  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8483  000C7A  26D9               	addwf	fsr2l,f,c
  8484  000C7C  0100               	movlb	0	; () banked
  8485  000C7E  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8486  000C80  22DA               	addwfc	fsr2h,f,c
  8487  000C82  0100               	movlb	0	; () banked
  8488  000C84  EE10 F075          	lfsr	1,117
  8489  000C88  0100               	movlb	0	; () banked
  8490  000C8A  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8491  000C8C  26E1               	addwf	fsr1l,f,c
  8492  000C8E  0100               	movlb	0	; () banked
  8493  000C90  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8494  000C92  22E2               	addwfc	fsr1h,f,c
  8495  000C94  50E7               	movf	indf1,w,c
  8496  000C96  0100               	movlb	0	; () banked
  8497  000C98  6F71               	movwf	??i2_recv_msg& (0+255),b
  8498  000C9A  0100               	movlb	0	; () banked
  8499  000C9C  2971               	incf	??i2_recv_msg& (0+255),w,b
  8500  000C9E  0B03               	andlw	3
  8501  000CA0  6EDF               	movwf	indf2,c
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  8505  000CA2  0100               	movlb	0	; () banked
  8506  000CA4  EE20 F002          	lfsr	2,2
  8507  000CA8  0100               	movlb	0	; () banked
  8508  000CAA  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8509  000CAC  26D9               	addwf	fsr2l,f,c
  8510  000CAE  0100               	movlb	0	; () banked
  8511  000CB0  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8512  000CB2  22DA               	addwfc	fsr2h,f,c
  8513  000CB4  C06D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  8514  000CB8  C06E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  8515  000CBC  CFDF FFE7          	movff	indf2,indf1
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;messages.c: 91: qmsg->full = 0;
  8519  000CC0  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8520  000CC4  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8521  000CC8  0E00               	movlw	0
  8522  000CCA  6EDF               	movwf	indf2,c
  8523                           
  8524                           ; BSR set to: 0
  8525                           ;messages.c: 92: return (tlength);
  8526  000CCC  0100               	movlb	0	; () banked
  8527  000CCE  5174               	movf	i2recv_msg@tlength& (0+255),w,b
  8528  000CD0  0012               	return	
  8529  000CD2                     i2l2200:
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;messages.c: 94: return (-4);
  8533  000CD2  0EFC               	movlw	252
  8534  000CD4  0012               	return	
  8535  000CD6                     __end_ofi2_recv_msg:
  8536                           	opt stack 0
  8537                           pclatu	equ	0xFFB
  8538                           pclath	equ	0xFFA
  8539                           tblptru	equ	0xFF8
  8540                           tblptrh	equ	0xFF7
  8541                           tblptrl	equ	0xFF6
  8542                           tablat	equ	0xFF5
  8543                           prodh	equ	0xFF4
  8544                           prodl	equ	0xFF3
  8545                           intcon	equ	0xFF2
  8546                           intcon2	equ	0xFF1
  8547                           postinc0	equ	0xFEE
  8548                           fsr0h	equ	0xFEA
  8549                           fsr0l	equ	0xFE9
  8550                           wreg	equ	0xFE8
  8551                           indf1	equ	0xFE7
  8552                           fsr1h	equ	0xFE2
  8553                           fsr1l	equ	0xFE1
  8554                           bsr	equ	0xFE0
  8555                           indf2	equ	0xFDF
  8556                           postinc2	equ	0xFDE
  8557                           postdec2	equ	0xFDD
  8558                           fsr2h	equ	0xFDA
  8559                           fsr2l	equ	0xFD9
  8560                           status	equ	0xFD8
  8561                           
  8562 ;; *************** function i2_memcpy *****************
  8563 ;; Defined at:
  8564 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\memcpy.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  d1              2    0[BANK0 ] PTR void 
  8567 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), SensorData_MQ.queue(116), ToMainHigh_MQ.queue(116), 
  8568 ;;		 -> ToMainLow_MQ.queue(116), timer0_int_handler@val(2), NULL(0), SensorData_MQ(118), 
  8569 ;;		 -> FromMainHigh_MQ(118), FromMainLow_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  8570 ;;		 -> main@msgbuffer(27), main@ic(60), main@uc(57), 
  8571 ;;  s1              2    2[BANK0 ] PTR const void 
  8572 ;;		 -> ToMainLow_MQ.data(26), ToMainHigh_MQ.data(26), FromMainLow_MQ.data(26), FromMainHigh_MQ.data(26), 
  8573 ;;		 -> SensorData_MQ.data(26), ToMainLow_MQ.queue.data(26), ToMainHigh_MQ.queue.data(26), SensorData_MQ.queue.data(26),
      + 
  8574 ;;		 -> FromMainHigh_MQ.queue.data(26), FromMainLow_MQ.queue.data(26), timer0_int_handler@val(2), NULL(0), 
  8575 ;;		 -> uart_recv_int_handler@readin(23), i2c_int_handler@error_buf(3), SensorData_MQ(118), FromMainHigh_MQ(118), 
  8576 ;;		 -> FromMainLow_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), main@msgbuffer(27), 
  8577 ;;		 -> main@t1thread_data(2), main@ic(60), 
  8578 ;;  n               2    4[BANK0 ] unsigned int 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8581 ;;		 -> ToMainLow_MQ.data(26), ToMainHigh_MQ.data(26), FromMainLow_MQ.data(26), FromMainHigh_MQ.data(26), 
  8582 ;;		 -> SensorData_MQ.data(26), ToMainLow_MQ.queue.data(26), ToMainHigh_MQ.queue.data(26), SensorData_MQ.queue.data(26),
      + 
  8583 ;;		 -> FromMainHigh_MQ.queue.data(26), FromMainLow_MQ.queue.data(26), timer0_int_handler@val(2), NULL(0), 
  8584 ;;		 -> uart_recv_int_handler@readin(23), i2c_int_handler@error_buf(3), SensorData_MQ(118), FromMainHigh_MQ(118), 
  8585 ;;		 -> FromMainLow_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), main@msgbuffer(27), 
  8586 ;;		 -> main@t1thread_data(2), main@ic(60), 
  8587 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8588 ;;		 -> FromMainLow_MQ.queue(116), FromMainHigh_MQ.queue(116), SensorData_MQ.queue(116), ToMainHigh_MQ.queue(116), 
  8589 ;;		 -> ToMainLow_MQ.queue(116), timer0_int_handler@val(2), NULL(0), SensorData_MQ(118), 
  8590 ;;		 -> FromMainHigh_MQ(118), FromMainLow_MQ(118), ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  8591 ;;		 -> main@msgbuffer(27), main@ic(60), main@uc(57), 
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  2    0[BANK0 ] PTR void 
  8594 ;; Registers used:
  8595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8601 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8602 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8604 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8605 ;;Total ram usage:       10 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; This function calls:
  8608 ;;		Nothing
  8609 ;; This function is called by:
  8610 ;;		i2_send_msg
  8611 ;;		i2_recv_msg
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	text52
  8616  001802                     __ptext52:
  8617                           	opt stack 0
  8618  001802                     i2_memcpy:
  8619                           	opt stack 17
  8620                           
  8621                           ; BSR set to: 0
  8622                           ;incstack = 0
  8623  001802  0100               	movlb	0	; () banked
  8624  001804  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8625  001808  0100               	movlb	0	; () banked
  8626  00180A  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  8627  00180E  0100               	movlb	0	; () banked
  8628  001810  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8629  001814  0100               	movlb	0	; () banked
  8630  001816  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  8631  00181A  D010               	goto	i2l2042
  8632  00181C                     i2l2036:
  8633                           
  8634                           ; BSR set to: 0
  8635  00181C  C068  FFD9         	movff	i2memcpy@s,fsr2l
  8636  001820  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  8637  001824  C066  FFE1         	movff	i2memcpy@d,fsr1l
  8638  001828  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  8639  00182C  CFDF FFE7          	movff	indf2,indf1
  8640                           
  8641                           ; BSR set to: 0
  8642  001830  0100               	movlb	0	; () banked
  8643  001832  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  8644  001834  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  8645                           
  8646                           ; BSR set to: 0
  8647  001836  0100               	movlb	0	; () banked
  8648  001838  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  8649  00183A  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  8650  00183C                     i2l2042:
  8651                           
  8652                           ; BSR set to: 0
  8653  00183C  0100               	movlb	0	; () banked
  8654  00183E  0764               	decf	i2memcpy@n& (0+255),f,b
  8655  001840  A0D8               	btfss	status,0,c
  8656  001842  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  8657  001844  0100               	movlb	0	; () banked
  8658  001846  2964               	incf	i2memcpy@n& (0+255),w,b
  8659  001848  B4D8               	btfsc	status,2,c
  8660  00184A  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  8661  00184C  B4D8               	btfsc	status,2,c
  8662                           
  8663                           ; BSR set to: 0
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;	Return value of i2_memcpy is never used
  8667  00184E  0012               	return	
  8668  001850  D7E5               	goto	i2l2036
  8669  001852                     __end_ofi2_memcpy:
  8670                           	opt stack 0
  8671                           pclatu	equ	0xFFB
  8672                           pclath	equ	0xFFA
  8673                           tblptru	equ	0xFF8
  8674                           tblptrh	equ	0xFF7
  8675                           tblptrl	equ	0xFF6
  8676                           tablat	equ	0xFF5
  8677                           prodh	equ	0xFF4
  8678                           prodl	equ	0xFF3
  8679                           intcon	equ	0xFF2
  8680                           intcon2	equ	0xFF1
  8681                           postinc0	equ	0xFEE
  8682                           fsr0h	equ	0xFEA
  8683                           fsr0l	equ	0xFE9
  8684                           wreg	equ	0xFE8
  8685                           indf1	equ	0xFE7
  8686                           fsr1h	equ	0xFE2
  8687                           fsr1l	equ	0xFE1
  8688                           bsr	equ	0xFE0
  8689                           indf2	equ	0xFDF
  8690                           postinc2	equ	0xFDE
  8691                           postdec2	equ	0xFDD
  8692                           fsr2h	equ	0xFDA
  8693                           fsr2l	equ	0xFD9
  8694                           status	equ	0xFD8
  8695                           
  8696 ;; *************** function _SleepIfOkay *****************
  8697 ;; Defined at:
  8698 ;;		line 247 in file "../src/messages.c"
  8699 ;; Parameters:    Size  Location     Type
  8700 ;;		None
  8701 ;; Auto vars:     Size  Location     Type
  8702 ;;		None
  8703 ;; Return value:  Size  Location     Type
  8704 ;;		None               void
  8705 ;; Registers used:
  8706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8707 ;; Tracked objects:
  8708 ;;		On entry : 0/0
  8709 ;;		On exit  : 0/0
  8710 ;;		Unchanged: 0/0
  8711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8716 ;;Total ram usage:        0 bytes
  8717 ;; Hardware stack levels used:    1
  8718 ;; Hardware stack levels required when called:    2
  8719 ;; This function calls:
  8720 ;;		_enter_sleep_mode
  8721 ;;		i2_check_msg
  8722 ;;		i2_in_high_int
  8723 ;;		i2_in_low_int
  8724 ;; This function is called by:
  8725 ;;		_InterruptHandlerHigh
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729                           	psect	text53
  8730  001696                     __ptext53:
  8731                           	opt stack 0
  8732  001696                     _SleepIfOkay:
  8733                           	opt stack 18
  8734                           
  8735                           ;messages.c: 249: if (MQ_Main_Willing_to_block == 0) {
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;incstack = 0
  8739  001696  0100               	movlb	0	; () banked
  8740  001698  67BC               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  8741  00169A  D001               	goto	i2l2554
  8742  00169C  0012               	return	
  8743  00169E                     i2l2554:
  8744                           
  8745                           ; BSR set to: 0
  8746                           ;messages.c: 251: }
  8747                           ;messages.c: 254: if (in_low_int()) {
  8748  00169E  EC8D  F00C         	call	i2_in_low_int	;wreg free
  8749  0016A2  0100               	movlb	0	; () banked
  8750  0016A4  5163               	movf	(?i2_in_low_int+1)& (0+255),w,b
  8751  0016A6  0100               	movlb	0	; () banked
  8752  0016A8  1162               	iorwf	?i2_in_low_int& (0+255),w,b
  8753  0016AA  A4D8               	btfss	status,2,c
  8754  0016AC  0012               	return	
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;messages.c: 256: }
  8758                           ;messages.c: 259: if (!in_high_int()) {
  8759                           
  8760                           ; BSR set to: 0
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;messages.c: 255: return;
  8764  0016AE  EC9E  F00E         	call	i2_in_high_int	;wreg free
  8765  0016B2  0100               	movlb	0	; () banked
  8766  0016B4  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8767  0016B6  0100               	movlb	0	; () banked
  8768  0016B8  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8769  0016BA  B4D8               	btfsc	status,2,c
  8770  0016BC  0012               	return	
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;messages.c: 261: }
  8774                           ;messages.c: 266: if (check_msg(&ToMainHigh_MQ)) {
  8775                           
  8776                           ; BSR set to: 0
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;messages.c: 260: return;
  8780  0016BE  0102               	movlb	2	; () banked
  8781  0016C0  0E02               	movlw	high _ToMainHigh_MQ
  8782  0016C2  0100               	movlb	0	; () banked
  8783  0016C4  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8784  0016C6  0102               	movlb	2	; () banked
  8785  0016C8  0E00               	movlw	low _ToMainHigh_MQ
  8786  0016CA  0100               	movlb	0	; () banked
  8787  0016CC  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8788  0016CE  EC87  F00D         	call	i2_check_msg	;wreg free
  8789  0016D2  0900               	iorlw	0
  8790  0016D4  A4D8               	btfss	status,2,c
  8791  0016D6  0012               	return	
  8792                           
  8793                           ;messages.c: 268: }
  8794                           ;messages.c: 269: if (check_msg(&ToMainLow_MQ)) {
  8795                           
  8796                           ;messages.c: 267: return;
  8797  0016D8  0102               	movlb	2	; () banked
  8798  0016DA  0E02               	movlw	high _ToMainLow_MQ
  8799  0016DC  0100               	movlb	0	; () banked
  8800  0016DE  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8801  0016E0  0102               	movlb	2	; () banked
  8802  0016E2  0E76               	movlw	low _ToMainLow_MQ
  8803  0016E4  0100               	movlb	0	; () banked
  8804  0016E6  6F60               	movwf	i2check_msg@qptr& (0+255),b
  8805  0016E8  EC87  F00D         	call	i2_check_msg	;wreg free
  8806  0016EC  0900               	iorlw	0
  8807  0016EE  B4D8               	btfsc	status,2,c
  8808                           
  8809                           ;messages.c: 271: }
  8810                           ;messages.c: 272: enter_sleep_mode();
  8811                           
  8812                           ;messages.c: 270: return;
  8813  0016F0  ECB1  F00E         	call	_enter_sleep_mode	;wreg free
  8814  0016F4  0012               	return	
  8815  0016F6                     __end_of_SleepIfOkay:
  8816                           	opt stack 0
  8817                           pclatu	equ	0xFFB
  8818                           pclath	equ	0xFFA
  8819                           tblptru	equ	0xFF8
  8820                           tblptrh	equ	0xFF7
  8821                           tblptrl	equ	0xFF6
  8822                           tablat	equ	0xFF5
  8823                           prodh	equ	0xFF4
  8824                           prodl	equ	0xFF3
  8825                           intcon	equ	0xFF2
  8826                           intcon2	equ	0xFF1
  8827                           postinc0	equ	0xFEE
  8828                           fsr0h	equ	0xFEA
  8829                           fsr0l	equ	0xFE9
  8830                           wreg	equ	0xFE8
  8831                           indf1	equ	0xFE7
  8832                           fsr1h	equ	0xFE2
  8833                           fsr1l	equ	0xFE1
  8834                           bsr	equ	0xFE0
  8835                           indf2	equ	0xFDF
  8836                           postinc2	equ	0xFDE
  8837                           postdec2	equ	0xFDD
  8838                           fsr2h	equ	0xFDA
  8839                           fsr2l	equ	0xFD9
  8840                           status	equ	0xFD8
  8841                           
  8842 ;; *************** function i2_in_low_int *****************
  8843 ;; Defined at:
  8844 ;;		line 30 in file "../src/interrupts.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;		None
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;		None
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  2    2[BANK0 ] int 
  8851 ;; Registers used:
  8852 ;;		wreg, status,2, status,0, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8858 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8861 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8862 ;;Total ram usage:        2 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:    1
  8865 ;; This function calls:
  8866 ;;		i2_in_high_int
  8867 ;; This function is called by:
  8868 ;;		_SleepIfOkay
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           	psect	text54
  8873  00191A                     __ptext54:
  8874                           	opt stack 0
  8875  00191A                     i2_in_low_int:
  8876                           	opt stack 18
  8877                           
  8878                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8879                           
  8880                           ;incstack = 0
  8881  00191A  ACF2               	btfss	intcon,6,c	;volatile
  8882  00191C  D007               	goto	i2l2374
  8883                           
  8884                           ;interrupts.c: 32: return (0);
  8885  00191E  0E00               	movlw	0
  8886  001920  0100               	movlb	0	; () banked
  8887  001922  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8888  001924  0E00               	movlw	0
  8889  001926  0100               	movlb	0	; () banked
  8890  001928  6F62               	movwf	?i2_in_low_int& (0+255),b
  8891  00192A  0012               	return	
  8892  00192C                     i2l2374:
  8893  00192C  EC9E  F00E         	call	i2_in_high_int	;wreg free
  8894  001930  0100               	movlb	0	; () banked
  8895  001932  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8896  001934  0100               	movlb	0	; () banked
  8897  001936  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  8898  001938  B4D8               	btfsc	status,2,c
  8899  00193A  D007               	goto	i2l2382
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;interrupts.c: 34: return (0);
  8903  00193C  0E00               	movlw	0
  8904  00193E  0100               	movlb	0	; () banked
  8905  001940  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8906  001942  0E00               	movlw	0
  8907  001944  0100               	movlb	0	; () banked
  8908  001946  6F62               	movwf	?i2_in_low_int& (0+255),b
  8909  001948  0012               	return	
  8910  00194A                     i2l2382:
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;interrupts.c: 36: return (1);
  8914  00194A  0E00               	movlw	0
  8915  00194C  0100               	movlb	0	; () banked
  8916  00194E  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  8917  001950  0E01               	movlw	1
  8918  001952  0100               	movlb	0	; () banked
  8919  001954  6F62               	movwf	?i2_in_low_int& (0+255),b
  8920  001956  0012               	return	
  8921  001958                     __end_ofi2_in_low_int:
  8922                           	opt stack 0
  8923                           pclatu	equ	0xFFB
  8924                           pclath	equ	0xFFA
  8925                           tblptru	equ	0xFF8
  8926                           tblptrh	equ	0xFF7
  8927                           tblptrl	equ	0xFF6
  8928                           tablat	equ	0xFF5
  8929                           prodh	equ	0xFF4
  8930                           prodl	equ	0xFF3
  8931                           intcon	equ	0xFF2
  8932                           intcon2	equ	0xFF1
  8933                           postinc0	equ	0xFEE
  8934                           fsr0h	equ	0xFEA
  8935                           fsr0l	equ	0xFE9
  8936                           wreg	equ	0xFE8
  8937                           indf1	equ	0xFE7
  8938                           fsr1h	equ	0xFE2
  8939                           fsr1l	equ	0xFE1
  8940                           bsr	equ	0xFE0
  8941                           indf2	equ	0xFDF
  8942                           postinc2	equ	0xFDE
  8943                           postdec2	equ	0xFDD
  8944                           fsr2h	equ	0xFDA
  8945                           fsr2l	equ	0xFD9
  8946                           status	equ	0xFD8
  8947                           
  8948 ;; *************** function i2_in_high_int *****************
  8949 ;; Defined at:
  8950 ;;		line 22 in file "../src/interrupts.c"
  8951 ;; Parameters:    Size  Location     Type
  8952 ;;		None
  8953 ;; Auto vars:     Size  Location     Type
  8954 ;;		None
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  2    0[BANK0 ] int 
  8957 ;; Registers used:
  8958 ;;		wreg, status,2
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8964 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8967 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8968 ;;Total ram usage:        2 bytes
  8969 ;; Hardware stack levels used:    1
  8970 ;; This function calls:
  8971 ;;		Nothing
  8972 ;; This function is called by:
  8973 ;;		_SleepIfOkay
  8974 ;;		i2_in_low_int
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           	psect	text55
  8979  001D3C                     __ptext55:
  8980                           	opt stack 0
  8981  001D3C                     i2_in_high_int:
  8982                           	opt stack 18
  8983                           
  8984                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;incstack = 0
  8988  001D3C  0E00               	movlw	0
  8989  001D3E  AEF2               	btfss	intcon,7,c	;volatile
  8990  001D40  0E01               	movlw	1
  8991  001D42  0100               	movlb	0	; () banked
  8992  001D44  6F60               	movwf	?i2_in_high_int& (0+255),b
  8993  001D46  0100               	movlb	0	; () banked
  8994  001D48  6B61               	clrf	(?i2_in_high_int+1)& (0+255),b
  8995  001D4A  0012               	return	
  8996  001D4C                     __end_ofi2_in_high_int:
  8997                           	opt stack 0
  8998                           pclatu	equ	0xFFB
  8999                           pclath	equ	0xFFA
  9000                           tblptru	equ	0xFF8
  9001                           tblptrh	equ	0xFF7
  9002                           tblptrl	equ	0xFF6
  9003                           tablat	equ	0xFF5
  9004                           prodh	equ	0xFF4
  9005                           prodl	equ	0xFF3
  9006                           intcon	equ	0xFF2
  9007                           intcon2	equ	0xFF1
  9008                           postinc0	equ	0xFEE
  9009                           fsr0h	equ	0xFEA
  9010                           fsr0l	equ	0xFE9
  9011                           wreg	equ	0xFE8
  9012                           indf1	equ	0xFE7
  9013                           fsr1h	equ	0xFE2
  9014                           fsr1l	equ	0xFE1
  9015                           bsr	equ	0xFE0
  9016                           indf2	equ	0xFDF
  9017                           postinc2	equ	0xFDE
  9018                           postdec2	equ	0xFDD
  9019                           fsr2h	equ	0xFDA
  9020                           fsr2l	equ	0xFD9
  9021                           status	equ	0xFD8
  9022                           
  9023 ;; *************** function i2_check_msg *****************
  9024 ;; Defined at:
  9025 ;;		line 241 in file "../src/messages.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9028 ;;		 -> ToMainHigh_MQ(118), ToMainLow_MQ(118), 
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;		None
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  1    wreg      unsigned char 
  9033 ;; Registers used:
  9034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9040 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9042 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9043 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9044 ;;Total ram usage:        3 bytes
  9045 ;; Hardware stack levels used:    1
  9046 ;; This function calls:
  9047 ;;		Nothing
  9048 ;; This function is called by:
  9049 ;;		_SleepIfOkay
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053                           	psect	text56
  9054  001B0E                     __ptext56:
  9055                           	opt stack 0
  9056  001B0E                     i2_check_msg:
  9057                           	opt stack 19
  9058                           
  9059                           ;messages.c: 242: return (qptr->queue[qptr->cur_read_ind].full);
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;incstack = 0
  9063  001B0E  0100               	movlb	0	; () banked
  9064  001B10  EE20 F075          	lfsr	2,117
  9065  001B14  0100               	movlb	0	; () banked
  9066  001B16  5160               	movf	i2check_msg@qptr& (0+255),w,b
  9067  001B18  26D9               	addwf	fsr2l,f,c
  9068  001B1A  0100               	movlb	0	; () banked
  9069  001B1C  5161               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  9070  001B1E  22DA               	addwfc	fsr2h,f,c
  9071  001B20  50DF               	movf	indf2,w,c
  9072  001B22  0100               	movlb	0	; () banked
  9073  001B24  6F62               	movwf	??i2_check_msg& (0+255),b
  9074  001B26  0100               	movlb	0	; () banked
  9075  001B28  5162               	movf	??i2_check_msg& (0+255),w,b
  9076  001B2A  0D1D               	mullw	29
  9077  001B2C  50F3               	movf	prodl,w,c
  9078  001B2E  0100               	movlb	0	; () banked
  9079  001B30  2560               	addwf	i2check_msg@qptr& (0+255),w,b
  9080  001B32  6ED9               	movwf	fsr2l,c
  9081  001B34  50F4               	movf	prodh,w,c
  9082  001B36  0100               	movlb	0	; () banked
  9083  001B38  2161               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  9084  001B3A  6EDA               	movwf	fsr2h,c
  9085  001B3C  50DF               	movf	indf2,w,c
  9086  001B3E  0012               	return	
  9087  001B40                     __end_ofi2_check_msg:
  9088                           	opt stack 0
  9089                           pclatu	equ	0xFFB
  9090                           pclath	equ	0xFFA
  9091                           tblptru	equ	0xFF8
  9092                           tblptrh	equ	0xFF7
  9093                           tblptrl	equ	0xFF6
  9094                           tablat	equ	0xFF5
  9095                           prodh	equ	0xFF4
  9096                           prodl	equ	0xFF3
  9097                           intcon	equ	0xFF2
  9098                           intcon2	equ	0xFF1
  9099                           postinc0	equ	0xFEE
  9100                           fsr0h	equ	0xFEA
  9101                           fsr0l	equ	0xFE9
  9102                           wreg	equ	0xFE8
  9103                           indf1	equ	0xFE7
  9104                           fsr1h	equ	0xFE2
  9105                           fsr1l	equ	0xFE1
  9106                           bsr	equ	0xFE0
  9107                           indf2	equ	0xFDF
  9108                           postinc2	equ	0xFDE
  9109                           postdec2	equ	0xFDD
  9110                           fsr2h	equ	0xFDA
  9111                           fsr2l	equ	0xFD9
  9112                           status	equ	0xFD8
  9113                           
  9114 ;; *************** function _enter_sleep_mode *****************
  9115 ;; Defined at:
  9116 ;;		line 223 in file "../src/messages.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;		None
  9119 ;; Auto vars:     Size  Location     Type
  9120 ;;		None
  9121 ;; Return value:  Size  Location     Type
  9122 ;;		None               void
  9123 ;; Registers used:
  9124 ;;		None
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 0/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9134 ;;Total ram usage:        0 bytes
  9135 ;; Hardware stack levels used:    1
  9136 ;; This function calls:
  9137 ;;		Nothing
  9138 ;; This function is called by:
  9139 ;;		_SleepIfOkay
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           	psect	text57
  9144  001D62                     __ptext57:
  9145                           	opt stack 0
  9146  001D62                     _enter_sleep_mode:
  9147                           	opt stack 19
  9148                           
  9149                           ;messages.c: 225: OSCCONbits.IDLEN = 1;
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;incstack = 0
  9153  001D62  8ED3               	bsf	4051,7,c	;volatile
  9154  001D64  0003               	sleep		;# 
  9155  001D66  0012               	return	
  9156  001D68                     __end_of_enter_sleep_mode:
  9157                           	opt stack 0
  9158  0000                     pclatu	equ	0xFFB
  9159                           pclath	equ	0xFFA
  9160                           tblptru	equ	0xFF8
  9161                           tblptrh	equ	0xFF7
  9162                           tblptrl	equ	0xFF6
  9163                           tablat	equ	0xFF5
  9164                           prodh	equ	0xFF4
  9165                           prodl	equ	0xFF3
  9166                           intcon	equ	0xFF2
  9167                           intcon2	equ	0xFF1
  9168                           postinc0	equ	0xFEE
  9169                           fsr0h	equ	0xFEA
  9170                           fsr0l	equ	0xFE9
  9171                           wreg	equ	0xFE8
  9172                           indf1	equ	0xFE7
  9173                           fsr1h	equ	0xFE2
  9174                           fsr1l	equ	0xFE1
  9175                           bsr	equ	0xFE0
  9176                           indf2	equ	0xFDF
  9177                           postinc2	equ	0xFDE
  9178                           postdec2	equ	0xFDD
  9179                           fsr2h	equ	0xFDA
  9180                           fsr2l	equ	0xFD9
  9181                           status	equ	0xFD8
  9182                           pclatu	equ	0xFFB
  9183                           pclath	equ	0xFFA
  9184                           tblptru	equ	0xFF8
  9185                           tblptrh	equ	0xFF7
  9186                           tblptrl	equ	0xFF6
  9187                           tablat	equ	0xFF5
  9188                           prodh	equ	0xFF4
  9189                           prodl	equ	0xFF3
  9190                           intcon	equ	0xFF2
  9191                           intcon2	equ	0xFF1
  9192                           postinc0	equ	0xFEE
  9193                           fsr0h	equ	0xFEA
  9194                           fsr0l	equ	0xFE9
  9195                           wreg	equ	0xFE8
  9196                           indf1	equ	0xFE7
  9197                           fsr1h	equ	0xFE2
  9198                           fsr1l	equ	0xFE1
  9199                           bsr	equ	0xFE0
  9200                           indf2	equ	0xFDF
  9201                           postinc2	equ	0xFDE
  9202                           postdec2	equ	0xFDD
  9203                           fsr2h	equ	0xFDA
  9204                           fsr2l	equ	0xFD9
  9205                           status	equ	0xFD8
  9206                           
  9207                           	psect	param0
  9208  0000                     pclatu	equ	0xFFB
  9209                           pclath	equ	0xFFA
  9210                           tblptru	equ	0xFF8
  9211                           tblptrh	equ	0xFF7
  9212                           tblptrl	equ	0xFF6
  9213                           tablat	equ	0xFF5
  9214                           prodh	equ	0xFF4
  9215                           prodl	equ	0xFF3
  9216                           intcon	equ	0xFF2
  9217                           intcon2	equ	0xFF1
  9218                           postinc0	equ	0xFEE
  9219                           fsr0h	equ	0xFEA
  9220                           fsr0l	equ	0xFE9
  9221                           wreg	equ	0xFE8
  9222                           indf1	equ	0xFE7
  9223                           fsr1h	equ	0xFE2
  9224                           fsr1l	equ	0xFE1
  9225                           bsr	equ	0xFE0
  9226                           indf2	equ	0xFDF
  9227                           postinc2	equ	0xFDE
  9228                           postdec2	equ	0xFDD
  9229                           fsr2h	equ	0xFDA
  9230                           fsr2l	equ	0xFD9
  9231                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         592
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     67      70
    BANK0           160     90      93
    BANK1           256    151     151
    BANK2           256      0     236
    BANK3           256      0     236
    BANK4           256      0     118
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 118
		 -> FromMainLow_MQ.queue(BANK3[116]), FromMainHigh_MQ.queue(BANK3[116]), SensorData_MQ.queue(BANK4[116]), ToMainHigh_MQ.queue(BANK2[116]), 
		 -> ToMainLow_MQ.queue(BANK2[116]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), SensorData_MQ(BANK4[118]), 
		 -> FromMainHigh_MQ(BANK3[118]), FromMainLow_MQ(BANK3[118]), ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK2[118]), 
		 -> main@msgbuffer(BANK1[27]), main@ic(BANK1[60]), main@uc(BANK1[57]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 118
		 -> FromMainLow_MQ.queue(BANK3[116]), FromMainHigh_MQ.queue(BANK3[116]), SensorData_MQ.queue(BANK4[116]), ToMainHigh_MQ.queue(BANK2[116]), 
		 -> ToMainLow_MQ.queue(BANK2[116]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), SensorData_MQ(BANK4[118]), 
		 -> FromMainHigh_MQ(BANK3[118]), FromMainLow_MQ(BANK3[118]), ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK2[118]), 
		 -> main@msgbuffer(BANK1[27]), main@ic(BANK1[60]), main@uc(BANK1[57]), 

    memcpy@s1	PTR const void  size(2) Largest target is 118
		 -> ToMainLow_MQ.data(BANK2[26]), ToMainHigh_MQ.data(BANK2[26]), FromMainLow_MQ.data(BANK3[26]), FromMainHigh_MQ.data(BANK3[26]), 
		 -> SensorData_MQ.data(BANK4[26]), ToMainLow_MQ.queue.data(BANK2[26]), ToMainHigh_MQ.queue.data(BANK2[26]), SensorData_MQ.queue.data(BANK4[26]), 
		 -> FromMainHigh_MQ.queue.data(BANK3[26]), FromMainLow_MQ.queue.data(BANK3[26]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> uart_recv_int_handler@readin(COMRAM[23]), i2c_int_handler@error_buf(BANK0[3]), SensorData_MQ(BANK4[118]), FromMainHigh_MQ(BANK3[118]), 
		 -> FromMainLow_MQ(BANK3[118]), ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK2[118]), main@msgbuffer(BANK1[27]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[60]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 118
		 -> ToMainLow_MQ.data(BANK2[26]), ToMainHigh_MQ.data(BANK2[26]), FromMainLow_MQ.data(BANK3[26]), FromMainHigh_MQ.data(BANK3[26]), 
		 -> SensorData_MQ.data(BANK4[26]), ToMainLow_MQ.queue.data(BANK2[26]), ToMainHigh_MQ.queue.data(BANK2[26]), SensorData_MQ.queue.data(BANK4[26]), 
		 -> FromMainHigh_MQ.queue.data(BANK3[26]), FromMainLow_MQ.queue.data(BANK3[26]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> uart_recv_int_handler@readin(COMRAM[23]), i2c_int_handler@error_buf(BANK0[3]), SensorData_MQ(BANK4[118]), FromMainHigh_MQ(BANK3[118]), 
		 -> FromMainLow_MQ(BANK3[118]), ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK2[118]), main@msgbuffer(BANK1[27]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[60]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    uart_send@msg_buffer	PTR unsigned char  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 57
		 -> main@uc(BANK1[57]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 57
		 -> NULL(NULL[0]), main@uc(BANK1[57]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 60
		 -> main@ic(BANK1[60]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 60
		 -> NULL(NULL[0]), main@ic(BANK1[60]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 60
		 -> NULL(NULL[0]), main@ic(BANK1[60]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 118
		 -> ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK2[118]), 

    SensorData_recvmsg@data	PTR void  size(2) Largest target is 60
		 -> NULL(NULL[0]), main@ic(BANK1[60]), 

    SensorData_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), 

    SensorData_sendmsg@data	PTR void  size(2) Largest target is 23
		 -> uart_recv_int_handler@readin(COMRAM[23]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 57
		 -> NULL(NULL[0]), main@uc(BANK1[57]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 60
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[60]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 27
		 -> main@msgbuffer(BANK1[27]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 3775
		 -> timer0_int_handler@msgtype(BANK0[2]), RAM(DATA[3775]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 60
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK1[27]), main@ic(BANK1[60]), 
		 -> main@uc(BANK1[57]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 118
		 -> FromMainLow_MQ.queue(BANK3[116]), FromMainHigh_MQ.queue(BANK3[116]), SensorData_MQ.queue(BANK4[116]), ToMainHigh_MQ.queue(BANK2[116]), 
		 -> ToMainLow_MQ.queue(BANK2[116]), SensorData_MQ(BANK4[118]), FromMainHigh_MQ(BANK3[118]), FromMainLow_MQ(BANK3[118]), 
		 -> ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK2[118]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 118
		 -> SensorData_MQ(BANK4[118]), FromMainHigh_MQ(BANK3[118]), FromMainLow_MQ(BANK3[118]), ToMainHigh_MQ(BANK2[118]), 
		 -> ToMainLow_MQ(BANK2[118]), 

    sp__memcpy	PTR void  size(2) Largest target is 118
		 -> FromMainLow_MQ.queue(BANK3[116]), FromMainHigh_MQ.queue(BANK3[116]), SensorData_MQ.queue(BANK4[116]), ToMainHigh_MQ.queue(BANK2[116]), 
		 -> ToMainLow_MQ.queue(BANK2[116]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), SensorData_MQ(BANK4[118]), 
		 -> FromMainHigh_MQ(BANK3[118]), FromMainLow_MQ(BANK3[118]), ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK2[118]), 
		 -> main@msgbuffer(BANK1[27]), main@ic(BANK1[60]), main@uc(BANK1[57]), 

    send_msg@data	PTR void  size(2) Largest target is 60
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), uart_recv_int_handler@readin(COMRAM[23]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> main@msgbuffer(BANK1[27]), main@t1thread_data(BANK1[2]), main@ic(BANK1[60]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 118
		 -> FromMainLow_MQ.queue(BANK3[116]), FromMainHigh_MQ.queue(BANK3[116]), SensorData_MQ.queue(BANK4[116]), ToMainHigh_MQ.queue(BANK2[116]), 
		 -> ToMainLow_MQ.queue(BANK2[116]), SensorData_MQ(BANK4[118]), FromMainHigh_MQ(BANK3[118]), FromMainLow_MQ(BANK3[118]), 
		 -> ToMainHigh_MQ(BANK2[118]), ToMainLow_MQ(BANK2[118]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 118
		 -> SensorData_MQ(BANK4[118]), FromMainHigh_MQ(BANK3[118]), FromMainLow_MQ(BANK3[118]), ToMainHigh_MQ(BANK2[118]), 
		 -> ToMainLow_MQ(BANK2[118]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 118
		 -> SensorData_MQ(BANK4[118]), FromMainHigh_MQ(BANK3[118]), FromMainLow_MQ(BANK3[118]), ToMainHigh_MQ(BANK2[118]), 
		 -> ToMainLow_MQ(BANK2[118]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->_SensorData_sendmsg
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _SensorData_sendmsg->i1_send_msg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _uart_send->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _i2c_int_handler->_SensorData_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SensorData_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               156   156      0   11280
                                             89 BANK0      1     1      0
                                              0 BANK1    151   151      0
                         _Open1USART
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                          _uart_send
 ---------------------------------------------------------------------------------
 (1) _uart_send                                            4     0      4    2171
                                             80 BANK0      4     0      4
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    1999
                                             76 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    2555
                                             80 BANK0      9     1      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     211
                                             54 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    1999
                                             76 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1805
                                             64 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     279
                                             54 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             54 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      86
                                             54 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     454
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     454
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             54 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             54 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     270
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             58 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             56 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             54 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             54 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2021
                                             78 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2021
                                             78 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1827
                                             64 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     504
                                             54 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     130
                                             54 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             54 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     284
                                             54 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4442
                                             50 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               2     2      0     929
                                             29 COMRAM     2     2      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4     929
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7     735
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                               27    27      0    2245
                                             26 COMRAM    24    24      0
                         _Read1USART
                 _SensorData_sendmsg
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _SensorData_sendmsg                                   4     1      3    1011
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _Read1USART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0    1268
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    1139
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     817
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    5279
                                             40 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  6     6      0    2432
                                             29 BANK0      6     6      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     132
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    1033
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    2751
                                             29 BANK0     11    11      0
                 _SensorData_recvmsg
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (12) _start_i2c_slave_reply                               5     3      2     130
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     1      3    1163
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6     713
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _SensorData_recvmsg                                  5     1      4    1033
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7     839
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0      96
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2      96
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1USART
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_send
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _Read1USART
     _SensorData_sendmsg
       i1_send_msg
         i1_memcpy
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _SensorData_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start
     _start_i2c_slave_reply
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      76      14       46.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      EC      12       92.2%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      EC      10       92.2%
BITBANK1           100      0       0       7        0.0%
BANK1              100     97      97       8       59.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5A      5D       5       58.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     43      46       1       73.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     388       6        0.0%
DATA                 0      0     388       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sun Dec 07 12:35:23 2014

       _MQ_Main_Willing_to_block 00BC                      _SSPSTATbits 000FC7  
      __end_of_ToMainLow_recvmsg 1A06                               bsr 000FE0  
      __end_of_ToMainLow_sendmsg 1CB2                     __CFG_CP0$OFF 000000  
              i2recv_msg@msgtype 006D                i2recv_msg@tlength 0074  
           ?_FromMainLow_recvmsg 0019                              l119 09EC  
                            l420 1C68                              l419 1C66  
                            l447 19C6                              l448 19C8  
                            l490 1404                              l492 1410  
                            l493 1412                              l733 1CD4  
                            l486 13EC             ?_FromMainLow_sendmsg 00AC  
__size_of_uart_trans_int_handler 00AC             __size_of_WriteTimer0 0012  
           __size_of_WriteTimer1 0012                   _FromMainLow_MQ 0376  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAD                     __CFG_IESO$ON 000000  
                   ?_in_high_int 0096                 ??_init_uart_recv 0098  
                ReadTimer1@timer 0003              i2recv_msg@maxlength 006C  
                           l2022 17EC                             l1039 168C  
                           l2016 17CC                             l2060 190C  
                           l2052 18EE                             l2214 1986  
                           l2226 15AC                             l2244 0AFA  
                           l2260 0BB4                             l2076 0E28  
                           l2362 167E                             l2354 1648  
                           l2356 1654                             l2710 13EE  
                           l2702 13DC                             l2358 165A  
                           l2722 1406                             l2750 162E  
                           l2744 160C                             l2738 15EA  
                           l2872 0960                             l2880 09F2  
                           l2864 092A                             l2874 09A4  
                           l2882 0A0A                             l2892 0A80  
                           l2888 0A3C                             u1870 09AC  
                           u1876 09AE                             u1897 1CD6  
                           i1l52 007A                  _FromMainHigh_MQ 0300  
                 Read1USART@data 0001           ?_block_on_To_msgqueues 0001  
                     i1_recv_msg 0FB2                             _main 0890  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
         __CFG_DSWDTOSC$T1OSCREF 000000                      main@msgtype 0121  
                     i1_send_msg 11FA                             pclat 000FFA  
                    i2_check_msg 1B0E                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0060  
                           start 00C0                       i2_recv_msg 0BB8  
                     i2_send_msg 0EC6        ToMainHigh_recvmsg@msgtype 00AE  
                 send_msg@length 00A2      __size_of_timer0_int_handler 006E  
                    _Delay1KTCYx 1CD0                    __CFG_PLLDIV$3 000000  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00AF  
                          ?_main 0001                            _T0CON 000FD5  
                          _T1CON 000FCD                            i1l503 1CC0  
                __end_of___lwmod 1696                       i1memcpy@d1 0001  
                          i2l311 048E                            i2l305 0410  
                          i2l267 1102                            i2l283 0176  
                          i2l277 0480                            i2l279 0144  
                          i2l297 02EE                       i1memcpy@s1 0003  
    FromMainHigh_recvmsg@msgtype 0078              uart_send@msg_buffer 00B2  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                          _TXREG 000FAE                       i2memcpy@d1 0060  
                 __CFG_FCMEN$OFF 000000                       i2memcpy@s1 0062  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
                __end_of_in_main 1994       ToMainLow_recvmsg@maxlength 00B2  
                     _Read1USART 1CB2          timer0_lthread@msgbuffer 009C  
                 __CFG_T1DIG$OFF 000000          i2c_configure_slave@addr 0096  
                          tablat 000FF5                            status 000FD8  
         _uart_trans_int_handler 114E                 __end_ofi1_memcpy 18DC  
               __end_ofi2_memcpy 1852                  __initialization 1AA8  
      SensorData_sendmsg@msgtype 0017                     __end_of_main 0A9A  
                     _ReadTimer1 1D08      __size_of_timer1_int_handler 002C  
     __size_of_ToMainLow_recvmsg 0036       __size_of_ToMainLow_sendmsg 0022  
  __size_of_FromMainHigh_recvmsg 0036            __size_ofi2_in_low_int 003E  
                 __CFG_OSC$HSPLL 000000    __size_of_FromMainHigh_sendmsg 002E  
                     _Open1USART 13C0                           ??_main 00B9  
                send_msg@msgtype 00A3                    __activetblptr 000002  
                send_msg@tlength 00A7       FromMainLow_sendmsg@msgtype 00AC  
           __end_of_handle_start 114E          ??_uart_recv_int_handler 001B  
                         _T1GCON 000F9A                           i1l2032 18CA  
                         i1l2104 1232                           i1l2026 18AE  
                         i1l2152 0FF8                           i1l2168 1080  
                         i1l2604 11D6                           i1l2802 0070  
                         i1l2590 1326                           i2l2200 0CD2  
                         i2l2042 183C                           i2l2036 181C  
                         i1l2588 1318                           i2l2128 0F14  
                         i2l2312 0D6E                           i2l2330 1136  
                         i2l2308 0CF2                           i2l2500 0454  
                         i2l2412 013C                           i1l2796 0066  
                         i2l2430 01A2                           i2l2406 012E  
                         i2l2184 0C18                           i2l2328 111E  
                         i2l2520 0576                           i2l2512 04F0  
                         i2l2432 01CE                       _OpenTimer0 1C46  
                         i2l2506 0492                           i2l2450 0260  
                         i2l2442 0208                       _OpenTimer1 1994  
                         i2l2382 194A                           i2l2374 192C  
                 __CFG_WDTEN$OFF 000000                           i2l2536 084C  
                         i2l2528 0608                           i2l2472 035C  
                         i2l2448 0220                           i2l2554 169E  
                         i2l2474 039E                           i2l2478 03A6  
                         i2l2782 1378                           i2l2788 1382  
                         _RCREG1 000FAF      __end_of_i2c_configure_slave 1C1E  
                  ??_SleepIfOkay 0064                           _RCSTA1 000FAC  
                         _OSCCON 000FD3                           _SPBRG1 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                 __CFG_WPCFG$OFF 000000                           _SSPBUF 000FC9  
             _SensorData_recvmsg 1A72   __size_of_start_i2c_slave_reply 0104  
                    ?i1_send_msg 000B               _SensorData_sendmsg 1C6C  
                         _TXSTA1 000FAD    __end_of_start_i2c_slave_reply 0DDA  
             timer0_lthread@tptr 0096                   __CFG_WPDIS$OFF 000000  
        FromMainLow_recvmsg@data 001B                      ?i2_recv_msg 006A  
                   i2_in_low_int 191A                      ?i2_send_msg 006A  
                 __CFG_XINST$OFF 000000              ?_SensorData_recvmsg 0078  
            ?_SensorData_sendmsg 0017                  _i2c_int_handler 00C4  
               OpenTimer0@config 0096                           _ic_ptr 00BA  
                      ??___lwmod 009A                    main@msgbuffer 0100  
               __end_of_init_i2c 1570                 OpenTimer1@config 0098  
                         _memcpy 17B2                           clear_0 1AAE  
                         clear_1 1ABA                           clear_2 1AC6  
                         _uc_ptr 0044                           main@ic 015B  
                         main@uc 0122                 __end_of_recv_msg 0BB8  
    start_i2c_slave_reply@length 0064                        ??_in_main 009C  
               __end_of_send_msg 0EC6            timer0_int_handler@val 0081  
        i2c_int_handler@i2c_data 0084                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 0098             ??_SensorData_recvmsg 007C  
           ??_SensorData_sendmsg 001A         ToMainLow_recvmsg@msgtype 00AE  
           __size_of_in_high_int 0010                      ?_Read1USART 0001  
        FromMainLow_sendmsg@data 00AD                       __accesstop 0060  
        __end_of__initialization 1AD2       __end_of_ToMainHigh_recvmsg 1A3C  
     __end_of_ToMainHigh_sendmsg 1BCA                  __CFG_IOL1WAY$ON 000000  
           __CFG_WPEND$PAGE_WPFP 000000           SensorData_recvmsg@data 007A  
    __end_of_init_timer1_lthread 1CF6              __end_of_SleepIfOkay 16F6  
                 __pcstackCOMRAM 0001         SensorData_sendmsg@length 001A  
         __size_ofi2_in_high_int 0010                      ?_ReadTimer1 0001  
             __size_of_check_msg 0032                  __CFG_DSWDTPS$G2 000000  
                    ?_Open1USART 0096        timer0_int_handler@msgtype 007F  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 13B8  
    __end_of_InterruptHandlerLow 00C0                        ?i2_memcpy 0060  
                  _ToMainHigh_MQ 0200              __size_ofi2_recv_msg 011E  
               _enter_sleep_mode 1D62              __size_ofi2_send_msg 00EC  
           timer1_lthread@length 00B4                    check_msg@qptr 0096  
           timer1_lthread@retval 00B8          ??_block_on_To_msgqueues 009C  
           __size_of_init_queues 006C                       __pbssBANK0 00BC  
                     __pbssBANK2 0200                       __pbssBANK3 0300  
                     __pbssBANK4 0400                      ?_OpenTimer0 0001  
                    ?_OpenTimer1 0096           SensorData_sendmsg@data 0018  
                     __pnvCOMRAM 0044          __end_of_i2c_int_handler 0890  
                   ?i2_check_msg 0060               timer1_lthread@tptr 00B0  
              recv_msg@maxlength 00A2                  recv_msg@msgtype 00A3  
                recv_msg@tlength 00AA            __size_of_handle_start 00CA  
                   ?_Delay1KTCYx 0001                 WriteTimer0@timer 0062  
                        ?_memcpy 0096                 WriteTimer1@timer 0003  
                  ??_WriteTimer0 0062                    ??_WriteTimer1 0003  
            __size_of_Read1USART 001E          __size_of_timer0_lthread 000E  
        __size_of_timer1_lthread 005E                 Open1USART@config 009B  
             __size_of_uart_send 004A                       ??i1_memcpy 0007  
                     ??i2_memcpy 0066                          _SPBRGH1 000F7F  
               i1send_msg@length 000D                    i2_in_high_int 1D3C  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
            __size_of_ReadTimer1 0012                __end_of_check_msg 1B0E  
                      ?_init_i2c 0096                      _SleepIfOkay 1696  
            __size_of_Open1USART 0070                        ?_recv_msg 00A0  
                     _in_low_int 18DC                     _handle_start 1084  
                        __Hparam 0000                        ?_send_msg 00A0  
                        __Lparam 0000       __end_of_timer0_int_handler 149E  
    __end_of_FromMainLow_recvmsg 1C46      __end_of_FromMainLow_sendmsg 1B6E  
               init_uart_recv@uc 0096                          ___lwmod 1636  
                __CFG_STVREN$OFF 000000                          __pcinit 1AA8  
                __size_of_memcpy 0050                       _init_queue 1570  
                        __ramtop 0F00              __size_of_OpenTimer0 0026  
            __size_of_OpenTimer1 003C                          __ptext0 0890  
                        __ptext1 1852                          __ptext2 1B40  
                        __ptext3 16F6                          __ptext4 1636  
                        __ptext5 1B6E                          __ptext6 0DDA  
                        __ptext7 1D4C                          __ptext8 1754  
                        __ptext9 1CE4                        _T0CONbits 000FD5  
              OpenTimer1@config1 0096                          _in_main 1958  
                      _T1CONbits 000FCD              __end_of_WriteTimer0 1D2C  
            __end_of_WriteTimer1 1D08                   ?i2_in_high_int 0060  
 __end_of_uart_trans_int_handler 11FA                   __pintcode_body 1342  
   __end_of_FromMainHigh_recvmsg 1A72             end_of_initialization 1AD2  
        timer1_lthread@msgbuffer 00B6     __end_of_FromMainHigh_sendmsg 1B9C  
 __size_of_uart_recv_int_handler 009E       FromMainHigh_sendmsg@length 00AF  
                        memcpy@d 009C                          memcpy@n 009A  
                        memcpy@s 009E    __end_of_uart_recv_int_handler 1342  
                     ??_init_i2c 0098                     ??i1_recv_msg 0012  
    i2c_int_handler@data_written 0082                    __Lmediumconst 0000  
                        int_func 1342                     ??i1_send_msg 0011  
        __size_of_init_uart_recv 005E                 ?_i2c_int_handler 0001  
                   ??i2_recv_msg 0071                       ??_recv_msg 00A7  
              __end_of_uart_send 189C                     ??i2_send_msg 0070  
                     ??_send_msg 00A6       __end_of_timer1_int_handler 1BF6  
                      _RCSTAbits 000FAC                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 0076      SensorData_recvmsg@maxlength 007C  
                      _PORTBbits 000F81                 __CFG_DSBOREN$OFF 000000  
             __end_ofi1_recv_msg 1084                 __CFG_CPUDIV$OSC1 000000  
             __end_ofi1_send_msg 12A4      FromMainHigh_sendmsg@msgtype 00AC  
                      _TRISAbits 000F92                        _TRISBbits 000F93  
                      _TRISCbits 000F94               __end_ofi2_recv_msg 0CD6  
             __end_ofi2_send_msg 0FB2                     ??_Read1USART 0001  
  FromMainHigh_recvmsg@maxlength 007C         timer1_int_handler@result 001B  
              __CFG_WPFP$PAGE_63 000000                        _TXSTAbits 000FAD  
                     main@length 0120                      ?_in_low_int 0098  
          timer0_lthread@msgtype 0098            _start_i2c_slave_reply 0CD6  
            __CFG_MSSP7B_EN$MSK7 000000     __size_of_i2c_configure_slave 0028  
           __size_ofi2_check_msg 0032         __end_of_enter_sleep_mode 1D68  
                   ??_ReadTimer1 0003               _ToMainHigh_recvmsg 1A06  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1B9C  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                    _BAUDCONbits 000F7E                   _timer0_lthread 1D4C  
                   ??_Open1USART 0098                      ?_init_queue 0096  
                      i2memcpy@d 0066                      _WriteTimer0 1D1A  
                    _WriteTimer1 1CF6                        i2memcpy@n 0064  
                      i2memcpy@s 0068               __end_of_Read1USART 1CD0  
                 _timer1_lthread 16F6                   __end_of_memcpy 1802  
              _enable_interrupts 1D5A             __size_of_Delay1KTCYx 0014  
               __CFG_DSWDTEN$OFF 000000              ?_ToMainHigh_recvmsg 00AE  
                ??i2_in_high_int 0062         i2c_int_handler@data_read 0087  
            ?_ToMainHigh_sendmsg 0076               ?_enable_interrupts 0001  
            start_initialization 1AA8                    ??_in_high_int 0098  
    __size_of_SensorData_recvmsg 0036                __size_ofi1_memcpy 0040  
    __size_of_SensorData_sendmsg 0024                __size_ofi2_memcpy 0050  
      FromMainLow_sendmsg@length 00AF              ??_enable_interrupts 0096  
                   ??_OpenTimer0 0096                     ??_OpenTimer1 0097  
 __size_of_block_on_To_msgqueues 0062               __end_of_ReadTimer1 1D1A  
  __end_of_block_on_To_msgqueues 1636     __end_of_InterruptHandlerHigh 13C0  
             __end_of_Open1USART 1430                       init_i2c@ic 0096  
           ??_ToMainHigh_recvmsg 00B2             ??_ToMainHigh_sendmsg 0079  
         __end_of_timer0_lthread 1D5A         i2c_int_handler@error_buf 007E  
         __end_of_timer1_lthread 1754                 __CFG_LPT1OSC$OFF 000000  
      __end_of_enable_interrupts 1D62                         ??_memcpy 009C  
          timer1_lthread@msgtype 00B2             _FromMainHigh_recvmsg 1A3C  
           _FromMainHigh_sendmsg 1B6E     __size_of_init_timer1_lthread 0012  
             __end_of_OpenTimer0 1C6C               __end_of_OpenTimer1 19D0  
       i2c_int_handler@msg_ready 0086                      __pbssCOMRAM 0046  
                  _SensorData_MQ 0400                    ??_init_queues 0099  
                  __pcstackBANK0 0060                    __pcstackBANK1 0100  
            __size_of_in_low_int 003E         start_i2c_slave_reply@msg 0060  
                Delay1KTCYx@unit 0096         ToMainLow_sendmsg@msgtype 0017  
   __size_of_InterruptHandlerLow 00A8              __end_of_in_high_int 1D3C  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 00B0  
                   _ToMainLow_MQ 0276              __size_of_init_queue 0064  
                 _init_uart_recv 1754                        _check_msg 1ADC  
                      __pnvBANK0 00BA           ?_start_i2c_slave_reply 0060  
              __size_of_init_i2c 0066                     recv_msg@data 00A5  
                   recv_msg@qmsg 00AC                     recv_msg@slot 00A9  
                   recv_msg@qptr 00A0                __size_of_recv_msg 011E  
                      __pintcode 0008                __size_of_send_msg 00EC  
                ?_timer0_lthread 0096                         ?___lwmod 0096  
          ?_FromMainHigh_recvmsg 0078                  ?_timer1_lthread 00B0  
          ?_FromMainHigh_sendmsg 00AC                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 00B0                  Open1USART@spbrg 0096  
     i2c_int_handler@msg_to_send 0085                         ?_in_main 009A  
              WriteTimer0@timer0 0060               _timer0_int_handler 1430  
              WriteTimer1@timer1 0001             __CFG_RTCOSC$T1OSCREF 000000  
          ToMainLow_sendmsg@data 0018              i1recv_msg@maxlength 000D  
            ?_timer0_int_handler 0001           __end_of_init_uart_recv 17B2  
            __end_of_init_queues 150A                         _LATAbits 000F89  
                i2check_msg@qptr 0060                       ?_check_msg 0096  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                  ?i2_in_low_int 0062        SensorData_recvmsg@msgtype 0078  
                       i2u153_40 0854                         i2u153_46 0856  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 0077  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                 i1recv_msg@data 0010                        _uart_send 1852  
           ??_timer0_int_handler 007D                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E                i1send_msg@tlength 0012  
     FromMainLow_recvmsg@msgtype 0019     __size_of_FromMainLow_recvmsg 0028  
   __size_of_FromMainLow_sendmsg 002E             timer0_lthread@length 009A  
             _timer1_int_handler 1BCA                         i1_memcpy 189C  
           _InterruptHandlerHigh 0008                         i2_memcpy 1802  
           timer0_lthread@msgval 009E         FromMainHigh_recvmsg@data 007A  
                    _in_high_int 1D2C                     send_msg@data 00A4  
            _i2c_configure_slave 1BF6                     send_msg@qmsg 00AA  
                   send_msg@slot 00A9                     send_msg@qptr 00A0  
                    _INTCON2bits 000FF1              ?_timer1_int_handler 0001  
                ?_init_uart_recv 0096                   ??i2_in_low_int 0064  
                       __Hparam0 0000            _uart_recv_int_handler 12A4  
                   ??_in_low_int 009A                         __Lparam0 0000  
           ?_i2c_configure_slave 0001                ?_enter_sleep_mode 0001  
         ??_FromMainHigh_recvmsg 007C                       ?_uart_send 00B0  
         ??_FromMainHigh_sendmsg 00AF             ??_timer1_int_handler 001B  
       __size_of_i2c_int_handler 07CC               ??_enter_sleep_mode 0060  
               __size_of___lwmod 0060                     ??_init_queue 0098  
                   ?_WriteTimer0 0060                     ?_WriteTimer1 0001  
                uart_send@length 00B0         FromMainHigh_sendmsg@data 00AD  
        ToMainLow_sendmsg@length 001A                main@t0thread_data 011C  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 003C  
              i2send_msg@msgtype 006D      ToMainHigh_recvmsg@maxlength 00B2  
              i2send_msg@tlength 0071          init_timer1_lthread@tptr 0096  
                    _init_queues 149E               __end_of_in_low_int 191A  
                       __ptext10 149E                         __ptext11 1570  
                       __ptext20 1CD0                         __ptext12 150A  
                       __ptext21 19D0                         __ptext13 1BF6  
                     _T1GCONbits 000F9A                         __ptext30 1C1E  
                       __ptext22 1A06                         __ptext14 1D5A  
                       __ptext31 0FB2                         __ptext23 0A9A  
                       __ptext15 15D4                         __ptext40 1D08  
                       __ptext32 12A4                         __ptext24 17B2  
                       __ptext16 1958                         __ptext33 1C6C  
                       __ptext25 1994                         __ptext17 18DC  
                       __ptext50 1A72                         __ptext42 1430  
                       __ptext34 1CB2                         __ptext26 1C46  
                       __ptext18 1D2C                         __ptext51 0BB8  
                       __ptext43 1D1A                         __ptext35 1BCA  
                       __ptext27 13C0                         __ptext19 1ADC  
                       __ptext52 1802                         __ptext44 1A3C  
                       __ptext36 1CF6                         __ptext53 1696  
                       __ptext45 00C4                         __ptext37 1C90  
                       __ptext29 114E                         __ptext54 191A  
                       __ptext46 0CD6                         __ptext38 11FA  
                       __ptext55 1D3C                         __ptext47 1084  
                       __ptext39 189C                         __ptext56 1B0E  
                       __ptext48 1B9C                         __ptext57 1D62  
                       __ptext49 0EC6                   i1send_msg@data 000F  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B         timer0_int_handler@length 007D  
                       _init_i2c 150A              _init_timer1_lthread 1CE4  
                  __size_of_main 020A                    ??i2_check_msg 0062  
              main@t1thread_data 011E                      ??_check_msg 0098  
             __end_of_init_queue 15D4             __size_of_SleepIfOkay 0060  
                       _recv_msg 0A9A            ??_i2c_configure_slave 0096  
                       _send_msg 0DDA                   init_queue@qptr 0096  
                 i2recv_msg@data 006F                   i2recv_msg@qmsg 0076  
                  ??_Delay1KTCYx 0096                   i2recv_msg@slot 0073  
                 i2recv_msg@qptr 006A              _InterruptHandlerLow 0018  
           ?_init_timer1_lthread 0096                    _USART1_Status 0046  
       ??_uart_trans_int_handler 001E                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2       __end_of_SensorData_recvmsg 1AA8  
            i2c_int_handler@send 0081       __end_of_SensorData_sendmsg 1C90  
                       memcpy@d1 0096                         memcpy@s1 0098  
          __end_ofi2_in_high_int 1D4C     i2c_int_handler@overrun_error 0083  
               i2send_msg@length 006C                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
        ??_start_i2c_slave_reply 0062                 ___lwmod@dividend 0096  
         ?_uart_recv_int_handler 0001                       _RCSTA1bits 000FAC  
          _block_on_To_msgqueues 15D4                    ?_handle_start 0001  
               ??_timer0_lthread 009E      __size_of_ToMainHigh_recvmsg 0036  
    __size_of_ToMainHigh_sendmsg 002E                       _OSCCONbits 000FD3  
               ??_timer1_lthread 00B8                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015         ToMainHigh_sendmsg@length 0079  
                    ??_uart_send 00B4              __end_ofi2_check_msg 1B40  
          ??_init_timer1_lthread 0098           ??_InterruptHandlerHigh 0088  
              _ToMainLow_recvmsg 19D0                _ToMainLow_sendmsg 1C90  
    uart_recv_int_handler@readin 001C               main@last_reg_recvd 011B  
                ___lwmod@divisor 0098             __end_ofi2_in_low_int 1958  
             ?_ToMainLow_recvmsg 00AE              __end_of_Delay1KTCYx 1CE4  
              ??_i2c_int_handler 007D                  ___lwmod@counter 009A  
             ?_ToMainLow_sendmsg 0017                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 006E  
          ??_InterruptHandlerLow 0033              ??_ToMainLow_recvmsg 00B2  
                 i2send_msg@qmsg 0074                   i2send_msg@slot 0073  
                 i2send_msg@qptr 006A              ??_ToMainLow_sendmsg 001A  
            _FromMainLow_recvmsg 1C1E                   ??_handle_start 0060  
            _FromMainLow_sendmsg 1B40  
