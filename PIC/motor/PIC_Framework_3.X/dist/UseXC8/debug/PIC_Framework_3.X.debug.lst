

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Oct 15 23:28:05 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    74  0000                     _BAUDCONbits	set	4024
    75  0000                     _INTCON2bits	set	4081
    76  0000                     _INTCONbits	set	4082
    77  0000                     _IPR1bits	set	3999
    78  0000                     _LATBbits	set	3978
    79  0000                     _LATDbits	set	3980
    80  0000                     _OSCCON	set	4051
    81  0000                     _OSCCONbits	set	4051
    82  0000                     _OSCTUNEbits	set	3995
    83  0000                     _PIE1bits	set	3997
    84  0000                     _PIR1bits	set	3998
    85  0000                     _RCONbits	set	4048
    86  0000                     _RCREG	set	4014
    87  0000                     _RCSTA	set	4011
    88  0000                     _RCSTAbits	set	4011
    89  0000                     _SPBRG	set	4015
    90  0000                     _SPBRGH	set	4016
    91  0000                     _SSP1CON1	set	4038
    92  0000                     _SSP1CON1bits	set	4038
    93  0000                     _SSP1CON2	set	4037
    94  0000                     _SSP1STAT	set	4039
    95  0000                     _SSPADD	set	4040
    96  0000                     _SSPBUF	set	4041
    97  0000                     _SSPCON1bits	set	4038
    98  0000                     _SSPCON2bits	set	4037
    99  0000                     _SSPSTATbits	set	4039
   100  0000                     _T0CON	set	4053
   101  0000                     _T0CONbits	set	4053
   102  0000                     _T1CON	set	4045
   103  0000                     _T1CONbits	set	4045
   104  0000                     _TMR0H	set	4055
   105  0000                     _TMR0L	set	4054
   106  0000                     _TMR1H	set	4047
   107  0000                     _TMR1L	set	4046
   108  0000                     _TRISBbits	set	3987
   109  0000                     _TRISCbits	set	3988
   110  0000                     _TRISDbits	set	3989
   111  0000                     _TXREG	set	4013
   112  0000                     _TXSTA	set	4012
   113  0000                     _TXSTAbits	set	4012
   114                           
   115                           	psect	nvCOMRAM
   116  000049                     __pnvCOMRAM:
   117                           	opt stack 0
   118  000049                     _uc_ptr:
   119                           	opt stack 0
   120  000049                     	ds	2
   121                           
   122                           	psect	nvBANK0
   123  0000E1                     __pnvBANK0:
   124                           	opt stack 0
   125  0000E1                     _ic_ptr:
   126                           	opt stack 0
   127  0000E1                     	ds	2
   128                           
   129                           ; #config settings
   130  0000                     
   131                           	psect	cinit
   132  001A86                     __pcinit:
   133                           	opt stack 0
   134  001A86                     start_initialization:
   135                           	opt stack 0
   136  001A86                     __initialization:
   137                           	opt stack 0
   138                           
   139                           ; Clear objects allocated to BANK1 (162 bytes)
   140  001A86  EE01  F000         	lfsr	0,__pbssBANK1
   141  001A8A  0EA2               	movlw	162
   142  001A8C                     clear_0:
   143  001A8C  6AEE               	clrf	postinc0,c
   144  001A8E  06E8               	decf	wreg,f,c
   145  001A90  E1FD               	bnz	clear_0
   146                           
   147                           ; Clear objects allocated to BANK0 (54 bytes)
   148  001A92  EE00  F080         	lfsr	0,__pbssBANK0
   149  001A96  0E36               	movlw	54
   150  001A98                     clear_1:
   151  001A98  6AEE               	clrf	postinc0,c
   152  001A9A  06E8               	decf	wreg,f,c
   153  001A9C  E1FD               	bnz	clear_1
   154                           
   155                           ; Clear objects allocated to COMRAM (2 bytes)
   156  001A9E  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   157  001AA0  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   158  001AA2                     end_of_initialization:
   159                           	opt stack 0
   160  001AA2                     __end_of__initialization:
   161                           	opt stack 0
   162  001AA2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   163  001AA4  6EF8               	movwf	tblptru,c
   164  001AA6  0100               	movlb	0
   165  001AA8  EF0D  F003         	goto	_main	;jump to C main() function
   166                           tblptru	equ	0xFF8
   167                           postinc0	equ	0xFEE
   168                           wreg	equ	0xFE8
   169                           
   170                           	psect	bssCOMRAM
   171  00004B                     __pbssCOMRAM:
   172                           	opt stack 0
   173  00004B                     _MQ_Main_Willing_to_block:
   174                           	opt stack 0
   175  00004B                     	ds	1
   176  00004C                     _USART_Status:
   177                           	opt stack 0
   178  00004C                     	ds	1
   179                           tblptru	equ	0xFF8
   180                           postinc0	equ	0xFEE
   181                           wreg	equ	0xFE8
   182                           
   183                           	psect	bssBANK0
   184  000080                     __pbssBANK0:
   185                           	opt stack 0
   186  000080                     _ToMainHigh_MQ:
   187                           	opt stack 0
   188  000080                     	ds	54
   189                           tblptru	equ	0xFF8
   190                           postinc0	equ	0xFEE
   191                           wreg	equ	0xFE8
   192                           
   193                           	psect	bssBANK1
   194  000100                     __pbssBANK1:
   195                           	opt stack 0
   196  000100                     _FromMainHigh_MQ:
   197                           	opt stack 0
   198  000100                     	ds	54
   199  000136                     _FromMainLow_MQ:
   200                           	opt stack 0
   201  000136                     	ds	54
   202  00016C                     _ToMainLow_MQ:
   203                           	opt stack 0
   204  00016C                     	ds	54
   205                           tblptru	equ	0xFF8
   206                           postinc0	equ	0xFEE
   207                           wreg	equ	0xFE8
   208                           
   209                           	psect	cstackBANK1
   210  0001A2                     __pcstackBANK1:
   211                           	opt stack 0
   212  0001A2                     send_msg@qptr:
   213                           	opt stack 0
   214  0001A2                     recv_msg@qptr:
   215                           	opt stack 0
   216                           
   217                           ; 2 bytes @ 0x0
   218  0001A2                     	ds	2
   219  0001A4                     send_msg@length:
   220                           	opt stack 0
   221  0001A4                     recv_msg@maxlength:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x2
   225  0001A4                     	ds	1
   226  0001A5                     send_msg@msgtype:
   227                           	opt stack 0
   228  0001A5                     recv_msg@msgtype:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x3
   232  0001A5                     	ds	1
   233  0001A6                     send_msg@data:
   234                           	opt stack 0
   235                           
   236                           ; 2 bytes @ 0x4
   237  0001A6                     	ds	1
   238  0001A7                     recv_msg@data:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x5
   242  0001A7                     	ds	1
   243  0001A8                     send_msg@tlength:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x6
   247  0001A8                     	ds	1
   248  0001A9                     recv_msg@slot:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0x7
   252  0001A9                     	ds	1
   253  0001AA                     send_msg@slot:
   254                           	opt stack 0
   255  0001AA                     recv_msg@tlength:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0x8
   259  0001AA                     	ds	1
   260  0001AB                     send_msg@qmsg:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x9
   264  0001AB                     	ds	1
   265  0001AC                     recv_msg@qmsg:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0xA
   269  0001AC                     	ds	1
   270  0001AD                     FromMainLow_sendmsg@length:
   271                           	opt stack 0
   272  0001AD                     FromMainHigh_sendmsg@length:
   273                           	opt stack 0
   274                           
   275                           ; 1 bytes @ 0xB
   276  0001AD                     	ds	1
   277  0001AE                     ToMainLow_recvmsg@msgtype:
   278                           	opt stack 0
   279  0001AE                     ToMainHigh_recvmsg@msgtype:
   280                           	opt stack 0
   281  0001AE                     uart_send@msg_buffer:
   282                           	opt stack 0
   283  0001AE                     timer1_lthread@tptr:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0xC
   287  0001AE                     	ds	2
   288  0001B0                     uart_send@length:
   289                           	opt stack 0
   290  0001B0                     ToMainLow_recvmsg@data:
   291                           	opt stack 0
   292  0001B0                     ToMainHigh_recvmsg@data:
   293                           	opt stack 0
   294  0001B0                     timer1_lthread@msgtype:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0xE
   298  0001B0                     	ds	2
   299  0001B2                     timer1_lthread@length:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x10
   303  0001B2                     	ds	2
   304  0001B4                     timer1_lthread@msgbuffer:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x12
   308  0001B4                     	ds	2
   309  0001B6                     timer1_lthread@retval:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x14
   313  0001B6                     	ds	1
   314  0001B7                     main@dur:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x15
   318  0001B7                     	ds	1
   319  0001B8                     main@move:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x16
   323  0001B8                     	ds	1
   324  0001B9                     main@uthread_data:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x17
   328  0001B9                     	ds	2
   329  0001BB                     main@t0thread_data:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x19
   333  0001BB                     	ds	2
   334  0001BD                     main@last_reg_recvd:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x1B
   338  0001BD                     	ds	1
   339  0001BE                     main@msgbuffer:
   340                           	opt stack 0
   341                           
   342                           ; 11 bytes @ 0x1C
   343  0001BE                     	ds	11
   344  0001C9                     main@t1thread_data:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x27
   348  0001C9                     	ds	2
   349  0001CB                     main@msgtype:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x29
   353  0001CB                     	ds	1
   354  0001CC                     main@uc:
   355                           	opt stack 0
   356                           
   357                           ; 18 bytes @ 0x2A
   358  0001CC                     	ds	18
   359  0001DE                     main@length:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x3C
   363  0001DE                     	ds	1
   364  0001DF                     main@ic:
   365                           	opt stack 0
   366                           
   367                           ; 28 bytes @ 0x3D
   368  0001DF                     	ds	28
   369                           tblptru	equ	0xFF8
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           
   373                           	psect	cstackBANK0
   374  0000B6                     __pcstackBANK0:
   375                           	opt stack 0
   376  0000B6                     i2send_msg@tlength:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x0
   380  0000B6                     	ds	2
   381  0000B8                     i2send_msg@slot:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x2
   385  0000B8                     	ds	1
   386  0000B9                     i2send_msg@qmsg:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x3
   390  0000B9                     	ds	2
   391  0000BB                     ??_i2c_int_handler:
   392  0000BB                     timer0_int_handler@val:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x5
   396  0000BB                     	ds	1
   397  0000BC                     i2c_int_handler@error_buf:
   398                           	opt stack 0
   399                           
   400                           ; 3 bytes @ 0x6
   401  0000BC                     	ds	1
   402  0000BD                     timer0_int_handler@forward:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x7
   406  0000BD                     	ds	1
   407  0000BE                     timer0_int_handler@left:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x8
   411  0000BE                     	ds	1
   412  0000BF                     i2c_int_handler@data_written:
   413                           	opt stack 0
   414  0000BF                     timer0_int_handler@right:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x9
   418  0000BF                     	ds	1
   419  0000C0                     i2c_int_handler@overrun_error:
   420                           	opt stack 0
   421  0000C0                     timer0_int_handler@stop:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0xA
   425  0000C0                     	ds	1
   426  0000C1                     i2c_int_handler@i2c_data:
   427                           	opt stack 0
   428  0000C1                     timer0_int_handler@reverse:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0xB
   432  0000C1                     	ds	1
   433  0000C2                     i2c_int_handler@msg_to_send:
   434                           	opt stack 0
   435  0000C2                     timer0_int_handler@i:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0xC
   439  0000C2                     	ds	1
   440  0000C3                     i2c_int_handler@msg_ready:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0xD
   444  0000C3                     	ds	1
   445  0000C4                     i2c_int_handler@data_read:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0xE
   449  0000C4                     	ds	1
   450  0000C5                     ??_InterruptHandlerHigh:
   451                           
   452                           ; 0 bytes @ 0xF
   453  0000C5                     	ds	14
   454  0000D3                     ?_in_high_int:
   455                           	opt stack 0
   456  0000D3                     ?___lwmod:
   457                           	opt stack 0
   458  0000D3                     i2c_configure_slave@addr:
   459                           	opt stack 0
   460  0000D3                     OpenTimer0@config:
   461                           	opt stack 0
   462  0000D3                     OpenTimer1@config:
   463                           	opt stack 0
   464  0000D3                     Delay1KTCYx@unit:
   465                           	opt stack 0
   466  0000D3                     init_queue@qptr:
   467                           	opt stack 0
   468  0000D3                     check_msg@qptr:
   469                           	opt stack 0
   470  0000D3                     init_i2c@ic:
   471                           	opt stack 0
   472  0000D3                     init_uart_recv@uc:
   473                           	opt stack 0
   474  0000D3                     timer0_lthread@tptr:
   475                           	opt stack 0
   476  0000D3                     init_timer1_lthread@tptr:
   477                           	opt stack 0
   478  0000D3                     uart_lthread@uptr:
   479                           	opt stack 0
   480  0000D3                     OpenUSART@spbrg:
   481                           	opt stack 0
   482  0000D3                     ___lwmod@dividend:
   483                           	opt stack 0
   484  0000D3                     memcpy@d1:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x1D
   488  0000D3                     	ds	2
   489  0000D5                     ??_OpenUSART:
   490  0000D5                     ??_check_msg:
   491  0000D5                     ?_in_low_int:
   492                           	opt stack 0
   493  0000D5                     init_queue@i:
   494                           	opt stack 0
   495  0000D5                     timer0_lthread@msgtype:
   496                           	opt stack 0
   497  0000D5                     uart_lthread@msgtype:
   498                           	opt stack 0
   499  0000D5                     ___lwmod@divisor:
   500                           	opt stack 0
   501  0000D5                     memcpy@s1:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0x1F
   505  0000D5                     	ds	1
   506  0000D6                     
   507                           ; 0 bytes @ 0x20
   508  0000D6                     	ds	1
   509  0000D7                     ?_in_main:
   510                           	opt stack 0
   511  0000D7                     ___lwmod@counter:
   512                           	opt stack 0
   513  0000D7                     timer0_lthread@length:
   514                           	opt stack 0
   515  0000D7                     uart_lthread@length:
   516                           	opt stack 0
   517  0000D7                     memcpy@n:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x21
   521  0000D7                     	ds	1
   522  0000D8                     OpenUSART@config:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x22
   526  0000D8                     	ds	1
   527  0000D9                     timer0_lthread@msgbuffer:
   528                           	opt stack 0
   529  0000D9                     uart_lthread@msgbuffer:
   530                           	opt stack 0
   531  0000D9                     memcpy@d:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x23
   535  0000D9                     	ds	2
   536  0000DB                     timer0_lthread@msgval:
   537                           	opt stack 0
   538  0000DB                     memcpy@s:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x25
   542  0000DB                     	ds	2
   543  0000DD                     ??_send_msg:
   544  0000DD                     ??_recv_msg:
   545                           
   546                           ; 0 bytes @ 0x27
   547  0000DD                     	ds	1
   548  0000DE                     FromMainLow_sendmsg@msgtype:
   549                           	opt stack 0
   550  0000DE                     FromMainHigh_sendmsg@msgtype:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x28
   554  0000DE                     	ds	1
   555  0000DF                     ToMainLow_recvmsg@maxlength:
   556                           	opt stack 0
   557  0000DF                     ToMainHigh_recvmsg@maxlength:
   558                           	opt stack 0
   559  0000DF                     FromMainLow_sendmsg@data:
   560                           	opt stack 0
   561  0000DF                     FromMainHigh_sendmsg@data:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x29
   565  0000DF                     	ds	2
   566  0000E1                     tblptru	equ	0xFF8
   567                           postinc0	equ	0xFEE
   568                           wreg	equ	0xFE8
   569                           
   570                           ; 0 bytes @ 0x2B
   571                           
   572                           	psect	cstackCOMRAM
   573  000001                     __pcstackCOMRAM:
   574                           	opt stack 0
   575  000001                     ?_ReadTimer1:
   576                           	opt stack 0
   577  000001                     ?___awmod:
   578                           	opt stack 0
   579  000001                     ReadUSART@data:
   580                           	opt stack 0
   581  000001                     WriteTimer1@timer1:
   582                           	opt stack 0
   583  000001                     ___awmod@dividend:
   584                           	opt stack 0
   585  000001                     i1memcpy@d1:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x0
   589  000001                     	ds	2
   590  000003                     ReadTimer1@timer:
   591                           	opt stack 0
   592  000003                     WriteTimer1@timer:
   593                           	opt stack 0
   594  000003                     ___awmod@divisor:
   595                           	opt stack 0
   596  000003                     i1memcpy@s1:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x2
   600  000003                     	ds	2
   601  000005                     ___awmod@counter:
   602                           	opt stack 0
   603  000005                     i1memcpy@n:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x4
   607  000005                     	ds	1
   608  000006                     ___awmod@sign:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x5
   612  000006                     	ds	1
   613  000007                     i1memcpy@d:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x6
   617  000007                     	ds	2
   618  000009                     i1memcpy@s:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x8
   622  000009                     	ds	2
   623  00000B                     i1send_msg@qptr:
   624                           	opt stack 0
   625  00000B                     i1recv_msg@qptr:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0xA
   629  00000B                     	ds	2
   630  00000D                     i1send_msg@length:
   631                           	opt stack 0
   632  00000D                     i1recv_msg@maxlength:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0xC
   636  00000D                     	ds	1
   637  00000E                     i1send_msg@msgtype:
   638                           	opt stack 0
   639  00000E                     i1recv_msg@msgtype:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0xD
   643  00000E                     	ds	1
   644  00000F                     i1send_msg@data:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0xE
   648  00000F                     	ds	1
   649  000010                     i1recv_msg@data:
   650                           	opt stack 0
   651                           
   652                           ; 2 bytes @ 0xF
   653  000010                     	ds	1
   654  000011                     ??i1_send_msg:
   655                           
   656                           ; 0 bytes @ 0x10
   657  000011                     	ds	1
   658  000012                     ??i1_recv_msg:
   659  000012                     i1send_msg@tlength:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x11
   663  000012                     	ds	2
   664  000014                     i1send_msg@slot:
   665                           	opt stack 0
   666  000014                     i1recv_msg@slot:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x13
   670  000014                     	ds	1
   671  000015                     i1send_msg@qmsg:
   672                           	opt stack 0
   673  000015                     i1recv_msg@tlength:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0x14
   677  000015                     	ds	2
   678  000017                     ToMainLow_sendmsg@msgtype:
   679                           	opt stack 0
   680  000017                     ToMainHigh_sendmsg@msgtype:
   681                           	opt stack 0
   682  000017                     i1recv_msg@qmsg:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x16
   686  000017                     	ds	1
   687  000018                     ToMainLow_sendmsg@data:
   688                           	opt stack 0
   689  000018                     ToMainHigh_sendmsg@data:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x17
   693  000018                     	ds	1
   694  000019                     FromMainLow_recvmsg@msgtype:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x18
   698  000019                     	ds	1
   699  00001A                     ToMainLow_sendmsg@length:
   700                           	opt stack 0
   701  00001A                     ToMainHigh_sendmsg@length:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x19
   705  00001A                     	ds	1
   706  00001B                     ??_uart_recv_int_handler:
   707  00001B                     FromMainLow_recvmsg@data:
   708                           	opt stack 0
   709  00001B                     timer1_int_handler@result:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x1A
   713  00001B                     	ds	2
   714  00001D                     FromMainLow_recvmsg@maxlength:
   715                           	opt stack 0
   716  00001D                     timer1_int_handler@forward:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x1C
   720  00001D                     	ds	1
   721  00001E                     ??_uart_trans_int_handler:
   722  00001E                     timer1_int_handler@left:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x1D
   726  00001E                     	ds	1
   727  00001F                     timer1_int_handler@right:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x1E
   731  00001F                     	ds	1
   732  000020                     timer1_int_handler@stop:
   733                           	opt stack 0
   734                           
   735                           ; 1 bytes @ 0x1F
   736  000020                     	ds	1
   737  000021                     timer1_int_handler@reverse:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x20
   741  000021                     	ds	1
   742  000022                     timer1_int_handler@i:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x21
   746  000022                     	ds	1
   747  000023                     ??_InterruptHandlerLow:
   748                           
   749                           ; 0 bytes @ 0x22
   750  000023                     	ds	17
   751  000034                     ?i2_in_high_int:
   752                           	opt stack 0
   753  000034                     ?i2___awmod:
   754                           	opt stack 0
   755  000034                     handle_start@data_read:
   756                           	opt stack 0
   757  000034                     WriteTimer0@timer0:
   758                           	opt stack 0
   759  000034                     i2check_msg@qptr:
   760                           	opt stack 0
   761  000034                     i2___awmod@dividend:
   762                           	opt stack 0
   763  000034                     i2memcpy@d1:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x33
   767  000034                     	ds	2
   768  000036                     ??i2_check_msg:
   769  000036                     ?i2_in_low_int:
   770                           	opt stack 0
   771  000036                     WriteTimer0@timer:
   772                           	opt stack 0
   773  000036                     i2___awmod@divisor:
   774                           	opt stack 0
   775  000036                     i2memcpy@s1:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x35
   779  000036                     	ds	2
   780  000038                     i2___awmod@counter:
   781                           	opt stack 0
   782  000038                     i2memcpy@n:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x37
   786  000038                     	ds	1
   787  000039                     i2___awmod@sign:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x38
   791  000039                     	ds	1
   792  00003A                     i2memcpy@d:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x39
   796  00003A                     	ds	2
   797  00003C                     i2memcpy@s:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x3B
   801  00003C                     	ds	2
   802  00003E                     i2send_msg@qptr:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x3D
   806  00003E                     	ds	2
   807  000040                     i2send_msg@length:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x3F
   811  000040                     	ds	1
   812  000041                     i2send_msg@msgtype:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x40
   816  000041                     	ds	1
   817  000042                     i2send_msg@data:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x41
   821  000042                     	ds	2
   822  000044                     ??i2_send_msg:
   823                           
   824                           ; 0 bytes @ 0x43
   825  000044                     	ds	1
   826  000045                     i2ToMainHigh_sendmsg@msgtype:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x44
   830  000045                     	ds	1
   831  000046                     i2ToMainHigh_sendmsg@data:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0x45
   835  000046                     	ds	2
   836  000048                     i2ToMainHigh_sendmsg@length:
   837                           	opt stack 0
   838                           
   839                           ; 1 bytes @ 0x47
   840  000048                     	ds	1
   841  000049                     tblptru	equ	0xFF8
   842                           postinc0	equ	0xFEE
   843                           wreg	equ	0xFE8
   844                           
   845                           ; 0 bytes @ 0x48
   846 ;;
   847 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   848 ;;
   849 ;; *************** function _main *****************
   850 ;; Defined at:
   851 ;;		line 52 in file "../src/main.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  ic             28   61[BANK1 ] struct __i2c_comm
   856 ;;  uc             18   42[BANK1 ] struct __uart_comm
   857 ;;  msgbuffer      11   28[BANK1 ] unsigned char [11]
   858 ;;  t1thread_dat    2   39[BANK1 ] struct __timer1_thread_s
   859 ;;  t0thread_dat    2   25[BANK1 ] struct __timer0_thread_s
   860 ;;  uthread_data    2   23[BANK1 ] struct __uart_thread_str
   861 ;;  length          1   60[BANK1 ] char 
   862 ;;  msgtype         1   41[BANK1 ] unsigned char 
   863 ;;  last_reg_rec    1   27[BANK1 ] unsigned char 
   864 ;;  move            1   22[BANK1 ] unsigned char 
   865 ;;  dur             1   21[BANK1 ] unsigned char 
   866 ;;  i               1    0        unsigned char 
   867 ;;  c               1    0        unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;		None               void
   870 ;; Registers used:
   871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         0       0      68       0       0
   879 ;;      Temps:          0       0       0       0       0
   880 ;;      Totals:         0       0      68       0       0
   881 ;;Total ram usage:       68 bytes
   882 ;; Hardware stack levels required when called:   14
   883 ;; This function calls:
   884 ;;		_OpenTimer0
   885 ;;		_OpenTimer1
   886 ;;		_OpenUSART
   887 ;;		_ToMainHigh_recvmsg
   888 ;;		_ToMainLow_recvmsg
   889 ;;		_block_on_To_msgqueues
   890 ;;		_enable_interrupts
   891 ;;		_i2c_configure_slave
   892 ;;		_init_i2c
   893 ;;		_init_queues
   894 ;;		_init_timer1_lthread
   895 ;;		_init_uart_recv
   896 ;;		_timer0_lthread
   897 ;;		_timer1_lthread
   898 ;;		_uart_lthread
   899 ;;		_uart_send
   900 ;; This function is called by:
   901 ;;		Startup code after reset
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text0
   906  00061A                     __ptext0:
   907                           	opt stack 0
   908  00061A                     _main:
   909                           	opt stack 16
   910                           
   911                           ;main.c: 53: char c;
   912                           ;main.c: 54: signed char length;
   913                           ;main.c: 55: unsigned char msgtype;
   914                           ;main.c: 56: unsigned char last_reg_recvd;
   915                           ;main.c: 57: uart_comm uc;
   916                           ;main.c: 58: i2c_comm ic;
   917                           ;main.c: 59: unsigned char msgbuffer[10 + 1];
   918                           ;main.c: 60: unsigned char i;
   919                           ;main.c: 61: unsigned char dur = 64;
   920                           
   921                           ;incstack = 0
   922  00061A  0E40               	movlw	64
   923  00061C  0101               	movlb	1	; () banked
   924  00061E  6FB7               	movwf	main@dur& (0+255),b
   925                           
   926                           ;main.c: 62: unsigned char move = 0;
   927  000620  0E00               	movlw	0
   928  000622  0101               	movlb	1	; () banked
   929  000624  6FB8               	movwf	main@move& (0+255),b
   930                           
   931                           ;main.c: 63: uart_thread_struct uthread_data;
   932                           ;main.c: 64: timer1_thread_struct t1thread_data;
   933                           ;main.c: 65: timer0_thread_struct t0thread_data;
   934                           ;main.c: 67: OSCCON = 0x82;
   935  000626  0E82               	movlw	130
   936  000628  6ED3               	movwf	4051,c	;volatile
   937                           
   938                           ; BSR set to: 1
   939                           ;main.c: 68: OSCTUNEbits.PLLEN = 0;
   940  00062A  9C9B               	bcf	3995,6,c	;volatile
   941                           
   942                           ; BSR set to: 1
   943                           ;main.c: 71: init_uart_recv(&uc);
   944  00062C  0101               	movlb	1	; () banked
   945  00062E  0E01               	movlw	high main@uc
   946  000630  0100               	movlb	0	; () banked
   947  000632  6FD4               	movwf	(init_uart_recv@uc+1)& (0+255),b
   948  000634  0101               	movlb	1	; () banked
   949  000636  0ECC               	movlw	low main@uc
   950  000638  0100               	movlb	0	; () banked
   951  00063A  6FD3               	movwf	init_uart_recv@uc& (0+255),b
   952  00063C  ECEC  F00C         	call	_init_uart_recv	;wreg free
   953                           
   954                           ;main.c: 74: init_i2c(&ic);
   955  000640  0101               	movlb	1	; () banked
   956  000642  0E01               	movlw	high main@ic
   957  000644  0100               	movlb	0	; () banked
   958  000646  6FD4               	movwf	(init_i2c@ic+1)& (0+255),b
   959  000648  0101               	movlb	1	; () banked
   960  00064A  0EDF               	movlw	low main@ic
   961  00064C  0100               	movlb	0	; () banked
   962  00064E  6FD3               	movwf	init_i2c@ic& (0+255),b
   963  000650  EC25  F00A         	call	_init_i2c	;wreg free
   964                           
   965                           ;main.c: 77: init_timer1_lthread(&t1thread_data);
   966  000654  0101               	movlb	1	; () banked
   967  000656  0E01               	movlw	high main@t1thread_data
   968  000658  0100               	movlb	0	; () banked
   969  00065A  6FD4               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   970  00065C  0101               	movlb	1	; () banked
   971  00065E  0EC9               	movlw	low main@t1thread_data
   972  000660  0100               	movlb	0	; () banked
   973  000662  6FD3               	movwf	init_timer1_lthread@tptr& (0+255),b
   974  000664  ECCA  F00D         	call	_init_timer1_lthread	;wreg free
   975                           
   976                           ;main.c: 80: init_queues();
   977  000668  EC19  F00B         	call	_init_queues	;wreg free
   978                           
   979                           ;main.c: 83: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110011);
   980  00066C  0E93               	movlw	147
   981  00066E  EC56  F00D         	call	_OpenTimer0
   982                           
   983                           ;main.c: 84: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 &
      +                           0b11111111);
   984  000672  0EF5               	movlw	245
   985  000674  ECD3  F00C         	call	_OpenTimer1
   986                           
   987                           ;main.c: 89: INTCON2bits.TMR0IP = 0;
   988  000678  94F1               	bcf	intcon2,2,c	;volatile
   989                           
   990                           ;main.c: 91: IPR1bits.TMR1IP = 0;
   991  00067A  909F               	bcf	3999,0,c	;volatile
   992                           
   993                           ;main.c: 93: IPR1bits.RCIP = 0;
   994  00067C  9A9F               	bcf	3999,5,c	;volatile
   995                           
   996                           ;main.c: 95: IPR1bits.TXIP = 0;
   997  00067E  989F               	bcf	3999,4,c	;volatile
   998                           
   999                           ;main.c: 97: IPR1bits.SSPIP = 1;
  1000  000680  869F               	bsf	3999,3,c	;volatile
  1001                           
  1002                           ;main.c: 100: i2c_configure_slave(0x9A);
  1003  000682  0E9A               	movlw	154
  1004  000684  EC1A  F00D         	call	_i2c_configure_slave
  1005                           
  1006                           ;main.c: 103: PIE1bits.SSPIE = 1;
  1007  000688  869D               	bsf	3997,3,c	;volatile
  1008                           
  1009                           ;main.c: 106: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1010                           ;main.c: 107: 0b11111111 & 0b11101111, 0x19);
  1011  00068A  0E00               	movlw	0
  1012  00068C  0100               	movlb	0	; () banked
  1013  00068E  6FD4               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1014  000690  0E19               	movlw	25
  1015  000692  0100               	movlb	0	; () banked
  1016  000694  6FD3               	movwf	OpenUSART@spbrg& (0+255),b
  1017  000696  0E6C               	movlw	108
  1018  000698  ECA4  F009         	call	_OpenUSART
  1019                           
  1020                           ;main.c: 111: enable_interrupts();
  1021  00069C  ECFD  F00D         	call	_enable_interrupts	;wreg free
  1022                           
  1023                           ;main.c: 114: SPBRGH = 0x01;
  1024  0006A0  0E01               	movlw	1
  1025  0006A2  6EB0               	movwf	4016,c	;volatile
  1026                           
  1027                           ;main.c: 115: SPBRG = 0x37;
  1028  0006A4  0E37               	movlw	55
  1029  0006A6  6EAF               	movwf	4015,c	;volatile
  1030                           
  1031                           ;main.c: 116: TXSTAbits.BRGH = 0x1;
  1032  0006A8  84AC               	bsf	4012,2,c	;volatile
  1033                           
  1034                           ;main.c: 117: BAUDCONbits.BRG16 = 0x1;
  1035  0006AA  86B8               	bsf	4024,3,c	;volatile
  1036                           
  1037                           ;main.c: 118: TXSTAbits.SYNC = 0x0;
  1038  0006AC  98AC               	bcf	4012,4,c	;volatile
  1039                           
  1040                           ;main.c: 119: RCSTAbits.SPEN = 0x1;
  1041  0006AE  8EAB               	bsf	4011,7,c	;volatile
  1042                           
  1043                           ;main.c: 120: PIE1bits.TXIE = 0x0;
  1044  0006B0  989D               	bcf	3997,4,c	;volatile
  1045                           
  1046                           ;main.c: 121: TXSTAbits.TXEN = 0x1;
  1047  0006B2  8AAC               	bsf	4012,5,c	;volatile
  1048                           
  1049                           ;main.c: 123: TRISBbits.TRISB1 = 0x0;
  1050  0006B4  9293               	bcf	3987,1,c	;volatile
  1051                           
  1052                           ;main.c: 124: TRISDbits.TRISD4 = 0x0;
  1053  0006B6  9895               	bcf	3989,4,c	;volatile
  1054                           
  1055                           ;main.c: 125: TRISDbits.TRISD5 = 0x0;
  1056  0006B8  9A95               	bcf	3989,5,c	;volatile
  1057                           
  1058                           ;main.c: 126: TRISDbits.TRISD6 = 0x0;
  1059  0006BA  9C95               	bcf	3989,6,c	;volatile
  1060                           
  1061                           ;main.c: 127: TRISCbits.TRISC7 = 0x1;
  1062  0006BC  8E94               	bsf	3988,7,c	;volatile
  1063                           
  1064                           ;main.c: 128: TRISCbits.TRISC6 = 0x0;
  1065  0006BE  9C94               	bcf	3988,6,c	;volatile
  1066                           
  1067                           ;main.c: 135: { LATDbits.LATD6 = 0;};
  1068  0006C0  9C8C               	bcf	3980,6,c	;volatile
  1069                           
  1070                           ;main.c: 136: { LATBbits.LATB1 = 0;};
  1071  0006C2  928A               	bcf	3978,1,c	;volatile
  1072                           
  1073                           ;main.c: 137: { LATDbits.LATD4 = 0;};
  1074  0006C4  988C               	bcf	3980,4,c	;volatile
  1075                           
  1076                           ;main.c: 138: { LATDbits.LATD5 = 0;};
  1077  0006C6  9A8C               	bcf	3980,5,c	;volatile
  1078  0006C8                     l3550:
  1079                           
  1080                           ;main.c: 149: block_on_To_msgqueues();
  1081  0006C8  ECEB  F00A         	call	_block_on_To_msgqueues	;wreg free
  1082                           
  1083                           ;main.c: 156: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1084  0006CC  0101               	movlb	1	; () banked
  1085  0006CE  0E01               	movlw	high main@msgtype
  1086  0006D0  0101               	movlb	1	; () banked
  1087  0006D2  6FAF               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1088  0006D4  0101               	movlb	1	; () banked
  1089  0006D6  0ECB               	movlw	low main@msgtype
  1090  0006D8  0101               	movlb	1	; () banked
  1091  0006DA  6FAE               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1092  0006DC  0101               	movlb	1	; () banked
  1093  0006DE  0E01               	movlw	high main@msgbuffer
  1094  0006E0  0101               	movlb	1	; () banked
  1095  0006E2  6FB1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1096  0006E4  0101               	movlb	1	; () banked
  1097  0006E6  0EBE               	movlw	low main@msgbuffer
  1098  0006E8  0101               	movlb	1	; () banked
  1099  0006EA  6FB0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1100  0006EC  0E0A               	movlw	10
  1101  0006EE  EC54  F00C         	call	_ToMainHigh_recvmsg
  1102  0006F2  0101               	movlb	1	; () banked
  1103  0006F4  6FDE               	movwf	main@length& (0+255),b
  1104                           
  1105                           ; BSR set to: 1
  1106                           ;main.c: 157: if (length < 0) {
  1107  0006F6  0101               	movlb	1	; () banked
  1108  0006F8  BFDE               	btfsc	main@length& (0+255),7,b
  1109  0006FA  D0BA               	goto	l3588
  1110  0006FC  D0A8               	goto	l3586
  1111  0006FE                     l3558:
  1112                           
  1113                           ; BSR set to: 1
  1114                           ;main.c: 165: {
  1115                           ;main.c: 166: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1116  0006FE  0101               	movlb	1	; () banked
  1117  000700  0E01               	movlw	high main@t0thread_data
  1118  000702  0100               	movlb	0	; () banked
  1119  000704  6FD4               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1120  000706  0101               	movlb	1	; () banked
  1121  000708  0EBB               	movlw	low main@t0thread_data
  1122  00070A  0100               	movlb	0	; () banked
  1123  00070C  6FD3               	movwf	timer0_lthread@tptr& (0+255),b
  1124  00070E  0101               	movlb	1	; () banked
  1125  000710  0100               	movlb	0	; () banked
  1126  000712  C1CB  F0D5         	movff	main@msgtype,timer0_lthread@msgtype
  1127  000716  0100               	movlb	0	; () banked
  1128  000718  6BD6               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1129  00071A  0101               	movlb	1	; () banked
  1130  00071C  51DE               	movf	main@length& (0+255),w,b
  1131  00071E  0100               	movlb	0	; () banked
  1132  000720  6FD7               	movwf	timer0_lthread@length& (0+255),b
  1133  000722  0100               	movlb	0	; () banked
  1134  000724  6BD8               	clrf	(timer0_lthread@length+1)& (0+255),b
  1135  000726  0100               	movlb	0	; () banked
  1136  000728  BFD7               	btfsc	timer0_lthread@length& (0+255),7,b
  1137  00072A  07D8               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1138  00072C  0101               	movlb	1	; () banked
  1139  00072E  0E01               	movlw	high main@msgbuffer
  1140  000730  0100               	movlb	0	; () banked
  1141  000732  6FDA               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1142  000734  0101               	movlb	1	; () banked
  1143  000736  0EBE               	movlw	low main@msgbuffer
  1144  000738  0100               	movlb	0	; () banked
  1145  00073A  6FD9               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1146  00073C  ECF6  F00D         	call	_timer0_lthread	;wreg free
  1147                           
  1148                           ;main.c: 167: break;
  1149  000740  D097               	goto	l3588
  1150  000742                     l125:
  1151                           
  1152                           ; BSR set to: 1
  1153                           ;main.c: 174: {
  1154                           ;main.c: 177: last_reg_recvd = msgbuffer[0];
  1155  000742  C1BE  F1BD         	movff	main@msgbuffer,main@last_reg_recvd
  1156                           
  1157                           ;main.c: 178: break;
  1158  000746  D094               	goto	l3588
  1159  000748                     l126:
  1160                           
  1161                           ; BSR set to: 1
  1162                           ;main.c: 181: {
  1163                           ;main.c: 184: last_reg_recvd = msgbuffer[0];
  1164  000748  C1BE  F1BD         	movff	main@msgbuffer,main@last_reg_recvd
  1165                           
  1166                           ;main.c: 185: switch (last_reg_recvd) {
  1167  00074C  D06E               	goto	l3582
  1168  00074E                     l3560:
  1169                           
  1170                           ; BSR set to: 1
  1171                           ;main.c: 187: {
  1172                           ;main.c: 188: length = 2;
  1173  00074E  0E02               	movlw	2
  1174  000750  0101               	movlb	1	; () banked
  1175  000752  6FDE               	movwf	main@length& (0+255),b
  1176                           
  1177                           ;main.c: 189: msgbuffer[0] = 0x60;
  1178  000754  0E60               	movlw	96
  1179  000756  0101               	movlb	1	; () banked
  1180  000758  6FBE               	movwf	main@msgbuffer& (0+255),b
  1181                           
  1182                           ;main.c: 190: msgbuffer[1] = 0xE0;
  1183  00075A  0EE0               	movlw	224
  1184  00075C  0101               	movlb	1	; () banked
  1185  00075E  6FBF               	movwf	(main@msgbuffer+1)& (0+255),b
  1186                           
  1187                           ; BSR set to: 1
  1188                           ;main.c: 191: uart_send(length, msgbuffer);
  1189  000760  0101               	movlb	1	; () banked
  1190  000762  0E01               	movlw	high main@msgbuffer
  1191  000764  0101               	movlb	1	; () banked
  1192  000766  6FAF               	movwf	(uart_send@msg_buffer+1)& (0+255),b
  1193  000768  0101               	movlb	1	; () banked
  1194  00076A  0EBE               	movlw	low main@msgbuffer
  1195  00076C  0101               	movlb	1	; () banked
  1196  00076E  6FAE               	movwf	uart_send@msg_buffer& (0+255),b
  1197  000770  0101               	movlb	1	; () banked
  1198  000772  51DE               	movf	main@length& (0+255),w,b
  1199  000774  EC44  F00B         	call	_uart_send
  1200                           
  1201                           ;main.c: 192: break;
  1202  000778  D07B               	goto	l3588
  1203  00077A                     l3564:
  1204                           
  1205                           ;main.c: 195: {
  1206                           ;main.c: 196: length = 2;
  1207  00077A  0E02               	movlw	2
  1208  00077C  0101               	movlb	1	; () banked
  1209  00077E  6FDE               	movwf	main@length& (0+255),b
  1210                           
  1211                           ;main.c: 197: msgbuffer[0] = 0x20;
  1212  000780  0E20               	movlw	32
  1213  000782  0101               	movlb	1	; () banked
  1214  000784  6FBE               	movwf	main@msgbuffer& (0+255),b
  1215                           
  1216                           ;main.c: 198: msgbuffer[1] = 0xE0;
  1217  000786  0EE0               	movlw	224
  1218  000788  0101               	movlb	1	; () banked
  1219  00078A  6FBF               	movwf	(main@msgbuffer+1)& (0+255),b
  1220                           
  1221                           ; BSR set to: 1
  1222                           ;main.c: 199: uart_send(length, msgbuffer);
  1223  00078C  0101               	movlb	1	; () banked
  1224  00078E  0E01               	movlw	high main@msgbuffer
  1225  000790  0101               	movlb	1	; () banked
  1226  000792  6FAF               	movwf	(uart_send@msg_buffer+1)& (0+255),b
  1227  000794  0101               	movlb	1	; () banked
  1228  000796  0EBE               	movlw	low main@msgbuffer
  1229  000798  0101               	movlb	1	; () banked
  1230  00079A  6FAE               	movwf	uart_send@msg_buffer& (0+255),b
  1231  00079C  0101               	movlb	1	; () banked
  1232  00079E  51DE               	movf	main@length& (0+255),w,b
  1233  0007A0  EC44  F00B         	call	_uart_send
  1234                           
  1235                           ;main.c: 200: break;
  1236  0007A4  D065               	goto	l3588
  1237  0007A6                     l3568:
  1238                           
  1239                           ;main.c: 203: {
  1240                           ;main.c: 204: length = 2;
  1241  0007A6  0E02               	movlw	2
  1242  0007A8  0101               	movlb	1	; () banked
  1243  0007AA  6FDE               	movwf	main@length& (0+255),b
  1244                           
  1245                           ;main.c: 205: msgbuffer[0] = 0x60;
  1246  0007AC  0E60               	movlw	96
  1247  0007AE  0101               	movlb	1	; () banked
  1248  0007B0  6FBE               	movwf	main@msgbuffer& (0+255),b
  1249                           
  1250                           ;main.c: 206: msgbuffer[1] = 0xA0;
  1251  0007B2  0EA0               	movlw	160
  1252  0007B4  0101               	movlb	1	; () banked
  1253  0007B6  6FBF               	movwf	(main@msgbuffer+1)& (0+255),b
  1254                           
  1255                           ; BSR set to: 1
  1256                           ;main.c: 207: uart_send(length, msgbuffer);
  1257  0007B8  0101               	movlb	1	; () banked
  1258  0007BA  0E01               	movlw	high main@msgbuffer
  1259  0007BC  0101               	movlb	1	; () banked
  1260  0007BE  6FAF               	movwf	(uart_send@msg_buffer+1)& (0+255),b
  1261  0007C0  0101               	movlb	1	; () banked
  1262  0007C2  0EBE               	movlw	low main@msgbuffer
  1263  0007C4  0101               	movlb	1	; () banked
  1264  0007C6  6FAE               	movwf	uart_send@msg_buffer& (0+255),b
  1265  0007C8  0101               	movlb	1	; () banked
  1266  0007CA  51DE               	movf	main@length& (0+255),w,b
  1267  0007CC  EC44  F00B         	call	_uart_send
  1268                           
  1269                           ;main.c: 208: break;
  1270  0007D0  D04F               	goto	l3588
  1271  0007D2                     l3572:
  1272                           
  1273                           ;main.c: 211: {
  1274                           ;main.c: 212: length = 2;
  1275  0007D2  0E02               	movlw	2
  1276  0007D4  0101               	movlb	1	; () banked
  1277  0007D6  6FDE               	movwf	main@length& (0+255),b
  1278                           
  1279                           ;main.c: 213: msgbuffer[0] = 0x40;
  1280  0007D8  0E40               	movlw	64
  1281  0007DA  0101               	movlb	1	; () banked
  1282  0007DC  6FBE               	movwf	main@msgbuffer& (0+255),b
  1283                           
  1284                           ;main.c: 214: msgbuffer[1] = 0xC0;
  1285  0007DE  0EC0               	movlw	192
  1286  0007E0  0101               	movlb	1	; () banked
  1287  0007E2  6FBF               	movwf	(main@msgbuffer+1)& (0+255),b
  1288                           
  1289                           ; BSR set to: 1
  1290                           ;main.c: 215: uart_send(length, msgbuffer);
  1291  0007E4  0101               	movlb	1	; () banked
  1292  0007E6  0E01               	movlw	high main@msgbuffer
  1293  0007E8  0101               	movlb	1	; () banked
  1294  0007EA  6FAF               	movwf	(uart_send@msg_buffer+1)& (0+255),b
  1295  0007EC  0101               	movlb	1	; () banked
  1296  0007EE  0EBE               	movlw	low main@msgbuffer
  1297  0007F0  0101               	movlb	1	; () banked
  1298  0007F2  6FAE               	movwf	uart_send@msg_buffer& (0+255),b
  1299  0007F4  0101               	movlb	1	; () banked
  1300  0007F6  51DE               	movf	main@length& (0+255),w,b
  1301  0007F8  EC44  F00B         	call	_uart_send
  1302                           
  1303                           ;main.c: 216: break;
  1304  0007FC  D039               	goto	l3588
  1305  0007FE                     l3576:
  1306                           
  1307                           ;main.c: 219: {
  1308                           ;main.c: 220: length = 2;
  1309  0007FE  0E02               	movlw	2
  1310  000800  0101               	movlb	1	; () banked
  1311  000802  6FDE               	movwf	main@length& (0+255),b
  1312                           
  1313                           ;main.c: 221: msgbuffer[0] = 0x20;
  1314  000804  0E20               	movlw	32
  1315  000806  0101               	movlb	1	; () banked
  1316  000808  6FBE               	movwf	main@msgbuffer& (0+255),b
  1317                           
  1318                           ;main.c: 222: msgbuffer[1] = 0xA0;
  1319  00080A  0EA0               	movlw	160
  1320  00080C  0101               	movlb	1	; () banked
  1321  00080E  6FBF               	movwf	(main@msgbuffer+1)& (0+255),b
  1322                           
  1323                           ; BSR set to: 1
  1324                           ;main.c: 223: uart_send(length, msgbuffer);
  1325  000810  0101               	movlb	1	; () banked
  1326  000812  0E01               	movlw	high main@msgbuffer
  1327  000814  0101               	movlb	1	; () banked
  1328  000816  6FAF               	movwf	(uart_send@msg_buffer+1)& (0+255),b
  1329  000818  0101               	movlb	1	; () banked
  1330  00081A  0EBE               	movlw	low main@msgbuffer
  1331  00081C  0101               	movlb	1	; () banked
  1332  00081E  6FAE               	movwf	uart_send@msg_buffer& (0+255),b
  1333  000820  0101               	movlb	1	; () banked
  1334  000822  51DE               	movf	main@length& (0+255),w,b
  1335  000824  EC44  F00B         	call	_uart_send
  1336                           
  1337                           ;main.c: 224: break;
  1338  000828  D023               	goto	l3588
  1339  00082A                     l3582:
  1340  00082A  0101               	movlb	1	; () banked
  1341  00082C  51BD               	movf	main@last_reg_recvd& (0+255),w,b
  1342                           
  1343                           ; Switch size 1, requested type "space"
  1344                           ; Number of cases is 5, Range of values is 10 to 14
  1345                           ; switch strategies available:
  1346                           ; Name         Instructions Cycles
  1347                           ; simple_byte           16     9 (average)
  1348                           ;	Chosen strategy is simple_byte
  1349  00082E  0A0A               	xorlw	10	; case 10
  1350  000830  B4D8               	btfsc	status,2,c
  1351  000832  D78D               	goto	l3560
  1352  000834  0A01               	xorlw	1	; case 11
  1353  000836  B4D8               	btfsc	status,2,c
  1354  000838  D7A0               	goto	l3564
  1355  00083A  0A07               	xorlw	7	; case 12
  1356  00083C  B4D8               	btfsc	status,2,c
  1357  00083E  D7B3               	goto	l3568
  1358  000840  0A01               	xorlw	1	; case 13
  1359  000842  B4D8               	btfsc	status,2,c
  1360  000844  D7C6               	goto	l3572
  1361  000846  0A03               	xorlw	3	; case 14
  1362  000848  B4D8               	btfsc	status,2,c
  1363  00084A  D7D9               	goto	l3576
  1364  00084C  D011               	goto	l3588
  1365  00084E                     l3586:
  1366                           
  1367                           ; BSR set to: 1
  1368  00084E  0101               	movlb	1	; () banked
  1369  000850  51CB               	movf	main@msgtype& (0+255),w,b
  1370                           
  1371                           ; Switch size 1, requested type "space"
  1372                           ; Number of cases is 5, Range of values is 10 to 45
  1373                           ; switch strategies available:
  1374                           ; Name         Instructions Cycles
  1375                           ; simple_byte           16     9 (average)
  1376                           ;	Chosen strategy is simple_byte
  1377  000852  0A0A               	xorlw	10	; case 10
  1378  000854  B4D8               	btfsc	status,2,c
  1379  000856  D753               	goto	l3558
  1380  000858  0A22               	xorlw	34	; case 40
  1381  00085A  B4D8               	btfsc	status,2,c
  1382  00085C  D009               	goto	l3588
  1383  00085E  0A01               	xorlw	1	; case 41
  1384  000860  B4D8               	btfsc	status,2,c
  1385  000862  D76F               	goto	l125
  1386  000864  0A03               	xorlw	3	; case 42
  1387  000866  B4D8               	btfsc	status,2,c
  1388  000868  D003               	goto	l3588
  1389  00086A  0A07               	xorlw	7	; case 45
  1390  00086C  B4D8               	btfsc	status,2,c
  1391  00086E  D76C               	goto	l126
  1392  000870                     l3588:
  1393                           
  1394                           ;main.c: 246: }
  1395                           ;main.c: 249: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1396  000870  0101               	movlb	1	; () banked
  1397  000872  0E01               	movlw	high main@msgtype
  1398  000874  0101               	movlb	1	; () banked
  1399  000876  6FAF               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1400  000878  0101               	movlb	1	; () banked
  1401  00087A  0ECB               	movlw	low main@msgtype
  1402  00087C  0101               	movlb	1	; () banked
  1403  00087E  6FAE               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1404  000880  0101               	movlb	1	; () banked
  1405  000882  0E01               	movlw	high main@msgbuffer
  1406  000884  0101               	movlb	1	; () banked
  1407  000886  6FB1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1408  000888  0101               	movlb	1	; () banked
  1409  00088A  0EBE               	movlw	low main@msgbuffer
  1410  00088C  0101               	movlb	1	; () banked
  1411  00088E  6FB0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1412  000890  0E0A               	movlw	10
  1413  000892  EC39  F00C         	call	_ToMainLow_recvmsg
  1414  000896  0101               	movlb	1	; () banked
  1415  000898  6FDE               	movwf	main@length& (0+255),b
  1416                           
  1417                           ; BSR set to: 1
  1418                           ;main.c: 250: if (length < 0) {
  1419  00089A  0101               	movlb	1	; () banked
  1420  00089C  BFDE               	btfsc	main@length& (0+255),7,b
  1421  00089E  D714               	goto	l3550
  1422  0008A0  D043               	goto	l3600
  1423  0008A2                     l3594:
  1424                           
  1425                           ; BSR set to: 1
  1426                           ;main.c: 258: {
  1427                           ;main.c: 259: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1428  0008A2  0101               	movlb	1	; () banked
  1429  0008A4  0E01               	movlw	high main@t1thread_data
  1430  0008A6  0101               	movlb	1	; () banked
  1431  0008A8  6FAF               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1432  0008AA  0101               	movlb	1	; () banked
  1433  0008AC  0EC9               	movlw	low main@t1thread_data
  1434  0008AE  0101               	movlb	1	; () banked
  1435  0008B0  6FAE               	movwf	timer1_lthread@tptr& (0+255),b
  1436  0008B2  0101               	movlb	1	; () banked
  1437  0008B4  C1CB  F1B0         	movff	main@msgtype,timer1_lthread@msgtype
  1438  0008B8  0101               	movlb	1	; () banked
  1439  0008BA  6BB1               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1440  0008BC  0101               	movlb	1	; () banked
  1441  0008BE  51DE               	movf	main@length& (0+255),w,b
  1442  0008C0  0101               	movlb	1	; () banked
  1443  0008C2  6FB2               	movwf	timer1_lthread@length& (0+255),b
  1444  0008C4  0101               	movlb	1	; () banked
  1445  0008C6  6BB3               	clrf	(timer1_lthread@length+1)& (0+255),b
  1446  0008C8  0101               	movlb	1	; () banked
  1447  0008CA  BFB2               	btfsc	timer1_lthread@length& (0+255),7,b
  1448  0008CC  07B3               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1449  0008CE  0101               	movlb	1	; () banked
  1450  0008D0  0E01               	movlw	high main@msgbuffer
  1451  0008D2  0101               	movlb	1	; () banked
  1452  0008D4  6FB5               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1453  0008D6  0101               	movlb	1	; () banked
  1454  0008D8  0EBE               	movlw	low main@msgbuffer
  1455  0008DA  0101               	movlb	1	; () banked
  1456  0008DC  6FB4               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1457  0008DE  EC8A  F00A         	call	_timer1_lthread	;wreg free
  1458                           
  1459                           ;main.c: 260: break;
  1460  0008E2  D6F2               	goto	l3550
  1461  0008E4                     l3596:
  1462                           
  1463                           ;main.c: 263: case 31:
  1464                           ;main.c: 264: {
  1465                           ;main.c: 265: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1466  0008E4  0101               	movlb	1	; () banked
  1467  0008E6  0E01               	movlw	high main@uthread_data
  1468  0008E8  0100               	movlb	0	; () banked
  1469  0008EA  6FD4               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1470  0008EC  0101               	movlb	1	; () banked
  1471  0008EE  0EB9               	movlw	low main@uthread_data
  1472  0008F0  0100               	movlb	0	; () banked
  1473  0008F2  6FD3               	movwf	uart_lthread@uptr& (0+255),b
  1474  0008F4  0101               	movlb	1	; () banked
  1475  0008F6  0100               	movlb	0	; () banked
  1476  0008F8  C1CB  F0D5         	movff	main@msgtype,uart_lthread@msgtype
  1477  0008FC  0100               	movlb	0	; () banked
  1478  0008FE  6BD6               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1479  000900  0101               	movlb	1	; () banked
  1480  000902  51DE               	movf	main@length& (0+255),w,b
  1481  000904  0100               	movlb	0	; () banked
  1482  000906  6FD7               	movwf	uart_lthread@length& (0+255),b
  1483  000908  0100               	movlb	0	; () banked
  1484  00090A  6BD8               	clrf	(uart_lthread@length+1)& (0+255),b
  1485  00090C  0100               	movlb	0	; () banked
  1486  00090E  BFD7               	btfsc	uart_lthread@length& (0+255),7,b
  1487  000910  07D8               	decf	(uart_lthread@length+1)& (0+255),f,b
  1488  000912  0101               	movlb	1	; () banked
  1489  000914  0E01               	movlw	high main@msgbuffer
  1490  000916  0100               	movlb	0	; () banked
  1491  000918  6FDA               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1492  00091A  0101               	movlb	1	; () banked
  1493  00091C  0EBE               	movlw	low main@msgbuffer
  1494  00091E  0100               	movlb	0	; () banked
  1495  000920  6FD9               	movwf	uart_lthread@msgbuffer& (0+255),b
  1496  000922  EC88  F00C         	call	_uart_lthread	;wreg free
  1497                           
  1498                           ;main.c: 266: break;
  1499  000926  D6D0               	goto	l3550
  1500  000928                     l3600:
  1501  000928  0101               	movlb	1	; () banked
  1502  00092A  51CB               	movf	main@msgtype& (0+255),w,b
  1503                           
  1504                           ; Switch size 1, requested type "space"
  1505                           ; Number of cases is 3, Range of values is 11 to 31
  1506                           ; switch strategies available:
  1507                           ; Name         Instructions Cycles
  1508                           ; simple_byte           10     6 (average)
  1509                           ;	Chosen strategy is simple_byte
  1510  00092C  0A0B               	xorlw	11	; case 11
  1511  00092E  B4D8               	btfsc	status,2,c
  1512  000930  D7B8               	goto	l3594
  1513  000932  0A15               	xorlw	21	; case 30
  1514  000934  B4D8               	btfsc	status,2,c
  1515  000936  D7D6               	goto	l3596
  1516  000938  0A01               	xorlw	1	; case 31
  1517  00093A  B4D8               	btfsc	status,2,c
  1518  00093C  D7D3               	goto	l3596
  1519  00093E  D6C4               	goto	l3550
  1520  000940                     __end_of_main:
  1521                           	opt stack 0
  1522                           tblptru	equ	0xFF8
  1523                           intcon2	equ	0xFF1
  1524                           postinc0	equ	0xFEE
  1525                           wreg	equ	0xFE8
  1526                           status	equ	0xFD8
  1527                           
  1528 ;; *************** function _uart_send *****************
  1529 ;; Defined at:
  1530 ;;		line 53 in file "../src/my_uart.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  length          1    wreg     unsigned char 
  1533 ;;  msg_buffer      2   12[BANK1 ] PTR unsigned char 
  1534 ;;		 -> main@msgbuffer(11), 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  length          1   14[BANK1 ] unsigned char 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;		None               void
  1539 ;; Registers used:
  1540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1546 ;;      Params:         0       0       2       0       0
  1547 ;;      Locals:         0       0       1       0       0
  1548 ;;      Temps:          0       0       0       0       0
  1549 ;;      Totals:         0       0       3       0       0
  1550 ;;Total ram usage:        3 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:   13
  1553 ;; This function calls:
  1554 ;;		_FromMainLow_sendmsg
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text1
  1561  001688                     __ptext1:
  1562                           	opt stack 0
  1563  001688                     _uart_send:
  1564                           	opt stack 16
  1565                           
  1566                           ; BSR set to: 1
  1567                           ;incstack = 0
  1568                           ;uart_send@length stored from wreg
  1569  001688  0101               	movlb	1	; () banked
  1570  00168A  6FB0               	movwf	uart_send@length& (0+255),b
  1571                           
  1572                           ; BSR set to: 1
  1573                           ;my_uart.c: 54: uc_ptr->outbufind = 0;
  1574  00168C  EE20 F00F          	lfsr	2,15
  1575  001690  5049               	movf	_uc_ptr,w,c
  1576  001692  26D9               	addwf	fsr2l,f,c
  1577  001694  504A               	movf	_uc_ptr+1,w,c
  1578  001696  22DA               	addwfc	fsr2h,f,c
  1579  001698  0E00               	movlw	0
  1580  00169A  6EDF               	movwf	indf2,c
  1581                           
  1582                           ;my_uart.c: 55: uc_ptr->outbuflen = length;
  1583  00169C  EE20 F00E          	lfsr	2,14
  1584  0016A0  5049               	movf	_uc_ptr,w,c
  1585  0016A2  26D9               	addwf	fsr2l,f,c
  1586  0016A4  504A               	movf	_uc_ptr+1,w,c
  1587  0016A6  22DA               	addwfc	fsr2h,f,c
  1588  0016A8  0101               	movlb	1	; () banked
  1589  0016AA  C1B0  FFDF         	movff	uart_send@length,indf2
  1590                           
  1591                           ; BSR set to: 1
  1592                           ;my_uart.c: 56: FromMainLow_sendmsg(uc_ptr->outbuflen, 45, (void *) msg_buffer);
  1593  0016AE  0E2D               	movlw	45
  1594  0016B0  0100               	movlb	0	; () banked
  1595  0016B2  6FDE               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  1596  0016B4  0101               	movlb	1	; () banked
  1597  0016B6  0100               	movlb	0	; () banked
  1598  0016B8  C1AF  F0E0         	movff	uart_send@msg_buffer+1,FromMainLow_sendmsg@data+1
  1599  0016BC  0101               	movlb	1	; () banked
  1600  0016BE  0100               	movlb	0	; () banked
  1601  0016C0  C1AE  F0DF         	movff	uart_send@msg_buffer,FromMainLow_sendmsg@data
  1602  0016C4  EE20 F00E          	lfsr	2,14
  1603  0016C8  5049               	movf	_uc_ptr,w,c
  1604  0016CA  26D9               	addwf	fsr2l,f,c
  1605  0016CC  504A               	movf	_uc_ptr+1,w,c
  1606  0016CE  22DA               	addwfc	fsr2h,f,c
  1607  0016D0  50DF               	movf	indf2,w,c
  1608  0016D2  EC6F  F00C         	call	_FromMainLow_sendmsg
  1609                           
  1610                           ;my_uart.c: 57: PIE1bits.TXIE = 1;
  1611  0016D6  889D               	bsf	3997,4,c	;volatile
  1612  0016D8  0012               	return	
  1613  0016DA                     __end_of_uart_send:
  1614                           	opt stack 0
  1615                           tblptru	equ	0xFF8
  1616                           intcon2	equ	0xFF1
  1617                           postinc0	equ	0xFEE
  1618                           wreg	equ	0xFE8
  1619                           indf2	equ	0xFDF
  1620                           fsr2h	equ	0xFDA
  1621                           fsr2l	equ	0xFD9
  1622                           status	equ	0xFD8
  1623                           
  1624 ;; *************** function _FromMainLow_sendmsg *****************
  1625 ;; Defined at:
  1626 ;;		line 150 in file "../src/messages.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  length          1    wreg     unsigned char 
  1629 ;;  msgtype         1   40[BANK0 ] unsigned char 
  1630 ;;  data            2   41[BANK0 ] PTR void 
  1631 ;;		 -> main@msgbuffer(11), 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  length          1   11[BANK1 ] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      char 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1643 ;;      Params:         0       3       0       0       0
  1644 ;;      Locals:         0       0       1       0       0
  1645 ;;      Temps:          0       0       0       0       0
  1646 ;;      Totals:         0       3       1       0       0
  1647 ;;Total ram usage:        4 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:   12
  1650 ;; This function calls:
  1651 ;;		_send_msg
  1652 ;; This function is called by:
  1653 ;;		_uart_send
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text2
  1658  0018DE                     __ptext2:
  1659                           	opt stack 0
  1660  0018DE                     _FromMainLow_sendmsg:
  1661                           	opt stack 16
  1662                           
  1663                           ;incstack = 0
  1664                           ;FromMainLow_sendmsg@length stored from wreg
  1665  0018DE  0101               	movlb	1	; () banked
  1666  0018E0  6FAD               	movwf	FromMainLow_sendmsg@length& (0+255),b
  1667                           
  1668                           ; BSR set to: 1
  1669                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1670                           ;	Return value of _FromMainLow_sendmsg is never used
  1671  0018E2  0101               	movlb	1	; () banked
  1672  0018E4  0E01               	movlw	high _FromMainLow_MQ
  1673  0018E6  0101               	movlb	1	; () banked
  1674  0018E8  6FA3               	movwf	(send_msg@qptr+1)& (0+255),b
  1675  0018EA  0101               	movlb	1	; () banked
  1676  0018EC  0E36               	movlw	low _FromMainLow_MQ
  1677  0018EE  0101               	movlb	1	; () banked
  1678  0018F0  6FA2               	movwf	send_msg@qptr& (0+255),b
  1679  0018F2  C1AD  F1A4         	movff	FromMainLow_sendmsg@length,send_msg@length
  1680  0018F6  C0DE  F1A5         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1681  0018FA  0100               	movlb	0	; () banked
  1682  0018FC  0101               	movlb	1	; () banked
  1683  0018FE  C0E0  F1A7         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1684  001902  0100               	movlb	0	; () banked
  1685  001904  0101               	movlb	1	; () banked
  1686  001906  C0DF  F1A6         	movff	FromMainLow_sendmsg@data,send_msg@data
  1687  00190A  EC71  F006         	call	_send_msg	;wreg free
  1688  00190E  0012               	return	
  1689  001910                     __end_of_FromMainLow_sendmsg:
  1690                           	opt stack 0
  1691                           tblptru	equ	0xFF8
  1692                           intcon2	equ	0xFF1
  1693                           postinc0	equ	0xFEE
  1694                           wreg	equ	0xFE8
  1695                           indf2	equ	0xFDF
  1696                           fsr2h	equ	0xFDA
  1697                           fsr2l	equ	0xFD9
  1698                           status	equ	0xFD8
  1699                           
  1700 ;; *************** function _uart_lthread *****************
  1701 ;; Defined at:
  1702 ;;		line 9 in file "../src/uart_thread.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  uptr            2   29[BANK0 ] PTR struct __uart_thread
  1705 ;;		 -> main@uthread_data(2), 
  1706 ;;  msgtype         2   31[BANK0 ] int 
  1707 ;;  length          2   33[BANK0 ] int 
  1708 ;;  msgbuffer       2   35[BANK0 ] PTR unsigned char 
  1709 ;;		 -> main@msgbuffer(11), 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  2   29[BANK0 ] int 
  1714 ;; Registers used:
  1715 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1721 ;;      Params:         0       8       0       0       0
  1722 ;;      Locals:         0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0
  1724 ;;      Totals:         0       8       0       0       0
  1725 ;;Total ram usage:        8 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:   10
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text3
  1736  001910                     __ptext3:
  1737                           	opt stack 0
  1738  001910                     _uart_lthread:
  1739                           	opt stack 19
  1740                           
  1741                           ;uart_thread.c: 10: if (msgtype == 30) {
  1742                           
  1743                           ;incstack = 0
  1744  001910  0100               	movlb	0	; () banked
  1745  001912  51D5               	movf	uart_lthread@msgtype& (0+255),w,b
  1746  001914  0A1E               	xorlw	30
  1747  001916  11D6               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1748  001918  B4D8               	btfsc	status,2,c
  1749  00191A  0012               	return	
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;uart_thread.c: 12: else if (msgtype == 31) {
  1753                           
  1754                           ; BSR set to: 0
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;uart_thread.c: 11: }
  1758  00191C  0100               	movlb	0	; () banked
  1759  00191E  51D5               	movf	uart_lthread@msgtype& (0+255),w,b
  1760  001920  0A1F               	xorlw	31
  1761  001922  11D6               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1762  001924  A4D8               	btfss	status,2,c
  1763  001926  0012               	return	
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  1767  001928  0100               	movlb	0	; () banked
  1768  00192A  51D7               	movf	uart_lthread@length& (0+255),w,b
  1769  00192C  0100               	movlb	0	; () banked
  1770  00192E  25D9               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1771  001930  6ED9               	movwf	fsr2l,c
  1772  001932  0100               	movlb	0	; () banked
  1773  001934  51D8               	movf	(uart_lthread@length+1)& (0+255),w,b
  1774  001936  0100               	movlb	0	; () banked
  1775  001938  21DA               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1776  00193A  6EDA               	movwf	fsr2h,c
  1777  00193C  0E00               	movlw	0
  1778  00193E  6EDF               	movwf	indf2,c
  1779  001940  0012               	return	
  1780  001942                     __end_of_uart_lthread:
  1781                           	opt stack 0
  1782                           tblptru	equ	0xFF8
  1783                           intcon2	equ	0xFF1
  1784                           postinc0	equ	0xFEE
  1785                           wreg	equ	0xFE8
  1786                           indf2	equ	0xFDF
  1787                           fsr2h	equ	0xFDA
  1788                           fsr2l	equ	0xFD9
  1789                           status	equ	0xFD8
  1790                           
  1791 ;; *************** function _timer1_lthread *****************
  1792 ;; Defined at:
  1793 ;;		line 14 in file "../src/timer1_thread.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  tptr            2   12[BANK1 ] PTR struct __timer1_thre
  1796 ;;		 -> main@t1thread_data(2), 
  1797 ;;  msgtype         2   14[BANK1 ] int 
  1798 ;;  length          2   16[BANK1 ] int 
  1799 ;;  msgbuffer       2   18[BANK1 ] PTR unsigned char 
  1800 ;;		 -> main@msgbuffer(11), 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  retval          1   20[BANK1 ] char 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  2   12[BANK1 ] int 
  1805 ;; Registers used:
  1806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1812 ;;      Params:         0       0       8       0       0
  1813 ;;      Locals:         0       0       1       0       0
  1814 ;;      Temps:          0       0       0       0       0
  1815 ;;      Totals:         0       0       9       0       0
  1816 ;;Total ram usage:        9 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; Hardware stack levels required when called:   13
  1819 ;; This function calls:
  1820 ;;		_FromMainHigh_sendmsg
  1821 ;;		___lwmod
  1822 ;; This function is called by:
  1823 ;;		_main
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text4
  1828  001514                     __ptext4:
  1829                           	opt stack 0
  1830  001514                     _timer1_lthread:
  1831                           	opt stack 16
  1832                           
  1833                           ;timer1_thread.c: 15: signed char retval;
  1834                           ;timer1_thread.c: 17: tptr->msgcount++;
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;incstack = 0
  1838  001514  C1AE  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1839  001518  C1AF  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1840  00151C  2ADE               	incf	postinc2,f,c
  1841  00151E  0E00               	movlw	0
  1842  001520  22DD               	addwfc	postdec2,f,c
  1843                           
  1844                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1845  001522  C1AE  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1846  001526  C1AF  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1847  00152A  0100               	movlb	0	; () banked
  1848  00152C  CFDE F0D3          	movff	postinc2,___lwmod@dividend
  1849  001530  0100               	movlb	0	; () banked
  1850  001532  CFDD F0D4          	movff	postdec2,___lwmod@dividend+1
  1851  001536  0E00               	movlw	0
  1852  001538  0100               	movlb	0	; () banked
  1853  00153A  6FD6               	movwf	(___lwmod@divisor+1)& (0+255),b
  1854  00153C  0E0A               	movlw	10
  1855  00153E  0100               	movlb	0	; () banked
  1856  001540  6FD5               	movwf	___lwmod@divisor& (0+255),b
  1857  001542  ECBB  F00A         	call	___lwmod	;wreg free
  1858  001546  0100               	movlb	0	; () banked
  1859  001548  51D3               	movf	?___lwmod& (0+255),w,b
  1860  00154A  0A09               	xorlw	9
  1861  00154C  0100               	movlb	0	; () banked
  1862  00154E  11D4               	iorwf	(?___lwmod+1)& (0+255),w,b
  1863  001550  A4D8               	btfss	status,2,c
  1864  001552  0012               	return	
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1868  001554  0E14               	movlw	20
  1869  001556  0100               	movlb	0	; () banked
  1870  001558  6FDE               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1871  00155A  0101               	movlb	1	; () banked
  1872  00155C  0100               	movlb	0	; () banked
  1873  00155E  C1AF  F0E0         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1874  001562  0101               	movlb	1	; () banked
  1875  001564  0100               	movlb	0	; () banked
  1876  001566  C1AE  F0DF         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1877  00156A  0E02               	movlw	2
  1878  00156C  ECA1  F00C         	call	_FromMainHigh_sendmsg
  1879  001570  0101               	movlb	1	; () banked
  1880  001572  6FB6               	movwf	timer1_lthread@retval& (0+255),b
  1881  001574  0012               	return	
  1882  001576                     __end_of_timer1_lthread:
  1883                           	opt stack 0
  1884                           tblptru	equ	0xFF8
  1885                           intcon2	equ	0xFF1
  1886                           postinc0	equ	0xFEE
  1887                           wreg	equ	0xFE8
  1888                           indf2	equ	0xFDF
  1889                           postinc2	equ	0xFDE
  1890                           postdec2	equ	0xFDD
  1891                           fsr2h	equ	0xFDA
  1892                           fsr2l	equ	0xFD9
  1893                           status	equ	0xFD8
  1894                           
  1895 ;; *************** function ___lwmod *****************
  1896 ;; Defined at:
  1897 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  dividend        2   29[BANK0 ] unsigned int 
  1900 ;;  divisor         2   31[BANK0 ] unsigned int 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  counter         1   33[BANK0 ] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  2   29[BANK0 ] unsigned int 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1912 ;;      Params:         0       4       0       0       0
  1913 ;;      Locals:         0       1       0       0       0
  1914 ;;      Temps:          0       0       0       0       0
  1915 ;;      Totals:         0       5       0       0       0
  1916 ;;Total ram usage:        5 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:   10
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_timer1_lthread
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text5
  1927  001576                     __ptext5:
  1928                           	opt stack 0
  1929  001576                     ___lwmod:
  1930                           	opt stack 18
  1931                           
  1932                           ;incstack = 0
  1933  001576  0100               	movlb	0	; () banked
  1934  001578  51D6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1935  00157A  11D5               	iorwf	___lwmod@divisor& (0+255),w,b
  1936  00157C  B4D8               	btfsc	status,2,c
  1937  00157E  D026               	goto	l1053
  1938                           
  1939                           ; BSR set to: 0
  1940  001580  0E01               	movlw	1
  1941  001582  0100               	movlb	0	; () banked
  1942  001584  6FD7               	movwf	___lwmod@counter& (0+255),b
  1943  001586  D006               	goto	l3248
  1944  001588                     l3246:
  1945                           
  1946                           ; BSR set to: 0
  1947  001588  0100               	movlb	0	; () banked
  1948  00158A  90D8               	bcf	status,0,c
  1949  00158C  37D5               	rlcf	___lwmod@divisor& (0+255),f,b
  1950  00158E  37D6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1951  001590  0100               	movlb	0	; () banked
  1952  001592  2BD7               	incf	___lwmod@counter& (0+255),f,b
  1953  001594                     l3248:
  1954                           
  1955                           ; BSR set to: 0
  1956  001594  0100               	movlb	0	; () banked
  1957  001596  AFD6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1958  001598  D7F7               	goto	l3246
  1959  00159A                     l3250:
  1960                           
  1961                           ; BSR set to: 0
  1962  00159A  0100               	movlb	0	; () banked
  1963  00159C  51D5               	movf	___lwmod@divisor& (0+255),w,b
  1964  00159E  0100               	movlb	0	; () banked
  1965  0015A0  5DD3               	subwf	___lwmod@dividend& (0+255),w,b
  1966  0015A2  0100               	movlb	0	; () banked
  1967  0015A4  51D6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1968  0015A6  0100               	movlb	0	; () banked
  1969  0015A8  59D4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1970  0015AA  A0D8               	btfss	status,0,c
  1971  0015AC  D008               	goto	l3254
  1972                           
  1973                           ; BSR set to: 0
  1974  0015AE  0100               	movlb	0	; () banked
  1975  0015B0  51D5               	movf	___lwmod@divisor& (0+255),w,b
  1976  0015B2  0100               	movlb	0	; () banked
  1977  0015B4  5FD3               	subwf	___lwmod@dividend& (0+255),f,b
  1978  0015B6  0100               	movlb	0	; () banked
  1979  0015B8  51D6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1980  0015BA  0100               	movlb	0	; () banked
  1981  0015BC  5BD4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1982  0015BE                     l3254:
  1983                           
  1984                           ; BSR set to: 0
  1985  0015BE  0100               	movlb	0	; () banked
  1986  0015C0  90D8               	bcf	status,0,c
  1987  0015C2  33D6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1988  0015C4  33D5               	rrcf	___lwmod@divisor& (0+255),f,b
  1989                           
  1990                           ; BSR set to: 0
  1991  0015C6  0100               	movlb	0	; () banked
  1992  0015C8  2FD7               	decfsz	___lwmod@counter& (0+255),f,b
  1993  0015CA  D7E7               	goto	l3250
  1994  0015CC                     l1053:
  1995                           
  1996                           ; BSR set to: 0
  1997  0015CC  C0D3  F0D3         	movff	___lwmod@dividend,?___lwmod
  1998  0015D0  C0D4  F0D4         	movff	___lwmod@dividend+1,?___lwmod+1
  1999                           
  2000                           ; BSR set to: 0
  2001  0015D4  0012               	return	
  2002  0015D6                     __end_of___lwmod:
  2003                           	opt stack 0
  2004                           tblptru	equ	0xFF8
  2005                           intcon2	equ	0xFF1
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           indf2	equ	0xFDF
  2009                           postinc2	equ	0xFDE
  2010                           postdec2	equ	0xFDD
  2011                           fsr2h	equ	0xFDA
  2012                           fsr2l	equ	0xFD9
  2013                           status	equ	0xFD8
  2014                           
  2015 ;; *************** function _FromMainHigh_sendmsg *****************
  2016 ;; Defined at:
  2017 ;;		line 174 in file "../src/messages.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  length          1    wreg     unsigned char 
  2020 ;;  msgtype         1   40[BANK0 ] unsigned char 
  2021 ;;  data            2   41[BANK0 ] PTR void 
  2022 ;;		 -> main@t1thread_data(2), 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  length          1   11[BANK1 ] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      char 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2034 ;;      Params:         0       3       0       0       0
  2035 ;;      Locals:         0       0       1       0       0
  2036 ;;      Temps:          0       0       0       0       0
  2037 ;;      Totals:         0       3       1       0       0
  2038 ;;Total ram usage:        4 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:   12
  2041 ;; This function calls:
  2042 ;;		_send_msg
  2043 ;; This function is called by:
  2044 ;;		_timer1_lthread
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text6
  2049  001942                     __ptext6:
  2050                           	opt stack 0
  2051  001942                     _FromMainHigh_sendmsg:
  2052                           	opt stack 16
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;incstack = 0
  2056                           ;FromMainHigh_sendmsg@length stored from wreg
  2057  001942  0101               	movlb	1	; () banked
  2058  001944  6FAD               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  2059                           
  2060                           ; BSR set to: 1
  2061                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2062  001946  0101               	movlb	1	; () banked
  2063  001948  0E01               	movlw	high _FromMainHigh_MQ
  2064  00194A  0101               	movlb	1	; () banked
  2065  00194C  6FA3               	movwf	(send_msg@qptr+1)& (0+255),b
  2066  00194E  0101               	movlb	1	; () banked
  2067  001950  0E00               	movlw	low _FromMainHigh_MQ
  2068  001952  0101               	movlb	1	; () banked
  2069  001954  6FA2               	movwf	send_msg@qptr& (0+255),b
  2070  001956  C1AD  F1A4         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2071  00195A  C0DE  F1A5         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2072  00195E  0100               	movlb	0	; () banked
  2073  001960  0101               	movlb	1	; () banked
  2074  001962  C0E0  F1A7         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2075  001966  0100               	movlb	0	; () banked
  2076  001968  0101               	movlb	1	; () banked
  2077  00196A  C0DF  F1A6         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2078  00196E  EC71  F006         	call	_send_msg	;wreg free
  2079  001972  0012               	return	
  2080  001974                     __end_of_FromMainHigh_sendmsg:
  2081                           	opt stack 0
  2082                           tblptru	equ	0xFF8
  2083                           intcon2	equ	0xFF1
  2084                           postinc0	equ	0xFEE
  2085                           wreg	equ	0xFE8
  2086                           indf2	equ	0xFDF
  2087                           postinc2	equ	0xFDE
  2088                           postdec2	equ	0xFDD
  2089                           fsr2h	equ	0xFDA
  2090                           fsr2l	equ	0xFD9
  2091                           status	equ	0xFD8
  2092                           
  2093 ;; *************** function _send_msg *****************
  2094 ;; Defined at:
  2095 ;;		line 24 in file "../src/messages.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2098 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2099 ;;  length          1    2[BANK1 ] unsigned char 
  2100 ;;  msgtype         1    3[BANK1 ] unsigned char 
  2101 ;;  data            2    4[BANK1 ] PTR void 
  2102 ;;		 -> timer1_int_handler@reverse(1), timer1_int_handler@stop(1), timer1_int_handler@right(1), timer1_int_handler@left(
      +1), 
  2103 ;;		 -> timer1_int_handler@forward(1), timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@rig
      +ht(1), 
  2104 ;;		 -> timer0_int_handler@left(1), timer0_int_handler@forward(1), NULL(0), i2c_int_handler@error_buf(3), 
  2105 ;;		 -> main@msgbuffer(11), main@t1thread_data(2), main@ic(28), main@uc(18), 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  2108 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2109 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2110 ;;  tlength         2    6[BANK1 ] unsigned int 
  2111 ;;  slot            1    8[BANK1 ] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      char 
  2114 ;; Registers used:
  2115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2121 ;;      Params:         0       0       6       0       0
  2122 ;;      Locals:         0       0       5       0       0
  2123 ;;      Temps:          0       1       0       0       0
  2124 ;;      Totals:         0       1      11       0       0
  2125 ;;Total ram usage:       12 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:   11
  2128 ;; This function calls:
  2129 ;;		_memcpy
  2130 ;; This function is called by:
  2131 ;;		_FromMainLow_sendmsg
  2132 ;;		_FromMainHigh_sendmsg
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text7
  2137  000CE2                     __ptext7:
  2138                           	opt stack 0
  2139  000CE2                     _send_msg:
  2140                           	opt stack 16
  2141                           
  2142                           ;messages.c: 25: unsigned char slot;
  2143                           ;messages.c: 27: msg *qmsg;
  2144                           ;messages.c: 28: size_t tlength = length;
  2145                           
  2146                           ;incstack = 0
  2147  000CE2  0101               	movlb	1	; () banked
  2148  000CE4  C1A4  F1A8         	movff	send_msg@length,send_msg@tlength
  2149  000CE8  0101               	movlb	1	; () banked
  2150  000CEA  6BA9               	clrf	(send_msg@tlength+1)& (0+255),b
  2151                           
  2152                           ; BSR set to: 1
  2153                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2154  000CEC  0101               	movlb	1	; () banked
  2155  000CEE  EE20 F034          	lfsr	2,52
  2156  000CF2  0101               	movlb	1	; () banked
  2157  000CF4  51A2               	movf	send_msg@qptr& (0+255),w,b
  2158  000CF6  26D9               	addwf	fsr2l,f,c
  2159  000CF8  0101               	movlb	1	; () banked
  2160  000CFA  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2161  000CFC  22DA               	addwfc	fsr2h,f,c
  2162  000CFE  50DF               	movf	indf2,w,c
  2163  000D00  0101               	movlb	1	; () banked
  2164  000D02  6FAA               	movwf	send_msg@slot& (0+255),b
  2165                           
  2166                           ; BSR set to: 1
  2167                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2168  000D04  0101               	movlb	1	; () banked
  2169  000D06  51AA               	movf	send_msg@slot& (0+255),w,b
  2170  000D08  0D0D               	mullw	13
  2171  000D0A  50F3               	movf	prodl,w,c
  2172  000D0C  0101               	movlb	1	; () banked
  2173  000D0E  25A2               	addwf	send_msg@qptr& (0+255),w,b
  2174  000D10  0101               	movlb	1	; () banked
  2175  000D12  6FAB               	movwf	send_msg@qmsg& (0+255),b
  2176  000D14  50F4               	movf	prodh,w,c
  2177  000D16  0101               	movlb	1	; () banked
  2178  000D18  21A3               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2179  000D1A  0101               	movlb	1	; () banked
  2180  000D1C  6FAC               	movwf	(send_msg@qmsg+1)& (0+255),b
  2181                           
  2182                           ; BSR set to: 1
  2183                           ;messages.c: 41: if (qmsg->full != 0) {
  2184  000D1E  C1AB  FFD9         	movff	send_msg@qmsg,fsr2l
  2185  000D22  C1AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2186  000D26  50DF               	movf	indf2,w,c
  2187  000D28  B4D8               	btfsc	status,2,c
  2188  000D2A  D002               	goto	l3166
  2189                           
  2190                           ; BSR set to: 1
  2191                           ;messages.c: 42: return (-1);
  2192  000D2C  0EFF               	movlw	255
  2193  000D2E  0012               	return	
  2194  000D30                     l3166:
  2195                           
  2196                           ; BSR set to: 1
  2197                           ;messages.c: 43: }
  2198                           ;messages.c: 46: qmsg->length = length;
  2199  000D30  0101               	movlb	1	; () banked
  2200  000D32  EE20 F001          	lfsr	2,1
  2201  000D36  0101               	movlb	1	; () banked
  2202  000D38  51AB               	movf	send_msg@qmsg& (0+255),w,b
  2203  000D3A  26D9               	addwf	fsr2l,f,c
  2204  000D3C  0101               	movlb	1	; () banked
  2205  000D3E  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2206  000D40  22DA               	addwfc	fsr2h,f,c
  2207  000D42  0101               	movlb	1	; () banked
  2208  000D44  C1A4  FFDF         	movff	send_msg@length,indf2
  2209                           
  2210                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2211  000D48  0101               	movlb	1	; () banked
  2212  000D4A  EE20 F002          	lfsr	2,2
  2213  000D4E  0101               	movlb	1	; () banked
  2214  000D50  51AB               	movf	send_msg@qmsg& (0+255),w,b
  2215  000D52  26D9               	addwf	fsr2l,f,c
  2216  000D54  0101               	movlb	1	; () banked
  2217  000D56  51AC               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2218  000D58  22DA               	addwfc	fsr2h,f,c
  2219  000D5A  0101               	movlb	1	; () banked
  2220  000D5C  C1A5  FFDF         	movff	send_msg@msgtype,indf2
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2224  000D60  0E03               	movlw	3
  2225  000D62  0101               	movlb	1	; () banked
  2226  000D64  25AB               	addwf	send_msg@qmsg& (0+255),w,b
  2227  000D66  0100               	movlb	0	; () banked
  2228  000D68  6FD3               	movwf	memcpy@d1& (0+255),b
  2229  000D6A  0E00               	movlw	0
  2230  000D6C  0101               	movlb	1	; () banked
  2231  000D6E  21AC               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2232  000D70  0100               	movlb	0	; () banked
  2233  000D72  6FD4               	movwf	(memcpy@d1+1)& (0+255),b
  2234  000D74  0101               	movlb	1	; () banked
  2235  000D76  0100               	movlb	0	; () banked
  2236  000D78  C1A7  F0D6         	movff	send_msg@data+1,memcpy@s1+1
  2237  000D7C  0101               	movlb	1	; () banked
  2238  000D7E  0100               	movlb	0	; () banked
  2239  000D80  C1A6  F0D5         	movff	send_msg@data,memcpy@s1
  2240  000D84  C1A8  F0D7         	movff	send_msg@tlength,memcpy@n
  2241  000D88  C1A9  F0D8         	movff	send_msg@tlength+1,memcpy@n+1
  2242  000D8C  EC6D  F00B         	call	_memcpy	;wreg free
  2243                           
  2244                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2245  000D90  0101               	movlb	1	; () banked
  2246  000D92  EE20 F034          	lfsr	2,52
  2247  000D96  0101               	movlb	1	; () banked
  2248  000D98  51A2               	movf	send_msg@qptr& (0+255),w,b
  2249  000D9A  26D9               	addwf	fsr2l,f,c
  2250  000D9C  0101               	movlb	1	; () banked
  2251  000D9E  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2252  000DA0  22DA               	addwfc	fsr2h,f,c
  2253  000DA2  0101               	movlb	1	; () banked
  2254  000DA4  EE10 F034          	lfsr	1,52
  2255  000DA8  0101               	movlb	1	; () banked
  2256  000DAA  51A2               	movf	send_msg@qptr& (0+255),w,b
  2257  000DAC  26E1               	addwf	fsr1l,f,c
  2258  000DAE  0101               	movlb	1	; () banked
  2259  000DB0  51A3               	movf	(send_msg@qptr+1)& (0+255),w,b
  2260  000DB2  22E2               	addwfc	fsr1h,f,c
  2261  000DB4  50E7               	movf	indf1,w,c
  2262  000DB6  0100               	movlb	0	; () banked
  2263  000DB8  6FDD               	movwf	??_send_msg& (0+255),b
  2264  000DBA  0100               	movlb	0	; () banked
  2265  000DBC  29DD               	incf	??_send_msg& (0+255),w,b
  2266  000DBE  0B03               	andlw	3
  2267  000DC0  6EDF               	movwf	indf2,c
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;messages.c: 59: qmsg->full = 1;
  2271  000DC2  C1AB  FFD9         	movff	send_msg@qmsg,fsr2l
  2272  000DC6  C1AC  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2273  000DCA  0E01               	movlw	1
  2274  000DCC  6EDF               	movwf	indf2,c
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;messages.c: 60: return (1);
  2278  000DCE  0E01               	movlw	1
  2279  000DD0  0012               	return	
  2280  000DD2                     __end_of_send_msg:
  2281                           	opt stack 0
  2282                           tblptru	equ	0xFF8
  2283                           prodh	equ	0xFF4
  2284                           prodl	equ	0xFF3
  2285                           intcon2	equ	0xFF1
  2286                           postinc0	equ	0xFEE
  2287                           wreg	equ	0xFE8
  2288                           indf1	equ	0xFE7
  2289                           fsr1h	equ	0xFE2
  2290                           fsr1l	equ	0xFE1
  2291                           indf2	equ	0xFDF
  2292                           postinc2	equ	0xFDE
  2293                           postdec2	equ	0xFDD
  2294                           fsr2h	equ	0xFDA
  2295                           fsr2l	equ	0xFD9
  2296                           status	equ	0xFD8
  2297                           
  2298 ;; *************** function _timer0_lthread *****************
  2299 ;; Defined at:
  2300 ;;		line 9 in file "../src/timer0_thread.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  tptr            2   29[BANK0 ] PTR struct __timer0_thre
  2303 ;;		 -> main@t0thread_data(2), 
  2304 ;;  msgtype         2   31[BANK0 ] int 
  2305 ;;  length          2   33[BANK0 ] int 
  2306 ;;  msgbuffer       2   35[BANK0 ] PTR unsigned char 
  2307 ;;		 -> main@msgbuffer(11), 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  msgval          2   37[BANK0 ] PTR unsigned int 
  2310 ;;		 -> main@msgbuffer(11), 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  2   29[BANK0 ] int 
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2320 ;;      Params:         0       8       0       0       0
  2321 ;;      Locals:         0       2       0       0       0
  2322 ;;      Temps:          0       0       0       0       0
  2323 ;;      Totals:         0      10       0       0       0
  2324 ;;Total ram usage:       10 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:   10
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           	psect	text8
  2335  001BEC                     __ptext8:
  2336                           	opt stack 0
  2337  001BEC                     _timer0_lthread:
  2338                           	opt stack 19
  2339                           
  2340                           ;timer0_thread.c: 10: unsigned int *msgval;
  2341                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2342                           
  2343                           ;incstack = 0
  2344  001BEC  0100               	movlb	0	; () banked
  2345  001BEE  C0DA  F0DC         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2346  001BF2  0100               	movlb	0	; () banked
  2347  001BF4  C0D9  F0DB         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2348                           
  2349                           ; BSR set to: 0
  2350  001BF8  0012               	return	
  2351  001BFA                     __end_of_timer0_lthread:
  2352                           	opt stack 0
  2353                           tblptru	equ	0xFF8
  2354                           prodh	equ	0xFF4
  2355                           prodl	equ	0xFF3
  2356                           intcon2	equ	0xFF1
  2357                           postinc0	equ	0xFEE
  2358                           wreg	equ	0xFE8
  2359                           indf1	equ	0xFE7
  2360                           fsr1h	equ	0xFE2
  2361                           fsr1l	equ	0xFE1
  2362                           indf2	equ	0xFDF
  2363                           postinc2	equ	0xFDE
  2364                           postdec2	equ	0xFDD
  2365                           fsr2h	equ	0xFDA
  2366                           fsr2l	equ	0xFD9
  2367                           status	equ	0xFD8
  2368                           
  2369 ;; *************** function _init_uart_recv *****************
  2370 ;; Defined at:
  2371 ;;		line 47 in file "../src/my_uart.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  uc              2   29[BANK0 ] PTR struct __uart_comm
  2374 ;;		 -> main@uc(18), 
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;		None               void
  2379 ;; Registers used:
  2380 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2386 ;;      Params:         0       2       0       0       0
  2387 ;;      Locals:         0       0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0
  2389 ;;      Totals:         0       2       0       0       0
  2390 ;;Total ram usage:        2 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:   10
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text9
  2401  0019D8                     __ptext9:
  2402                           	opt stack 0
  2403  0019D8                     _init_uart_recv:
  2404                           	opt stack 19
  2405                           
  2406                           ;my_uart.c: 48: uc_ptr = uc;
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;incstack = 0
  2410  0019D8  0100               	movlb	0	; () banked
  2411  0019DA  C0D4  F04A         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2412  0019DE  0100               	movlb	0	; () banked
  2413  0019E0  C0D3  F049         	movff	init_uart_recv@uc,_uc_ptr
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;my_uart.c: 49: uc_ptr->buflen = 0;
  2417  0019E4  EE20 F006          	lfsr	2,6
  2418  0019E8  5049               	movf	_uc_ptr,w,c
  2419  0019EA  26D9               	addwf	fsr2l,f,c
  2420  0019EC  504A               	movf	_uc_ptr+1,w,c
  2421  0019EE  22DA               	addwfc	fsr2h,f,c
  2422  0019F0  0E00               	movlw	0
  2423  0019F2  6EDF               	movwf	indf2,c
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;my_uart.c: 50: uc_ptr->cmd_count = 0;
  2427  0019F4  EE20 F011          	lfsr	2,17
  2428  0019F8  5049               	movf	_uc_ptr,w,c
  2429  0019FA  26D9               	addwf	fsr2l,f,c
  2430  0019FC  504A               	movf	_uc_ptr+1,w,c
  2431  0019FE  22DA               	addwfc	fsr2h,f,c
  2432  001A00  0E00               	movlw	0
  2433  001A02  6EDF               	movwf	indf2,c
  2434                           
  2435                           ; BSR set to: 0
  2436  001A04  0012               	return	
  2437  001A06                     __end_of_init_uart_recv:
  2438                           	opt stack 0
  2439                           tblptru	equ	0xFF8
  2440                           prodh	equ	0xFF4
  2441                           prodl	equ	0xFF3
  2442                           intcon2	equ	0xFF1
  2443                           postinc0	equ	0xFEE
  2444                           wreg	equ	0xFE8
  2445                           indf1	equ	0xFE7
  2446                           fsr1h	equ	0xFE2
  2447                           fsr1l	equ	0xFE1
  2448                           indf2	equ	0xFDF
  2449                           postinc2	equ	0xFDE
  2450                           postdec2	equ	0xFDD
  2451                           fsr2h	equ	0xFDA
  2452                           fsr2l	equ	0xFD9
  2453                           status	equ	0xFD8
  2454                           
  2455 ;; *************** function _init_timer1_lthread *****************
  2456 ;; Defined at:
  2457 ;;		line 6 in file "../src/timer1_thread.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  tptr            2   29[BANK0 ] PTR struct __timer1_thre
  2460 ;;		 -> main@t1thread_data(2), 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;		None               void
  2465 ;; Registers used:
  2466 ;;		wreg, fsr2l, fsr2h
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2472 ;;      Params:         0       2       0       0       0
  2473 ;;      Locals:         0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0
  2475 ;;      Totals:         0       2       0       0       0
  2476 ;;Total ram usage:        2 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:   10
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_main
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text10
  2487  001B94                     __ptext10:
  2488                           	opt stack 0
  2489  001B94                     _init_timer1_lthread:
  2490                           	opt stack 19
  2491                           
  2492                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;incstack = 0
  2496  001B94  C0D3  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2497  001B98  C0D4  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2498  001B9C  0E00               	movlw	0
  2499  001B9E  6EDE               	movwf	postinc2,c
  2500  001BA0  0E00               	movlw	0
  2501  001BA2  6EDD               	movwf	postdec2,c
  2502  001BA4  0012               	return	
  2503  001BA6                     __end_of_init_timer1_lthread:
  2504                           	opt stack 0
  2505                           tblptru	equ	0xFF8
  2506                           prodh	equ	0xFF4
  2507                           prodl	equ	0xFF3
  2508                           intcon2	equ	0xFF1
  2509                           postinc0	equ	0xFEE
  2510                           wreg	equ	0xFE8
  2511                           indf1	equ	0xFE7
  2512                           fsr1h	equ	0xFE2
  2513                           fsr1l	equ	0xFE1
  2514                           indf2	equ	0xFDF
  2515                           postinc2	equ	0xFDE
  2516                           postdec2	equ	0xFDD
  2517                           fsr2h	equ	0xFDA
  2518                           fsr2l	equ	0xFD9
  2519                           status	equ	0xFD8
  2520                           
  2521 ;; *************** function _init_queues *****************
  2522 ;; Defined at:
  2523 ;;		line 194 in file "../src/messages.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;		None               void
  2530 ;; Registers used:
  2531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2537 ;;      Params:         0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0
  2540 ;;      Totals:         0       0       0       0       0
  2541 ;;Total ram usage:        0 bytes
  2542 ;; Hardware stack levels used:    1
  2543 ;; Hardware stack levels required when called:   11
  2544 ;; This function calls:
  2545 ;;		_init_queue
  2546 ;; This function is called by:
  2547 ;;		_main
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text11
  2552  001632                     __ptext11:
  2553                           	opt stack 0
  2554  001632                     _init_queues:
  2555                           	opt stack 18
  2556                           
  2557                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2558                           
  2559                           ;incstack = 0
  2560  001632  0E00               	movlw	0
  2561  001634  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  2562                           
  2563                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2564  001636  0101               	movlb	1	; () banked
  2565  001638  0E01               	movlw	high _ToMainLow_MQ
  2566  00163A  0100               	movlb	0	; () banked
  2567  00163C  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  2568  00163E  0101               	movlb	1	; () banked
  2569  001640  0E6C               	movlw	low _ToMainLow_MQ
  2570  001642  0100               	movlb	0	; () banked
  2571  001644  6FD3               	movwf	init_queue@qptr& (0+255),b
  2572  001646  EC58  F00A         	call	_init_queue	;wreg free
  2573                           
  2574                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2575  00164A  0100               	movlb	0	; () banked
  2576  00164C  0E00               	movlw	high _ToMainHigh_MQ
  2577  00164E  0100               	movlb	0	; () banked
  2578  001650  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  2579  001652  0100               	movlb	0	; () banked
  2580  001654  0E80               	movlw	low _ToMainHigh_MQ
  2581  001656  0100               	movlb	0	; () banked
  2582  001658  6FD3               	movwf	init_queue@qptr& (0+255),b
  2583  00165A  EC58  F00A         	call	_init_queue	;wreg free
  2584                           
  2585                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2586  00165E  0101               	movlb	1	; () banked
  2587  001660  0E01               	movlw	high _FromMainLow_MQ
  2588  001662  0100               	movlb	0	; () banked
  2589  001664  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  2590  001666  0101               	movlb	1	; () banked
  2591  001668  0E36               	movlw	low _FromMainLow_MQ
  2592  00166A  0100               	movlb	0	; () banked
  2593  00166C  6FD3               	movwf	init_queue@qptr& (0+255),b
  2594  00166E  EC58  F00A         	call	_init_queue	;wreg free
  2595                           
  2596                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2597  001672  0101               	movlb	1	; () banked
  2598  001674  0E01               	movlw	high _FromMainHigh_MQ
  2599  001676  0100               	movlb	0	; () banked
  2600  001678  6FD4               	movwf	(init_queue@qptr+1)& (0+255),b
  2601  00167A  0101               	movlb	1	; () banked
  2602  00167C  0E00               	movlw	low _FromMainHigh_MQ
  2603  00167E  0100               	movlb	0	; () banked
  2604  001680  6FD3               	movwf	init_queue@qptr& (0+255),b
  2605  001682  EC58  F00A         	call	_init_queue	;wreg free
  2606  001686  0012               	return	
  2607  001688                     __end_of_init_queues:
  2608                           	opt stack 0
  2609                           tblptru	equ	0xFF8
  2610                           prodh	equ	0xFF4
  2611                           prodl	equ	0xFF3
  2612                           intcon2	equ	0xFF1
  2613                           postinc0	equ	0xFEE
  2614                           wreg	equ	0xFE8
  2615                           indf1	equ	0xFE7
  2616                           fsr1h	equ	0xFE2
  2617                           fsr1l	equ	0xFE1
  2618                           indf2	equ	0xFDF
  2619                           postinc2	equ	0xFDE
  2620                           postdec2	equ	0xFDD
  2621                           fsr2h	equ	0xFDA
  2622                           fsr2l	equ	0xFD9
  2623                           status	equ	0xFD8
  2624                           
  2625 ;; *************** function _init_queue *****************
  2626 ;; Defined at:
  2627 ;;		line 14 in file "../src/messages.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  2630 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  i               1   31[BANK0 ] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;		None               void
  2635 ;; Registers used:
  2636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2642 ;;      Params:         0       2       0       0       0
  2643 ;;      Locals:         0       1       0       0       0
  2644 ;;      Temps:          0       0       0       0       0
  2645 ;;      Totals:         0       3       0       0       0
  2646 ;;Total ram usage:        3 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:   10
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_init_queues
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text12
  2657  0014B0                     __ptext12:
  2658                           	opt stack 0
  2659  0014B0                     _init_queue:
  2660                           	opt stack 18
  2661                           
  2662                           ;messages.c: 15: unsigned char i;
  2663                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2664                           
  2665                           ;incstack = 0
  2666  0014B0  0100               	movlb	0	; () banked
  2667  0014B2  EE20 F034          	lfsr	2,52
  2668  0014B6  0100               	movlb	0	; () banked
  2669  0014B8  51D3               	movf	init_queue@qptr& (0+255),w,b
  2670  0014BA  26D9               	addwf	fsr2l,f,c
  2671  0014BC  0100               	movlb	0	; () banked
  2672  0014BE  51D4               	movf	(init_queue@qptr+1)& (0+255),w,b
  2673  0014C0  22DA               	addwfc	fsr2h,f,c
  2674  0014C2  0E00               	movlw	0
  2675  0014C4  6EDF               	movwf	indf2,c
  2676                           
  2677                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2678  0014C6  0100               	movlb	0	; () banked
  2679  0014C8  EE20 F035          	lfsr	2,53
  2680  0014CC  0100               	movlb	0	; () banked
  2681  0014CE  51D3               	movf	init_queue@qptr& (0+255),w,b
  2682  0014D0  26D9               	addwf	fsr2l,f,c
  2683  0014D2  0100               	movlb	0	; () banked
  2684  0014D4  51D4               	movf	(init_queue@qptr+1)& (0+255),w,b
  2685  0014D6  22DA               	addwfc	fsr2h,f,c
  2686  0014D8  0E00               	movlw	0
  2687  0014DA  6EDF               	movwf	indf2,c
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2691  0014DC  0E00               	movlw	0
  2692  0014DE  0100               	movlb	0	; () banked
  2693  0014E0  6FD5               	movwf	init_queue@i& (0+255),b
  2694                           
  2695                           ; BSR set to: 0
  2696  0014E2  0E03               	movlw	3
  2697  0014E4  0100               	movlb	0	; () banked
  2698  0014E6  65D5               	cpfsgt	init_queue@i& (0+255),b
  2699  0014E8  D001               	goto	l2332
  2700  0014EA  0012               	return	
  2701  0014EC                     l2332:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;messages.c: 20: qptr->queue[i].full = 0;
  2705  0014EC  0100               	movlb	0	; () banked
  2706  0014EE  51D5               	movf	init_queue@i& (0+255),w,b
  2707  0014F0  0D0D               	mullw	13
  2708  0014F2  50F3               	movf	prodl,w,c
  2709  0014F4  0100               	movlb	0	; () banked
  2710  0014F6  25D3               	addwf	init_queue@qptr& (0+255),w,b
  2711  0014F8  6ED9               	movwf	fsr2l,c
  2712  0014FA  50F4               	movf	prodh,w,c
  2713  0014FC  0100               	movlb	0	; () banked
  2714  0014FE  21D4               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2715  001500  6EDA               	movwf	fsr2h,c
  2716  001502  0E00               	movlw	0
  2717  001504  6EDF               	movwf	indf2,c
  2718                           
  2719                           ; BSR set to: 0
  2720  001506  0100               	movlb	0	; () banked
  2721  001508  2BD5               	incf	init_queue@i& (0+255),f,b
  2722                           
  2723                           ; BSR set to: 0
  2724  00150A  0E03               	movlw	3
  2725  00150C  0100               	movlb	0	; () banked
  2726  00150E  65D5               	cpfsgt	init_queue@i& (0+255),b
  2727  001510  D7ED               	goto	l2332
  2728  001512  0012               	return	
  2729  001514                     __end_of_init_queue:
  2730                           	opt stack 0
  2731                           tblptru	equ	0xFF8
  2732                           prodh	equ	0xFF4
  2733                           prodl	equ	0xFF3
  2734                           intcon2	equ	0xFF1
  2735                           postinc0	equ	0xFEE
  2736                           wreg	equ	0xFE8
  2737                           indf1	equ	0xFE7
  2738                           fsr1h	equ	0xFE2
  2739                           fsr1l	equ	0xFE1
  2740                           indf2	equ	0xFDF
  2741                           postinc2	equ	0xFDE
  2742                           postdec2	equ	0xFDD
  2743                           fsr2h	equ	0xFDA
  2744                           fsr2l	equ	0xFD9
  2745                           status	equ	0xFD8
  2746                           
  2747 ;; *************** function _init_i2c *****************
  2748 ;; Defined at:
  2749 ;;		line 222 in file "../src/my_i2c.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  ic              2   29[BANK0 ] PTR struct __i2c_comm
  2752 ;;		 -> main@ic(28), 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;		None               void
  2757 ;; Registers used:
  2758 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2764 ;;      Params:         0       2       0       0       0
  2765 ;;      Locals:         0       0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0
  2767 ;;      Totals:         0       2       0       0       0
  2768 ;;Total ram usage:        2 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:   10
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_main
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text13
  2779  00144A                     __ptext13:
  2780                           	opt stack 0
  2781  00144A                     _init_i2c:
  2782                           	opt stack 19
  2783                           
  2784                           ;my_i2c.c: 223: ic_ptr = ic;
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;incstack = 0
  2788  00144A  0100               	movlb	0	; () banked
  2789  00144C  C0D4  F0E2         	movff	init_i2c@ic+1,_ic_ptr+1
  2790  001450  0100               	movlb	0	; () banked
  2791  001452  C0D3  F0E1         	movff	init_i2c@ic,_ic_ptr
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;my_i2c.c: 224: ic_ptr->buflen = 0;
  2795  001456  0100               	movlb	0	; () banked
  2796  001458  EE20 F00A          	lfsr	2,10
  2797  00145C  0100               	movlb	0	; () banked
  2798  00145E  51E1               	movf	_ic_ptr& (0+255),w,b
  2799  001460  26D9               	addwf	fsr2l,f,c
  2800  001462  0100               	movlb	0	; () banked
  2801  001464  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2802  001466  22DA               	addwfc	fsr2h,f,c
  2803  001468  0E00               	movlw	0
  2804  00146A  6EDF               	movwf	indf2,c
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;my_i2c.c: 225: ic_ptr->event_count = 0;
  2808  00146C  0100               	movlb	0	; () banked
  2809  00146E  EE20 F00B          	lfsr	2,11
  2810  001472  0100               	movlb	0	; () banked
  2811  001474  51E1               	movf	_ic_ptr& (0+255),w,b
  2812  001476  26D9               	addwf	fsr2l,f,c
  2813  001478  0100               	movlb	0	; () banked
  2814  00147A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2815  00147C  22DA               	addwfc	fsr2h,f,c
  2816  00147E  0E00               	movlw	0
  2817  001480  6EDF               	movwf	indf2,c
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;my_i2c.c: 226: ic_ptr->status = 0x5;
  2821  001482  0100               	movlb	0	; () banked
  2822  001484  EE20 F00C          	lfsr	2,12
  2823  001488  0100               	movlb	0	; () banked
  2824  00148A  51E1               	movf	_ic_ptr& (0+255),w,b
  2825  00148C  26D9               	addwf	fsr2l,f,c
  2826  00148E  0100               	movlb	0	; () banked
  2827  001490  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2828  001492  22DA               	addwfc	fsr2h,f,c
  2829  001494  0E05               	movlw	5
  2830  001496  6EDF               	movwf	indf2,c
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;my_i2c.c: 227: ic_ptr->error_count = 0;
  2834  001498  0100               	movlb	0	; () banked
  2835  00149A  EE20 F00E          	lfsr	2,14
  2836  00149E  0100               	movlb	0	; () banked
  2837  0014A0  51E1               	movf	_ic_ptr& (0+255),w,b
  2838  0014A2  26D9               	addwf	fsr2l,f,c
  2839  0014A4  0100               	movlb	0	; () banked
  2840  0014A6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2841  0014A8  22DA               	addwfc	fsr2h,f,c
  2842  0014AA  0E00               	movlw	0
  2843  0014AC  6EDF               	movwf	indf2,c
  2844                           
  2845                           ; BSR set to: 0
  2846  0014AE  0012               	return	
  2847  0014B0                     __end_of_init_i2c:
  2848                           	opt stack 0
  2849                           tblptru	equ	0xFF8
  2850                           prodh	equ	0xFF4
  2851                           prodl	equ	0xFF3
  2852                           intcon2	equ	0xFF1
  2853                           postinc0	equ	0xFEE
  2854                           wreg	equ	0xFE8
  2855                           indf1	equ	0xFE7
  2856                           fsr1h	equ	0xFE2
  2857                           fsr1l	equ	0xFE1
  2858                           indf2	equ	0xFDF
  2859                           postinc2	equ	0xFDE
  2860                           postdec2	equ	0xFDD
  2861                           fsr2h	equ	0xFDA
  2862                           fsr2l	equ	0xFD9
  2863                           status	equ	0xFD8
  2864                           
  2865 ;; *************** function _i2c_configure_slave *****************
  2866 ;; Defined at:
  2867 ;;		line 233 in file "../src/my_i2c.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  addr            1    wreg     unsigned char 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  addr            1   29[BANK0 ] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;		None               void
  2874 ;; Registers used:
  2875 ;;		wreg, status,2
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2881 ;;      Params:         0       0       0       0       0
  2882 ;;      Locals:         0       1       0       0       0
  2883 ;;      Temps:          0       0       0       0       0
  2884 ;;      Totals:         0       1       0       0       0
  2885 ;;Total ram usage:        1 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:   10
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_main
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text14
  2896  001A34                     __ptext14:
  2897                           	opt stack 0
  2898  001A34                     _i2c_configure_slave:
  2899                           	opt stack 19
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;incstack = 0
  2903                           ;i2c_configure_slave@addr stored from wreg
  2904  001A34  0100               	movlb	0	; () banked
  2905  001A36  6FD3               	movwf	i2c_configure_slave@addr& (0+255),b
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;my_i2c.c: 235: SSP1STAT = 0x0;
  2909  001A38  0E00               	movlw	0
  2910  001A3A  6EC7               	movwf	4039,c	;volatile
  2911                           
  2912                           ;my_i2c.c: 236: SSP1CON1 = 0x0;
  2913  001A3C  0E00               	movlw	0
  2914  001A3E  6EC6               	movwf	4038,c	;volatile
  2915                           
  2916                           ;my_i2c.c: 237: SSP1CON2 = 0x0;
  2917  001A40  0E00               	movlw	0
  2918  001A42  6EC5               	movwf	4037,c	;volatile
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;my_i2c.c: 238: SSP1CON1bits.SSPM |= 0x0E;
  2922  001A44  0E0E               	movlw	14
  2923  001A46  12C6               	iorwf	4038,f,c	;volatile
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;my_i2c.c: 241: TRISCbits.TRISC3 = 1;
  2927  001A48  8694               	bsf	3988,3,c	;volatile
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;my_i2c.c: 242: TRISCbits.TRISC4 = 1;
  2931  001A4A  8894               	bsf	3988,4,c	;volatile
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;my_i2c.c: 244: SSPSTATbits.SMP = 0x1;
  2935  001A4C  8EC7               	bsf	4039,7,c	;volatile
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;my_i2c.c: 245: SSPSTATbits.CKE = 0x0;
  2939  001A4E  9CC7               	bcf	4039,6,c	;volatile
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;my_i2c.c: 247: SSPADD = addr;
  2943  001A50  C0D3  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;my_i2c.c: 250: TRISCbits.TRISC3 = 1;
  2947  001A54  8694               	bsf	3988,3,c	;volatile
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;my_i2c.c: 251: TRISCbits.TRISC4 = 1;
  2951  001A56  8894               	bsf	3988,4,c	;volatile
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;my_i2c.c: 260: SSPCON2bits.SEN = 1;
  2955  001A58  80C5               	bsf	4037,0,c	;volatile
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;my_i2c.c: 262: SSPCON1bits.SSPEN = 1;
  2959  001A5A  8AC6               	bsf	4038,5,c	;volatile
  2960                           
  2961                           ; BSR set to: 0
  2962  001A5C  0012               	return	
  2963  001A5E                     __end_of_i2c_configure_slave:
  2964                           	opt stack 0
  2965                           tblptru	equ	0xFF8
  2966                           prodh	equ	0xFF4
  2967                           prodl	equ	0xFF3
  2968                           intcon2	equ	0xFF1
  2969                           postinc0	equ	0xFEE
  2970                           wreg	equ	0xFE8
  2971                           indf1	equ	0xFE7
  2972                           fsr1h	equ	0xFE2
  2973                           fsr1l	equ	0xFE1
  2974                           indf2	equ	0xFDF
  2975                           postinc2	equ	0xFDE
  2976                           postdec2	equ	0xFDD
  2977                           fsr2h	equ	0xFDA
  2978                           fsr2l	equ	0xFD9
  2979                           status	equ	0xFD8
  2980                           
  2981 ;; *************** function _enable_interrupts *****************
  2982 ;; Defined at:
  2983 ;;		line 14 in file "../src/interrupts.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;		None               void
  2990 ;; Registers used:
  2991 ;;		None
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2997 ;;      Params:         0       0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0
  3000 ;;      Totals:         0       0       0       0       0
  3001 ;;Total ram usage:        0 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:   10
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text15
  3012  001BFA                     __ptext15:
  3013                           	opt stack 0
  3014  001BFA                     _enable_interrupts:
  3015                           	opt stack 19
  3016                           
  3017                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;incstack = 0
  3021  001BFA  8ED0               	bsf	4048,7,c	;volatile
  3022                           
  3023                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  3024  001BFC  8EF2               	bsf	intcon,7,c	;volatile
  3025                           
  3026                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  3027  001BFE  8CF2               	bsf	intcon,6,c	;volatile
  3028                           
  3029                           ;interrupts.c: 20: INTCONbits.GIE = 1;
  3030  001C00  8EF2               	bsf	intcon,7,c	;volatile
  3031                           
  3032                           ;interrupts.c: 21: INTCONbits.PEIE = 1;
  3033  001C02  8CF2               	bsf	intcon,6,c	;volatile
  3034  001C04  0012               	return	
  3035  001C06                     __end_of_enable_interrupts:
  3036                           	opt stack 0
  3037                           tblptru	equ	0xFF8
  3038                           prodh	equ	0xFF4
  3039                           prodl	equ	0xFF3
  3040                           intcon	equ	0xFF2
  3041                           intcon2	equ	0xFF1
  3042                           postinc0	equ	0xFEE
  3043                           wreg	equ	0xFE8
  3044                           indf1	equ	0xFE7
  3045                           fsr1h	equ	0xFE2
  3046                           fsr1l	equ	0xFE1
  3047                           indf2	equ	0xFDF
  3048                           postinc2	equ	0xFDE
  3049                           postdec2	equ	0xFDD
  3050                           fsr2h	equ	0xFDA
  3051                           fsr2l	equ	0xFD9
  3052                           status	equ	0xFD8
  3053                           
  3054 ;; *************** function _block_on_To_msgqueues *****************
  3055 ;; Defined at:
  3056 ;;		line 256 in file "../src/messages.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;		None               void
  3063 ;; Registers used:
  3064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3070 ;;      Params:         0       0       0       0       0
  3071 ;;      Locals:         0       0       0       0       0
  3072 ;;      Temps:          0       0       0       0       0
  3073 ;;      Totals:         0       0       0       0       0
  3074 ;;Total ram usage:        0 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:   13
  3077 ;; This function calls:
  3078 ;;		_Delay1KTCYx
  3079 ;;		_check_msg
  3080 ;;		_in_main
  3081 ;; This function is called by:
  3082 ;;		_main
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text16
  3087  0015D6                     __ptext16:
  3088                           	opt stack 0
  3089  0015D6                     _block_on_To_msgqueues:
  3090                           	opt stack 16
  3091                           
  3092                           ;messages.c: 257: if (!in_main()) {
  3093                           
  3094                           ;incstack = 0
  3095  0015D6  EC1B  F00C         	call	_in_main	;wreg free
  3096  0015DA  0100               	movlb	0	; () banked
  3097  0015DC  51D8               	movf	(?_in_main+1)& (0+255),w,b
  3098  0015DE  0100               	movlb	0	; () banked
  3099  0015E0  11D7               	iorwf	?_in_main& (0+255),w,b
  3100  0015E2  B4D8               	btfsc	status,2,c
  3101  0015E4  0012               	return	
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;messages.c: 259: }
  3105                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3106                           
  3107                           ; BSR set to: 0
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;messages.c: 258: return;
  3111  0015E6  0E01               	movlw	1
  3112  0015E8  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3113  0015EA                     l2918:
  3114                           
  3115                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3116  0015EA  0100               	movlb	0	; () banked
  3117  0015EC  0E00               	movlw	high _ToMainHigh_MQ
  3118  0015EE  0100               	movlb	0	; () banked
  3119  0015F0  6FD4               	movwf	(check_msg@qptr+1)& (0+255),b
  3120  0015F2  0100               	movlb	0	; () banked
  3121  0015F4  0E80               	movlw	low _ToMainHigh_MQ
  3122  0015F6  0100               	movlb	0	; () banked
  3123  0015F8  6FD3               	movwf	check_msg@qptr& (0+255),b
  3124  0015FA  ECBA  F00C         	call	_check_msg	;wreg free
  3125  0015FE  0900               	iorlw	0
  3126  001600  B4D8               	btfsc	status,2,c
  3127  001602  D003               	goto	l2924
  3128                           
  3129                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3130  001604  0E00               	movlw	0
  3131  001606  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3132  001608  0012               	return	
  3133  00160A                     l2924:
  3134                           
  3135                           ;messages.c: 271: }
  3136                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3137  00160A  0101               	movlb	1	; () banked
  3138  00160C  0E01               	movlw	high _ToMainLow_MQ
  3139  00160E  0100               	movlb	0	; () banked
  3140  001610  6FD4               	movwf	(check_msg@qptr+1)& (0+255),b
  3141  001612  0101               	movlb	1	; () banked
  3142  001614  0E6C               	movlw	low _ToMainLow_MQ
  3143  001616  0100               	movlb	0	; () banked
  3144  001618  6FD3               	movwf	check_msg@qptr& (0+255),b
  3145  00161A  ECBA  F00C         	call	_check_msg	;wreg free
  3146  00161E  0900               	iorlw	0
  3147  001620  B4D8               	btfsc	status,2,c
  3148  001622  D003               	goto	l2930
  3149                           
  3150                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3151  001624  0E00               	movlw	0
  3152  001626  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3153  001628  0012               	return	
  3154  00162A                     l2930:
  3155                           
  3156                           ;messages.c: 278: }
  3157                           ;messages.c: 279: Delay1KTCYx(10);
  3158  00162A  0E0A               	movlw	10
  3159  00162C  ECC0  F00D         	call	_Delay1KTCYx
  3160  001630  D7DC               	goto	l2918
  3161  001632                     __end_of_block_on_To_msgqueues:
  3162                           	opt stack 0
  3163                           tblptru	equ	0xFF8
  3164                           prodh	equ	0xFF4
  3165                           prodl	equ	0xFF3
  3166                           intcon	equ	0xFF2
  3167                           intcon2	equ	0xFF1
  3168                           postinc0	equ	0xFEE
  3169                           wreg	equ	0xFE8
  3170                           indf1	equ	0xFE7
  3171                           fsr1h	equ	0xFE2
  3172                           fsr1l	equ	0xFE1
  3173                           indf2	equ	0xFDF
  3174                           postinc2	equ	0xFDE
  3175                           postdec2	equ	0xFDD
  3176                           fsr2h	equ	0xFDA
  3177                           fsr2l	equ	0xFD9
  3178                           status	equ	0xFD8
  3179                           
  3180 ;; *************** function _in_main *****************
  3181 ;; Defined at:
  3182 ;;		line 42 in file "../src/interrupts.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;		None
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  2   33[BANK0 ] int 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3196 ;;      Params:         0       2       0       0       0
  3197 ;;      Locals:         0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0
  3199 ;;      Totals:         0       2       0       0       0
  3200 ;;Total ram usage:        2 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:   12
  3203 ;; This function calls:
  3204 ;;		_in_high_int
  3205 ;;		_in_low_int
  3206 ;; This function is called by:
  3207 ;;		_block_on_To_msgqueues
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text17
  3212  001836                     __ptext17:
  3213                           	opt stack 0
  3214  001836                     _in_main:
  3215                           	opt stack 16
  3216                           
  3217                           ;interrupts.c: 43: if ((!in_low_int()) && (!in_high_int())) {
  3218                           
  3219                           ;incstack = 0
  3220  001836  ECFC  F00B         	call	_in_low_int	;wreg free
  3221  00183A  0100               	movlb	0	; () banked
  3222  00183C  51D6               	movf	(?_in_low_int+1)& (0+255),w,b
  3223  00183E  0100               	movlb	0	; () banked
  3224  001840  11D5               	iorwf	?_in_low_int& (0+255),w,b
  3225  001842  A4D8               	btfss	status,2,c
  3226  001844  D00F               	goto	l2320
  3227                           
  3228                           ; BSR set to: 0
  3229  001846  ECEE  F00D         	call	_in_high_int	;wreg free
  3230  00184A  0100               	movlb	0	; () banked
  3231  00184C  51D4               	movf	(?_in_high_int+1)& (0+255),w,b
  3232  00184E  0100               	movlb	0	; () banked
  3233  001850  11D3               	iorwf	?_in_high_int& (0+255),w,b
  3234  001852  A4D8               	btfss	status,2,c
  3235  001854  D007               	goto	l2320
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;interrupts.c: 44: return (1);
  3239  001856  0E00               	movlw	0
  3240  001858  0100               	movlb	0	; () banked
  3241  00185A  6FD8               	movwf	(?_in_main+1)& (0+255),b
  3242  00185C  0E01               	movlw	1
  3243  00185E  0100               	movlb	0	; () banked
  3244  001860  6FD7               	movwf	?_in_main& (0+255),b
  3245  001862  0012               	return	
  3246  001864                     l2320:
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;interrupts.c: 46: return (0);
  3250  001864  0E00               	movlw	0
  3251  001866  0100               	movlb	0	; () banked
  3252  001868  6FD8               	movwf	(?_in_main+1)& (0+255),b
  3253  00186A  0E00               	movlw	0
  3254  00186C  0100               	movlb	0	; () banked
  3255  00186E  6FD7               	movwf	?_in_main& (0+255),b
  3256  001870  0012               	return	
  3257  001872                     __end_of_in_main:
  3258                           	opt stack 0
  3259                           tblptru	equ	0xFF8
  3260                           prodh	equ	0xFF4
  3261                           prodl	equ	0xFF3
  3262                           intcon	equ	0xFF2
  3263                           intcon2	equ	0xFF1
  3264                           postinc0	equ	0xFEE
  3265                           wreg	equ	0xFE8
  3266                           indf1	equ	0xFE7
  3267                           fsr1h	equ	0xFE2
  3268                           fsr1l	equ	0xFE1
  3269                           indf2	equ	0xFDF
  3270                           postinc2	equ	0xFDE
  3271                           postdec2	equ	0xFDD
  3272                           fsr2h	equ	0xFDA
  3273                           fsr2l	equ	0xFD9
  3274                           status	equ	0xFD8
  3275                           
  3276 ;; *************** function _in_low_int *****************
  3277 ;; Defined at:
  3278 ;;		line 32 in file "../src/interrupts.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;		None
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;		None
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  2   31[BANK0 ] int 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3292 ;;      Params:         0       2       0       0       0
  3293 ;;      Locals:         0       0       0       0       0
  3294 ;;      Temps:          0       0       0       0       0
  3295 ;;      Totals:         0       2       0       0       0
  3296 ;;Total ram usage:        2 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:   11
  3299 ;; This function calls:
  3300 ;;		_in_high_int
  3301 ;; This function is called by:
  3302 ;;		_in_main
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text18
  3307  0017F8                     __ptext18:
  3308                           	opt stack 0
  3309  0017F8                     _in_low_int:
  3310                           	opt stack 16
  3311                           
  3312                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;incstack = 0
  3316  0017F8  ACF2               	btfss	intcon,6,c	;volatile
  3317  0017FA  D007               	goto	l2190
  3318                           
  3319                           ;interrupts.c: 34: return (0);
  3320  0017FC  0E00               	movlw	0
  3321  0017FE  0100               	movlb	0	; () banked
  3322  001800  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  3323  001802  0E00               	movlw	0
  3324  001804  0100               	movlb	0	; () banked
  3325  001806  6FD5               	movwf	?_in_low_int& (0+255),b
  3326  001808  0012               	return	
  3327  00180A                     l2190:
  3328  00180A  ECEE  F00D         	call	_in_high_int	;wreg free
  3329  00180E  0100               	movlb	0	; () banked
  3330  001810  51D4               	movf	(?_in_high_int+1)& (0+255),w,b
  3331  001812  0100               	movlb	0	; () banked
  3332  001814  11D3               	iorwf	?_in_high_int& (0+255),w,b
  3333  001816  B4D8               	btfsc	status,2,c
  3334  001818  D007               	goto	l2198
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;interrupts.c: 36: return (0);
  3338  00181A  0E00               	movlw	0
  3339  00181C  0100               	movlb	0	; () banked
  3340  00181E  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  3341  001820  0E00               	movlw	0
  3342  001822  0100               	movlb	0	; () banked
  3343  001824  6FD5               	movwf	?_in_low_int& (0+255),b
  3344  001826  0012               	return	
  3345  001828                     l2198:
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;interrupts.c: 38: return (1);
  3349  001828  0E00               	movlw	0
  3350  00182A  0100               	movlb	0	; () banked
  3351  00182C  6FD6               	movwf	(?_in_low_int+1)& (0+255),b
  3352  00182E  0E01               	movlw	1
  3353  001830  0100               	movlb	0	; () banked
  3354  001832  6FD5               	movwf	?_in_low_int& (0+255),b
  3355  001834  0012               	return	
  3356  001836                     __end_of_in_low_int:
  3357                           	opt stack 0
  3358                           tblptru	equ	0xFF8
  3359                           prodh	equ	0xFF4
  3360                           prodl	equ	0xFF3
  3361                           intcon	equ	0xFF2
  3362                           intcon2	equ	0xFF1
  3363                           postinc0	equ	0xFEE
  3364                           wreg	equ	0xFE8
  3365                           indf1	equ	0xFE7
  3366                           fsr1h	equ	0xFE2
  3367                           fsr1l	equ	0xFE1
  3368                           indf2	equ	0xFDF
  3369                           postinc2	equ	0xFDE
  3370                           postdec2	equ	0xFDD
  3371                           fsr2h	equ	0xFDA
  3372                           fsr2l	equ	0xFD9
  3373                           status	equ	0xFD8
  3374                           
  3375 ;; *************** function _in_high_int *****************
  3376 ;; Defined at:
  3377 ;;		line 24 in file "../src/interrupts.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  2   29[BANK0 ] int 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3391 ;;      Params:         0       2       0       0       0
  3392 ;;      Locals:         0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0
  3394 ;;      Totals:         0       2       0       0       0
  3395 ;;Total ram usage:        2 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:   10
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_in_low_int
  3402 ;;		_in_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text19
  3407  001BDC                     __ptext19:
  3408                           	opt stack 0
  3409  001BDC                     _in_high_int:
  3410                           	opt stack 16
  3411                           
  3412                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;incstack = 0
  3416  001BDC  0E00               	movlw	0
  3417  001BDE  AEF2               	btfss	intcon,7,c	;volatile
  3418  001BE0  0E01               	movlw	1
  3419  001BE2  0100               	movlb	0	; () banked
  3420  001BE4  6FD3               	movwf	?_in_high_int& (0+255),b
  3421  001BE6  0100               	movlb	0	; () banked
  3422  001BE8  6BD4               	clrf	(?_in_high_int+1)& (0+255),b
  3423  001BEA  0012               	return	
  3424  001BEC                     __end_of_in_high_int:
  3425                           	opt stack 0
  3426                           tblptru	equ	0xFF8
  3427                           prodh	equ	0xFF4
  3428                           prodl	equ	0xFF3
  3429                           intcon	equ	0xFF2
  3430                           intcon2	equ	0xFF1
  3431                           postinc0	equ	0xFEE
  3432                           wreg	equ	0xFE8
  3433                           indf1	equ	0xFE7
  3434                           fsr1h	equ	0xFE2
  3435                           fsr1l	equ	0xFE1
  3436                           indf2	equ	0xFDF
  3437                           postinc2	equ	0xFDE
  3438                           postdec2	equ	0xFDD
  3439                           fsr2h	equ	0xFDA
  3440                           fsr2l	equ	0xFD9
  3441                           status	equ	0xFD8
  3442                           
  3443 ;; *************** function _check_msg *****************
  3444 ;; Defined at:
  3445 ;;		line 220 in file "../src/messages.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  3448 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;		None
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      unsigned char 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3460 ;;      Params:         0       2       0       0       0
  3461 ;;      Locals:         0       0       0       0       0
  3462 ;;      Temps:          0       1       0       0       0
  3463 ;;      Totals:         0       3       0       0       0
  3464 ;;Total ram usage:        3 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:   10
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_block_on_To_msgqueues
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text20
  3475  001974                     __ptext20:
  3476                           	opt stack 0
  3477  001974                     _check_msg:
  3478                           	opt stack 18
  3479                           
  3480                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;incstack = 0
  3484  001974  0100               	movlb	0	; () banked
  3485  001976  EE20 F035          	lfsr	2,53
  3486  00197A  0100               	movlb	0	; () banked
  3487  00197C  51D3               	movf	check_msg@qptr& (0+255),w,b
  3488  00197E  26D9               	addwf	fsr2l,f,c
  3489  001980  0100               	movlb	0	; () banked
  3490  001982  51D4               	movf	(check_msg@qptr+1)& (0+255),w,b
  3491  001984  22DA               	addwfc	fsr2h,f,c
  3492  001986  50DF               	movf	indf2,w,c
  3493  001988  0100               	movlb	0	; () banked
  3494  00198A  6FD5               	movwf	??_check_msg& (0+255),b
  3495  00198C  0100               	movlb	0	; () banked
  3496  00198E  51D5               	movf	??_check_msg& (0+255),w,b
  3497  001990  0D0D               	mullw	13
  3498  001992  50F3               	movf	prodl,w,c
  3499  001994  0100               	movlb	0	; () banked
  3500  001996  25D3               	addwf	check_msg@qptr& (0+255),w,b
  3501  001998  6ED9               	movwf	fsr2l,c
  3502  00199A  50F4               	movf	prodh,w,c
  3503  00199C  0100               	movlb	0	; () banked
  3504  00199E  21D4               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3505  0019A0  6EDA               	movwf	fsr2h,c
  3506  0019A2  50DF               	movf	indf2,w,c
  3507  0019A4  0012               	return	
  3508  0019A6                     __end_of_check_msg:
  3509                           	opt stack 0
  3510                           tblptru	equ	0xFF8
  3511                           prodh	equ	0xFF4
  3512                           prodl	equ	0xFF3
  3513                           intcon	equ	0xFF2
  3514                           intcon2	equ	0xFF1
  3515                           postinc0	equ	0xFEE
  3516                           wreg	equ	0xFE8
  3517                           indf1	equ	0xFE7
  3518                           fsr1h	equ	0xFE2
  3519                           fsr1l	equ	0xFE1
  3520                           indf2	equ	0xFDF
  3521                           postinc2	equ	0xFDE
  3522                           postdec2	equ	0xFDD
  3523                           fsr2h	equ	0xFDA
  3524                           fsr2l	equ	0xFD9
  3525                           status	equ	0xFD8
  3526                           
  3527 ;; *************** function _Delay1KTCYx *****************
  3528 ;; Defined at:
  3529 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d1ktcyx.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  unit            1    wreg     unsigned char 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  unit            1   29[BANK0 ] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;		None               void
  3536 ;; Registers used:
  3537 ;;		wreg
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3543 ;;      Params:         0       0       0       0       0
  3544 ;;      Locals:         0       1       0       0       0
  3545 ;;      Temps:          0       0       0       0       0
  3546 ;;      Totals:         0       1       0       0       0
  3547 ;;Total ram usage:        1 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:   10
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_block_on_To_msgqueues
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text21
  3558  001B80                     __ptext21:
  3559                           	opt stack 0
  3560  001B80                     _Delay1KTCYx:
  3561                           	opt stack 18
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;incstack = 0
  3565                           ;Delay1KTCYx@unit stored from wreg
  3566  001B80  0100               	movlb	0	; () banked
  3567  001B82  6FD3               	movwf	Delay1KTCYx@unit& (0+255),b
  3568  001B84                     l747:
  3569                           
  3570                           ; BSR set to: 0
  3571                           
  3572                           ; BSR set to: 0
  3573  001B84  0EFA               	movlw	250
  3574  001B86                     u2697:
  3575  001B86  F000               	nop	
  3576  001B88  2EE8               	decfsz	wreg,f,c
  3577  001B8A  D7FD               	goto	u2697
  3578  001B8C  0100               	movlb	0	; () banked
  3579  001B8E  2FD3               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3580  001B90  D7F9               	goto	l747
  3581  001B92  0012               	return	
  3582  001B94                     __end_of_Delay1KTCYx:
  3583                           	opt stack 0
  3584                           tblptru	equ	0xFF8
  3585                           prodh	equ	0xFF4
  3586                           prodl	equ	0xFF3
  3587                           intcon	equ	0xFF2
  3588                           intcon2	equ	0xFF1
  3589                           postinc0	equ	0xFEE
  3590                           wreg	equ	0xFE8
  3591                           indf1	equ	0xFE7
  3592                           fsr1h	equ	0xFE2
  3593                           fsr1l	equ	0xFE1
  3594                           indf2	equ	0xFDF
  3595                           postinc2	equ	0xFDE
  3596                           postdec2	equ	0xFDD
  3597                           fsr2h	equ	0xFDA
  3598                           fsr2l	equ	0xFD9
  3599                           status	equ	0xFD8
  3600                           
  3601 ;; *************** function _ToMainLow_recvmsg *****************
  3602 ;; Defined at:
  3603 ;;		line 112 in file "../src/messages.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  maxlength       1    wreg     unsigned char 
  3606 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3607 ;;		 -> main@msgtype(1), 
  3608 ;;  data            2   14[BANK1 ] PTR void 
  3609 ;;		 -> main@msgbuffer(11), 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  maxlength       1   41[BANK0 ] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      char 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3621 ;;      Params:         0       0       4       0       0
  3622 ;;      Locals:         0       1       0       0       0
  3623 ;;      Temps:          0       0       0       0       0
  3624 ;;      Totals:         0       1       4       0       0
  3625 ;;Total ram usage:        5 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:   12
  3628 ;; This function calls:
  3629 ;;		_recv_msg
  3630 ;; This function is called by:
  3631 ;;		_main
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text22
  3636  001872                     __ptext22:
  3637                           	opt stack 0
  3638  001872                     _ToMainLow_recvmsg:
  3639                           	opt stack 17
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;incstack = 0
  3643                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3644  001872  0100               	movlb	0	; () banked
  3645  001874  6FDF               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3649  001876  0101               	movlb	1	; () banked
  3650  001878  0E01               	movlw	high _ToMainLow_MQ
  3651  00187A  0101               	movlb	1	; () banked
  3652  00187C  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  3653  00187E  0101               	movlb	1	; () banked
  3654  001880  0E6C               	movlw	low _ToMainLow_MQ
  3655  001882  0101               	movlb	1	; () banked
  3656  001884  6FA2               	movwf	recv_msg@qptr& (0+255),b
  3657  001886  C0DF  F1A4         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3658  00188A  0101               	movlb	1	; () banked
  3659  00188C  C1AF  F1A6         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3660  001890  0101               	movlb	1	; () banked
  3661  001892  C1AE  F1A5         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3662  001896  0101               	movlb	1	; () banked
  3663  001898  C1B1  F1A8         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3664  00189C  0101               	movlb	1	; () banked
  3665  00189E  C1B0  F1A7         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3666  0018A2  EC50  F005         	call	_recv_msg	;wreg free
  3667  0018A6  0012               	return	
  3668  0018A8                     __end_of_ToMainLow_recvmsg:
  3669                           	opt stack 0
  3670                           tblptru	equ	0xFF8
  3671                           prodh	equ	0xFF4
  3672                           prodl	equ	0xFF3
  3673                           intcon	equ	0xFF2
  3674                           intcon2	equ	0xFF1
  3675                           postinc0	equ	0xFEE
  3676                           wreg	equ	0xFE8
  3677                           indf1	equ	0xFE7
  3678                           fsr1h	equ	0xFE2
  3679                           fsr1l	equ	0xFE1
  3680                           indf2	equ	0xFDF
  3681                           postinc2	equ	0xFDE
  3682                           postdec2	equ	0xFDD
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function _ToMainHigh_recvmsg *****************
  3688 ;; Defined at:
  3689 ;;		line 135 in file "../src/messages.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  maxlength       1    wreg     unsigned char 
  3692 ;;  msgtype         2   12[BANK1 ] PTR unsigned char 
  3693 ;;		 -> main@msgtype(1), 
  3694 ;;  data            2   14[BANK1 ] PTR void 
  3695 ;;		 -> main@msgbuffer(11), 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  maxlength       1   41[BANK0 ] unsigned char 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      char 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3707 ;;      Params:         0       0       4       0       0
  3708 ;;      Locals:         0       1       0       0       0
  3709 ;;      Temps:          0       0       0       0       0
  3710 ;;      Totals:         0       1       4       0       0
  3711 ;;Total ram usage:        5 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:   12
  3714 ;; This function calls:
  3715 ;;		_recv_msg
  3716 ;; This function is called by:
  3717 ;;		_main
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           	psect	text23
  3722  0018A8                     __ptext23:
  3723                           	opt stack 0
  3724  0018A8                     _ToMainHigh_recvmsg:
  3725                           	opt stack 17
  3726                           
  3727                           ;incstack = 0
  3728                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3729  0018A8  0100               	movlb	0	; () banked
  3730  0018AA  6FDF               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3734  0018AC  0100               	movlb	0	; () banked
  3735  0018AE  0E00               	movlw	high _ToMainHigh_MQ
  3736  0018B0  0101               	movlb	1	; () banked
  3737  0018B2  6FA3               	movwf	(recv_msg@qptr+1)& (0+255),b
  3738  0018B4  0100               	movlb	0	; () banked
  3739  0018B6  0E80               	movlw	low _ToMainHigh_MQ
  3740  0018B8  0101               	movlb	1	; () banked
  3741  0018BA  6FA2               	movwf	recv_msg@qptr& (0+255),b
  3742  0018BC  C0DF  F1A4         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3743  0018C0  0101               	movlb	1	; () banked
  3744  0018C2  C1AF  F1A6         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3745  0018C6  0101               	movlb	1	; () banked
  3746  0018C8  C1AE  F1A5         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3747  0018CC  0101               	movlb	1	; () banked
  3748  0018CE  C1B1  F1A8         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3749  0018D2  0101               	movlb	1	; () banked
  3750  0018D4  C1B0  F1A7         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3751  0018D8  EC50  F005         	call	_recv_msg	;wreg free
  3752  0018DC  0012               	return	
  3753  0018DE                     __end_of_ToMainHigh_recvmsg:
  3754                           	opt stack 0
  3755                           tblptru	equ	0xFF8
  3756                           prodh	equ	0xFF4
  3757                           prodl	equ	0xFF3
  3758                           intcon	equ	0xFF2
  3759                           intcon2	equ	0xFF1
  3760                           postinc0	equ	0xFEE
  3761                           wreg	equ	0xFE8
  3762                           indf1	equ	0xFE7
  3763                           fsr1h	equ	0xFE2
  3764                           fsr1l	equ	0xFE1
  3765                           indf2	equ	0xFDF
  3766                           postinc2	equ	0xFDE
  3767                           postdec2	equ	0xFDD
  3768                           fsr2h	equ	0xFDA
  3769                           fsr2l	equ	0xFD9
  3770                           status	equ	0xFD8
  3771                           
  3772 ;; *************** function _recv_msg *****************
  3773 ;; Defined at:
  3774 ;;		line 63 in file "../src/messages.c"
  3775 ;; Parameters:    Size  Location     Type
  3776 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3777 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3778 ;;  maxlength       1    2[BANK1 ] unsigned char 
  3779 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  3780 ;;		 -> RAM(1023), main@msgtype(1), 
  3781 ;;  data            2    5[BANK1 ] PTR void 
  3782 ;;		 -> NULL(0), main@msgbuffer(11), main@uc(18), 
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  3785 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3786 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3787 ;;  tlength         2    8[BANK1 ] unsigned int 
  3788 ;;  slot            1    7[BANK1 ] unsigned char 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  1    wreg      char 
  3791 ;; Registers used:
  3792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3798 ;;      Params:         0       0       7       0       0
  3799 ;;      Locals:         0       0       5       0       0
  3800 ;;      Temps:          0       2       0       0       0
  3801 ;;      Totals:         0       2      12       0       0
  3802 ;;Total ram usage:       14 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; Hardware stack levels required when called:   11
  3805 ;; This function calls:
  3806 ;;		_memcpy
  3807 ;; This function is called by:
  3808 ;;		_ToMainLow_recvmsg
  3809 ;;		_ToMainHigh_recvmsg
  3810 ;;		_FromMainHigh_recvmsg
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text24
  3815  000AA0                     __ptext24:
  3816                           	opt stack 0
  3817  000AA0                     _recv_msg:
  3818                           	opt stack 17
  3819                           
  3820                           ;messages.c: 64: unsigned char slot;
  3821                           ;messages.c: 68: msg *qmsg;
  3822                           ;messages.c: 69: size_t tlength;
  3823                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3824                           
  3825                           ;incstack = 0
  3826  000AA0  0101               	movlb	1	; () banked
  3827  000AA2  EE20 F035          	lfsr	2,53
  3828  000AA6  0101               	movlb	1	; () banked
  3829  000AA8  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3830  000AAA  26D9               	addwf	fsr2l,f,c
  3831  000AAC  0101               	movlb	1	; () banked
  3832  000AAE  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3833  000AB0  22DA               	addwfc	fsr2h,f,c
  3834  000AB2  50DF               	movf	indf2,w,c
  3835  000AB4  0101               	movlb	1	; () banked
  3836  000AB6  6FA9               	movwf	recv_msg@slot& (0+255),b
  3837                           
  3838                           ; BSR set to: 1
  3839                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3840  000AB8  0101               	movlb	1	; () banked
  3841  000ABA  51A9               	movf	recv_msg@slot& (0+255),w,b
  3842  000ABC  0D0D               	mullw	13
  3843  000ABE  50F3               	movf	prodl,w,c
  3844  000AC0  0101               	movlb	1	; () banked
  3845  000AC2  25A2               	addwf	recv_msg@qptr& (0+255),w,b
  3846  000AC4  0101               	movlb	1	; () banked
  3847  000AC6  6FAC               	movwf	recv_msg@qmsg& (0+255),b
  3848  000AC8  50F4               	movf	prodh,w,c
  3849  000ACA  0101               	movlb	1	; () banked
  3850  000ACC  21A3               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3851  000ACE  0101               	movlb	1	; () banked
  3852  000AD0  6FAD               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3853                           
  3854                           ; BSR set to: 1
  3855                           ;messages.c: 74: if (qmsg->full == 1) {
  3856  000AD2  0E01               	movlw	1
  3857  000AD4  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  3858  000AD8  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3859  000ADC  62DF               	cpfseq	indf2,c
  3860  000ADE  D06F               	goto	l3230
  3861                           
  3862                           ; BSR set to: 1
  3863                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3864  000AE0  0101               	movlb	1	; () banked
  3865  000AE2  EE20 F001          	lfsr	2,1
  3866  000AE6  0101               	movlb	1	; () banked
  3867  000AE8  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3868  000AEA  26D9               	addwf	fsr2l,f,c
  3869  000AEC  0101               	movlb	1	; () banked
  3870  000AEE  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3871  000AF0  22DA               	addwfc	fsr2h,f,c
  3872  000AF2  50DF               	movf	indf2,w,c
  3873  000AF4  0101               	movlb	1	; () banked
  3874  000AF6  5DA4               	subwf	recv_msg@maxlength& (0+255),w,b
  3875  000AF8  B0D8               	btfsc	status,0,c
  3876  000AFA  D002               	goto	l3214
  3877                           
  3878                           ; BSR set to: 1
  3879                           ;messages.c: 77: return (-3);
  3880  000AFC  0EFD               	movlw	253
  3881  000AFE  0012               	return	
  3882  000B00                     l3214:
  3883                           
  3884                           ; BSR set to: 1
  3885                           ;messages.c: 78: }
  3886                           ;messages.c: 80: tlength = qmsg->length;
  3887  000B00  0101               	movlb	1	; () banked
  3888  000B02  EE20 F001          	lfsr	2,1
  3889  000B06  0101               	movlb	1	; () banked
  3890  000B08  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3891  000B0A  26D9               	addwf	fsr2l,f,c
  3892  000B0C  0101               	movlb	1	; () banked
  3893  000B0E  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3894  000B10  22DA               	addwfc	fsr2h,f,c
  3895  000B12  50DF               	movf	indf2,w,c
  3896  000B14  0100               	movlb	0	; () banked
  3897  000B16  6FDD               	movwf	??_recv_msg& (0+255),b
  3898  000B18  0100               	movlb	0	; () banked
  3899  000B1A  51DD               	movf	??_recv_msg& (0+255),w,b
  3900  000B1C  0101               	movlb	1	; () banked
  3901  000B1E  6FAA               	movwf	recv_msg@tlength& (0+255),b
  3902  000B20  0101               	movlb	1	; () banked
  3903  000B22  6BAB               	clrf	(recv_msg@tlength+1)& (0+255),b
  3904                           
  3905                           ; BSR set to: 1
  3906                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3907  000B24  0101               	movlb	1	; () banked
  3908  000B26  0100               	movlb	0	; () banked
  3909  000B28  C1A8  F0D4         	movff	recv_msg@data+1,memcpy@d1+1
  3910  000B2C  0101               	movlb	1	; () banked
  3911  000B2E  0100               	movlb	0	; () banked
  3912  000B30  C1A7  F0D3         	movff	recv_msg@data,memcpy@d1
  3913  000B34  0E03               	movlw	3
  3914  000B36  0101               	movlb	1	; () banked
  3915  000B38  25AC               	addwf	recv_msg@qmsg& (0+255),w,b
  3916  000B3A  0100               	movlb	0	; () banked
  3917  000B3C  6FDD               	movwf	??_recv_msg& (0+255),b
  3918  000B3E  0E00               	movlw	0
  3919  000B40  0101               	movlb	1	; () banked
  3920  000B42  21AD               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3921  000B44  0100               	movlb	0	; () banked
  3922  000B46  6FDE               	movwf	(??_recv_msg+1)& (0+255),b
  3923  000B48  C0DD  F0D5         	movff	??_recv_msg,memcpy@s1
  3924  000B4C  C0DE  F0D6         	movff	??_recv_msg+1,memcpy@s1+1
  3925  000B50  C1AA  F0D7         	movff	recv_msg@tlength,memcpy@n
  3926  000B54  C1AB  F0D8         	movff	recv_msg@tlength+1,memcpy@n+1
  3927  000B58  EC6D  F00B         	call	_memcpy	;wreg free
  3928                           
  3929                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3930  000B5C  0101               	movlb	1	; () banked
  3931  000B5E  EE20 F035          	lfsr	2,53
  3932  000B62  0101               	movlb	1	; () banked
  3933  000B64  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3934  000B66  26D9               	addwf	fsr2l,f,c
  3935  000B68  0101               	movlb	1	; () banked
  3936  000B6A  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3937  000B6C  22DA               	addwfc	fsr2h,f,c
  3938  000B6E  0101               	movlb	1	; () banked
  3939  000B70  EE10 F035          	lfsr	1,53
  3940  000B74  0101               	movlb	1	; () banked
  3941  000B76  51A2               	movf	recv_msg@qptr& (0+255),w,b
  3942  000B78  26E1               	addwf	fsr1l,f,c
  3943  000B7A  0101               	movlb	1	; () banked
  3944  000B7C  51A3               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3945  000B7E  22E2               	addwfc	fsr1h,f,c
  3946  000B80  50E7               	movf	indf1,w,c
  3947  000B82  0100               	movlb	0	; () banked
  3948  000B84  6FDD               	movwf	??_recv_msg& (0+255),b
  3949  000B86  0100               	movlb	0	; () banked
  3950  000B88  29DD               	incf	??_recv_msg& (0+255),w,b
  3951  000B8A  0B03               	andlw	3
  3952  000B8C  6EDF               	movwf	indf2,c
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3956  000B8E  0101               	movlb	1	; () banked
  3957  000B90  EE20 F002          	lfsr	2,2
  3958  000B94  0101               	movlb	1	; () banked
  3959  000B96  51AC               	movf	recv_msg@qmsg& (0+255),w,b
  3960  000B98  26D9               	addwf	fsr2l,f,c
  3961  000B9A  0101               	movlb	1	; () banked
  3962  000B9C  51AD               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3963  000B9E  22DA               	addwfc	fsr2h,f,c
  3964  000BA0  C1A5  FFE1         	movff	recv_msg@msgtype,fsr1l
  3965  000BA4  C1A6  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3966  000BA8  CFDF FFE7          	movff	indf2,indf1
  3967                           
  3968                           ; BSR set to: 1
  3969                           ;messages.c: 91: qmsg->full = 0;
  3970  000BAC  C1AC  FFD9         	movff	recv_msg@qmsg,fsr2l
  3971  000BB0  C1AD  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3972  000BB4  0E00               	movlw	0
  3973  000BB6  6EDF               	movwf	indf2,c
  3974                           
  3975                           ; BSR set to: 1
  3976                           ;messages.c: 92: return (tlength);
  3977  000BB8  0101               	movlb	1	; () banked
  3978  000BBA  51AA               	movf	recv_msg@tlength& (0+255),w,b
  3979  000BBC  0012               	return	
  3980  000BBE                     l3230:
  3981                           
  3982                           ; BSR set to: 1
  3983                           ;messages.c: 94: return (-4);
  3984  000BBE  0EFC               	movlw	252
  3985  000BC0  0012               	return	
  3986  000BC2                     __end_of_recv_msg:
  3987                           	opt stack 0
  3988                           tblptru	equ	0xFF8
  3989                           prodh	equ	0xFF4
  3990                           prodl	equ	0xFF3
  3991                           intcon	equ	0xFF2
  3992                           intcon2	equ	0xFF1
  3993                           postinc0	equ	0xFEE
  3994                           wreg	equ	0xFE8
  3995                           indf1	equ	0xFE7
  3996                           fsr1h	equ	0xFE2
  3997                           fsr1l	equ	0xFE1
  3998                           indf2	equ	0xFDF
  3999                           postinc2	equ	0xFDE
  4000                           postdec2	equ	0xFDD
  4001                           fsr2h	equ	0xFDA
  4002                           fsr2l	equ	0xFD9
  4003                           status	equ	0xFD8
  4004                           
  4005 ;; *************** function _memcpy *****************
  4006 ;; Defined at:
  4007 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  d1              2   29[BANK0 ] PTR void 
  4010 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4011 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4012 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(18), 
  4013 ;;  s1              2   31[BANK0 ] PTR const void 
  4014 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4015 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4016 ;;		 -> timer1_int_handler@reverse(1), timer1_int_handler@stop(1), timer1_int_handler@right(1), timer1_int_handler@left(
      +1), 
  4017 ;;		 -> timer1_int_handler@forward(1), timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@rig
      +ht(1), 
  4018 ;;		 -> timer0_int_handler@left(1), timer0_int_handler@forward(1), NULL(0), i2c_int_handler@error_buf(3), 
  4019 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4020 ;;		 -> main@msgbuffer(11), main@t1thread_data(2), main@ic(28), main@uc(18), 
  4021 ;;  n               2   33[BANK0 ] unsigned int 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  4024 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4025 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4026 ;;		 -> timer1_int_handler@reverse(1), timer1_int_handler@stop(1), timer1_int_handler@right(1), timer1_int_handler@left(
      +1), 
  4027 ;;		 -> timer1_int_handler@forward(1), timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@rig
      +ht(1), 
  4028 ;;		 -> timer0_int_handler@left(1), timer0_int_handler@forward(1), NULL(0), i2c_int_handler@error_buf(3), 
  4029 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4030 ;;		 -> main@msgbuffer(11), main@t1thread_data(2), main@ic(28), main@uc(18), 
  4031 ;;  d               2   35[BANK0 ] PTR unsigned char 
  4032 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4033 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4034 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(18), 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  2   29[BANK0 ] PTR void 
  4037 ;; Registers used:
  4038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4044 ;;      Params:         0       6       0       0       0
  4045 ;;      Locals:         0       4       0       0       0
  4046 ;;      Temps:          0       0       0       0       0
  4047 ;;      Totals:         0      10       0       0       0
  4048 ;;Total ram usage:       10 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:   10
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_send_msg
  4055 ;;		_recv_msg
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text25
  4060  0016DA                     __ptext25:
  4061                           	opt stack 0
  4062  0016DA                     _memcpy:
  4063                           	opt stack 16
  4064                           
  4065                           ; BSR set to: 1
  4066                           ;incstack = 0
  4067  0016DA  0100               	movlb	0	; () banked
  4068  0016DC  C0D6  F0DC         	movff	memcpy@s1+1,memcpy@s+1
  4069  0016E0  0100               	movlb	0	; () banked
  4070  0016E2  C0D5  F0DB         	movff	memcpy@s1,memcpy@s
  4071  0016E6  0100               	movlb	0	; () banked
  4072  0016E8  C0D4  F0DA         	movff	memcpy@d1+1,memcpy@d+1
  4073  0016EC  0100               	movlb	0	; () banked
  4074  0016EE  C0D3  F0D9         	movff	memcpy@d1,memcpy@d
  4075  0016F2  D010               	goto	l3142
  4076  0016F4                     l3136:
  4077                           
  4078                           ; BSR set to: 0
  4079  0016F4  C0DB  FFD9         	movff	memcpy@s,fsr2l
  4080  0016F8  C0DC  FFDA         	movff	memcpy@s+1,fsr2h
  4081  0016FC  C0D9  FFE1         	movff	memcpy@d,fsr1l
  4082  001700  C0DA  FFE2         	movff	memcpy@d+1,fsr1h
  4083  001704  CFDF FFE7          	movff	indf2,indf1
  4084                           
  4085                           ; BSR set to: 0
  4086  001708  0100               	movlb	0	; () banked
  4087  00170A  4BDB               	infsnz	memcpy@s& (0+255),f,b
  4088  00170C  2BDC               	incf	(memcpy@s+1)& (0+255),f,b
  4089                           
  4090                           ; BSR set to: 0
  4091  00170E  0100               	movlb	0	; () banked
  4092  001710  4BD9               	infsnz	memcpy@d& (0+255),f,b
  4093  001712  2BDA               	incf	(memcpy@d+1)& (0+255),f,b
  4094  001714                     l3142:
  4095                           
  4096                           ; BSR set to: 0
  4097  001714  0100               	movlb	0	; () banked
  4098  001716  07D7               	decf	memcpy@n& (0+255),f,b
  4099  001718  A0D8               	btfss	status,0,c
  4100  00171A  07D8               	decf	(memcpy@n+1)& (0+255),f,b
  4101  00171C  0100               	movlb	0	; () banked
  4102  00171E  29D7               	incf	memcpy@n& (0+255),w,b
  4103  001720  B4D8               	btfsc	status,2,c
  4104  001722  29D8               	incf	(memcpy@n+1)& (0+255),w,b
  4105  001724  B4D8               	btfsc	status,2,c
  4106                           
  4107                           ; BSR set to: 0
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;	Return value of _memcpy is never used
  4111  001726  0012               	return	
  4112  001728  D7E5               	goto	l3136
  4113  00172A                     __end_of_memcpy:
  4114                           	opt stack 0
  4115                           tblptru	equ	0xFF8
  4116                           prodh	equ	0xFF4
  4117                           prodl	equ	0xFF3
  4118                           intcon	equ	0xFF2
  4119                           intcon2	equ	0xFF1
  4120                           postinc0	equ	0xFEE
  4121                           wreg	equ	0xFE8
  4122                           indf1	equ	0xFE7
  4123                           fsr1h	equ	0xFE2
  4124                           fsr1l	equ	0xFE1
  4125                           indf2	equ	0xFDF
  4126                           postinc2	equ	0xFDE
  4127                           postdec2	equ	0xFDD
  4128                           fsr2h	equ	0xFDA
  4129                           fsr2l	equ	0xFD9
  4130                           status	equ	0xFD8
  4131                           
  4132 ;; *************** function _OpenUSART *****************
  4133 ;; Defined at:
  4134 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  config          1    wreg     unsigned char 
  4137 ;;  spbrg           2   29[BANK0 ] unsigned int 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  config          1   34[BANK0 ] unsigned char 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;		None               void
  4142 ;; Registers used:
  4143 ;;		wreg, status,2
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4149 ;;      Params:         0       2       0       0       0
  4150 ;;      Locals:         0       1       0       0       0
  4151 ;;      Temps:          0       3       0       0       0
  4152 ;;      Totals:         0       6       0       0       0
  4153 ;;Total ram usage:        6 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:   10
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_main
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text26
  4164  001348                     __ptext26:
  4165                           	opt stack 0
  4166  001348                     _OpenUSART:
  4167                           	opt stack 19
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;incstack = 0
  4171                           ;OpenUSART@config stored from wreg
  4172  001348  0100               	movlb	0	; () banked
  4173  00134A  6FD8               	movwf	OpenUSART@config& (0+255),b
  4174                           
  4175                           ; BSR set to: 0
  4176  00134C  0E00               	movlw	0
  4177  00134E  6EAC               	movwf	4012,c	;volatile
  4178  001350  0E00               	movlw	0
  4179  001352  6EAB               	movwf	4011,c	;volatile
  4180                           
  4181                           ; BSR set to: 0
  4182  001354  0100               	movlb	0	; () banked
  4183  001356  B1D8               	btfsc	OpenUSART@config& (0+255),0,b
  4184                           
  4185                           ; BSR set to: 0
  4186  001358  88AC               	bsf	4012,4,c	;volatile
  4187                           
  4188                           ; BSR set to: 0
  4189                           
  4190                           ; BSR set to: 0
  4191  00135A  0100               	movlb	0	; () banked
  4192  00135C  A3D8               	btfss	OpenUSART@config& (0+255),1,b
  4193  00135E  D002               	goto	l2872
  4194                           
  4195                           ; BSR set to: 0
  4196  001360  8CAC               	bsf	4012,6,c	;volatile
  4197  001362  8CAB               	bsf	4011,6,c	;volatile
  4198  001364                     l2872:
  4199                           
  4200                           ; BSR set to: 0
  4201  001364  0100               	movlb	0	; () banked
  4202  001366  B5D8               	btfsc	OpenUSART@config& (0+255),2,b
  4203                           
  4204                           ; BSR set to: 0
  4205  001368  8EAC               	bsf	4012,7,c	;volatile
  4206                           
  4207                           ; BSR set to: 0
  4208                           
  4209                           ; BSR set to: 0
  4210  00136A  0100               	movlb	0	; () banked
  4211  00136C  A7D8               	btfss	OpenUSART@config& (0+255),3,b
  4212  00136E  D002               	goto	l499
  4213                           
  4214                           ; BSR set to: 0
  4215  001370  88AB               	bsf	4011,4,c	;volatile
  4216  001372  D001               	goto	l2880
  4217  001374                     l499:
  4218                           
  4219                           ; BSR set to: 0
  4220  001374  8AAB               	bsf	4011,5,c	;volatile
  4221  001376                     l2880:
  4222                           
  4223                           ; BSR set to: 0
  4224  001376  0100               	movlb	0	; () banked
  4225  001378  B9D8               	btfsc	OpenUSART@config& (0+255),4,b
  4226                           
  4227                           ; BSR set to: 0
  4228  00137A  84AC               	bsf	4012,2,c	;volatile
  4229                           
  4230                           ; BSR set to: 0
  4231  00137C  989E               	bcf	3998,4,c	;volatile
  4232                           
  4233                           ; BSR set to: 0
  4234  00137E  0100               	movlb	0	; () banked
  4235  001380  BBD8               	btfsc	OpenUSART@config& (0+255),5,b
  4236                           
  4237                           ; BSR set to: 0
  4238  001382  86AB               	bsf	4011,3,c	;volatile
  4239                           
  4240                           ; BSR set to: 0
  4241                           
  4242                           ; BSR set to: 0
  4243  001384  0100               	movlb	0	; () banked
  4244  001386  ADD8               	btfss	OpenUSART@config& (0+255),6,b
  4245  001388  D002               	goto	l503
  4246                           
  4247                           ; BSR set to: 0
  4248  00138A  8A9D               	bsf	3997,5,c	;volatile
  4249  00138C  D001               	goto	l504
  4250  00138E                     l503:
  4251                           
  4252                           ; BSR set to: 0
  4253  00138E  9A9D               	bcf	3997,5,c	;volatile
  4254  001390                     l504:
  4255                           
  4256                           ; BSR set to: 0
  4257  001390  9A9E               	bcf	3998,5,c	;volatile
  4258                           
  4259                           ; BSR set to: 0
  4260  001392  0100               	movlb	0	; () banked
  4261  001394  AFD8               	btfss	OpenUSART@config& (0+255),7,b
  4262  001396  D002               	goto	l505
  4263                           
  4264                           ; BSR set to: 0
  4265  001398  889D               	bsf	3997,4,c	;volatile
  4266  00139A  D001               	goto	l506
  4267  00139C                     l505:
  4268                           
  4269                           ; BSR set to: 0
  4270  00139C  989D               	bcf	3997,4,c	;volatile
  4271  00139E                     l506:
  4272                           
  4273                           ; BSR set to: 0
  4274  00139E  C0D3  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4275                           
  4276                           ; BSR set to: 0
  4277  0013A2  0100               	movlb	0	; () banked
  4278  0013A4  C0D4  F0D5         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4279  0013A8  C0D5  F0D6         	movff	??_OpenUSART,??_OpenUSART+1
  4280  0013AC  0100               	movlb	0	; () banked
  4281  0013AE  6BD7               	clrf	(??_OpenUSART+2)& (0+255),b
  4282  0013B0  0100               	movlb	0	; () banked
  4283  0013B2  51D6               	movf	(??_OpenUSART+1)& (0+255),w,b
  4284  0013B4  6EB0               	movwf	4016,c	;volatile
  4285                           
  4286                           ; BSR set to: 0
  4287  0013B6  8AAC               	bsf	4012,5,c	;volatile
  4288                           
  4289                           ; BSR set to: 0
  4290  0013B8  8EAB               	bsf	4011,7,c	;volatile
  4291                           
  4292                           ; BSR set to: 0
  4293  0013BA  9C94               	bcf	3988,6,c	;volatile
  4294                           
  4295                           ; BSR set to: 0
  4296  0013BC  8E94               	bsf	3988,7,c	;volatile
  4297                           
  4298                           ; BSR set to: 0
  4299  0013BE  A8AC               	btfss	4012,4,c	;volatile
  4300  0013C0  0012               	return	
  4301                           
  4302                           ; BSR set to: 0
  4303  0013C2  BEAC               	btfsc	4012,7,c	;volatile
  4304  0013C4  0012               	return	
  4305                           
  4306                           ; BSR set to: 0
  4307  0013C6  8C94               	bsf	3988,6,c	;volatile
  4308  0013C8  0012               	return	
  4309  0013CA                     __end_of_OpenUSART:
  4310                           	opt stack 0
  4311                           tblptru	equ	0xFF8
  4312                           prodh	equ	0xFF4
  4313                           prodl	equ	0xFF3
  4314                           intcon	equ	0xFF2
  4315                           intcon2	equ	0xFF1
  4316                           postinc0	equ	0xFEE
  4317                           wreg	equ	0xFE8
  4318                           indf1	equ	0xFE7
  4319                           fsr1h	equ	0xFE2
  4320                           fsr1l	equ	0xFE1
  4321                           indf2	equ	0xFDF
  4322                           postinc2	equ	0xFDE
  4323                           postdec2	equ	0xFDD
  4324                           fsr2h	equ	0xFDA
  4325                           fsr2l	equ	0xFD9
  4326                           status	equ	0xFD8
  4327                           
  4328 ;; *************** function _OpenTimer1 *****************
  4329 ;; Defined at:
  4330 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t1open.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  config          1    wreg     unsigned char 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  config          1   29[BANK0 ] unsigned char 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;		None               void
  4337 ;; Registers used:
  4338 ;;		wreg, status,2, status,0
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4344 ;;      Params:         0       0       0       0       0
  4345 ;;      Locals:         0       1       0       0       0
  4346 ;;      Temps:          0       0       0       0       0
  4347 ;;      Totals:         0       1       0       0       0
  4348 ;;Total ram usage:        1 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:   10
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_main
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358                           	psect	text27
  4359  0019A6                     __ptext27:
  4360                           	opt stack 0
  4361  0019A6                     _OpenTimer1:
  4362                           	opt stack 19
  4363                           
  4364                           ; BSR set to: 0
  4365                           ;incstack = 0
  4366                           ;OpenTimer1@config stored from wreg
  4367  0019A6  0100               	movlb	0	; () banked
  4368  0019A8  6FD3               	movwf	OpenTimer1@config& (0+255),b
  4369                           
  4370                           ; BSR set to: 0
  4371  0019AA  0100               	movlb	0	; () banked
  4372  0019AC  51D3               	movf	OpenTimer1@config& (0+255),w,b
  4373  0019AE  0B7E               	andlw	126
  4374  0019B0  6ECD               	movwf	4045,c	;volatile
  4375                           
  4376                           ; BSR set to: 0
  4377  0019B2  0100               	movlb	0	; () banked
  4378  0019B4  ADD3               	btfss	OpenTimer1@config& (0+255),6,b
  4379  0019B6  D002               	goto	l455
  4380                           
  4381                           ; BSR set to: 0
  4382  0019B8  8ECD               	bsf	4045,7,c	;volatile
  4383  0019BA  D001               	goto	l2832
  4384  0019BC                     l455:
  4385                           
  4386                           ; BSR set to: 0
  4387  0019BC  9ECD               	bcf	4045,7,c	;volatile
  4388  0019BE                     l2832:
  4389                           
  4390                           ; BSR set to: 0
  4391  0019BE  0E00               	movlw	0
  4392  0019C0  6ECF               	movwf	4047,c	;volatile
  4393  0019C2  0E00               	movlw	0
  4394  0019C4  6ECE               	movwf	4046,c	;volatile
  4395                           
  4396                           ; BSR set to: 0
  4397  0019C6  909E               	bcf	3998,0,c	;volatile
  4398                           
  4399                           ; BSR set to: 0
  4400  0019C8  0100               	movlb	0	; () banked
  4401  0019CA  AFD3               	btfss	OpenTimer1@config& (0+255),7,b
  4402  0019CC  D002               	goto	l457
  4403                           
  4404                           ; BSR set to: 0
  4405  0019CE  809D               	bsf	3997,0,c	;volatile
  4406  0019D0  D001               	goto	l458
  4407  0019D2                     l457:
  4408                           
  4409                           ; BSR set to: 0
  4410  0019D2  909D               	bcf	3997,0,c	;volatile
  4411  0019D4                     l458:
  4412                           
  4413                           ; BSR set to: 0
  4414  0019D4  80CD               	bsf	4045,0,c	;volatile
  4415                           
  4416                           ; BSR set to: 0
  4417  0019D6  0012               	return	
  4418  0019D8                     __end_of_OpenTimer1:
  4419                           	opt stack 0
  4420                           tblptru	equ	0xFF8
  4421                           prodh	equ	0xFF4
  4422                           prodl	equ	0xFF3
  4423                           intcon	equ	0xFF2
  4424                           intcon2	equ	0xFF1
  4425                           postinc0	equ	0xFEE
  4426                           wreg	equ	0xFE8
  4427                           indf1	equ	0xFE7
  4428                           fsr1h	equ	0xFE2
  4429                           fsr1l	equ	0xFE1
  4430                           indf2	equ	0xFDF
  4431                           postinc2	equ	0xFDE
  4432                           postdec2	equ	0xFDD
  4433                           fsr2h	equ	0xFDA
  4434                           fsr2l	equ	0xFD9
  4435                           status	equ	0xFD8
  4436                           
  4437 ;; *************** function _OpenTimer0 *****************
  4438 ;; Defined at:
  4439 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0open.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;  config          1    wreg     unsigned char 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;  config          1   29[BANK0 ] unsigned char 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;		None               void
  4446 ;; Registers used:
  4447 ;;		wreg, status,2, status,0
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4453 ;;      Params:         0       0       0       0       0
  4454 ;;      Locals:         0       1       0       0       0
  4455 ;;      Temps:          0       0       0       0       0
  4456 ;;      Totals:         0       1       0       0       0
  4457 ;;Total ram usage:        1 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:   10
  4460 ;; This function calls:
  4461 ;;		Nothing
  4462 ;; This function is called by:
  4463 ;;		_main
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text28
  4468  001AAC                     __ptext28:
  4469                           	opt stack 0
  4470  001AAC                     _OpenTimer0:
  4471                           	opt stack 19
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;incstack = 0
  4475                           ;OpenTimer0@config stored from wreg
  4476  001AAC  0100               	movlb	0	; () banked
  4477  001AAE  6FD3               	movwf	OpenTimer0@config& (0+255),b
  4478                           
  4479                           ; BSR set to: 0
  4480  001AB0  0100               	movlb	0	; () banked
  4481  001AB2  51D3               	movf	OpenTimer0@config& (0+255),w,b
  4482  001AB4  0B7F               	andlw	127
  4483  001AB6  6ED5               	movwf	4053,c	;volatile
  4484                           
  4485                           ; BSR set to: 0
  4486  001AB8  0E00               	movlw	0
  4487  001ABA  6ED7               	movwf	4055,c	;volatile
  4488                           
  4489                           ; BSR set to: 0
  4490  001ABC  0E00               	movlw	0
  4491  001ABE  6ED6               	movwf	4054,c	;volatile
  4492                           
  4493                           ; BSR set to: 0
  4494  001AC0  94F2               	bcf	intcon,2,c	;volatile
  4495                           
  4496                           ; BSR set to: 0
  4497  001AC2  0100               	movlb	0	; () banked
  4498  001AC4  AFD3               	btfss	OpenTimer0@config& (0+255),7,b
  4499  001AC6  D002               	goto	l431
  4500                           
  4501                           ; BSR set to: 0
  4502  001AC8  8AF2               	bsf	intcon,5,c	;volatile
  4503  001ACA  D001               	goto	l432
  4504  001ACC                     l431:
  4505                           
  4506                           ; BSR set to: 0
  4507  001ACC  9AF2               	bcf	intcon,5,c	;volatile
  4508  001ACE                     l432:
  4509                           
  4510                           ; BSR set to: 0
  4511  001ACE  8ED5               	bsf	4053,7,c	;volatile
  4512                           
  4513                           ; BSR set to: 0
  4514  001AD0  0012               	return	
  4515  001AD2                     __end_of_OpenTimer0:
  4516                           	opt stack 0
  4517                           tblptru	equ	0xFF8
  4518                           prodh	equ	0xFF4
  4519                           prodl	equ	0xFF3
  4520                           intcon	equ	0xFF2
  4521                           intcon2	equ	0xFF1
  4522                           postinc0	equ	0xFEE
  4523                           wreg	equ	0xFE8
  4524                           indf1	equ	0xFE7
  4525                           fsr1h	equ	0xFE2
  4526                           fsr1l	equ	0xFE1
  4527                           indf2	equ	0xFDF
  4528                           postinc2	equ	0xFDE
  4529                           postdec2	equ	0xFDD
  4530                           fsr2h	equ	0xFDA
  4531                           fsr2l	equ	0xFD9
  4532                           status	equ	0xFD8
  4533                           
  4534 ;; *************** function _InterruptHandlerLow *****************
  4535 ;; Defined at:
  4536 ;;		line 124 in file "../src/interrupts.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;		None
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;		None               void
  4543 ;; Registers used:
  4544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4550 ;;      Params:         0       0       0       0       0
  4551 ;;      Locals:         0       0       0       0       0
  4552 ;;      Temps:         17       0       0       0       0
  4553 ;;      Totals:        17       0       0       0       0
  4554 ;;Total ram usage:       17 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:    9
  4557 ;; This function calls:
  4558 ;;		_timer1_int_handler
  4559 ;;		_uart_recv_int_handler
  4560 ;;		_uart_trans_int_handler
  4561 ;; This function is called by:
  4562 ;;		Interrupt level 1
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566                           	psect	intcodelo
  4567  000018                     __pintcodelo:
  4568                           	opt stack 0
  4569  000018                     _InterruptHandlerLow:
  4570                           	opt stack 16
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;incstack = 0
  4574  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  4575  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  4576  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  4577  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  4578  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  4579  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  4580  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  4581  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  4582  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  4583  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  4584  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  4585  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  4586  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  4587  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  4588  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  4589  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  4590  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  4591                           
  4592                           ;interrupts.c: 126: if (PIR1bits.TMR1IF) {
  4593  00005C  A09E               	btfss	3998,0,c	;volatile
  4594  00005E  D003               	goto	i1l2986
  4595                           
  4596                           ;interrupts.c: 127: PIR1bits.TMR1IF = 0;
  4597  000060  909E               	bcf	3998,0,c	;volatile
  4598                           
  4599                           ;interrupts.c: 128: timer1_int_handler();
  4600  000062  ECE1  F005         	call	_timer1_int_handler	;wreg free
  4601  000066                     i1l2986:
  4602                           
  4603                           ;interrupts.c: 129: }
  4604                           ;interrupts.c: 132: if (PIR1bits.RCIF) {
  4605  000066  AA9E               	btfss	3998,5,c	;volatile
  4606  000068  D003               	goto	i1l2992
  4607                           
  4608                           ;interrupts.c: 133: PIR1bits.RCIF = 0;
  4609  00006A  9A9E               	bcf	3998,5,c	;volatile
  4610                           
  4611                           ;interrupts.c: 134: uart_recv_int_handler();
  4612  00006C  EC18  F008         	call	_uart_recv_int_handler	;wreg free
  4613  000070                     i1l2992:
  4614                           
  4615                           ;interrupts.c: 135: }
  4616                           ;interrupts.c: 138: if (PIR1bits.TXIF) {
  4617  000070  B89E               	btfsc	3998,4,c	;volatile
  4618                           
  4619                           ;interrupts.c: 139: uart_trans_int_handler();
  4620  000072  ECC6  F008         	call	_uart_trans_int_handler	;wreg free
  4621  000076  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4622  00007A  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4623  00007E  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4624  000082  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4625  000086  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4626  00008A  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4627  00008E  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4628  000092  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4629  000096  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4630  00009A  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4631  00009E  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4632  0000A2  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4633  0000A6  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4634  0000AA  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4635  0000AE  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4636  0000B2  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4637  0000B6  C023  FFD8         	movff	??_InterruptHandlerLow,status
  4638  0000BA  0010               	retfie	
  4639  0000BC                     __end_of_InterruptHandlerLow:
  4640                           	opt stack 0
  4641                           pclatu	equ	0xFFB
  4642                           pclath	equ	0xFFA
  4643                           tblptru	equ	0xFF8
  4644                           tblptrh	equ	0xFF7
  4645                           tblptrl	equ	0xFF6
  4646                           tablat	equ	0xFF5
  4647                           prodh	equ	0xFF4
  4648                           prodl	equ	0xFF3
  4649                           intcon	equ	0xFF2
  4650                           intcon2	equ	0xFF1
  4651                           postinc0	equ	0xFEE
  4652                           fsr0h	equ	0xFEA
  4653                           fsr0l	equ	0xFE9
  4654                           wreg	equ	0xFE8
  4655                           indf1	equ	0xFE7
  4656                           fsr1h	equ	0xFE2
  4657                           fsr1l	equ	0xFE1
  4658                           bsr	equ	0xFE0
  4659                           indf2	equ	0xFDF
  4660                           postinc2	equ	0xFDE
  4661                           postdec2	equ	0xFDD
  4662                           fsr2h	equ	0xFDA
  4663                           fsr2l	equ	0xFD9
  4664                           status	equ	0xFD8
  4665                           
  4666 ;; *************** function _uart_trans_int_handler *****************
  4667 ;; Defined at:
  4668 ;;		line 34 in file "../src/my_uart.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;		None               void
  4675 ;; Registers used:
  4676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4682 ;;      Params:         0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0
  4684 ;;      Temps:          2       0       0       0       0
  4685 ;;      Totals:         2       0       0       0       0
  4686 ;;Total ram usage:        2 bytes
  4687 ;; Hardware stack levels used:    1
  4688 ;; Hardware stack levels required when called:    8
  4689 ;; This function calls:
  4690 ;;		_FromMainLow_recvmsg
  4691 ;; This function is called by:
  4692 ;;		_InterruptHandlerLow
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text30
  4697  00118C                     __ptext30:
  4698                           	opt stack 0
  4699  00118C                     _uart_trans_int_handler:
  4700                           	opt stack 16
  4701                           
  4702                           ;my_uart.c: 35: FromMainLow_recvmsg(uc_ptr->outbuflen, 45, (void *) uc_ptr->outbuffer);
  4703                           
  4704                           ;incstack = 0
  4705  00118C  0E00               	movlw	0
  4706  00118E  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  4707  001190  0E2D               	movlw	45
  4708  001192  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  4709  001194  0E08               	movlw	8
  4710  001196  2449               	addwf	_uc_ptr,w,c
  4711  001198  6E1B               	movwf	FromMainLow_recvmsg@data,c
  4712  00119A  0E00               	movlw	0
  4713  00119C  204A               	addwfc	_uc_ptr+1,w,c
  4714  00119E  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  4715  0011A0  EE20 F00E          	lfsr	2,14
  4716  0011A4  5049               	movf	_uc_ptr,w,c
  4717  0011A6  26D9               	addwf	fsr2l,f,c
  4718  0011A8  504A               	movf	_uc_ptr+1,w,c
  4719  0011AA  22DA               	addwfc	fsr2h,f,c
  4720  0011AC  50DF               	movf	indf2,w,c
  4721  0011AE  EC2F  F00D         	call	_FromMainLow_recvmsg
  4722                           
  4723                           ;my_uart.c: 36: if (TXSTAbits.TRMT == 1) {
  4724  0011B2  A2AC               	btfss	4012,1,c	;volatile
  4725  0011B4  0012               	return	
  4726                           
  4727                           ;my_uart.c: 37: if (uc_ptr->outbufind < uc_ptr->outbuflen) {
  4728  0011B6  EE20 F00F          	lfsr	2,15
  4729  0011BA  5049               	movf	_uc_ptr,w,c
  4730  0011BC  26D9               	addwf	fsr2l,f,c
  4731  0011BE  504A               	movf	_uc_ptr+1,w,c
  4732  0011C0  22DA               	addwfc	fsr2h,f,c
  4733  0011C2  50DF               	movf	indf2,w,c
  4734  0011C4  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  4735  0011C6  EE20 F00E          	lfsr	2,14
  4736  0011CA  5049               	movf	_uc_ptr,w,c
  4737  0011CC  26D9               	addwf	fsr2l,f,c
  4738  0011CE  504A               	movf	_uc_ptr+1,w,c
  4739  0011D0  22DA               	addwfc	fsr2h,f,c
  4740  0011D2  50DF               	movf	indf2,w,c
  4741  0011D4  5C1E               	subwf	??_uart_trans_int_handler,w,c
  4742  0011D6  B0D8               	btfsc	status,0,c
  4743  0011D8  D01D               	goto	i1l2782
  4744                           
  4745                           ;my_uart.c: 38: uc_ptr->outbufind++;
  4746  0011DA  EE20 F00F          	lfsr	2,15
  4747  0011DE  5049               	movf	_uc_ptr,w,c
  4748  0011E0  26D9               	addwf	fsr2l,f,c
  4749  0011E2  504A               	movf	_uc_ptr+1,w,c
  4750  0011E4  22DA               	addwfc	fsr2h,f,c
  4751  0011E6  2ADF               	incf	indf2,f,c
  4752                           
  4753                           ;my_uart.c: 39: TXREG = uc_ptr->outbuffer[uc_ptr->outbufind - 1];
  4754  0011E8  EE20 F00F          	lfsr	2,15
  4755  0011EC  5049               	movf	_uc_ptr,w,c
  4756  0011EE  26D9               	addwf	fsr2l,f,c
  4757  0011F0  504A               	movf	_uc_ptr+1,w,c
  4758  0011F2  22DA               	addwfc	fsr2h,f,c
  4759  0011F4  50DF               	movf	indf2,w,c
  4760  0011F6  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  4761  0011F8  6A1F               	clrf	(??_uart_trans_int_handler+1)& (0+255),c
  4762  0011FA  0E07               	movlw	7
  4763  0011FC  261E               	addwf	??_uart_trans_int_handler,f,c
  4764  0011FE  0E00               	movlw	0
  4765  001200  221F               	addwfc	??_uart_trans_int_handler+1,f,c
  4766  001202  501E               	movf	??_uart_trans_int_handler,w,c
  4767  001204  2449               	addwf	_uc_ptr,w,c
  4768  001206  6ED9               	movwf	fsr2l,c
  4769  001208  501F               	movf	??_uart_trans_int_handler+1,w,c
  4770  00120A  204A               	addwfc	_uc_ptr+1,w,c
  4771  00120C  6EDA               	movwf	fsr2h,c
  4772  00120E  50DF               	movf	indf2,w,c
  4773  001210  6EAD               	movwf	4013,c	;volatile
  4774                           
  4775                           ;my_uart.c: 40: } else {
  4776  001212  0012               	return	
  4777  001214                     i1l2782:
  4778                           
  4779                           ;my_uart.c: 41: uc_ptr->outbuflen = 0;
  4780  001214  EE20 F00E          	lfsr	2,14
  4781  001218  5049               	movf	_uc_ptr,w,c
  4782  00121A  26D9               	addwf	fsr2l,f,c
  4783  00121C  504A               	movf	_uc_ptr+1,w,c
  4784  00121E  22DA               	addwfc	fsr2h,f,c
  4785  001220  0E00               	movlw	0
  4786  001222  6EDF               	movwf	indf2,c
  4787                           
  4788                           ;my_uart.c: 42: PIE1bits.TXIE = 0;
  4789  001224  989D               	bcf	3997,4,c	;volatile
  4790  001226  0012               	return	
  4791  001228                     __end_of_uart_trans_int_handler:
  4792                           	opt stack 0
  4793                           pclatu	equ	0xFFB
  4794                           pclath	equ	0xFFA
  4795                           tblptru	equ	0xFF8
  4796                           tblptrh	equ	0xFF7
  4797                           tblptrl	equ	0xFF6
  4798                           tablat	equ	0xFF5
  4799                           prodh	equ	0xFF4
  4800                           prodl	equ	0xFF3
  4801                           intcon	equ	0xFF2
  4802                           intcon2	equ	0xFF1
  4803                           postinc0	equ	0xFEE
  4804                           fsr0h	equ	0xFEA
  4805                           fsr0l	equ	0xFE9
  4806                           wreg	equ	0xFE8
  4807                           indf1	equ	0xFE7
  4808                           fsr1h	equ	0xFE2
  4809                           fsr1l	equ	0xFE1
  4810                           bsr	equ	0xFE0
  4811                           indf2	equ	0xFDF
  4812                           postinc2	equ	0xFDE
  4813                           postdec2	equ	0xFDD
  4814                           fsr2h	equ	0xFDA
  4815                           fsr2l	equ	0xFD9
  4816                           status	equ	0xFD8
  4817                           
  4818 ;; *************** function _FromMainLow_recvmsg *****************
  4819 ;; Defined at:
  4820 ;;		line 159 in file "../src/messages.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  maxlength       1    wreg     unsigned char 
  4823 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  4824 ;;		 -> RAM(1023), 
  4825 ;;  data            2   26[COMRAM] PTR void 
  4826 ;;		 -> NULL(0), main@uc(18), 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  maxlength       1   28[COMRAM] unsigned char 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  1    wreg      char 
  4831 ;; Registers used:
  4832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4838 ;;      Params:         4       0       0       0       0
  4839 ;;      Locals:         1       0       0       0       0
  4840 ;;      Temps:          0       0       0       0       0
  4841 ;;      Totals:         5       0       0       0       0
  4842 ;;Total ram usage:        5 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    7
  4845 ;; This function calls:
  4846 ;;		i1_recv_msg
  4847 ;; This function is called by:
  4848 ;;		_uart_trans_int_handler
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text31
  4853  001A5E                     __ptext31:
  4854                           	opt stack 0
  4855  001A5E                     _FromMainLow_recvmsg:
  4856                           	opt stack 16
  4857                           
  4858                           ;incstack = 0
  4859                           ;FromMainLow_recvmsg@maxlength stored from wreg
  4860  001A5E  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  4861                           
  4862                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  4863                           ;	Return value of _FromMainLow_recvmsg is never used
  4864  001A60  0101               	movlb	1	; () banked
  4865  001A62  0E01               	movlw	high _FromMainLow_MQ
  4866  001A64  6E0C               	movwf	i1recv_msg@qptr+1,c
  4867  001A66  0101               	movlb	1	; () banked
  4868  001A68  0E36               	movlw	low _FromMainLow_MQ
  4869  001A6A  6E0B               	movwf	i1recv_msg@qptr,c
  4870  001A6C  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  4871  001A70  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  4872  001A74  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  4873  001A78  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  4874  001A7C  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  4875  001A80  ECE9  F006         	call	i1_recv_msg	;wreg free
  4876  001A84  0012               	return	
  4877  001A86                     __end_of_FromMainLow_recvmsg:
  4878                           	opt stack 0
  4879                           pclatu	equ	0xFFB
  4880                           pclath	equ	0xFFA
  4881                           tblptru	equ	0xFF8
  4882                           tblptrh	equ	0xFF7
  4883                           tblptrl	equ	0xFF6
  4884                           tablat	equ	0xFF5
  4885                           prodh	equ	0xFF4
  4886                           prodl	equ	0xFF3
  4887                           intcon	equ	0xFF2
  4888                           intcon2	equ	0xFF1
  4889                           postinc0	equ	0xFEE
  4890                           fsr0h	equ	0xFEA
  4891                           fsr0l	equ	0xFE9
  4892                           wreg	equ	0xFE8
  4893                           indf1	equ	0xFE7
  4894                           fsr1h	equ	0xFE2
  4895                           fsr1l	equ	0xFE1
  4896                           bsr	equ	0xFE0
  4897                           indf2	equ	0xFDF
  4898                           postinc2	equ	0xFDE
  4899                           postdec2	equ	0xFDD
  4900                           fsr2h	equ	0xFDA
  4901                           fsr2l	equ	0xFD9
  4902                           status	equ	0xFD8
  4903                           
  4904 ;; *************** function i1_recv_msg *****************
  4905 ;; Defined at:
  4906 ;;		line 63 in file "../src/messages.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  4909 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4910 ;;  maxlength       1   12[COMRAM] unsigned char 
  4911 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  4912 ;;		 -> RAM(1023), main@msgtype(1), 
  4913 ;;  data            2   15[COMRAM] PTR void 
  4914 ;;		 -> NULL(0), main@msgbuffer(11), main@uc(18), 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  4917 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4918 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4919 ;;  recv_msg        2   20[COMRAM] unsigned int 
  4920 ;;  recv_msg        1   19[COMRAM] unsigned char 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1    wreg      char 
  4923 ;; Registers used:
  4924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4930 ;;      Params:         7       0       0       0       0
  4931 ;;      Locals:         5       0       0       0       0
  4932 ;;      Temps:          2       0       0       0       0
  4933 ;;      Totals:        14       0       0       0       0
  4934 ;;Total ram usage:       14 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:    6
  4937 ;; This function calls:
  4938 ;;		i1_memcpy
  4939 ;; This function is called by:
  4940 ;;		_FromMainLow_recvmsg
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text32
  4945  000DD2                     __ptext32:
  4946                           	opt stack 0
  4947  000DD2                     i1_recv_msg:
  4948                           	opt stack 16
  4949                           
  4950                           ;messages.c: 64: unsigned char slot;
  4951                           ;messages.c: 68: msg *qmsg;
  4952                           ;messages.c: 69: size_t tlength;
  4953                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4954                           
  4955                           ;incstack = 0
  4956  000DD2  EE20 F035          	lfsr	2,53
  4957  000DD6  500B               	movf	i1recv_msg@qptr,w,c
  4958  000DD8  26D9               	addwf	fsr2l,f,c
  4959  000DDA  500C               	movf	i1recv_msg@qptr+1,w,c
  4960  000DDC  22DA               	addwfc	fsr2h,f,c
  4961  000DDE  50DF               	movf	indf2,w,c
  4962  000DE0  6E14               	movwf	i1recv_msg@slot,c
  4963                           
  4964                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4965  000DE2  5014               	movf	i1recv_msg@slot,w,c
  4966  000DE4  0D0D               	mullw	13
  4967  000DE6  50F3               	movf	prodl,w,c
  4968  000DE8  240B               	addwf	i1recv_msg@qptr,w,c
  4969  000DEA  6E17               	movwf	i1recv_msg@qmsg,c
  4970  000DEC  50F4               	movf	prodh,w,c
  4971  000DEE  200C               	addwfc	i1recv_msg@qptr+1,w,c
  4972  000DF0  6E18               	movwf	i1recv_msg@qmsg+1,c
  4973                           
  4974                           ;messages.c: 74: if (qmsg->full == 1) {
  4975  000DF2  0E01               	movlw	1
  4976  000DF4  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  4977  000DF8  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  4978  000DFC  62DF               	cpfseq	indf2,c
  4979  000DFE  D050               	goto	i1l2306
  4980                           
  4981                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4982  000E00  EE20 F001          	lfsr	2,1
  4983  000E04  5017               	movf	i1recv_msg@qmsg,w,c
  4984  000E06  26D9               	addwf	fsr2l,f,c
  4985  000E08  5018               	movf	i1recv_msg@qmsg+1,w,c
  4986  000E0A  22DA               	addwfc	fsr2h,f,c
  4987  000E0C  50DF               	movf	indf2,w,c
  4988  000E0E  5C0D               	subwf	i1recv_msg@maxlength,w,c
  4989  000E10  B0D8               	btfsc	status,0,c
  4990  000E12  D002               	goto	i1l2290
  4991                           
  4992                           ;messages.c: 77: return (-3);
  4993  000E14  0EFD               	movlw	253
  4994  000E16  0012               	return	
  4995  000E18                     i1l2290:
  4996                           
  4997                           ;messages.c: 78: }
  4998                           ;messages.c: 80: tlength = qmsg->length;
  4999  000E18  EE20 F001          	lfsr	2,1
  5000  000E1C  5017               	movf	i1recv_msg@qmsg,w,c
  5001  000E1E  26D9               	addwf	fsr2l,f,c
  5002  000E20  5018               	movf	i1recv_msg@qmsg+1,w,c
  5003  000E22  22DA               	addwfc	fsr2h,f,c
  5004  000E24  50DF               	movf	indf2,w,c
  5005  000E26  6E12               	movwf	??i1_recv_msg& (0+255),c
  5006  000E28  5012               	movf	??i1_recv_msg,w,c
  5007  000E2A  6E15               	movwf	i1recv_msg@tlength,c
  5008  000E2C  6A16               	clrf	i1recv_msg@tlength+1,c
  5009                           
  5010                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5011  000E2E  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  5012  000E32  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  5013  000E36  0E03               	movlw	3
  5014  000E38  2417               	addwf	i1recv_msg@qmsg,w,c
  5015  000E3A  6E12               	movwf	??i1_recv_msg& (0+255),c
  5016  000E3C  0E00               	movlw	0
  5017  000E3E  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  5018  000E40  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  5019  000E42  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  5020  000E46  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  5021  000E4A  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  5022  000E4E  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  5023  000E52  ECBC  F00B         	call	i1_memcpy	;wreg free
  5024                           
  5025                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5026  000E56  EE20 F035          	lfsr	2,53
  5027  000E5A  500B               	movf	i1recv_msg@qptr,w,c
  5028  000E5C  26D9               	addwf	fsr2l,f,c
  5029  000E5E  500C               	movf	i1recv_msg@qptr+1,w,c
  5030  000E60  22DA               	addwfc	fsr2h,f,c
  5031  000E62  EE10 F035          	lfsr	1,53
  5032  000E66  500B               	movf	i1recv_msg@qptr,w,c
  5033  000E68  26E1               	addwf	fsr1l,f,c
  5034  000E6A  500C               	movf	i1recv_msg@qptr+1,w,c
  5035  000E6C  22E2               	addwfc	fsr1h,f,c
  5036  000E6E  50E7               	movf	indf1,w,c
  5037  000E70  6E12               	movwf	??i1_recv_msg& (0+255),c
  5038  000E72  2812               	incf	??i1_recv_msg,w,c
  5039  000E74  0B03               	andlw	3
  5040  000E76  6EDF               	movwf	indf2,c
  5041                           
  5042                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5043  000E78  EE20 F002          	lfsr	2,2
  5044  000E7C  5017               	movf	i1recv_msg@qmsg,w,c
  5045  000E7E  26D9               	addwf	fsr2l,f,c
  5046  000E80  5018               	movf	i1recv_msg@qmsg+1,w,c
  5047  000E82  22DA               	addwfc	fsr2h,f,c
  5048  000E84  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  5049  000E88  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  5050  000E8C  CFDF FFE7          	movff	indf2,indf1
  5051                           
  5052                           ;messages.c: 91: qmsg->full = 0;
  5053  000E90  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  5054  000E94  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  5055  000E98  0E00               	movlw	0
  5056  000E9A  6EDF               	movwf	indf2,c
  5057                           
  5058                           ;messages.c: 92: return (tlength);
  5059  000E9C  5015               	movf	i1recv_msg@tlength,w,c
  5060  000E9E  0012               	return	
  5061  000EA0                     i1l2306:
  5062                           
  5063                           ;messages.c: 94: return (-4);
  5064  000EA0  0EFC               	movlw	252
  5065  000EA2  0012               	return	
  5066  000EA4                     __end_ofi1_recv_msg:
  5067                           	opt stack 0
  5068                           pclatu	equ	0xFFB
  5069                           pclath	equ	0xFFA
  5070                           tblptru	equ	0xFF8
  5071                           tblptrh	equ	0xFF7
  5072                           tblptrl	equ	0xFF6
  5073                           tablat	equ	0xFF5
  5074                           prodh	equ	0xFF4
  5075                           prodl	equ	0xFF3
  5076                           intcon	equ	0xFF2
  5077                           intcon2	equ	0xFF1
  5078                           postinc0	equ	0xFEE
  5079                           fsr0h	equ	0xFEA
  5080                           fsr0l	equ	0xFE9
  5081                           wreg	equ	0xFE8
  5082                           indf1	equ	0xFE7
  5083                           fsr1h	equ	0xFE2
  5084                           fsr1l	equ	0xFE1
  5085                           bsr	equ	0xFE0
  5086                           indf2	equ	0xFDF
  5087                           postinc2	equ	0xFDE
  5088                           postdec2	equ	0xFDD
  5089                           fsr2h	equ	0xFDA
  5090                           fsr2l	equ	0xFD9
  5091                           status	equ	0xFD8
  5092                           
  5093 ;; *************** function _uart_recv_int_handler *****************
  5094 ;; Defined at:
  5095 ;;		line 12 in file "../src/my_uart.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;		None
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;		None
  5100 ;; Return value:  Size  Location     Type
  5101 ;;		None               void
  5102 ;; Registers used:
  5103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5109 ;;      Params:         0       0       0       0       0
  5110 ;;      Locals:         0       0       0       0       0
  5111 ;;      Temps:          1       0       0       0       0
  5112 ;;      Totals:         1       0       0       0       0
  5113 ;;Total ram usage:        1 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; Hardware stack levels required when called:    8
  5116 ;; This function calls:
  5117 ;;		_ReadUSART
  5118 ;;		_ToMainLow_sendmsg
  5119 ;; This function is called by:
  5120 ;;		_InterruptHandlerLow
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text33
  5125  001030                     __ptext33:
  5126                           	opt stack 0
  5127  001030                     _uart_recv_int_handler:
  5128                           	opt stack 16
  5129                           
  5130                           ;my_uart.c: 13: if ((PIR1bits.RCIF)) {
  5131                           
  5132                           ;incstack = 0
  5133  001030  AA9E               	btfss	3998,5,c	;volatile
  5134  001032  D049               	goto	i1l2768
  5135                           
  5136                           ;my_uart.c: 14: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5137  001034  EE20 F006          	lfsr	2,6
  5138  001038  5049               	movf	_uc_ptr,w,c
  5139  00103A  26D9               	addwf	fsr2l,f,c
  5140  00103C  504A               	movf	_uc_ptr+1,w,c
  5141  00103E  22DA               	addwfc	fsr2h,f,c
  5142  001040  50DF               	movf	indf2,w,c
  5143  001042  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5144  001044  501B               	movf	??_uart_recv_int_handler,w,c
  5145  001046  0D01               	mullw	1
  5146  001048  50F3               	movf	prodl,w,c
  5147  00104A  2449               	addwf	_uc_ptr,w,c
  5148  00104C  6ED9               	movwf	fsr2l,c
  5149  00104E  50F4               	movf	prodh,w,c
  5150  001050  204A               	addwfc	_uc_ptr+1,w,c
  5151  001052  6EDA               	movwf	fsr2h,c
  5152  001054  ECB1  F00D         	call	_ReadUSART	;wreg free
  5153  001058  6EDF               	movwf	indf2,c
  5154                           
  5155                           ;my_uart.c: 16: uc_ptr->buflen++;
  5156  00105A  EE20 F006          	lfsr	2,6
  5157  00105E  5049               	movf	_uc_ptr,w,c
  5158  001060  26D9               	addwf	fsr2l,f,c
  5159  001062  504A               	movf	_uc_ptr+1,w,c
  5160  001064  22DA               	addwfc	fsr2h,f,c
  5161  001066  2ADF               	incf	indf2,f,c
  5162                           
  5163                           ;my_uart.c: 18: if (uc_ptr->buflen == 6) {
  5164  001068  EE20 F006          	lfsr	2,6
  5165  00106C  5049               	movf	_uc_ptr,w,c
  5166  00106E  26D9               	addwf	fsr2l,f,c
  5167  001070  504A               	movf	_uc_ptr+1,w,c
  5168  001072  22DA               	addwfc	fsr2h,f,c
  5169  001074  0E06               	movlw	6
  5170  001076  62DF               	cpfseq	indf2,c
  5171  001078  D017               	goto	i1l2766
  5172                           
  5173                           ;my_uart.c: 19: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5174  00107A  0E1F               	movlw	31
  5175  00107C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5176  00107E  C04A  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5177  001082  C049  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5178  001086  EE20 F006          	lfsr	2,6
  5179  00108A  5049               	movf	_uc_ptr,w,c
  5180  00108C  26D9               	addwf	fsr2l,f,c
  5181  00108E  504A               	movf	_uc_ptr+1,w,c
  5182  001090  22DA               	addwfc	fsr2h,f,c
  5183  001092  50DF               	movf	indf2,w,c
  5184  001094  EC69  F00D         	call	_ToMainLow_sendmsg
  5185                           
  5186                           ;my_uart.c: 20: uc_ptr->buflen = 0;
  5187  001098  EE20 F006          	lfsr	2,6
  5188  00109C  5049               	movf	_uc_ptr,w,c
  5189  00109E  26D9               	addwf	fsr2l,f,c
  5190  0010A0  504A               	movf	_uc_ptr+1,w,c
  5191  0010A2  22DA               	addwfc	fsr2h,f,c
  5192  0010A4  0E00               	movlw	0
  5193  0010A6  6EDF               	movwf	indf2,c
  5194  0010A8                     i1l2766:
  5195                           
  5196                           ;my_uart.c: 21: }
  5197                           ;my_uart.c: 22: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5198  0010A8  0E1F               	movlw	31
  5199  0010AA  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5200  0010AC  C04A  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5201  0010B0  C049  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5202  0010B4  EE20 F006          	lfsr	2,6
  5203  0010B8  5049               	movf	_uc_ptr,w,c
  5204  0010BA  26D9               	addwf	fsr2l,f,c
  5205  0010BC  504A               	movf	_uc_ptr+1,w,c
  5206  0010BE  22DA               	addwfc	fsr2h,f,c
  5207  0010C0  50DF               	movf	indf2,w,c
  5208  0010C2  EC69  F00D         	call	_ToMainLow_sendmsg
  5209  0010C6                     i1l2768:
  5210                           
  5211                           ;my_uart.c: 23: }
  5212                           ;my_uart.c: 25: if (USART_Status.OVERRUN_ERROR == 1) {
  5213  0010C6  A64C               	btfss	_USART_Status,3,c
  5214  0010C8  0012               	return	
  5215                           
  5216                           ;my_uart.c: 28: RCSTAbits.CREN = 0;
  5217  0010CA  98AB               	bcf	4011,4,c	;volatile
  5218                           
  5219                           ;my_uart.c: 29: RCSTAbits.CREN = 1;
  5220  0010CC  88AB               	bsf	4011,4,c	;volatile
  5221                           
  5222                           ;my_uart.c: 30: ToMainLow_sendmsg(0, 30, (void *) 0);
  5223  0010CE  0E1E               	movlw	30
  5224  0010D0  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5225  0010D2  0E00               	movlw	0
  5226  0010D4  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5227  0010D6  0E00               	movlw	0
  5228  0010D8  6E18               	movwf	ToMainLow_sendmsg@data,c
  5229  0010DA  0E00               	movlw	0
  5230  0010DC  EC69  F00D         	call	_ToMainLow_sendmsg
  5231  0010E0  0012               	return	
  5232  0010E2                     __end_of_uart_recv_int_handler:
  5233                           	opt stack 0
  5234                           pclatu	equ	0xFFB
  5235                           pclath	equ	0xFFA
  5236                           tblptru	equ	0xFF8
  5237                           tblptrh	equ	0xFF7
  5238                           tblptrl	equ	0xFF6
  5239                           tablat	equ	0xFF5
  5240                           prodh	equ	0xFF4
  5241                           prodl	equ	0xFF3
  5242                           intcon	equ	0xFF2
  5243                           intcon2	equ	0xFF1
  5244                           postinc0	equ	0xFEE
  5245                           fsr0h	equ	0xFEA
  5246                           fsr0l	equ	0xFE9
  5247                           wreg	equ	0xFE8
  5248                           indf1	equ	0xFE7
  5249                           fsr1h	equ	0xFE2
  5250                           fsr1l	equ	0xFE1
  5251                           bsr	equ	0xFE0
  5252                           indf2	equ	0xFDF
  5253                           postinc2	equ	0xFDE
  5254                           postdec2	equ	0xFDD
  5255                           fsr2h	equ	0xFDA
  5256                           fsr2l	equ	0xFD9
  5257                           status	equ	0xFD8
  5258                           
  5259 ;; *************** function _ToMainLow_sendmsg *****************
  5260 ;; Defined at:
  5261 ;;		line 103 in file "../src/messages.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  length          1    wreg     unsigned char 
  5264 ;;  msgtype         1   22[COMRAM] unsigned char 
  5265 ;;  data            2   23[COMRAM] PTR void 
  5266 ;;		 -> NULL(0), main@uc(18), 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  length          1   25[COMRAM] unsigned char 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  1    wreg      char 
  5271 ;; Registers used:
  5272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5278 ;;      Params:         3       0       0       0       0
  5279 ;;      Locals:         1       0       0       0       0
  5280 ;;      Temps:          0       0       0       0       0
  5281 ;;      Totals:         4       0       0       0       0
  5282 ;;Total ram usage:        4 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; Hardware stack levels required when called:    7
  5285 ;; This function calls:
  5286 ;;		i1_send_msg
  5287 ;; This function is called by:
  5288 ;;		_uart_recv_int_handler
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text34
  5293  001AD2                     __ptext34:
  5294                           	opt stack 0
  5295  001AD2                     _ToMainLow_sendmsg:
  5296                           	opt stack 16
  5297                           
  5298                           ;incstack = 0
  5299                           ;ToMainLow_sendmsg@length stored from wreg
  5300  001AD2  6E1A               	movwf	ToMainLow_sendmsg@length,c
  5301                           
  5302                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5303                           ;	Return value of _ToMainLow_sendmsg is never used
  5304  001AD4  0101               	movlb	1	; () banked
  5305  001AD6  0E01               	movlw	high _ToMainLow_MQ
  5306  001AD8  6E0C               	movwf	i1send_msg@qptr+1,c
  5307  001ADA  0101               	movlb	1	; () banked
  5308  001ADC  0E6C               	movlw	low _ToMainLow_MQ
  5309  001ADE  6E0B               	movwf	i1send_msg@qptr,c
  5310  001AE0  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5311  001AE4  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5312  001AE8  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5313  001AEC  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5314  001AF0  EC71  F008         	call	i1_send_msg	;wreg free
  5315  001AF4  0012               	return	
  5316  001AF6                     __end_of_ToMainLow_sendmsg:
  5317                           	opt stack 0
  5318                           pclatu	equ	0xFFB
  5319                           pclath	equ	0xFFA
  5320                           tblptru	equ	0xFF8
  5321                           tblptrh	equ	0xFF7
  5322                           tblptrl	equ	0xFF6
  5323                           tablat	equ	0xFF5
  5324                           prodh	equ	0xFF4
  5325                           prodl	equ	0xFF3
  5326                           intcon	equ	0xFF2
  5327                           intcon2	equ	0xFF1
  5328                           postinc0	equ	0xFEE
  5329                           fsr0h	equ	0xFEA
  5330                           fsr0l	equ	0xFE9
  5331                           wreg	equ	0xFE8
  5332                           indf1	equ	0xFE7
  5333                           fsr1h	equ	0xFE2
  5334                           fsr1l	equ	0xFE1
  5335                           bsr	equ	0xFE0
  5336                           indf2	equ	0xFDF
  5337                           postinc2	equ	0xFDE
  5338                           postdec2	equ	0xFDD
  5339                           fsr2h	equ	0xFDA
  5340                           fsr2l	equ	0xFD9
  5341                           status	equ	0xFD8
  5342                           
  5343 ;; *************** function _ReadUSART *****************
  5344 ;; Defined at:
  5345 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;		None
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;  data            1    0[COMRAM] unsigned char 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1    wreg      unsigned char 
  5352 ;; Registers used:
  5353 ;;		wreg, status,2, status,0
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5359 ;;      Params:         0       0       0       0       0
  5360 ;;      Locals:         1       0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0
  5362 ;;      Totals:         1       0       0       0       0
  5363 ;;Total ram usage:        1 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:    5
  5366 ;; This function calls:
  5367 ;;		Nothing
  5368 ;; This function is called by:
  5369 ;;		_uart_recv_int_handler
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text35
  5374  001B62                     __ptext35:
  5375                           	opt stack 0
  5376  001B62                     _ReadUSART:
  5377                           	opt stack 18
  5378                           
  5379                           ;incstack = 0
  5380  001B62  0EF2               	movlw	242
  5381  001B64  164C               	andwf	_USART_Status,f,c
  5382  001B66  ACAB               	btfss	4011,6,c	;volatile
  5383  001B68  D003               	goto	i1l517
  5384  001B6A  904C               	bcf	_USART_Status,0,c
  5385  001B6C  B0AB               	btfsc	4011,0,c	;volatile
  5386  001B6E  804C               	bsf	_USART_Status,0,c
  5387  001B70                     i1l517:
  5388  001B70  B4AB               	btfsc	4011,2,c	;volatile
  5389  001B72  844C               	bsf	_USART_Status,2,c
  5390  001B74  B2AB               	btfsc	4011,1,c	;volatile
  5391  001B76  864C               	bsf	_USART_Status,3,c
  5392  001B78  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5393  001B7C  5001               	movf	ReadUSART@data,w,c
  5394  001B7E  0012               	return	
  5395  001B80                     __end_of_ReadUSART:
  5396                           	opt stack 0
  5397                           pclatu	equ	0xFFB
  5398                           pclath	equ	0xFFA
  5399                           tblptru	equ	0xFF8
  5400                           tblptrh	equ	0xFF7
  5401                           tblptrl	equ	0xFF6
  5402                           tablat	equ	0xFF5
  5403                           prodh	equ	0xFF4
  5404                           prodl	equ	0xFF3
  5405                           intcon	equ	0xFF2
  5406                           intcon2	equ	0xFF1
  5407                           postinc0	equ	0xFEE
  5408                           fsr0h	equ	0xFEA
  5409                           fsr0l	equ	0xFE9
  5410                           wreg	equ	0xFE8
  5411                           indf1	equ	0xFE7
  5412                           fsr1h	equ	0xFE2
  5413                           fsr1l	equ	0xFE1
  5414                           bsr	equ	0xFE0
  5415                           indf2	equ	0xFDF
  5416                           postinc2	equ	0xFDE
  5417                           postdec2	equ	0xFDD
  5418                           fsr2h	equ	0xFDA
  5419                           fsr2l	equ	0xFD9
  5420                           status	equ	0xFD8
  5421                           
  5422 ;; *************** function _timer1_int_handler *****************
  5423 ;; Defined at:
  5424 ;;		line 63 in file "../src/user_interrupts.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;		None
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;  result          2   26[COMRAM] unsigned int 
  5429 ;;  i               1   33[COMRAM] unsigned char 
  5430 ;;  reverse         1   32[COMRAM] unsigned char [1]
  5431 ;;  stop            1   31[COMRAM] unsigned char [1]
  5432 ;;  right           1   30[COMRAM] unsigned char [1]
  5433 ;;  left            1   29[COMRAM] unsigned char [1]
  5434 ;;  forward         1   28[COMRAM] unsigned char [1]
  5435 ;; Return value:  Size  Location     Type
  5436 ;;		None               void
  5437 ;; Registers used:
  5438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5444 ;;      Params:         0       0       0       0       0
  5445 ;;      Locals:         8       0       0       0       0
  5446 ;;      Temps:          0       0       0       0       0
  5447 ;;      Totals:         8       0       0       0       0
  5448 ;;Total ram usage:        8 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    8
  5451 ;; This function calls:
  5452 ;;		_ReadTimer1
  5453 ;;		_ToMainHigh_sendmsg
  5454 ;;		_WriteTimer1
  5455 ;;		___awmod
  5456 ;; This function is called by:
  5457 ;;		_InterruptHandlerLow
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text36
  5462  000BC2                     __ptext36:
  5463                           	opt stack 0
  5464  000BC2                     _timer1_int_handler:
  5465                           	opt stack 16
  5466                           
  5467                           ;user_interrupts.c: 64: unsigned int result;
  5468                           ;user_interrupts.c: 66: unsigned char i;
  5469                           ;user_interrupts.c: 67: unsigned char forward[1], left[1], right[1], stop[1], reverse[1]
      +                          ;
  5470                           ;user_interrupts.c: 68: forward[0] = 0x0A;
  5471                           
  5472                           ;incstack = 0
  5473  000BC2  0E0A               	movlw	10
  5474  000BC4  6E1D               	movwf	timer1_int_handler@forward,c
  5475                           
  5476                           ;user_interrupts.c: 69: left[0] = 0x0B;
  5477  000BC6  0E0B               	movlw	11
  5478  000BC8  6E1E               	movwf	timer1_int_handler@left,c
  5479                           
  5480                           ;user_interrupts.c: 70: right[0] = 0x0C;
  5481  000BCA  0E0C               	movlw	12
  5482  000BCC  6E1F               	movwf	timer1_int_handler@right,c
  5483                           
  5484                           ;user_interrupts.c: 71: stop[0] = 0x0D;
  5485  000BCE  0E0D               	movlw	13
  5486  000BD0  6E20               	movwf	timer1_int_handler@stop,c
  5487                           
  5488                           ;user_interrupts.c: 72: reverse[0] = 0x0E;
  5489  000BD2  0E0E               	movlw	14
  5490  000BD4  6E21               	movwf	timer1_int_handler@reverse,c
  5491                           
  5492                           ;user_interrupts.c: 76: result = ReadTimer1();
  5493  000BD6  ECDC  F00D         	call	_ReadTimer1	;wreg free
  5494  000BDA  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  5495  000BDE  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5496                           
  5497                           ;user_interrupts.c: 79: if (i % 5 == 0) {
  5498  000BE2  C022  F001         	movff	timer1_int_handler@i,___awmod@dividend
  5499  000BE6  6A02               	clrf	___awmod@dividend+1,c
  5500  000BE8  0E00               	movlw	0
  5501  000BEA  6E04               	movwf	___awmod@divisor+1,c
  5502  000BEC  0E05               	movlw	5
  5503  000BEE  6E03               	movwf	___awmod@divisor,c
  5504  000BF0  EC14  F009         	call	___awmod	;wreg free
  5505  000BF4  5002               	movf	?___awmod+1,w,c
  5506  000BF6  1001               	iorwf	?___awmod,w,c
  5507  000BF8  A4D8               	btfss	status,2,c
  5508  000BFA  D00A               	goto	i1l2726
  5509                           
  5510                           ;user_interrupts.c: 80: ToMainHigh_sendmsg(1, 45, forward);
  5511  000BFC  0E2D               	movlw	45
  5512  000BFE  6E17               	movwf	ToMainHigh_sendmsg@msgtype,c
  5513  000C00  0E00               	movlw	high timer1_int_handler@forward
  5514  000C02  6E19               	movwf	ToMainHigh_sendmsg@data+1,c
  5515  000C04  0E1D               	movlw	low timer1_int_handler@forward
  5516  000C06  6E18               	movwf	ToMainHigh_sendmsg@data,c
  5517  000C08  0E01               	movlw	1
  5518  000C0A  EC7B  F00D         	call	_ToMainHigh_sendmsg
  5519  000C0E  D05E               	goto	L4
  5520  000C10                     i1l2726:
  5521  000C10  C022  F001         	movff	timer1_int_handler@i,___awmod@dividend
  5522  000C14  6A02               	clrf	___awmod@dividend+1,c
  5523  000C16  0E00               	movlw	0
  5524  000C18  6E04               	movwf	___awmod@divisor+1,c
  5525  000C1A  0E05               	movlw	5
  5526  000C1C  6E03               	movwf	___awmod@divisor,c
  5527  000C1E  EC14  F009         	call	___awmod	;wreg free
  5528  000C22  0401               	decf	?___awmod,w,c
  5529  000C24  1002               	iorwf	?___awmod+1,w,c
  5530  000C26  A4D8               	btfss	status,2,c
  5531  000C28  D00A               	goto	i1l2732
  5532                           
  5533                           ;user_interrupts.c: 83: ToMainHigh_sendmsg(1, 45, left);
  5534  000C2A  0E2D               	movlw	45
  5535  000C2C  6E17               	movwf	ToMainHigh_sendmsg@msgtype,c
  5536  000C2E  0E00               	movlw	high timer1_int_handler@left
  5537  000C30  6E19               	movwf	ToMainHigh_sendmsg@data+1,c
  5538  000C32  0E1E               	movlw	low timer1_int_handler@left
  5539  000C34  6E18               	movwf	ToMainHigh_sendmsg@data,c
  5540  000C36  0E01               	movlw	1
  5541  000C38  EC7B  F00D         	call	_ToMainHigh_sendmsg
  5542  000C3C  D047               	goto	L4
  5543  000C3E                     i1l2732:
  5544  000C3E  C022  F001         	movff	timer1_int_handler@i,___awmod@dividend
  5545  000C42  6A02               	clrf	___awmod@dividend+1,c
  5546  000C44  0E00               	movlw	0
  5547  000C46  6E04               	movwf	___awmod@divisor+1,c
  5548  000C48  0E05               	movlw	5
  5549  000C4A  6E03               	movwf	___awmod@divisor,c
  5550  000C4C  EC14  F009         	call	___awmod	;wreg free
  5551  000C50  5001               	movf	?___awmod,w,c
  5552  000C52  0A02               	xorlw	2
  5553  000C54  1002               	iorwf	?___awmod+1,w,c
  5554  000C56  A4D8               	btfss	status,2,c
  5555  000C58  D00A               	goto	i1l2738
  5556                           
  5557                           ;user_interrupts.c: 86: ToMainHigh_sendmsg(1, 45, right);
  5558  000C5A  0E2D               	movlw	45
  5559  000C5C  6E17               	movwf	ToMainHigh_sendmsg@msgtype,c
  5560  000C5E  0E00               	movlw	high timer1_int_handler@right
  5561  000C60  6E19               	movwf	ToMainHigh_sendmsg@data+1,c
  5562  000C62  0E1F               	movlw	low timer1_int_handler@right
  5563  000C64  6E18               	movwf	ToMainHigh_sendmsg@data,c
  5564  000C66  0E01               	movlw	1
  5565  000C68  EC7B  F00D         	call	_ToMainHigh_sendmsg
  5566  000C6C  D02F               	goto	L4
  5567  000C6E                     i1l2738:
  5568  000C6E  C022  F001         	movff	timer1_int_handler@i,___awmod@dividend
  5569  000C72  6A02               	clrf	___awmod@dividend+1,c
  5570  000C74  0E00               	movlw	0
  5571  000C76  6E04               	movwf	___awmod@divisor+1,c
  5572  000C78  0E05               	movlw	5
  5573  000C7A  6E03               	movwf	___awmod@divisor,c
  5574  000C7C  EC14  F009         	call	___awmod	;wreg free
  5575  000C80  5001               	movf	?___awmod,w,c
  5576  000C82  0A03               	xorlw	3
  5577  000C84  1002               	iorwf	?___awmod+1,w,c
  5578  000C86  A4D8               	btfss	status,2,c
  5579  000C88  D00A               	goto	i1l2744
  5580                           
  5581                           ;user_interrupts.c: 89: ToMainHigh_sendmsg(1, 45, stop);
  5582  000C8A  0E2D               	movlw	45
  5583  000C8C  6E17               	movwf	ToMainHigh_sendmsg@msgtype,c
  5584  000C8E  0E00               	movlw	high timer1_int_handler@stop
  5585  000C90  6E19               	movwf	ToMainHigh_sendmsg@data+1,c
  5586  000C92  0E20               	movlw	low timer1_int_handler@stop
  5587  000C94  6E18               	movwf	ToMainHigh_sendmsg@data,c
  5588  000C96  0E01               	movlw	1
  5589  000C98  EC7B  F00D         	call	_ToMainHigh_sendmsg
  5590  000C9C  D017               	goto	L4
  5591  000C9E                     i1l2744:
  5592  000C9E  C022  F001         	movff	timer1_int_handler@i,___awmod@dividend
  5593  000CA2  6A02               	clrf	___awmod@dividend+1,c
  5594  000CA4  0E00               	movlw	0
  5595  000CA6  6E04               	movwf	___awmod@divisor+1,c
  5596  000CA8  0E05               	movlw	5
  5597  000CAA  6E03               	movwf	___awmod@divisor,c
  5598  000CAC  EC14  F009         	call	___awmod	;wreg free
  5599  000CB0  5001               	movf	?___awmod,w,c
  5600  000CB2  0A04               	xorlw	4
  5601  000CB4  1002               	iorwf	?___awmod+1,w,c
  5602  000CB6  A4D8               	btfss	status,2,c
  5603  000CB8  D00B               	goto	i1l2750
  5604                           
  5605                           ;user_interrupts.c: 92: ToMainHigh_sendmsg(1, 45, reverse);
  5606  000CBA  0E2D               	movlw	45
  5607  000CBC  6E17               	movwf	ToMainHigh_sendmsg@msgtype,c
  5608  000CBE  0E00               	movlw	high timer1_int_handler@reverse
  5609  000CC0  6E19               	movwf	ToMainHigh_sendmsg@data+1,c
  5610  000CC2  0E21               	movlw	low timer1_int_handler@reverse
  5611  000CC4  6E18               	movwf	ToMainHigh_sendmsg@data,c
  5612  000CC6  0E01               	movlw	1
  5613  000CC8  EC7B  F00D         	call	_ToMainHigh_sendmsg
  5614  000CCC                     L4:
  5615                           
  5616                           ;user_interrupts.c: 93: i++;
  5617  000CCC  2A22               	incf	timer1_int_handler@i,f,c
  5618                           
  5619                           ;user_interrupts.c: 94: } else {
  5620  000CCE  D002               	goto	i1l2752
  5621  000CD0                     i1l2750:
  5622                           
  5623                           ;user_interrupts.c: 95: i = 0;
  5624  000CD0  0E00               	movlw	0
  5625  000CD2  6E22               	movwf	timer1_int_handler@i,c
  5626  000CD4                     i1l2752:
  5627                           
  5628                           ;user_interrupts.c: 96: }
  5629                           ;user_interrupts.c: 99: WriteTimer1(0);
  5630  000CD4  0E00               	movlw	0
  5631  000CD6  6E02               	movwf	WriteTimer1@timer1+1,c
  5632  000CD8  0E00               	movlw	0
  5633  000CDA  6E01               	movwf	WriteTimer1@timer1,c
  5634  000CDC  ECD3  F00D         	call	_WriteTimer1	;wreg free
  5635  000CE0  0012               	return	
  5636  000CE2                     __end_of_timer1_int_handler:
  5637                           	opt stack 0
  5638                           pclatu	equ	0xFFB
  5639                           pclath	equ	0xFFA
  5640                           tblptru	equ	0xFF8
  5641                           tblptrh	equ	0xFF7
  5642                           tblptrl	equ	0xFF6
  5643                           tablat	equ	0xFF5
  5644                           prodh	equ	0xFF4
  5645                           prodl	equ	0xFF3
  5646                           intcon	equ	0xFF2
  5647                           intcon2	equ	0xFF1
  5648                           postinc0	equ	0xFEE
  5649                           fsr0h	equ	0xFEA
  5650                           fsr0l	equ	0xFE9
  5651                           wreg	equ	0xFE8
  5652                           indf1	equ	0xFE7
  5653                           fsr1h	equ	0xFE2
  5654                           fsr1l	equ	0xFE1
  5655                           bsr	equ	0xFE0
  5656                           indf2	equ	0xFDF
  5657                           postinc2	equ	0xFDE
  5658                           postdec2	equ	0xFDD
  5659                           fsr2h	equ	0xFDA
  5660                           fsr2l	equ	0xFD9
  5661                           status	equ	0xFD8
  5662                           
  5663 ;; *************** function ___awmod *****************
  5664 ;; Defined at:
  5665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;  dividend        2    0[COMRAM] int 
  5668 ;;  divisor         2    2[COMRAM] int 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  sign            1    5[COMRAM] unsigned char 
  5671 ;;  counter         1    4[COMRAM] unsigned char 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  2    0[COMRAM] int 
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0, prodl
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5681 ;;      Params:         4       0       0       0       0
  5682 ;;      Locals:         2       0       0       0       0
  5683 ;;      Temps:          0       0       0       0       0
  5684 ;;      Totals:         6       0       0       0       0
  5685 ;;Total ram usage:        6 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    5
  5688 ;; This function calls:
  5689 ;;		Nothing
  5690 ;; This function is called by:
  5691 ;;		_timer1_int_handler
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694                           
  5695                           	psect	text37
  5696  001228                     __ptext37:
  5697                           	opt stack 0
  5698  001228                     ___awmod:
  5699                           	opt stack 18
  5700                           
  5701                           ;incstack = 0
  5702  001228  0E00               	movlw	0
  5703  00122A  6E06               	movwf	___awmod@sign,c
  5704  00122C  5002               	movf	___awmod@dividend+1,w,c
  5705  00122E  0A80               	xorlw	128
  5706  001230  6EF3               	movwf	prodl,c
  5707  001232  0E80               	movlw	128
  5708  001234  5CF3               	subwf	prodl,w,c
  5709  001236  0E00               	movlw	0
  5710  001238  B4D8               	btfsc	status,2,c
  5711  00123A  5C01               	subwf	___awmod@dividend,w,c
  5712  00123C  B0D8               	btfsc	status,0,c
  5713  00123E  D006               	goto	i1l1414
  5714  001240  6C01               	negf	___awmod@dividend,c
  5715  001242  1E02               	comf	___awmod@dividend+1,f,c
  5716  001244  B0D8               	btfsc	status,0,c
  5717  001246  2A02               	incf	___awmod@dividend+1,f,c
  5718  001248  0E01               	movlw	1
  5719  00124A  6E06               	movwf	___awmod@sign,c
  5720  00124C                     i1l1414:
  5721  00124C  5004               	movf	___awmod@divisor+1,w,c
  5722  00124E  0A80               	xorlw	128
  5723  001250  6EF3               	movwf	prodl,c
  5724  001252  0E80               	movlw	128
  5725  001254  5CF3               	subwf	prodl,w,c
  5726  001256  0E00               	movlw	0
  5727  001258  B4D8               	btfsc	status,2,c
  5728  00125A  5C03               	subwf	___awmod@divisor,w,c
  5729  00125C  B0D8               	btfsc	status,0,c
  5730  00125E  D004               	goto	i1l1418
  5731  001260  6C03               	negf	___awmod@divisor,c
  5732  001262  1E04               	comf	___awmod@divisor+1,f,c
  5733  001264  B0D8               	btfsc	status,0,c
  5734  001266  2A04               	incf	___awmod@divisor+1,f,c
  5735  001268                     i1l1418:
  5736  001268  5004               	movf	___awmod@divisor+1,w,c
  5737  00126A  1003               	iorwf	___awmod@divisor,w,c
  5738  00126C  B4D8               	btfsc	status,2,c
  5739  00126E  D018               	goto	i1l1434
  5740  001270  0E01               	movlw	1
  5741  001272  6E05               	movwf	___awmod@counter,c
  5742  001274  D004               	goto	i1l1424
  5743  001276                     i1l1422:
  5744  001276  90D8               	bcf	status,0,c
  5745  001278  3603               	rlcf	___awmod@divisor,f,c
  5746  00127A  3604               	rlcf	___awmod@divisor+1,f,c
  5747  00127C  2A05               	incf	___awmod@counter,f,c
  5748  00127E                     i1l1424:
  5749  00127E  AE04               	btfss	___awmod@divisor+1,7,c
  5750  001280  D7FA               	goto	i1l1422
  5751  001282                     i1l1426:
  5752  001282  5003               	movf	___awmod@divisor,w,c
  5753  001284  5C01               	subwf	___awmod@dividend,w,c
  5754  001286  5004               	movf	___awmod@divisor+1,w,c
  5755  001288  5802               	subwfb	___awmod@dividend+1,w,c
  5756  00128A  A0D8               	btfss	status,0,c
  5757  00128C  D004               	goto	i1l1430
  5758  00128E  5003               	movf	___awmod@divisor,w,c
  5759  001290  5E01               	subwf	___awmod@dividend,f,c
  5760  001292  5004               	movf	___awmod@divisor+1,w,c
  5761  001294  5A02               	subwfb	___awmod@dividend+1,f,c
  5762  001296                     i1l1430:
  5763  001296  90D8               	bcf	status,0,c
  5764  001298  3204               	rrcf	___awmod@divisor+1,f,c
  5765  00129A  3203               	rrcf	___awmod@divisor,f,c
  5766  00129C  2E05               	decfsz	___awmod@counter,f,c
  5767  00129E  D7F1               	goto	i1l1426
  5768  0012A0                     i1l1434:
  5769  0012A0  5006               	movf	___awmod@sign,w,c
  5770  0012A2  B4D8               	btfsc	status,2,c
  5771  0012A4  D004               	goto	i1l1438
  5772  0012A6  6C01               	negf	___awmod@dividend,c
  5773  0012A8  1E02               	comf	___awmod@dividend+1,f,c
  5774  0012AA  B0D8               	btfsc	status,0,c
  5775  0012AC  2A02               	incf	___awmod@dividend+1,f,c
  5776  0012AE                     i1l1438:
  5777  0012AE  C001  F001         	movff	___awmod@dividend,?___awmod
  5778  0012B2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5779  0012B6  0012               	return	
  5780  0012B8                     __end_of___awmod:
  5781                           	opt stack 0
  5782                           pclatu	equ	0xFFB
  5783                           pclath	equ	0xFFA
  5784                           tblptru	equ	0xFF8
  5785                           tblptrh	equ	0xFF7
  5786                           tblptrl	equ	0xFF6
  5787                           tablat	equ	0xFF5
  5788                           prodh	equ	0xFF4
  5789                           prodl	equ	0xFF3
  5790                           intcon	equ	0xFF2
  5791                           intcon2	equ	0xFF1
  5792                           postinc0	equ	0xFEE
  5793                           fsr0h	equ	0xFEA
  5794                           fsr0l	equ	0xFE9
  5795                           wreg	equ	0xFE8
  5796                           indf1	equ	0xFE7
  5797                           fsr1h	equ	0xFE2
  5798                           fsr1l	equ	0xFE1
  5799                           bsr	equ	0xFE0
  5800                           indf2	equ	0xFDF
  5801                           postinc2	equ	0xFDE
  5802                           postdec2	equ	0xFDD
  5803                           fsr2h	equ	0xFDA
  5804                           fsr2l	equ	0xFD9
  5805                           status	equ	0xFD8
  5806                           
  5807 ;; *************** function _WriteTimer1 *****************
  5808 ;; Defined at:
  5809 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t1write.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  timer1          2    0[COMRAM] unsigned int 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  timer           2    2[COMRAM] struct Timers
  5814 ;; Return value:  Size  Location     Type
  5815 ;;		None               void
  5816 ;; Registers used:
  5817 ;;		None
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5823 ;;      Params:         2       0       0       0       0
  5824 ;;      Locals:         2       0       0       0       0
  5825 ;;      Temps:          0       0       0       0       0
  5826 ;;      Totals:         4       0       0       0       0
  5827 ;;Total ram usage:        4 bytes
  5828 ;; Hardware stack levels used:    1
  5829 ;; Hardware stack levels required when called:    5
  5830 ;; This function calls:
  5831 ;;		Nothing
  5832 ;; This function is called by:
  5833 ;;		_timer1_int_handler
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           	psect	text38
  5838  001BA6                     __ptext38:
  5839                           	opt stack 0
  5840  001BA6                     _WriteTimer1:
  5841                           	opt stack 18
  5842                           
  5843                           ;incstack = 0
  5844  001BA6  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5845  001BAA  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5846  001BAE  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5847  001BB2  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5848  001BB6  0012               	return	
  5849  001BB8                     __end_of_WriteTimer1:
  5850                           	opt stack 0
  5851                           pclatu	equ	0xFFB
  5852                           pclath	equ	0xFFA
  5853                           tblptru	equ	0xFF8
  5854                           tblptrh	equ	0xFF7
  5855                           tblptrl	equ	0xFF6
  5856                           tablat	equ	0xFF5
  5857                           prodh	equ	0xFF4
  5858                           prodl	equ	0xFF3
  5859                           intcon	equ	0xFF2
  5860                           intcon2	equ	0xFF1
  5861                           postinc0	equ	0xFEE
  5862                           fsr0h	equ	0xFEA
  5863                           fsr0l	equ	0xFE9
  5864                           wreg	equ	0xFE8
  5865                           indf1	equ	0xFE7
  5866                           fsr1h	equ	0xFE2
  5867                           fsr1l	equ	0xFE1
  5868                           bsr	equ	0xFE0
  5869                           indf2	equ	0xFDF
  5870                           postinc2	equ	0xFDE
  5871                           postdec2	equ	0xFDD
  5872                           fsr2h	equ	0xFDA
  5873                           fsr2l	equ	0xFD9
  5874                           status	equ	0xFD8
  5875                           
  5876 ;; *************** function _ToMainHigh_sendmsg *****************
  5877 ;; Defined at:
  5878 ;;		line 126 in file "../src/messages.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  length          1    wreg     unsigned char 
  5881 ;;  msgtype         1   22[COMRAM] unsigned char 
  5882 ;;  data            2   23[COMRAM] PTR void 
  5883 ;;		 -> timer1_int_handler@reverse(1), timer1_int_handler@stop(1), timer1_int_handler@right(1), timer1_int_handler@left(
      +1), 
  5884 ;;		 -> timer1_int_handler@forward(1), timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@rig
      +ht(1), 
  5885 ;;		 -> timer0_int_handler@left(1), timer0_int_handler@forward(1), NULL(0), i2c_int_handler@error_buf(3), 
  5886 ;;		 -> main@ic(28), 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  length          1   25[COMRAM] unsigned char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      char 
  5891 ;; Registers used:
  5892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5898 ;;      Params:         3       0       0       0       0
  5899 ;;      Locals:         1       0       0       0       0
  5900 ;;      Temps:          0       0       0       0       0
  5901 ;;      Totals:         4       0       0       0       0
  5902 ;;Total ram usage:        4 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    7
  5905 ;; This function calls:
  5906 ;;		i1_send_msg
  5907 ;; This function is called by:
  5908 ;;		_timer1_int_handler
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text39
  5913  001AF6                     __ptext39:
  5914                           	opt stack 0
  5915  001AF6                     _ToMainHigh_sendmsg:
  5916                           	opt stack 16
  5917                           
  5918                           ;incstack = 0
  5919                           ;ToMainHigh_sendmsg@length stored from wreg
  5920  001AF6  6E1A               	movwf	ToMainHigh_sendmsg@length,c
  5921                           
  5922                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  5923                           ;	Return value of _ToMainHigh_sendmsg is never used
  5924  001AF8  0100               	movlb	0	; () banked
  5925  001AFA  0E00               	movlw	high _ToMainHigh_MQ
  5926  001AFC  6E0C               	movwf	i1send_msg@qptr+1,c
  5927  001AFE  0100               	movlb	0	; () banked
  5928  001B00  0E80               	movlw	low _ToMainHigh_MQ
  5929  001B02  6E0B               	movwf	i1send_msg@qptr,c
  5930  001B04  C01A  F00D         	movff	ToMainHigh_sendmsg@length,i1send_msg@length
  5931  001B08  C017  F00E         	movff	ToMainHigh_sendmsg@msgtype,i1send_msg@msgtype
  5932  001B0C  C019  F010         	movff	ToMainHigh_sendmsg@data+1,i1send_msg@data+1
  5933  001B10  C018  F00F         	movff	ToMainHigh_sendmsg@data,i1send_msg@data
  5934  001B14  EC71  F008         	call	i1_send_msg	;wreg free
  5935  001B18  0012               	return	
  5936  001B1A                     __end_of_ToMainHigh_sendmsg:
  5937                           	opt stack 0
  5938                           pclatu	equ	0xFFB
  5939                           pclath	equ	0xFFA
  5940                           tblptru	equ	0xFF8
  5941                           tblptrh	equ	0xFF7
  5942                           tblptrl	equ	0xFF6
  5943                           tablat	equ	0xFF5
  5944                           prodh	equ	0xFF4
  5945                           prodl	equ	0xFF3
  5946                           intcon	equ	0xFF2
  5947                           intcon2	equ	0xFF1
  5948                           postinc0	equ	0xFEE
  5949                           fsr0h	equ	0xFEA
  5950                           fsr0l	equ	0xFE9
  5951                           wreg	equ	0xFE8
  5952                           indf1	equ	0xFE7
  5953                           fsr1h	equ	0xFE2
  5954                           fsr1l	equ	0xFE1
  5955                           bsr	equ	0xFE0
  5956                           indf2	equ	0xFDF
  5957                           postinc2	equ	0xFDE
  5958                           postdec2	equ	0xFDD
  5959                           fsr2h	equ	0xFDA
  5960                           fsr2l	equ	0xFD9
  5961                           status	equ	0xFD8
  5962                           
  5963 ;; *************** function i1_send_msg *****************
  5964 ;; Defined at:
  5965 ;;		line 24 in file "../src/messages.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5968 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5969 ;;  length          1   12[COMRAM] unsigned char 
  5970 ;;  msgtype         1   13[COMRAM] unsigned char 
  5971 ;;  data            2   14[COMRAM] PTR void 
  5972 ;;		 -> timer1_int_handler@reverse(1), timer1_int_handler@stop(1), timer1_int_handler@right(1), timer1_int_handler@left(
      +1), 
  5973 ;;		 -> timer1_int_handler@forward(1), timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@rig
      +ht(1), 
  5974 ;;		 -> timer0_int_handler@left(1), timer0_int_handler@forward(1), NULL(0), i2c_int_handler@error_buf(3), 
  5975 ;;		 -> main@msgbuffer(11), main@t1thread_data(2), main@ic(28), main@uc(18), 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5978 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5979 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5980 ;;  send_msg        2   17[COMRAM] unsigned int 
  5981 ;;  send_msg        1   19[COMRAM] unsigned char 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  1    wreg      char 
  5984 ;; Registers used:
  5985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5991 ;;      Params:         6       0       0       0       0
  5992 ;;      Locals:         5       0       0       0       0
  5993 ;;      Temps:          1       0       0       0       0
  5994 ;;      Totals:        12       0       0       0       0
  5995 ;;Total ram usage:       12 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:    6
  5998 ;; This function calls:
  5999 ;;		i1_memcpy
  6000 ;; This function is called by:
  6001 ;;		_ToMainLow_sendmsg
  6002 ;;		_ToMainHigh_sendmsg
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text40
  6007  0010E2                     __ptext40:
  6008                           	opt stack 0
  6009  0010E2                     i1_send_msg:
  6010                           	opt stack 16
  6011                           
  6012                           ;messages.c: 25: unsigned char slot;
  6013                           ;messages.c: 27: msg *qmsg;
  6014                           ;messages.c: 28: size_t tlength = length;
  6015                           
  6016                           ;incstack = 0
  6017  0010E2  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6018  0010E6  6A13               	clrf	i1send_msg@tlength+1,c
  6019                           
  6020                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6021  0010E8  EE20 F034          	lfsr	2,52
  6022  0010EC  500B               	movf	i1send_msg@qptr,w,c
  6023  0010EE  26D9               	addwf	fsr2l,f,c
  6024  0010F0  500C               	movf	i1send_msg@qptr+1,w,c
  6025  0010F2  22DA               	addwfc	fsr2h,f,c
  6026  0010F4  50DF               	movf	indf2,w,c
  6027  0010F6  6E14               	movwf	i1send_msg@slot,c
  6028                           
  6029                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6030  0010F8  5014               	movf	i1send_msg@slot,w,c
  6031  0010FA  0D0D               	mullw	13
  6032  0010FC  50F3               	movf	prodl,w,c
  6033  0010FE  240B               	addwf	i1send_msg@qptr,w,c
  6034  001100  6E15               	movwf	i1send_msg@qmsg,c
  6035  001102  50F4               	movf	prodh,w,c
  6036  001104  200C               	addwfc	i1send_msg@qptr+1,w,c
  6037  001106  6E16               	movwf	i1send_msg@qmsg+1,c
  6038                           
  6039                           ;messages.c: 41: if (qmsg->full != 0) {
  6040  001108  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6041  00110C  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6042  001110  50DF               	movf	indf2,w,c
  6043  001112  B4D8               	btfsc	status,2,c
  6044  001114  D002               	goto	i1l2242
  6045                           
  6046                           ;messages.c: 42: return (-1);
  6047  001116  0EFF               	movlw	255
  6048  001118  0012               	return	
  6049  00111A                     i1l2242:
  6050                           
  6051                           ;messages.c: 43: }
  6052                           ;messages.c: 46: qmsg->length = length;
  6053  00111A  EE20 F001          	lfsr	2,1
  6054  00111E  5015               	movf	i1send_msg@qmsg,w,c
  6055  001120  26D9               	addwf	fsr2l,f,c
  6056  001122  5016               	movf	i1send_msg@qmsg+1,w,c
  6057  001124  22DA               	addwfc	fsr2h,f,c
  6058  001126  C00D  FFDF         	movff	i1send_msg@length,indf2
  6059                           
  6060                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6061  00112A  EE20 F002          	lfsr	2,2
  6062  00112E  5015               	movf	i1send_msg@qmsg,w,c
  6063  001130  26D9               	addwf	fsr2l,f,c
  6064  001132  5016               	movf	i1send_msg@qmsg+1,w,c
  6065  001134  22DA               	addwfc	fsr2h,f,c
  6066  001136  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6067                           
  6068                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6069  00113A  0E03               	movlw	3
  6070  00113C  2415               	addwf	i1send_msg@qmsg,w,c
  6071  00113E  6E01               	movwf	i1memcpy@d1,c
  6072  001140  0E00               	movlw	0
  6073  001142  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6074  001144  6E02               	movwf	i1memcpy@d1+1,c
  6075  001146  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6076  00114A  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6077  00114E  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6078  001152  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6079  001156  ECBC  F00B         	call	i1_memcpy	;wreg free
  6080                           
  6081                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6082  00115A  EE20 F034          	lfsr	2,52
  6083  00115E  500B               	movf	i1send_msg@qptr,w,c
  6084  001160  26D9               	addwf	fsr2l,f,c
  6085  001162  500C               	movf	i1send_msg@qptr+1,w,c
  6086  001164  22DA               	addwfc	fsr2h,f,c
  6087  001166  EE10 F034          	lfsr	1,52
  6088  00116A  500B               	movf	i1send_msg@qptr,w,c
  6089  00116C  26E1               	addwf	fsr1l,f,c
  6090  00116E  500C               	movf	i1send_msg@qptr+1,w,c
  6091  001170  22E2               	addwfc	fsr1h,f,c
  6092  001172  50E7               	movf	indf1,w,c
  6093  001174  6E11               	movwf	??i1_send_msg& (0+255),c
  6094  001176  2811               	incf	??i1_send_msg,w,c
  6095  001178  0B03               	andlw	3
  6096  00117A  6EDF               	movwf	indf2,c
  6097                           
  6098                           ;messages.c: 59: qmsg->full = 1;
  6099  00117C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6100  001180  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6101  001184  0E01               	movlw	1
  6102  001186  6EDF               	movwf	indf2,c
  6103                           
  6104                           ;messages.c: 60: return (1);
  6105  001188  0E01               	movlw	1
  6106  00118A  0012               	return	
  6107  00118C                     __end_ofi1_send_msg:
  6108                           	opt stack 0
  6109                           pclatu	equ	0xFFB
  6110                           pclath	equ	0xFFA
  6111                           tblptru	equ	0xFF8
  6112                           tblptrh	equ	0xFF7
  6113                           tblptrl	equ	0xFF6
  6114                           tablat	equ	0xFF5
  6115                           prodh	equ	0xFF4
  6116                           prodl	equ	0xFF3
  6117                           intcon	equ	0xFF2
  6118                           intcon2	equ	0xFF1
  6119                           postinc0	equ	0xFEE
  6120                           fsr0h	equ	0xFEA
  6121                           fsr0l	equ	0xFE9
  6122                           wreg	equ	0xFE8
  6123                           indf1	equ	0xFE7
  6124                           fsr1h	equ	0xFE2
  6125                           fsr1l	equ	0xFE1
  6126                           bsr	equ	0xFE0
  6127                           indf2	equ	0xFDF
  6128                           postinc2	equ	0xFDE
  6129                           postdec2	equ	0xFDD
  6130                           fsr2h	equ	0xFDA
  6131                           fsr2l	equ	0xFD9
  6132                           status	equ	0xFD8
  6133                           
  6134 ;; *************** function i1_memcpy *****************
  6135 ;; Defined at:
  6136 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  d1              2    0[COMRAM] PTR void 
  6139 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6140 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6141 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(18), 
  6142 ;;  s1              2    2[COMRAM] PTR const void 
  6143 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6144 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6145 ;;		 -> timer1_int_handler@reverse(1), timer1_int_handler@stop(1), timer1_int_handler@right(1), timer1_int_handler@left(
      +1), 
  6146 ;;		 -> timer1_int_handler@forward(1), timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@rig
      +ht(1), 
  6147 ;;		 -> timer0_int_handler@left(1), timer0_int_handler@forward(1), NULL(0), i2c_int_handler@error_buf(3), 
  6148 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6149 ;;		 -> main@msgbuffer(11), main@t1thread_data(2), main@ic(28), main@uc(18), 
  6150 ;;  n               2    4[COMRAM] unsigned int 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6153 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6154 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6155 ;;		 -> timer1_int_handler@reverse(1), timer1_int_handler@stop(1), timer1_int_handler@right(1), timer1_int_handler@left(
      +1), 
  6156 ;;		 -> timer1_int_handler@forward(1), timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@rig
      +ht(1), 
  6157 ;;		 -> timer0_int_handler@left(1), timer0_int_handler@forward(1), NULL(0), i2c_int_handler@error_buf(3), 
  6158 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6159 ;;		 -> main@msgbuffer(11), main@t1thread_data(2), main@ic(28), main@uc(18), 
  6160 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6161 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6162 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6163 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(18), 
  6164 ;; Return value:  Size  Location     Type
  6165 ;;                  2    0[COMRAM] PTR void 
  6166 ;; Registers used:
  6167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6173 ;;      Params:         6       0       0       0       0
  6174 ;;      Locals:         4       0       0       0       0
  6175 ;;      Temps:          0       0       0       0       0
  6176 ;;      Totals:        10       0       0       0       0
  6177 ;;Total ram usage:       10 bytes
  6178 ;; Hardware stack levels used:    1
  6179 ;; Hardware stack levels required when called:    5
  6180 ;; This function calls:
  6181 ;;		Nothing
  6182 ;; This function is called by:
  6183 ;;		i1_send_msg
  6184 ;;		i1_recv_msg
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           	psect	text41
  6189  001778                     __ptext41:
  6190                           	opt stack 0
  6191  001778                     i1_memcpy:
  6192                           	opt stack 16
  6193                           
  6194                           ;incstack = 0
  6195  001778  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6196  00177C  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6197  001780  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6198  001784  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6199  001788  D00E               	goto	i1l2170
  6200  00178A                     i1l2164:
  6201  00178A  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6202  00178E  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6203  001792  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6204  001796  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6205  00179A  CFDF FFE7          	movff	indf2,indf1
  6206  00179E  4A09               	infsnz	i1memcpy@s,f,c
  6207  0017A0  2A0A               	incf	i1memcpy@s+1,f,c
  6208  0017A2  4A07               	infsnz	i1memcpy@d,f,c
  6209  0017A4  2A08               	incf	i1memcpy@d+1,f,c
  6210  0017A6                     i1l2170:
  6211  0017A6  0605               	decf	i1memcpy@n,f,c
  6212  0017A8  A0D8               	btfss	status,0,c
  6213  0017AA  0606               	decf	i1memcpy@n+1,f,c
  6214  0017AC  2805               	incf	i1memcpy@n& (0+255),w,c
  6215  0017AE  B4D8               	btfsc	status,2,c
  6216  0017B0  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6217  0017B2  B4D8               	btfsc	status,2,c
  6218                           
  6219                           ;	Return value of i1_memcpy is never used
  6220  0017B4  0012               	return	
  6221  0017B6  D7E9               	goto	i1l2164
  6222  0017B8                     __end_ofi1_memcpy:
  6223                           	opt stack 0
  6224                           pclatu	equ	0xFFB
  6225                           pclath	equ	0xFFA
  6226                           tblptru	equ	0xFF8
  6227                           tblptrh	equ	0xFF7
  6228                           tblptrl	equ	0xFF6
  6229                           tablat	equ	0xFF5
  6230                           prodh	equ	0xFF4
  6231                           prodl	equ	0xFF3
  6232                           intcon	equ	0xFF2
  6233                           intcon2	equ	0xFF1
  6234                           postinc0	equ	0xFEE
  6235                           fsr0h	equ	0xFEA
  6236                           fsr0l	equ	0xFE9
  6237                           wreg	equ	0xFE8
  6238                           indf1	equ	0xFE7
  6239                           fsr1h	equ	0xFE2
  6240                           fsr1l	equ	0xFE1
  6241                           bsr	equ	0xFE0
  6242                           indf2	equ	0xFDF
  6243                           postinc2	equ	0xFDE
  6244                           postdec2	equ	0xFDD
  6245                           fsr2h	equ	0xFDA
  6246                           fsr2l	equ	0xFD9
  6247                           status	equ	0xFD8
  6248                           
  6249 ;; *************** function _ReadTimer1 *****************
  6250 ;; Defined at:
  6251 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t1read.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;		None
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  timer           2    2[COMRAM] struct Timers
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  2    0[COMRAM] unsigned int 
  6258 ;; Registers used:
  6259 ;;		None
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6265 ;;      Params:         2       0       0       0       0
  6266 ;;      Locals:         2       0       0       0       0
  6267 ;;      Temps:          0       0       0       0       0
  6268 ;;      Totals:         4       0       0       0       0
  6269 ;;Total ram usage:        4 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    5
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_timer1_int_handler
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text42
  6280  001BB8                     __ptext42:
  6281                           	opt stack 0
  6282  001BB8                     _ReadTimer1:
  6283                           	opt stack 18
  6284                           
  6285                           ;incstack = 0
  6286  001BB8  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6287  001BBC  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6288  001BC0  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6289  001BC4  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6290  001BC8  0012               	return	
  6291  001BCA                     __end_of_ReadTimer1:
  6292                           	opt stack 0
  6293                           pclatu	equ	0xFFB
  6294                           pclath	equ	0xFFA
  6295                           tblptru	equ	0xFF8
  6296                           tblptrh	equ	0xFF7
  6297                           tblptrl	equ	0xFF6
  6298                           tablat	equ	0xFF5
  6299                           prodh	equ	0xFF4
  6300                           prodl	equ	0xFF3
  6301                           intcon	equ	0xFF2
  6302                           intcon2	equ	0xFF1
  6303                           postinc0	equ	0xFEE
  6304                           fsr0h	equ	0xFEA
  6305                           fsr0l	equ	0xFE9
  6306                           wreg	equ	0xFE8
  6307                           indf1	equ	0xFE7
  6308                           fsr1h	equ	0xFE2
  6309                           fsr1l	equ	0xFE1
  6310                           bsr	equ	0xFE0
  6311                           indf2	equ	0xFDF
  6312                           postinc2	equ	0xFDE
  6313                           postdec2	equ	0xFDD
  6314                           fsr2h	equ	0xFDA
  6315                           fsr2l	equ	0xFD9
  6316                           status	equ	0xFD8
  6317                           
  6318 ;; *************** function _InterruptHandlerHigh *****************
  6319 ;; Defined at:
  6320 ;;		line 85 in file "../src/interrupts.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;		None
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;		None
  6325 ;; Return value:  Size  Location     Type
  6326 ;;		None               void
  6327 ;; Registers used:
  6328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6334 ;;      Params:         0       0       0       0       0
  6335 ;;      Locals:         0       0       0       0       0
  6336 ;;      Temps:          0      14       0       0       0
  6337 ;;      Totals:         0      14       0       0       0
  6338 ;;Total ram usage:       14 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    4
  6341 ;; This function calls:
  6342 ;;		_SleepIfOkay
  6343 ;;		_i2c_int_handler
  6344 ;;		_timer0_int_handler
  6345 ;; This function is called by:
  6346 ;;		Interrupt level 2
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	intcode
  6351  000008                     __pintcode:
  6352                           	opt stack 0
  6353  000008                     _InterruptHandlerHigh:
  6354                           	opt stack 16
  6355                           
  6356                           ;incstack = 0
  6357  000008  CFFA F0C5          	movff	pclath,??_InterruptHandlerHigh
  6358  00000C  CFFB F0C6          	movff	pclatu,??_InterruptHandlerHigh+1
  6359  000010  CFE9 F0C7          	movff	fsr0l,??_InterruptHandlerHigh+2
  6360  000014  EFE5  F009         	goto	int_func
  6361                           pclatu	equ	0xFFB
  6362                           pclath	equ	0xFFA
  6363                           tblptru	equ	0xFF8
  6364                           tblptrh	equ	0xFF7
  6365                           tblptrl	equ	0xFF6
  6366                           tablat	equ	0xFF5
  6367                           prodh	equ	0xFF4
  6368                           prodl	equ	0xFF3
  6369                           intcon	equ	0xFF2
  6370                           intcon2	equ	0xFF1
  6371                           postinc0	equ	0xFEE
  6372                           fsr0h	equ	0xFEA
  6373                           fsr0l	equ	0xFE9
  6374                           wreg	equ	0xFE8
  6375                           indf1	equ	0xFE7
  6376                           fsr1h	equ	0xFE2
  6377                           fsr1l	equ	0xFE1
  6378                           bsr	equ	0xFE0
  6379                           indf2	equ	0xFDF
  6380                           postinc2	equ	0xFDE
  6381                           postdec2	equ	0xFDD
  6382                           fsr2h	equ	0xFDA
  6383                           fsr2l	equ	0xFD9
  6384                           status	equ	0xFD8
  6385                           
  6386                           	psect	intcode_body
  6387  0013CA                     __pintcode_body:
  6388                           	opt stack 16
  6389  0013CA                     int_func:
  6390                           	opt stack 16
  6391  0013CA  CFEA F0C8          	movff	fsr0h,??_InterruptHandlerHigh+3
  6392  0013CE  CFE1 F0C9          	movff	fsr1l,??_InterruptHandlerHigh+4
  6393  0013D2  CFE2 F0CA          	movff	fsr1h,??_InterruptHandlerHigh+5
  6394  0013D6  CFD9 F0CB          	movff	fsr2l,??_InterruptHandlerHigh+6
  6395  0013DA  CFDA F0CC          	movff	fsr2h,??_InterruptHandlerHigh+7
  6396  0013DE  CFF3 F0CD          	movff	prodl,??_InterruptHandlerHigh+8
  6397  0013E2  CFF4 F0CE          	movff	prodh,??_InterruptHandlerHigh+9
  6398  0013E6  CFF6 F0CF          	movff	tblptrl,??_InterruptHandlerHigh+10
  6399  0013EA  CFF7 F0D0          	movff	tblptrh,??_InterruptHandlerHigh+11
  6400  0013EE  CFF8 F0D1          	movff	tblptru,??_InterruptHandlerHigh+12
  6401  0013F2  CFF5 F0D2          	movff	tablat,??_InterruptHandlerHigh+13
  6402                           
  6403                           ;interrupts.c: 90: if (PIR1bits.SSPIF && PIE1bits.SSPIE) {
  6404  0013F6  B69E               	btfsc	3998,3,c	;volatile
  6405  0013F8  A69D               	btfss	3997,3,c	;volatile
  6406  0013FA  D003               	goto	i2l3472
  6407                           
  6408                           ;interrupts.c: 92: PIR1bits.SSPIF = 0;
  6409  0013FC  969E               	bcf	3998,3,c	;volatile
  6410                           
  6411                           ;interrupts.c: 94: i2c_int_handler();
  6412  0013FE  EC60  F000         	call	_i2c_int_handler	;wreg free
  6413  001402                     i2l3472:
  6414                           
  6415                           ;interrupts.c: 95: }
  6416                           ;interrupts.c: 98: if (INTCONbits.TMR0IF) {
  6417  001402  A4F2               	btfss	intcon,2,c	;volatile
  6418  001404  D003               	goto	i2l3478
  6419                           
  6420                           ;interrupts.c: 99: INTCONbits.TMR0IF = 0;
  6421  001406  94F2               	bcf	intcon,2,c	;volatile
  6422                           
  6423                           ;interrupts.c: 101: timer0_int_handler();
  6424  001408  ECA0  F004         	call	_timer0_int_handler	;wreg free
  6425  00140C                     i2l3478:
  6426                           
  6427                           ;interrupts.c: 102: }
  6428                           ;interrupts.c: 111: SleepIfOkay();
  6429  00140C  EC95  F00B         	call	_SleepIfOkay	;wreg free
  6430  001410  C0D2  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6431  001414  C0D1  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6432  001418  C0D0  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6433  00141C  C0CF  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6434  001420  C0CE  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6435  001424  C0CD  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6436  001428  C0CC  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6437  00142C  C0CB  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6438  001430  C0CA  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6439  001434  C0C9  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6440  001438  C0C8  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6441  00143C  C0C7  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6442  001440  C0C6  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6443  001444  C0C5  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6444  001448  0011               	retfie		f
  6445  00144A                     __end_of_InterruptHandlerHigh:
  6446                           	opt stack 0
  6447                           pclatu	equ	0xFFB
  6448                           pclath	equ	0xFFA
  6449                           tblptru	equ	0xFF8
  6450                           tblptrh	equ	0xFF7
  6451                           tblptrl	equ	0xFF6
  6452                           tablat	equ	0xFF5
  6453                           prodh	equ	0xFF4
  6454                           prodl	equ	0xFF3
  6455                           intcon	equ	0xFF2
  6456                           intcon2	equ	0xFF1
  6457                           postinc0	equ	0xFEE
  6458                           fsr0h	equ	0xFEA
  6459                           fsr0l	equ	0xFE9
  6460                           wreg	equ	0xFE8
  6461                           indf1	equ	0xFE7
  6462                           fsr1h	equ	0xFE2
  6463                           fsr1l	equ	0xFE1
  6464                           bsr	equ	0xFE0
  6465                           indf2	equ	0xFDF
  6466                           postinc2	equ	0xFDE
  6467                           postdec2	equ	0xFDD
  6468                           fsr2h	equ	0xFDA
  6469                           fsr2l	equ	0xFD9
  6470                           status	equ	0xFD8
  6471                           
  6472 ;; *************** function _timer0_int_handler *****************
  6473 ;; Defined at:
  6474 ;;		line 16 in file "../src/user_interrupts.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;		None
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;  val             2    5[BANK0 ] unsigned int 
  6479 ;;  i               1   12[BANK0 ] unsigned char 
  6480 ;;  reverse         1   11[BANK0 ] unsigned char [1]
  6481 ;;  stop            1   10[BANK0 ] unsigned char [1]
  6482 ;;  right           1    9[BANK0 ] unsigned char [1]
  6483 ;;  left            1    8[BANK0 ] unsigned char [1]
  6484 ;;  forward         1    7[BANK0 ] unsigned char [1]
  6485 ;; Return value:  Size  Location     Type
  6486 ;;		None               void
  6487 ;; Registers used:
  6488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6494 ;;      Params:         0       0       0       0       0
  6495 ;;      Locals:         0       8       0       0       0
  6496 ;;      Temps:          0       0       0       0       0
  6497 ;;      Totals:         0       8       0       0       0
  6498 ;;Total ram usage:        8 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; Hardware stack levels required when called:    3
  6501 ;; This function calls:
  6502 ;;		_WriteTimer0
  6503 ;;		i2_ToMainHigh_sendmsg
  6504 ;;		i2___awmod
  6505 ;; This function is called by:
  6506 ;;		_InterruptHandlerHigh
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text44
  6511  000940                     __ptext44:
  6512                           	opt stack 0
  6513  000940                     _timer0_int_handler:
  6514                           	opt stack 16
  6515                           
  6516                           ;user_interrupts.c: 17: unsigned int val = 0;
  6517                           
  6518                           ;incstack = 0
  6519  000940  0E00               	movlw	0
  6520  000942  0100               	movlb	0	; () banked
  6521  000944  6FBC               	movwf	(timer0_int_handler@val+1)& (0+255),b
  6522  000946  0E00               	movlw	0
  6523  000948  0100               	movlb	0	; () banked
  6524  00094A  6FBB               	movwf	timer0_int_handler@val& (0+255),b
  6525                           
  6526                           ;user_interrupts.c: 20: unsigned char i;
  6527                           ;user_interrupts.c: 21: unsigned char forward[1], left[1], right[1], stop[1], reverse[1]
      +                          ;
  6528                           ;user_interrupts.c: 22: forward[0] = 0x0A;
  6529  00094C  0E0A               	movlw	10
  6530  00094E  0100               	movlb	0	; () banked
  6531  000950  6FBD               	movwf	timer0_int_handler@forward& (0+255),b
  6532                           
  6533                           ;user_interrupts.c: 23: left[0] = 0x0B;
  6534  000952  0E0B               	movlw	11
  6535  000954  0100               	movlb	0	; () banked
  6536  000956  6FBE               	movwf	timer0_int_handler@left& (0+255),b
  6537                           
  6538                           ;user_interrupts.c: 24: right[0] = 0x0C;
  6539  000958  0E0C               	movlw	12
  6540  00095A  0100               	movlb	0	; () banked
  6541  00095C  6FBF               	movwf	timer0_int_handler@right& (0+255),b
  6542                           
  6543                           ;user_interrupts.c: 25: stop[0] = 0x0D;
  6544  00095E  0E0D               	movlw	13
  6545  000960  0100               	movlb	0	; () banked
  6546  000962  6FC0               	movwf	timer0_int_handler@stop& (0+255),b
  6547                           
  6548                           ;user_interrupts.c: 26: reverse[0] = 0x0E;
  6549  000964  0E0E               	movlw	14
  6550  000966  0100               	movlb	0	; () banked
  6551  000968  6FC1               	movwf	timer0_int_handler@reverse& (0+255),b
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;user_interrupts.c: 29: WriteTimer0(0);
  6555  00096A  0E00               	movlw	0
  6556  00096C  6E35               	movwf	WriteTimer0@timer0+1,c
  6557  00096E  0E00               	movlw	0
  6558  000970  6E34               	movwf	WriteTimer0@timer0,c
  6559  000972  ECE5  F00D         	call	_WriteTimer0	;wreg free
  6560                           
  6561                           ;user_interrupts.c: 31: if (i % 5 == 0) {
  6562  000976  0100               	movlb	0	; () banked
  6563  000978  C0C2  F034         	movff	timer0_int_handler@i,i2___awmod@dividend
  6564  00097C  6A35               	clrf	i2___awmod@dividend+1,c
  6565  00097E  0E00               	movlw	0
  6566  000980  6E37               	movwf	i2___awmod@divisor+1,c
  6567  000982  0E05               	movlw	5
  6568  000984  6E36               	movwf	i2___awmod@divisor,c
  6569  000986  EC5C  F009         	call	i2___awmod	;wreg free
  6570  00098A  5035               	movf	?i2___awmod+1,w,c
  6571  00098C  1034               	iorwf	?i2___awmod,w,c
  6572  00098E  A4D8               	btfss	status,2,c
  6573  000990  D00E               	goto	i2l3414
  6574                           
  6575                           ;user_interrupts.c: 32: ToMainHigh_sendmsg(1, 45, forward);
  6576  000992  0E2D               	movlw	45
  6577  000994  6E45               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  6578  000996  0100               	movlb	0	; () banked
  6579  000998  0E00               	movlw	high timer0_int_handler@forward
  6580  00099A  6E47               	movwf	i2ToMainHigh_sendmsg@data+1,c
  6581  00099C  0100               	movlb	0	; () banked
  6582  00099E  0EBD               	movlw	low timer0_int_handler@forward
  6583  0009A0  6E46               	movwf	i2ToMainHigh_sendmsg@data,c
  6584  0009A2  0E01               	movlw	1
  6585  0009A4  EC8D  F00D         	call	i2_ToMainHigh_sendmsg
  6586                           
  6587                           ;user_interrupts.c: 33: i++;
  6588  0009A8  0100               	movlb	0	; () banked
  6589  0009AA  2BC2               	incf	timer0_int_handler@i& (0+255),f,b
  6590                           
  6591                           ;user_interrupts.c: 34: } else if (i % 5 == 1) {
  6592  0009AC  0012               	return	
  6593  0009AE                     i2l3414:
  6594  0009AE  0100               	movlb	0	; () banked
  6595  0009B0  C0C2  F034         	movff	timer0_int_handler@i,i2___awmod@dividend
  6596  0009B4  6A35               	clrf	i2___awmod@dividend+1,c
  6597  0009B6  0E00               	movlw	0
  6598  0009B8  6E37               	movwf	i2___awmod@divisor+1,c
  6599  0009BA  0E05               	movlw	5
  6600  0009BC  6E36               	movwf	i2___awmod@divisor,c
  6601  0009BE  EC5C  F009         	call	i2___awmod	;wreg free
  6602  0009C2  0434               	decf	?i2___awmod,w,c
  6603  0009C4  1035               	iorwf	?i2___awmod+1,w,c
  6604  0009C6  A4D8               	btfss	status,2,c
  6605  0009C8  D00E               	goto	i2l3420
  6606                           
  6607                           ;user_interrupts.c: 35: ToMainHigh_sendmsg(1, 45, left);
  6608  0009CA  0E2D               	movlw	45
  6609  0009CC  6E45               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  6610  0009CE  0100               	movlb	0	; () banked
  6611  0009D0  0E00               	movlw	high timer0_int_handler@left
  6612  0009D2  6E47               	movwf	i2ToMainHigh_sendmsg@data+1,c
  6613  0009D4  0100               	movlb	0	; () banked
  6614  0009D6  0EBE               	movlw	low timer0_int_handler@left
  6615  0009D8  6E46               	movwf	i2ToMainHigh_sendmsg@data,c
  6616  0009DA  0E01               	movlw	1
  6617  0009DC  EC8D  F00D         	call	i2_ToMainHigh_sendmsg
  6618                           
  6619                           ;user_interrupts.c: 36: i++;
  6620  0009E0  0100               	movlb	0	; () banked
  6621  0009E2  2BC2               	incf	timer0_int_handler@i& (0+255),f,b
  6622                           
  6623                           ;user_interrupts.c: 37: } else if (i % 5 == 2) {
  6624  0009E4  0012               	return	
  6625  0009E6                     i2l3420:
  6626  0009E6  0100               	movlb	0	; () banked
  6627  0009E8  C0C2  F034         	movff	timer0_int_handler@i,i2___awmod@dividend
  6628  0009EC  6A35               	clrf	i2___awmod@dividend+1,c
  6629  0009EE  0E00               	movlw	0
  6630  0009F0  6E37               	movwf	i2___awmod@divisor+1,c
  6631  0009F2  0E05               	movlw	5
  6632  0009F4  6E36               	movwf	i2___awmod@divisor,c
  6633  0009F6  EC5C  F009         	call	i2___awmod	;wreg free
  6634  0009FA  5034               	movf	?i2___awmod,w,c
  6635  0009FC  0A02               	xorlw	2
  6636  0009FE  1035               	iorwf	?i2___awmod+1,w,c
  6637  000A00  A4D8               	btfss	status,2,c
  6638  000A02  D00E               	goto	i2l3426
  6639                           
  6640                           ;user_interrupts.c: 38: ToMainHigh_sendmsg(1, 45, right);
  6641  000A04  0E2D               	movlw	45
  6642  000A06  6E45               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  6643  000A08  0100               	movlb	0	; () banked
  6644  000A0A  0E00               	movlw	high timer0_int_handler@right
  6645  000A0C  6E47               	movwf	i2ToMainHigh_sendmsg@data+1,c
  6646  000A0E  0100               	movlb	0	; () banked
  6647  000A10  0EBF               	movlw	low timer0_int_handler@right
  6648  000A12  6E46               	movwf	i2ToMainHigh_sendmsg@data,c
  6649  000A14  0E01               	movlw	1
  6650  000A16  EC8D  F00D         	call	i2_ToMainHigh_sendmsg
  6651                           
  6652                           ;user_interrupts.c: 39: i++;
  6653  000A1A  0100               	movlb	0	; () banked
  6654  000A1C  2BC2               	incf	timer0_int_handler@i& (0+255),f,b
  6655                           
  6656                           ;user_interrupts.c: 40: } else if (i % 5 == 3) {
  6657  000A1E  0012               	return	
  6658  000A20                     i2l3426:
  6659  000A20  0100               	movlb	0	; () banked
  6660  000A22  C0C2  F034         	movff	timer0_int_handler@i,i2___awmod@dividend
  6661  000A26  6A35               	clrf	i2___awmod@dividend+1,c
  6662  000A28  0E00               	movlw	0
  6663  000A2A  6E37               	movwf	i2___awmod@divisor+1,c
  6664  000A2C  0E05               	movlw	5
  6665  000A2E  6E36               	movwf	i2___awmod@divisor,c
  6666  000A30  EC5C  F009         	call	i2___awmod	;wreg free
  6667  000A34  5034               	movf	?i2___awmod,w,c
  6668  000A36  0A03               	xorlw	3
  6669  000A38  1035               	iorwf	?i2___awmod+1,w,c
  6670  000A3A  A4D8               	btfss	status,2,c
  6671  000A3C  D00E               	goto	i2l3432
  6672                           
  6673                           ;user_interrupts.c: 41: ToMainHigh_sendmsg(1, 45, stop);
  6674  000A3E  0E2D               	movlw	45
  6675  000A40  6E45               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  6676  000A42  0100               	movlb	0	; () banked
  6677  000A44  0E00               	movlw	high timer0_int_handler@stop
  6678  000A46  6E47               	movwf	i2ToMainHigh_sendmsg@data+1,c
  6679  000A48  0100               	movlb	0	; () banked
  6680  000A4A  0EC0               	movlw	low timer0_int_handler@stop
  6681  000A4C  6E46               	movwf	i2ToMainHigh_sendmsg@data,c
  6682  000A4E  0E01               	movlw	1
  6683  000A50  EC8D  F00D         	call	i2_ToMainHigh_sendmsg
  6684                           
  6685                           ;user_interrupts.c: 42: i++;
  6686  000A54  0100               	movlb	0	; () banked
  6687  000A56  2BC2               	incf	timer0_int_handler@i& (0+255),f,b
  6688                           
  6689                           ;user_interrupts.c: 43: } else if (i % 5 == 4) {
  6690  000A58  0012               	return	
  6691  000A5A                     i2l3432:
  6692  000A5A  0100               	movlb	0	; () banked
  6693  000A5C  C0C2  F034         	movff	timer0_int_handler@i,i2___awmod@dividend
  6694  000A60  6A35               	clrf	i2___awmod@dividend+1,c
  6695  000A62  0E00               	movlw	0
  6696  000A64  6E37               	movwf	i2___awmod@divisor+1,c
  6697  000A66  0E05               	movlw	5
  6698  000A68  6E36               	movwf	i2___awmod@divisor,c
  6699  000A6A  EC5C  F009         	call	i2___awmod	;wreg free
  6700  000A6E  5034               	movf	?i2___awmod,w,c
  6701  000A70  0A04               	xorlw	4
  6702  000A72  1035               	iorwf	?i2___awmod+1,w,c
  6703  000A74  A4D8               	btfss	status,2,c
  6704  000A76  D00E               	goto	i2l3438
  6705                           
  6706                           ;user_interrupts.c: 44: ToMainHigh_sendmsg(1, 45, reverse);
  6707  000A78  0E2D               	movlw	45
  6708  000A7A  6E45               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  6709  000A7C  0100               	movlb	0	; () banked
  6710  000A7E  0E00               	movlw	high timer0_int_handler@reverse
  6711  000A80  6E47               	movwf	i2ToMainHigh_sendmsg@data+1,c
  6712  000A82  0100               	movlb	0	; () banked
  6713  000A84  0EC1               	movlw	low timer0_int_handler@reverse
  6714  000A86  6E46               	movwf	i2ToMainHigh_sendmsg@data,c
  6715  000A88  0E01               	movlw	1
  6716  000A8A  EC8D  F00D         	call	i2_ToMainHigh_sendmsg
  6717                           
  6718                           ;user_interrupts.c: 45: i++;
  6719  000A8E  0100               	movlb	0	; () banked
  6720  000A90  2BC2               	incf	timer0_int_handler@i& (0+255),f,b
  6721                           
  6722                           ;user_interrupts.c: 46: } else {
  6723  000A92  0012               	return	
  6724  000A94                     i2l3438:
  6725                           
  6726                           ;user_interrupts.c: 47: i = 0;
  6727  000A94  0E00               	movlw	0
  6728  000A96  0100               	movlb	0	; () banked
  6729  000A98  6FC2               	movwf	timer0_int_handler@i& (0+255),b
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;user_interrupts.c: 48: i++;
  6733  000A9A  0100               	movlb	0	; () banked
  6734  000A9C  2BC2               	incf	timer0_int_handler@i& (0+255),f,b
  6735  000A9E  0012               	return	
  6736  000AA0                     __end_of_timer0_int_handler:
  6737                           	opt stack 0
  6738                           pclatu	equ	0xFFB
  6739                           pclath	equ	0xFFA
  6740                           tblptru	equ	0xFF8
  6741                           tblptrh	equ	0xFF7
  6742                           tblptrl	equ	0xFF6
  6743                           tablat	equ	0xFF5
  6744                           prodh	equ	0xFF4
  6745                           prodl	equ	0xFF3
  6746                           intcon	equ	0xFF2
  6747                           intcon2	equ	0xFF1
  6748                           postinc0	equ	0xFEE
  6749                           fsr0h	equ	0xFEA
  6750                           fsr0l	equ	0xFE9
  6751                           wreg	equ	0xFE8
  6752                           indf1	equ	0xFE7
  6753                           fsr1h	equ	0xFE2
  6754                           fsr1l	equ	0xFE1
  6755                           bsr	equ	0xFE0
  6756                           indf2	equ	0xFDF
  6757                           postinc2	equ	0xFDE
  6758                           postdec2	equ	0xFDD
  6759                           fsr2h	equ	0xFDA
  6760                           fsr2l	equ	0xFD9
  6761                           status	equ	0xFD8
  6762                           
  6763 ;; *************** function i2___awmod *****************
  6764 ;; Defined at:
  6765 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  dividend        2   51[COMRAM] int 
  6768 ;;  divisor         2   53[COMRAM] int 
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;  __awmod         1   56[COMRAM] unsigned char 
  6771 ;;  __awmod         1   55[COMRAM] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  2   51[COMRAM] int 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0, prodl
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6781 ;;      Params:         4       0       0       0       0
  6782 ;;      Locals:         2       0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0
  6784 ;;      Totals:         6       0       0       0       0
  6785 ;;Total ram usage:        6 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; This function calls:
  6788 ;;		Nothing
  6789 ;; This function is called by:
  6790 ;;		_timer0_int_handler
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           	psect	text45
  6795  0012B8                     __ptext45:
  6796                           	opt stack 0
  6797  0012B8                     i2___awmod:
  6798                           	opt stack 18
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;incstack = 0
  6802  0012B8  0E00               	movlw	0
  6803  0012BA  6E39               	movwf	i2___awmod@sign,c
  6804  0012BC  5035               	movf	i2___awmod@dividend+1,w,c
  6805  0012BE  0A80               	xorlw	128
  6806  0012C0  6EF3               	movwf	prodl,c
  6807  0012C2  0E80               	movlw	128
  6808  0012C4  5CF3               	subwf	prodl,w,c
  6809  0012C6  0E00               	movlw	0
  6810  0012C8  B4D8               	btfsc	status,2,c
  6811  0012CA  5C34               	subwf	i2___awmod@dividend,w,c
  6812  0012CC  B0D8               	btfsc	status,0,c
  6813  0012CE  D006               	goto	i2l2484
  6814  0012D0  6C34               	negf	i2___awmod@dividend,c
  6815  0012D2  1E35               	comf	i2___awmod@dividend+1,f,c
  6816  0012D4  B0D8               	btfsc	status,0,c
  6817  0012D6  2A35               	incf	i2___awmod@dividend+1,f,c
  6818  0012D8  0E01               	movlw	1
  6819  0012DA  6E39               	movwf	i2___awmod@sign,c
  6820  0012DC                     i2l2484:
  6821  0012DC  5037               	movf	i2___awmod@divisor+1,w,c
  6822  0012DE  0A80               	xorlw	128
  6823  0012E0  6EF3               	movwf	prodl,c
  6824  0012E2  0E80               	movlw	128
  6825  0012E4  5CF3               	subwf	prodl,w,c
  6826  0012E6  0E00               	movlw	0
  6827  0012E8  B4D8               	btfsc	status,2,c
  6828  0012EA  5C36               	subwf	i2___awmod@divisor,w,c
  6829  0012EC  B0D8               	btfsc	status,0,c
  6830  0012EE  D004               	goto	i2l2488
  6831  0012F0  6C36               	negf	i2___awmod@divisor,c
  6832  0012F2  1E37               	comf	i2___awmod@divisor+1,f,c
  6833  0012F4  B0D8               	btfsc	status,0,c
  6834  0012F6  2A37               	incf	i2___awmod@divisor+1,f,c
  6835  0012F8                     i2l2488:
  6836  0012F8  5037               	movf	i2___awmod@divisor+1,w,c
  6837  0012FA  1036               	iorwf	i2___awmod@divisor,w,c
  6838  0012FC  B4D8               	btfsc	status,2,c
  6839  0012FE  D018               	goto	i2l2504
  6840  001300  0E01               	movlw	1
  6841  001302  6E38               	movwf	i2___awmod@counter,c
  6842  001304  D004               	goto	i2l2494
  6843  001306                     i2l2492:
  6844  001306  90D8               	bcf	status,0,c
  6845  001308  3636               	rlcf	i2___awmod@divisor,f,c
  6846  00130A  3637               	rlcf	i2___awmod@divisor+1,f,c
  6847  00130C  2A38               	incf	i2___awmod@counter,f,c
  6848  00130E                     i2l2494:
  6849  00130E  AE37               	btfss	i2___awmod@divisor+1,7,c
  6850  001310  D7FA               	goto	i2l2492
  6851  001312                     i2l2496:
  6852  001312  5036               	movf	i2___awmod@divisor,w,c
  6853  001314  5C34               	subwf	i2___awmod@dividend,w,c
  6854  001316  5037               	movf	i2___awmod@divisor+1,w,c
  6855  001318  5835               	subwfb	i2___awmod@dividend+1,w,c
  6856  00131A  A0D8               	btfss	status,0,c
  6857  00131C  D004               	goto	i2l2500
  6858  00131E  5036               	movf	i2___awmod@divisor,w,c
  6859  001320  5E34               	subwf	i2___awmod@dividend,f,c
  6860  001322  5037               	movf	i2___awmod@divisor+1,w,c
  6861  001324  5A35               	subwfb	i2___awmod@dividend+1,f,c
  6862  001326                     i2l2500:
  6863  001326  90D8               	bcf	status,0,c
  6864  001328  3237               	rrcf	i2___awmod@divisor+1,f,c
  6865  00132A  3236               	rrcf	i2___awmod@divisor,f,c
  6866  00132C  2E38               	decfsz	i2___awmod@counter,f,c
  6867  00132E  D7F1               	goto	i2l2496
  6868  001330                     i2l2504:
  6869  001330  5039               	movf	i2___awmod@sign,w,c
  6870  001332  B4D8               	btfsc	status,2,c
  6871  001334  D004               	goto	i2l2508
  6872  001336  6C34               	negf	i2___awmod@dividend,c
  6873  001338  1E35               	comf	i2___awmod@dividend+1,f,c
  6874  00133A  B0D8               	btfsc	status,0,c
  6875  00133C  2A35               	incf	i2___awmod@dividend+1,f,c
  6876  00133E                     i2l2508:
  6877  00133E  C034  F034         	movff	i2___awmod@dividend,?i2___awmod
  6878  001342  C035  F035         	movff	i2___awmod@dividend+1,?i2___awmod+1
  6879  001346  0012               	return	
  6880  001348                     __end_ofi2___awmod:
  6881                           	opt stack 0
  6882                           pclatu	equ	0xFFB
  6883                           pclath	equ	0xFFA
  6884                           tblptru	equ	0xFF8
  6885                           tblptrh	equ	0xFF7
  6886                           tblptrl	equ	0xFF6
  6887                           tablat	equ	0xFF5
  6888                           prodh	equ	0xFF4
  6889                           prodl	equ	0xFF3
  6890                           intcon	equ	0xFF2
  6891                           intcon2	equ	0xFF1
  6892                           postinc0	equ	0xFEE
  6893                           fsr0h	equ	0xFEA
  6894                           fsr0l	equ	0xFE9
  6895                           wreg	equ	0xFE8
  6896                           indf1	equ	0xFE7
  6897                           fsr1h	equ	0xFE2
  6898                           fsr1l	equ	0xFE1
  6899                           bsr	equ	0xFE0
  6900                           indf2	equ	0xFDF
  6901                           postinc2	equ	0xFDE
  6902                           postdec2	equ	0xFDD
  6903                           fsr2h	equ	0xFDA
  6904                           fsr2l	equ	0xFD9
  6905                           status	equ	0xFD8
  6906                           
  6907 ;; *************** function _WriteTimer0 *****************
  6908 ;; Defined at:
  6909 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0write.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;  timer0          2   51[COMRAM] unsigned int 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;  timer           2   53[COMRAM] struct Timers
  6914 ;; Return value:  Size  Location     Type
  6915 ;;		None               void
  6916 ;; Registers used:
  6917 ;;		None
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6923 ;;      Params:         2       0       0       0       0
  6924 ;;      Locals:         2       0       0       0       0
  6925 ;;      Temps:          0       0       0       0       0
  6926 ;;      Totals:         4       0       0       0       0
  6927 ;;Total ram usage:        4 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; This function calls:
  6930 ;;		Nothing
  6931 ;; This function is called by:
  6932 ;;		_timer0_int_handler
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text46
  6937  001BCA                     __ptext46:
  6938                           	opt stack 0
  6939  001BCA                     _WriteTimer0:
  6940                           	opt stack 18
  6941                           
  6942                           ;incstack = 0
  6943  001BCA  C034  F036         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6944  001BCE  C035  F037         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6945  001BD2  C037  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6946  001BD6  C036  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6947  001BDA  0012               	return	
  6948  001BDC                     __end_of_WriteTimer0:
  6949                           	opt stack 0
  6950                           pclatu	equ	0xFFB
  6951                           pclath	equ	0xFFA
  6952                           tblptru	equ	0xFF8
  6953                           tblptrh	equ	0xFF7
  6954                           tblptrl	equ	0xFF6
  6955                           tablat	equ	0xFF5
  6956                           prodh	equ	0xFF4
  6957                           prodl	equ	0xFF3
  6958                           intcon	equ	0xFF2
  6959                           intcon2	equ	0xFF1
  6960                           postinc0	equ	0xFEE
  6961                           fsr0h	equ	0xFEA
  6962                           fsr0l	equ	0xFE9
  6963                           wreg	equ	0xFE8
  6964                           indf1	equ	0xFE7
  6965                           fsr1h	equ	0xFE2
  6966                           fsr1l	equ	0xFE1
  6967                           bsr	equ	0xFE0
  6968                           indf2	equ	0xFDF
  6969                           postinc2	equ	0xFDE
  6970                           postdec2	equ	0xFDD
  6971                           fsr2h	equ	0xFDA
  6972                           fsr2l	equ	0xFD9
  6973                           status	equ	0xFD8
  6974                           
  6975 ;; *************** function _i2c_int_handler *****************
  6976 ;; Defined at:
  6977 ;;		line 54 in file "../src/my_i2c.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;		None
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  error_buf       3    6[BANK0 ] unsigned char [3]
  6982 ;;  data_read       1   14[BANK0 ] unsigned char 
  6983 ;;  msg_ready       1   13[BANK0 ] unsigned char 
  6984 ;;  msg_to_send     1   12[BANK0 ] unsigned char 
  6985 ;;  i2c_data        1   11[BANK0 ] unsigned char 
  6986 ;;  overrun_erro    1   10[BANK0 ] unsigned char 
  6987 ;;  data_written    1    9[BANK0 ] unsigned char 
  6988 ;; Return value:  Size  Location     Type
  6989 ;;		None               void
  6990 ;; Registers used:
  6991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6997 ;;      Params:         0       0       0       0       0
  6998 ;;      Locals:         0       9       0       0       0
  6999 ;;      Temps:          0       1       0       0       0
  7000 ;;      Totals:         0      10       0       0       0
  7001 ;;Total ram usage:       10 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:    3
  7004 ;; This function calls:
  7005 ;;		_handle_start
  7006 ;;		i2_ToMainHigh_sendmsg
  7007 ;; This function is called by:
  7008 ;;		_InterruptHandlerHigh
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           
  7012                           	psect	text47
  7013  0000C0                     __ptext47:
  7014                           	opt stack 0
  7015  0000C0                     _i2c_int_handler:
  7016                           	opt stack 16
  7017                           
  7018                           ;my_i2c.c: 55: unsigned char i2c_data;
  7019                           ;my_i2c.c: 56: unsigned char data_read = 0;
  7020                           
  7021                           ;incstack = 0
  7022  0000C0  0E00               	movlw	0
  7023  0000C2  0100               	movlb	0	; () banked
  7024  0000C4  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  7025                           
  7026                           ;my_i2c.c: 57: unsigned char data_written = 0;
  7027  0000C6  0E00               	movlw	0
  7028  0000C8  0100               	movlb	0	; () banked
  7029  0000CA  6FBF               	movwf	i2c_int_handler@data_written& (0+255),b
  7030                           
  7031                           ;my_i2c.c: 58: unsigned char msg_ready = 0;
  7032  0000CC  0E00               	movlw	0
  7033  0000CE  0100               	movlb	0	; () banked
  7034  0000D0  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7035                           
  7036                           ;my_i2c.c: 59: unsigned char msg_to_send = 0;
  7037  0000D2  0E00               	movlw	0
  7038  0000D4  0100               	movlb	0	; () banked
  7039  0000D6  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7040                           
  7041                           ;my_i2c.c: 60: unsigned char overrun_error = 0;
  7042  0000D8  0E00               	movlw	0
  7043  0000DA  0100               	movlb	0	; () banked
  7044  0000DC  6FC0               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;my_i2c.c: 61: unsigned char error_buf[3];
  7048                           ;my_i2c.c: 64: if (SSPCON1bits.SSPOV == 1) {
  7049  0000DE  ACC6               	btfss	4038,6,c	;volatile
  7050  0000E0  D024               	goto	i2l3276
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;my_i2c.c: 65: SSPCON1bits.SSPOV = 0;
  7054  0000E2  9CC6               	bcf	4038,6,c	;volatile
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;my_i2c.c: 69: ic_ptr->status = 0x5;
  7058  0000E4  0100               	movlb	0	; () banked
  7059  0000E6  EE20 F00C          	lfsr	2,12
  7060  0000EA  0100               	movlb	0	; () banked
  7061  0000EC  51E1               	movf	_ic_ptr& (0+255),w,b
  7062  0000EE  26D9               	addwf	fsr2l,f,c
  7063  0000F0  0100               	movlb	0	; () banked
  7064  0000F2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7065  0000F4  22DA               	addwfc	fsr2h,f,c
  7066  0000F6  0E05               	movlw	5
  7067  0000F8  6EDF               	movwf	indf2,c
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;my_i2c.c: 70: overrun_error = 1;
  7071  0000FA  0E01               	movlw	1
  7072  0000FC  0100               	movlb	0	; () banked
  7073  0000FE  6FC0               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7074                           
  7075                           ; BSR set to: 0
  7076                           ;my_i2c.c: 71: ic_ptr->error_count++;
  7077  000100  0100               	movlb	0	; () banked
  7078  000102  EE20 F00E          	lfsr	2,14
  7079  000106  0100               	movlb	0	; () banked
  7080  000108  51E1               	movf	_ic_ptr& (0+255),w,b
  7081  00010A  26D9               	addwf	fsr2l,f,c
  7082  00010C  0100               	movlb	0	; () banked
  7083  00010E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7084  000110  22DA               	addwfc	fsr2h,f,c
  7085  000112  2ADF               	incf	indf2,f,c
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;my_i2c.c: 72: ic_ptr->error_code = 0x4;
  7089  000114  0100               	movlb	0	; () banked
  7090  000116  EE20 F00D          	lfsr	2,13
  7091  00011A  0100               	movlb	0	; () banked
  7092  00011C  51E1               	movf	_ic_ptr& (0+255),w,b
  7093  00011E  26D9               	addwf	fsr2l,f,c
  7094  000120  0100               	movlb	0	; () banked
  7095  000122  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7096  000124  22DA               	addwfc	fsr2h,f,c
  7097  000126  0E04               	movlw	4
  7098  000128  6EDF               	movwf	indf2,c
  7099  00012A                     i2l3276:
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;my_i2c.c: 73: }
  7103                           ;my_i2c.c: 75: if (SSPSTATbits.BF == 1) {
  7104  00012A  A0C7               	btfss	4039,0,c	;volatile
  7105  00012C  D005               	goto	i2l3282
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;my_i2c.c: 76: i2c_data = SSPBUF;
  7109  00012E  CFC9 F0C1          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;my_i2c.c: 77: data_read = 1;
  7113  000132  0E01               	movlw	1
  7114  000134  0100               	movlb	0	; () banked
  7115  000136  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  7116  000138                     i2l3282:
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;my_i2c.c: 78: }
  7120                           ;my_i2c.c: 80: if (!overrun_error) {
  7121  000138  0100               	movlb	0	; () banked
  7122  00013A  67C0               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7123  00013C  D19F               	goto	i2l278
  7124  00013E  D188               	goto	i2l3370
  7125  000140                     i2l280:
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;my_i2c.c: 83: {
  7129                           ;my_i2c.c: 85: if (SSPSTATbits.S == 1) {
  7130  000140  A6C7               	btfss	4039,3,c	;volatile
  7131  000142  D19C               	goto	i2l278
  7132                           
  7133                           ; BSR set to: 0
  7134                           ;my_i2c.c: 86: handle_start(data_read);
  7135  000144  0100               	movlb	0	; () banked
  7136  000146  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7137  000148  ECB5  F007         	call	_handle_start
  7138                           
  7139                           ;my_i2c.c: 88: if (ic_ptr->status == 0x8) {
  7140  00014C  0100               	movlb	0	; () banked
  7141  00014E  EE20 F00C          	lfsr	2,12
  7142  000152  0100               	movlb	0	; () banked
  7143  000154  51E1               	movf	_ic_ptr& (0+255),w,b
  7144  000156  26D9               	addwf	fsr2l,f,c
  7145  000158  0100               	movlb	0	; () banked
  7146  00015A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7147  00015C  22DA               	addwfc	fsr2h,f,c
  7148  00015E  0E08               	movlw	8
  7149  000160  62DF               	cpfseq	indf2,c
  7150  000162  D18C               	goto	i2l278
  7151                           
  7152                           ; BSR set to: 0
  7153                           ;my_i2c.c: 89: data_read = 0;
  7154  000164  0E00               	movlw	0
  7155  000166  0100               	movlb	0	; () banked
  7156  000168  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  7157                           
  7158                           ;my_i2c.c: 90: msg_to_send = 1;
  7159  00016A  0E01               	movlw	1
  7160  00016C  0100               	movlb	0	; () banked
  7161  00016E  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7162  000170  D185               	goto	i2l278
  7163  000172                     i2l284:
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;my_i2c.c: 96: {
  7167                           ;my_i2c.c: 98: if (SSPSTATbits.P == 1) {
  7168  000172  A8C7               	btfss	4039,4,c	;volatile
  7169  000174  D02A               	goto	i2l3302
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;my_i2c.c: 101: ic_ptr->event_count++;
  7173  000176  0100               	movlb	0	; () banked
  7174  000178  EE20 F00B          	lfsr	2,11
  7175  00017C  0100               	movlb	0	; () banked
  7176  00017E  51E1               	movf	_ic_ptr& (0+255),w,b
  7177  000180  26D9               	addwf	fsr2l,f,c
  7178  000182  0100               	movlb	0	; () banked
  7179  000184  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7180  000186  22DA               	addwfc	fsr2h,f,c
  7181  000188  2ADF               	incf	indf2,f,c
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;my_i2c.c: 102: if (data_read) {
  7185  00018A  0100               	movlb	0	; () banked
  7186  00018C  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7187  00018E  B4D8               	btfsc	status,2,c
  7188  000190  D154               	goto	L10
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;my_i2c.c: 103: if (SSPSTATbits.D_A == 0) {
  7192  000192  BAC7               	btfsc	4039,5,c	;volatile
  7193  000194  D004               	goto	i2l3300
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;my_i2c.c: 104: msg_ready = 1;
  7197  000196  0E01               	movlw	1
  7198  000198  0100               	movlb	0	; () banked
  7199  00019A  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7200                           
  7201                           ;my_i2c.c: 105: } else {
  7202  00019C  D14E               	goto	L10
  7203  00019E                     i2l3300:
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;my_i2c.c: 106: ic_ptr->error_count++;
  7207  00019E  0100               	movlb	0	; () banked
  7208  0001A0  EE20 F00E          	lfsr	2,14
  7209  0001A4  0100               	movlb	0	; () banked
  7210  0001A6  51E1               	movf	_ic_ptr& (0+255),w,b
  7211  0001A8  26D9               	addwf	fsr2l,f,c
  7212  0001AA  0100               	movlb	0	; () banked
  7213  0001AC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7214  0001AE  22DA               	addwfc	fsr2h,f,c
  7215  0001B0  2ADF               	incf	indf2,f,c
  7216                           
  7217                           ;my_i2c.c: 107: ic_ptr->error_code = 0x6;
  7218  0001B2  0100               	movlb	0	; () banked
  7219  0001B4  EE20 F00D          	lfsr	2,13
  7220  0001B8  0100               	movlb	0	; () banked
  7221  0001BA  51E1               	movf	_ic_ptr& (0+255),w,b
  7222  0001BC  26D9               	addwf	fsr2l,f,c
  7223  0001BE  0100               	movlb	0	; () banked
  7224  0001C0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7225  0001C2  22DA               	addwfc	fsr2h,f,c
  7226  0001C4  0E06               	movlw	6
  7227  0001C6  6EDF               	movwf	indf2,c
  7228                           
  7229                           ; BSR set to: 0
  7230  0001C8  D138               	goto	L10
  7231  0001CA                     i2l3302:
  7232                           
  7233                           ; BSR set to: 0
  7234  0001CA  0100               	movlb	0	; () banked
  7235  0001CC  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7236  0001CE  B4D8               	btfsc	status,2,c
  7237  0001D0  D155               	goto	i2l278
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;my_i2c.c: 112: ic_ptr->event_count++;
  7241  0001D2  0100               	movlb	0	; () banked
  7242  0001D4  EE20 F00B          	lfsr	2,11
  7243  0001D8  0100               	movlb	0	; () banked
  7244  0001DA  51E1               	movf	_ic_ptr& (0+255),w,b
  7245  0001DC  26D9               	addwf	fsr2l,f,c
  7246  0001DE  0100               	movlb	0	; () banked
  7247  0001E0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7248  0001E2  22DA               	addwfc	fsr2h,f,c
  7249  0001E4  2ADF               	incf	indf2,f,c
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;my_i2c.c: 113: if (SSPSTATbits.D_A == 0) {
  7253  0001E6  BAC7               	btfsc	4039,5,c	;volatile
  7254  0001E8  D019               	goto	i2l3318
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;my_i2c.c: 114: if (SSPSTATbits.R_W == 0) {
  7258  0001EA  B4C7               	btfsc	4039,2,c	;volatile
  7259  0001EC  D00B               	goto	i2l3312
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;my_i2c.c: 115: ic_ptr->status = 0x7;
  7263  0001EE  0100               	movlb	0	; () banked
  7264  0001F0  EE20 F00C          	lfsr	2,12
  7265  0001F4  0100               	movlb	0	; () banked
  7266  0001F6  51E1               	movf	_ic_ptr& (0+255),w,b
  7267  0001F8  26D9               	addwf	fsr2l,f,c
  7268  0001FA  0100               	movlb	0	; () banked
  7269  0001FC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7270  0001FE  22DA               	addwfc	fsr2h,f,c
  7271  000200  0E07               	movlw	7
  7272  000202  D071               	goto	L8
  7273  000204                     i2l3312:
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;my_i2c.c: 117: ic_ptr->status = 0x8;
  7277  000204  0100               	movlb	0	; () banked
  7278  000206  EE20 F00C          	lfsr	2,12
  7279  00020A  0100               	movlb	0	; () banked
  7280  00020C  51E1               	movf	_ic_ptr& (0+255),w,b
  7281  00020E  26D9               	addwf	fsr2l,f,c
  7282  000210  0100               	movlb	0	; () banked
  7283  000212  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7284  000214  22DA               	addwfc	fsr2h,f,c
  7285  000216  0E08               	movlw	8
  7286  000218  6EDF               	movwf	indf2,c
  7287  00021A  D108               	goto	L7
  7288  00021C                     i2l3318:
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;my_i2c.c: 123: ic_ptr->error_count++;
  7292  00021C  0100               	movlb	0	; () banked
  7293  00021E  EE20 F00E          	lfsr	2,14
  7294  000222  0100               	movlb	0	; () banked
  7295  000224  51E1               	movf	_ic_ptr& (0+255),w,b
  7296  000226  26D9               	addwf	fsr2l,f,c
  7297  000228  0100               	movlb	0	; () banked
  7298  00022A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7299  00022C  22DA               	addwfc	fsr2h,f,c
  7300  00022E  2ADF               	incf	indf2,f,c
  7301                           
  7302                           ;my_i2c.c: 124: ic_ptr->status = 0x5;
  7303  000230  0100               	movlb	0	; () banked
  7304  000232  EE20 F00C          	lfsr	2,12
  7305  000236  0100               	movlb	0	; () banked
  7306  000238  51E1               	movf	_ic_ptr& (0+255),w,b
  7307  00023A  26D9               	addwf	fsr2l,f,c
  7308  00023C  0100               	movlb	0	; () banked
  7309  00023E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7310  000240  22DA               	addwfc	fsr2h,f,c
  7311  000242  0E05               	movlw	5
  7312  000244  6EDF               	movwf	indf2,c
  7313                           
  7314                           ;my_i2c.c: 125: ic_ptr->error_code = 0x6;
  7315  000246  0100               	movlb	0	; () banked
  7316  000248  EE20 F00D          	lfsr	2,13
  7317  00024C  0100               	movlb	0	; () banked
  7318  00024E  51E1               	movf	_ic_ptr& (0+255),w,b
  7319  000250  26D9               	addwf	fsr2l,f,c
  7320  000252  0100               	movlb	0	; () banked
  7321  000254  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7322  000256  22DA               	addwfc	fsr2h,f,c
  7323  000258  0E06               	movlw	6
  7324  00025A  D045               	goto	L8
  7325  00025C                     i2l3320:
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;my_i2c.c: 131: {
  7329                           ;my_i2c.c: 132: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7330  00025C  0100               	movlb	0	; () banked
  7331  00025E  EE20 F01A          	lfsr	2,26
  7332  000262  0100               	movlb	0	; () banked
  7333  000264  51E1               	movf	_ic_ptr& (0+255),w,b
  7334  000266  26D9               	addwf	fsr2l,f,c
  7335  000268  0100               	movlb	0	; () banked
  7336  00026A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7337  00026C  22DA               	addwfc	fsr2h,f,c
  7338  00026E  50DF               	movf	indf2,w,c
  7339  000270  0100               	movlb	0	; () banked
  7340  000272  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7341  000274  0100               	movlb	0	; () banked
  7342  000276  EE20 F019          	lfsr	2,25
  7343  00027A  0100               	movlb	0	; () banked
  7344  00027C  51E1               	movf	_ic_ptr& (0+255),w,b
  7345  00027E  26D9               	addwf	fsr2l,f,c
  7346  000280  0100               	movlb	0	; () banked
  7347  000282  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7348  000284  22DA               	addwfc	fsr2h,f,c
  7349  000286  50DF               	movf	indf2,w,c
  7350  000288  0100               	movlb	0	; () banked
  7351  00028A  5DBB               	subwf	??_i2c_int_handler& (0+255),w,b
  7352  00028C  B0D8               	btfsc	status,0,c
  7353  00028E  D0D5               	goto	L10
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;my_i2c.c: 133: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7357  000290  0100               	movlb	0	; () banked
  7358  000292  EE20 F01A          	lfsr	2,26
  7359  000296  0100               	movlb	0	; () banked
  7360  000298  51E1               	movf	_ic_ptr& (0+255),w,b
  7361  00029A  26D9               	addwf	fsr2l,f,c
  7362  00029C  0100               	movlb	0	; () banked
  7363  00029E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7364  0002A0  22DA               	addwfc	fsr2h,f,c
  7365  0002A2  50DF               	movf	indf2,w,c
  7366  0002A4  0100               	movlb	0	; () banked
  7367  0002A6  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7368  0002A8  0100               	movlb	0	; () banked
  7369  0002AA  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7370  0002AC  0D01               	mullw	1
  7371  0002AE  0E0F               	movlw	15
  7372  0002B0  26F3               	addwf	prodl,f,c
  7373  0002B2  0E00               	movlw	0
  7374  0002B4  22F4               	addwfc	prodh,f,c
  7375  0002B6  50F3               	movf	prodl,w,c
  7376  0002B8  0100               	movlb	0	; () banked
  7377  0002BA  25E1               	addwf	_ic_ptr& (0+255),w,b
  7378  0002BC  6ED9               	movwf	fsr2l,c
  7379  0002BE  50F4               	movf	prodh,w,c
  7380  0002C0  0100               	movlb	0	; () banked
  7381  0002C2  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7382  0002C4  6EDA               	movwf	fsr2h,c
  7383  0002C6  50DF               	movf	indf2,w,c
  7384  0002C8  6EC9               	movwf	4041,c	;volatile
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;my_i2c.c: 134: ic_ptr->outbufind++;
  7388  0002CA  0100               	movlb	0	; () banked
  7389  0002CC  EE20 F01A          	lfsr	2,26
  7390  0002D0  0100               	movlb	0	; () banked
  7391  0002D2  51E1               	movf	_ic_ptr& (0+255),w,b
  7392  0002D4  26D9               	addwf	fsr2l,f,c
  7393  0002D6  0100               	movlb	0	; () banked
  7394  0002D8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7395  0002DA  22DA               	addwfc	fsr2h,f,c
  7396  0002DC  2ADF               	incf	indf2,f,c
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;my_i2c.c: 135: data_written = 1;
  7400  0002DE  0E01               	movlw	1
  7401  0002E0  0100               	movlb	0	; () banked
  7402  0002E2  6FBF               	movwf	i2c_int_handler@data_written& (0+255),b
  7403                           
  7404                           ;my_i2c.c: 136: } else {
  7405  0002E4  D0CB               	goto	i2l278
  7406  0002E6                     L8:
  7407  0002E6  6EDF               	movwf	indf2,c
  7408  0002E8  D0C9               	goto	i2l278
  7409  0002EA                     i2l298:
  7410                           
  7411                           ; BSR set to: 0
  7412                           ;my_i2c.c: 143: {
  7413                           ;my_i2c.c: 145: if (SSPSTATbits.P == 1) {
  7414  0002EA  A8C7               	btfss	4039,4,c	;volatile
  7415  0002EC  D05A               	goto	i2l3348
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7419  0002EE  0100               	movlb	0	; () banked
  7420  0002F0  EE20 F00B          	lfsr	2,11
  7421  0002F4  0100               	movlb	0	; () banked
  7422  0002F6  51E1               	movf	_ic_ptr& (0+255),w,b
  7423  0002F8  26D9               	addwf	fsr2l,f,c
  7424  0002FA  0100               	movlb	0	; () banked
  7425  0002FC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7426  0002FE  22DA               	addwfc	fsr2h,f,c
  7427  000300  2ADF               	incf	indf2,f,c
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;my_i2c.c: 148: if (data_read) {
  7431  000302  0100               	movlb	0	; () banked
  7432  000304  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7433  000306  B4D8               	btfsc	status,2,c
  7434  000308  D048               	goto	i2l3344
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 1) {
  7438  00030A  AAC7               	btfss	4039,5,c	;volatile
  7439  00030C  D025               	goto	i2l3342
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;my_i2c.c: 150: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7443  00030E  0100               	movlb	0	; () banked
  7444  000310  EE20 F00A          	lfsr	2,10
  7445  000314  0100               	movlb	0	; () banked
  7446  000316  51E1               	movf	_ic_ptr& (0+255),w,b
  7447  000318  26D9               	addwf	fsr2l,f,c
  7448  00031A  0100               	movlb	0	; () banked
  7449  00031C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7450  00031E  22DA               	addwfc	fsr2h,f,c
  7451  000320  50DF               	movf	indf2,w,c
  7452  000322  0100               	movlb	0	; () banked
  7453  000324  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7454  000326  0100               	movlb	0	; () banked
  7455  000328  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7456  00032A  0D01               	mullw	1
  7457  00032C  50F3               	movf	prodl,w,c
  7458  00032E  0100               	movlb	0	; () banked
  7459  000330  25E1               	addwf	_ic_ptr& (0+255),w,b
  7460  000332  6ED9               	movwf	fsr2l,c
  7461  000334  50F4               	movf	prodh,w,c
  7462  000336  0100               	movlb	0	; () banked
  7463  000338  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7464  00033A  6EDA               	movwf	fsr2h,c
  7465  00033C  0100               	movlb	0	; () banked
  7466  00033E  C0C1  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;my_i2c.c: 151: ic_ptr->buflen++;
  7470  000342  0100               	movlb	0	; () banked
  7471  000344  EE20 F00A          	lfsr	2,10
  7472  000348  0100               	movlb	0	; () banked
  7473  00034A  51E1               	movf	_ic_ptr& (0+255),w,b
  7474  00034C  26D9               	addwf	fsr2l,f,c
  7475  00034E  0100               	movlb	0	; () banked
  7476  000350  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7477  000352  22DA               	addwfc	fsr2h,f,c
  7478  000354  2ADF               	incf	indf2,f,c
  7479  000356  D021               	goto	i2l3344
  7480  000358                     i2l3342:
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;my_i2c.c: 154: ic_ptr->error_count++;
  7484  000358  0100               	movlb	0	; () banked
  7485  00035A  EE20 F00E          	lfsr	2,14
  7486  00035E  0100               	movlb	0	; () banked
  7487  000360  51E1               	movf	_ic_ptr& (0+255),w,b
  7488  000362  26D9               	addwf	fsr2l,f,c
  7489  000364  0100               	movlb	0	; () banked
  7490  000366  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7491  000368  22DA               	addwfc	fsr2h,f,c
  7492  00036A  2ADF               	incf	indf2,f,c
  7493                           
  7494                           ;my_i2c.c: 155: ic_ptr->error_code = 0x6;
  7495  00036C  0100               	movlb	0	; () banked
  7496  00036E  EE20 F00D          	lfsr	2,13
  7497  000372  0100               	movlb	0	; () banked
  7498  000374  51E1               	movf	_ic_ptr& (0+255),w,b
  7499  000376  26D9               	addwf	fsr2l,f,c
  7500  000378  0100               	movlb	0	; () banked
  7501  00037A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7502  00037C  22DA               	addwfc	fsr2h,f,c
  7503  00037E  0E06               	movlw	6
  7504  000380  6EDF               	movwf	indf2,c
  7505                           
  7506                           ;my_i2c.c: 156: ic_ptr->status = 0x5;
  7507  000382  0100               	movlb	0	; () banked
  7508  000384  EE20 F00C          	lfsr	2,12
  7509  000388  0100               	movlb	0	; () banked
  7510  00038A  51E1               	movf	_ic_ptr& (0+255),w,b
  7511  00038C  26D9               	addwf	fsr2l,f,c
  7512  00038E  0100               	movlb	0	; () banked
  7513  000390  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7514  000392  22DA               	addwfc	fsr2h,f,c
  7515  000394  0E05               	movlw	5
  7516  000396  6EDF               	movwf	indf2,c
  7517  000398  D050               	goto	L10
  7518  00039A                     i2l3344:
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;my_i2c.c: 159: msg_ready = 1;
  7522  00039A  0E01               	movlw	1
  7523  00039C  0100               	movlb	0	; () banked
  7524  00039E  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7525                           
  7526                           ; BSR set to: 0
  7527  0003A0  D04C               	goto	L10
  7528  0003A2                     i2l3348:
  7529                           
  7530                           ; BSR set to: 0
  7531  0003A2  0100               	movlb	0	; () banked
  7532  0003A4  51C4               	movf	i2c_int_handler@data_read& (0+255),w,b
  7533  0003A6  B4D8               	btfsc	status,2,c
  7534  0003A8  D069               	goto	i2l278
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;my_i2c.c: 163: ic_ptr->event_count++;
  7538  0003AA  0100               	movlb	0	; () banked
  7539  0003AC  EE20 F00B          	lfsr	2,11
  7540  0003B0  0100               	movlb	0	; () banked
  7541  0003B2  51E1               	movf	_ic_ptr& (0+255),w,b
  7542  0003B4  26D9               	addwf	fsr2l,f,c
  7543  0003B6  0100               	movlb	0	; () banked
  7544  0003B8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7545  0003BA  22DA               	addwfc	fsr2h,f,c
  7546  0003BC  2ADF               	incf	indf2,f,c
  7547                           
  7548                           ; BSR set to: 0
  7549                           ;my_i2c.c: 164: if (SSPSTATbits.D_A == 1) {
  7550  0003BE  AAC7               	btfss	4039,5,c	;volatile
  7551  0003C0  D025               	goto	i2l306
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;my_i2c.c: 165: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7555  0003C2  0100               	movlb	0	; () banked
  7556  0003C4  EE20 F00A          	lfsr	2,10
  7557  0003C8  0100               	movlb	0	; () banked
  7558  0003CA  51E1               	movf	_ic_ptr& (0+255),w,b
  7559  0003CC  26D9               	addwf	fsr2l,f,c
  7560  0003CE  0100               	movlb	0	; () banked
  7561  0003D0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7562  0003D2  22DA               	addwfc	fsr2h,f,c
  7563  0003D4  50DF               	movf	indf2,w,c
  7564  0003D6  0100               	movlb	0	; () banked
  7565  0003D8  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7566  0003DA  0100               	movlb	0	; () banked
  7567  0003DC  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7568  0003DE  0D01               	mullw	1
  7569  0003E0  50F3               	movf	prodl,w,c
  7570  0003E2  0100               	movlb	0	; () banked
  7571  0003E4  25E1               	addwf	_ic_ptr& (0+255),w,b
  7572  0003E6  6ED9               	movwf	fsr2l,c
  7573  0003E8  50F4               	movf	prodh,w,c
  7574  0003EA  0100               	movlb	0	; () banked
  7575  0003EC  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7576  0003EE  6EDA               	movwf	fsr2h,c
  7577  0003F0  0100               	movlb	0	; () banked
  7578  0003F2  C0C1  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;my_i2c.c: 166: ic_ptr->buflen++;
  7582  0003F6  0100               	movlb	0	; () banked
  7583  0003F8  EE20 F00A          	lfsr	2,10
  7584  0003FC  0100               	movlb	0	; () banked
  7585  0003FE  51E1               	movf	_ic_ptr& (0+255),w,b
  7586  000400  26D9               	addwf	fsr2l,f,c
  7587  000402  0100               	movlb	0	; () banked
  7588  000404  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7589  000406  22DA               	addwfc	fsr2h,f,c
  7590  000408  2ADF               	incf	indf2,f,c
  7591                           
  7592                           ;my_i2c.c: 167: } else {
  7593  00040A  D038               	goto	i2l278
  7594  00040C                     i2l306:
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;my_i2c.c: 168: if (SSPSTATbits.R_W == 1) {
  7598  00040C  A4C7               	btfss	4039,2,c	;volatile
  7599  00040E  D6C7               	goto	i2l3300
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;my_i2c.c: 169: ic_ptr->status = 0x8;
  7603  000410  0100               	movlb	0	; () banked
  7604  000412  EE20 F00C          	lfsr	2,12
  7605  000416  0100               	movlb	0	; () banked
  7606  000418  51E1               	movf	_ic_ptr& (0+255),w,b
  7607  00041A  26D9               	addwf	fsr2l,f,c
  7608  00041C  0100               	movlb	0	; () banked
  7609  00041E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7610  000420  22DA               	addwfc	fsr2h,f,c
  7611  000422  0E08               	movlw	8
  7612  000424  6EDF               	movwf	indf2,c
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;my_i2c.c: 170: msg_ready = 1;
  7616  000426  0E01               	movlw	1
  7617  000428  0100               	movlb	0	; () banked
  7618  00042A  6FC3               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7619  00042C                     L7:
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;my_i2c.c: 171: msg_to_send = 1;
  7623  00042C  0E01               	movlw	1
  7624  00042E  0100               	movlb	0	; () banked
  7625  000430  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;my_i2c.c: 173: data_read = 0;
  7629  000432  0E00               	movlw	0
  7630  000434  0100               	movlb	0	; () banked
  7631  000436  6FC4               	movwf	i2c_int_handler@data_read& (0+255),b
  7632                           
  7633                           ;my_i2c.c: 174: } else {
  7634  000438  D021               	goto	i2l278
  7635  00043A                     L10:
  7636                           
  7637                           ;my_i2c.c: 177: ic_ptr->status = 0x5;
  7638  00043A  0100               	movlb	0	; () banked
  7639  00043C  EE20 F00C          	lfsr	2,12
  7640  000440  0100               	movlb	0	; () banked
  7641  000442  51E1               	movf	_ic_ptr& (0+255),w,b
  7642  000444  26D9               	addwf	fsr2l,f,c
  7643  000446  0100               	movlb	0	; () banked
  7644  000448  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7645  00044A  22DA               	addwfc	fsr2h,f,c
  7646  00044C  0E05               	movlw	5
  7647  00044E  D74B               	goto	L8
  7648  000450                     i2l3370:
  7649                           
  7650                           ; BSR set to: 0
  7651  000450  0100               	movlb	0	; () banked
  7652  000452  EE20 F00C          	lfsr	2,12
  7653  000456  0100               	movlb	0	; () banked
  7654  000458  51E1               	movf	_ic_ptr& (0+255),w,b
  7655  00045A  26D9               	addwf	fsr2l,f,c
  7656  00045C  0100               	movlb	0	; () banked
  7657  00045E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7658  000460  22DA               	addwfc	fsr2h,f,c
  7659  000462  50DF               	movf	indf2,w,c
  7660                           
  7661                           ; Switch size 1, requested type "space"
  7662                           ; Number of cases is 4, Range of values is 5 to 8
  7663                           ; switch strategies available:
  7664                           ; Name         Instructions Cycles
  7665                           ; simple_byte           13     7 (average)
  7666                           ;	Chosen strategy is simple_byte
  7667  000464  0A05               	xorlw	5	; case 5
  7668  000466  B4D8               	btfsc	status,2,c
  7669  000468  D66B               	goto	i2l280
  7670  00046A  0A03               	xorlw	3	; case 6
  7671  00046C  B4D8               	btfsc	status,2,c
  7672  00046E  D681               	goto	i2l284
  7673  000470  0A01               	xorlw	1	; case 7
  7674  000472  B4D8               	btfsc	status,2,c
  7675  000474  D73A               	goto	i2l298
  7676  000476  0A0F               	xorlw	15	; case 8
  7677  000478  B4D8               	btfsc	status,2,c
  7678  00047A  D6F0               	goto	i2l3320
  7679  00047C                     i2l278:
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;my_i2c.c: 184: }
  7683                           ;my_i2c.c: 187: if (data_read || data_written) {
  7684  00047C  0100               	movlb	0	; () banked
  7685  00047E  67C4               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7686  000480  D004               	goto	i2l312
  7687                           
  7688                           ; BSR set to: 0
  7689  000482  0100               	movlb	0	; () banked
  7690  000484  51BF               	movf	i2c_int_handler@data_written& (0+255),w,b
  7691  000486  B4D8               	btfsc	status,2,c
  7692  000488  D002               	goto	i2l3376
  7693  00048A                     i2l312:
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;my_i2c.c: 189: if (SSPCON1bits.CKP == 0) {
  7697  00048A  A8C6               	btfss	4038,4,c	;volatile
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;my_i2c.c: 190: SSPCON1bits.CKP = 1;
  7701  00048C  88C6               	bsf	4038,4,c	;volatile
  7702  00048E                     i2l3376:
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;my_i2c.c: 191: }
  7706                           ;my_i2c.c: 192: }
  7707                           ;my_i2c.c: 195: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7708  00048E  0100               	movlb	0	; () banked
  7709  000490  EE20 F00A          	lfsr	2,10
  7710  000494  0100               	movlb	0	; () banked
  7711  000496  51E1               	movf	_ic_ptr& (0+255),w,b
  7712  000498  26D9               	addwf	fsr2l,f,c
  7713  00049A  0100               	movlb	0	; () banked
  7714  00049C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7715  00049E  22DA               	addwfc	fsr2h,f,c
  7716  0004A0  0E08               	movlw	8
  7717  0004A2  64DF               	cpfsgt	indf2,c
  7718  0004A4  D023               	goto	i2l3382
  7719                           
  7720                           ; BSR set to: 0
  7721  0004A6  0100               	movlb	0	; () banked
  7722  0004A8  67C3               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7723  0004AA  D020               	goto	i2l3382
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;my_i2c.c: 196: ic_ptr->status = 0x5;
  7727  0004AC  0100               	movlb	0	; () banked
  7728  0004AE  EE20 F00C          	lfsr	2,12
  7729  0004B2  0100               	movlb	0	; () banked
  7730  0004B4  51E1               	movf	_ic_ptr& (0+255),w,b
  7731  0004B6  26D9               	addwf	fsr2l,f,c
  7732  0004B8  0100               	movlb	0	; () banked
  7733  0004BA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7734  0004BC  22DA               	addwfc	fsr2h,f,c
  7735  0004BE  0E05               	movlw	5
  7736  0004C0  6EDF               	movwf	indf2,c
  7737                           
  7738                           ;my_i2c.c: 197: ic_ptr->error_count++;
  7739  0004C2  0100               	movlb	0	; () banked
  7740  0004C4  EE20 F00E          	lfsr	2,14
  7741  0004C8  0100               	movlb	0	; () banked
  7742  0004CA  51E1               	movf	_ic_ptr& (0+255),w,b
  7743  0004CC  26D9               	addwf	fsr2l,f,c
  7744  0004CE  0100               	movlb	0	; () banked
  7745  0004D0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7746  0004D2  22DA               	addwfc	fsr2h,f,c
  7747  0004D4  2ADF               	incf	indf2,f,c
  7748                           
  7749                           ;my_i2c.c: 198: ic_ptr->error_code = 0x7;
  7750  0004D6  0100               	movlb	0	; () banked
  7751  0004D8  EE20 F00D          	lfsr	2,13
  7752  0004DC  0100               	movlb	0	; () banked
  7753  0004DE  51E1               	movf	_ic_ptr& (0+255),w,b
  7754  0004E0  26D9               	addwf	fsr2l,f,c
  7755  0004E2  0100               	movlb	0	; () banked
  7756  0004E4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7757  0004E6  22DA               	addwfc	fsr2h,f,c
  7758  0004E8  0E07               	movlw	7
  7759  0004EA  6EDF               	movwf	indf2,c
  7760  0004EC                     i2l3382:
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;my_i2c.c: 199: }
  7764                           ;my_i2c.c: 201: if (msg_ready) {
  7765  0004EC  0100               	movlb	0	; () banked
  7766  0004EE  51C3               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7767  0004F0  B4D8               	btfsc	status,2,c
  7768  0004F2  D03A               	goto	i2l3390
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;my_i2c.c: 202: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7772  0004F4  0100               	movlb	0	; () banked
  7773  0004F6  EE20 F00B          	lfsr	2,11
  7774  0004FA  0100               	movlb	0	; () banked
  7775  0004FC  51E1               	movf	_ic_ptr& (0+255),w,b
  7776  0004FE  26D9               	addwf	fsr2l,f,c
  7777  000500  0100               	movlb	0	; () banked
  7778  000502  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7779  000504  22DA               	addwfc	fsr2h,f,c
  7780  000506  0100               	movlb	0	; () banked
  7781  000508  EE10 F00A          	lfsr	1,10
  7782  00050C  0100               	movlb	0	; () banked
  7783  00050E  51E1               	movf	_ic_ptr& (0+255),w,b
  7784  000510  26E1               	addwf	fsr1l,f,c
  7785  000512  0100               	movlb	0	; () banked
  7786  000514  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7787  000516  22E2               	addwfc	fsr1h,f,c
  7788  000518  50E7               	movf	indf1,w,c
  7789  00051A  0100               	movlb	0	; () banked
  7790  00051C  6FBB               	movwf	??_i2c_int_handler& (0+255),b
  7791  00051E  0100               	movlb	0	; () banked
  7792  000520  51BB               	movf	??_i2c_int_handler& (0+255),w,b
  7793  000522  0D01               	mullw	1
  7794  000524  50F3               	movf	prodl,w,c
  7795  000526  0100               	movlb	0	; () banked
  7796  000528  25E1               	addwf	_ic_ptr& (0+255),w,b
  7797  00052A  6EE1               	movwf	fsr1l,c
  7798  00052C  50F4               	movf	prodh,w,c
  7799  00052E  0100               	movlb	0	; () banked
  7800  000530  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7801  000532  6EE2               	movwf	fsr1h,c
  7802  000534  CFDF FFE7          	movff	indf2,indf1
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;my_i2c.c: 203: ToMainHigh_sendmsg(ic_ptr->buflen, 45, (void *) ic_ptr->buffer);
  7806  000538  0E2D               	movlw	45
  7807  00053A  6E45               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  7808  00053C  0100               	movlb	0	; () banked
  7809  00053E  C0E2  F047         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  7810  000542  0100               	movlb	0	; () banked
  7811  000544  C0E1  F046         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  7812  000548  0100               	movlb	0	; () banked
  7813  00054A  EE20 F00A          	lfsr	2,10
  7814  00054E  0100               	movlb	0	; () banked
  7815  000550  51E1               	movf	_ic_ptr& (0+255),w,b
  7816  000552  26D9               	addwf	fsr2l,f,c
  7817  000554  0100               	movlb	0	; () banked
  7818  000556  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7819  000558  22DA               	addwfc	fsr2h,f,c
  7820  00055A  50DF               	movf	indf2,w,c
  7821  00055C  EC8D  F00D         	call	i2_ToMainHigh_sendmsg
  7822                           
  7823                           ;my_i2c.c: 204: ic_ptr->buflen = 0;
  7824  000560  0100               	movlb	0	; () banked
  7825  000562  EE20 F00A          	lfsr	2,10
  7826  000566  D03E               	goto	L9
  7827  000568                     i2l3390:
  7828                           
  7829                           ; BSR set to: 0
  7830  000568  0100               	movlb	0	; () banked
  7831  00056A  EE20 F00E          	lfsr	2,14
  7832  00056E  0100               	movlb	0	; () banked
  7833  000570  51E1               	movf	_ic_ptr& (0+255),w,b
  7834  000572  26D9               	addwf	fsr2l,f,c
  7835  000574  0100               	movlb	0	; () banked
  7836  000576  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7837  000578  22DA               	addwfc	fsr2h,f,c
  7838  00057A  50DF               	movf	indf2,w,c
  7839  00057C  B4D8               	btfsc	status,2,c
  7840  00057E  D03A               	goto	i2l3398
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;my_i2c.c: 206: error_buf[0] = ic_ptr->error_count;
  7844  000580  0100               	movlb	0	; () banked
  7845  000582  EE20 F00E          	lfsr	2,14
  7846  000586  0100               	movlb	0	; () banked
  7847  000588  51E1               	movf	_ic_ptr& (0+255),w,b
  7848  00058A  26D9               	addwf	fsr2l,f,c
  7849  00058C  0100               	movlb	0	; () banked
  7850  00058E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7851  000590  22DA               	addwfc	fsr2h,f,c
  7852  000592  50DF               	movf	indf2,w,c
  7853  000594  0100               	movlb	0	; () banked
  7854  000596  6FBC               	movwf	i2c_int_handler@error_buf& (0+255),b
  7855                           
  7856                           ;my_i2c.c: 207: error_buf[1] = ic_ptr->error_code;
  7857  000598  0100               	movlb	0	; () banked
  7858  00059A  EE20 F00D          	lfsr	2,13
  7859  00059E  0100               	movlb	0	; () banked
  7860  0005A0  51E1               	movf	_ic_ptr& (0+255),w,b
  7861  0005A2  26D9               	addwf	fsr2l,f,c
  7862  0005A4  0100               	movlb	0	; () banked
  7863  0005A6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7864  0005A8  22DA               	addwfc	fsr2h,f,c
  7865  0005AA  50DF               	movf	indf2,w,c
  7866  0005AC  0100               	movlb	0	; () banked
  7867  0005AE  6FBD               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7868                           
  7869                           ;my_i2c.c: 208: error_buf[2] = ic_ptr->event_count;
  7870  0005B0  0100               	movlb	0	; () banked
  7871  0005B2  EE20 F00B          	lfsr	2,11
  7872  0005B6  0100               	movlb	0	; () banked
  7873  0005B8  51E1               	movf	_ic_ptr& (0+255),w,b
  7874  0005BA  26D9               	addwf	fsr2l,f,c
  7875  0005BC  0100               	movlb	0	; () banked
  7876  0005BE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7877  0005C0  22DA               	addwfc	fsr2h,f,c
  7878  0005C2  50DF               	movf	indf2,w,c
  7879  0005C4  0100               	movlb	0	; () banked
  7880  0005C6  6FBE               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;my_i2c.c: 209: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7884  0005C8  0E29               	movlw	41
  7885  0005CA  6E45               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  7886  0005CC  0100               	movlb	0	; () banked
  7887  0005CE  0E00               	movlw	high i2c_int_handler@error_buf
  7888  0005D0  6E47               	movwf	i2ToMainHigh_sendmsg@data+1,c
  7889  0005D2  0100               	movlb	0	; () banked
  7890  0005D4  0EBC               	movlw	low i2c_int_handler@error_buf
  7891  0005D6  6E46               	movwf	i2ToMainHigh_sendmsg@data,c
  7892  0005D8  0E03               	movlw	3
  7893  0005DA  EC8D  F00D         	call	i2_ToMainHigh_sendmsg
  7894                           
  7895                           ;my_i2c.c: 210: ic_ptr->error_count = 0;
  7896  0005DE  0100               	movlb	0	; () banked
  7897  0005E0  EE20 F00E          	lfsr	2,14
  7898  0005E4                     L9:
  7899  0005E4  0100               	movlb	0	; () banked
  7900  0005E6  51E1               	movf	_ic_ptr& (0+255),w,b
  7901  0005E8  26D9               	addwf	fsr2l,f,c
  7902  0005EA  0100               	movlb	0	; () banked
  7903  0005EC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7904  0005EE  22DA               	addwfc	fsr2h,f,c
  7905  0005F0  0E00               	movlw	0
  7906  0005F2  6EDF               	movwf	indf2,c
  7907  0005F4                     i2l3398:
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;my_i2c.c: 211: }
  7911                           ;my_i2c.c: 212: if (msg_to_send) {
  7912  0005F4  0100               	movlb	0	; () banked
  7913  0005F6  51C2               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7914  0005F8  B4D8               	btfsc	status,2,c
  7915  0005FA  0012               	return	
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;my_i2c.c: 214: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7919  0005FC  0E2A               	movlw	42
  7920  0005FE  6E45               	movwf	i2ToMainHigh_sendmsg@msgtype,c
  7921  000600  0100               	movlb	0	; () banked
  7922  000602  C0E2  F047         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  7923  000606  0100               	movlb	0	; () banked
  7924  000608  C0E1  F046         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  7925  00060C  0E00               	movlw	0
  7926  00060E  EC8D  F00D         	call	i2_ToMainHigh_sendmsg
  7927                           
  7928                           ;my_i2c.c: 215: msg_to_send = 0;
  7929  000612  0E00               	movlw	0
  7930  000614  0100               	movlb	0	; () banked
  7931  000616  6FC2               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7932  000618  0012               	return	
  7933  00061A                     __end_of_i2c_int_handler:
  7934                           	opt stack 0
  7935                           pclatu	equ	0xFFB
  7936                           pclath	equ	0xFFA
  7937                           tblptru	equ	0xFF8
  7938                           tblptrh	equ	0xFF7
  7939                           tblptrl	equ	0xFF6
  7940                           tablat	equ	0xFF5
  7941                           prodh	equ	0xFF4
  7942                           prodl	equ	0xFF3
  7943                           intcon	equ	0xFF2
  7944                           intcon2	equ	0xFF1
  7945                           postinc0	equ	0xFEE
  7946                           fsr0h	equ	0xFEA
  7947                           fsr0l	equ	0xFE9
  7948                           wreg	equ	0xFE8
  7949                           indf1	equ	0xFE7
  7950                           fsr1h	equ	0xFE2
  7951                           fsr1l	equ	0xFE1
  7952                           bsr	equ	0xFE0
  7953                           indf2	equ	0xFDF
  7954                           postinc2	equ	0xFDE
  7955                           postdec2	equ	0xFDD
  7956                           fsr2h	equ	0xFDA
  7957                           fsr2l	equ	0xFD9
  7958                           status	equ	0xFD8
  7959                           
  7960 ;; *************** function i2_ToMainHigh_sendmsg *****************
  7961 ;; Defined at:
  7962 ;;		line 126 in file "../src/messages.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  length          1    wreg     unsigned char 
  7965 ;;  msgtype         1   68[COMRAM] unsigned char 
  7966 ;;  data            2   69[COMRAM] PTR void 
  7967 ;;		 -> timer1_int_handler@reverse(1), timer1_int_handler@stop(1), timer1_int_handler@right(1), timer1_int_handler@left(
      +1), 
  7968 ;;		 -> timer1_int_handler@forward(1), timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@rig
      +ht(1), 
  7969 ;;		 -> timer0_int_handler@left(1), timer0_int_handler@forward(1), NULL(0), i2c_int_handler@error_buf(3), 
  7970 ;;		 -> main@ic(28), 
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;  length          1   71[COMRAM] unsigned char 
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      char 
  7975 ;; Registers used:
  7976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7982 ;;      Params:         3       0       0       0       0
  7983 ;;      Locals:         1       0       0       0       0
  7984 ;;      Temps:          0       0       0       0       0
  7985 ;;      Totals:         4       0       0       0       0
  7986 ;;Total ram usage:        4 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:    2
  7989 ;; This function calls:
  7990 ;;		i2_send_msg
  7991 ;; This function is called by:
  7992 ;;		_i2c_int_handler
  7993 ;;		_timer0_int_handler
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           	psect	text48
  7998  001B1A                     __ptext48:
  7999                           	opt stack 0
  8000  001B1A                     i2_ToMainHigh_sendmsg:
  8001                           	opt stack 16
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;incstack = 0
  8005                           ;i2ToMainHigh_sendmsg@length stored from wreg
  8006  001B1A  6E48               	movwf	i2ToMainHigh_sendmsg@length,c
  8007                           
  8008                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8009                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  8010  001B1C  0100               	movlb	0	; () banked
  8011  001B1E  0E00               	movlw	high _ToMainHigh_MQ
  8012  001B20  6E3F               	movwf	i2send_msg@qptr+1,c
  8013  001B22  0100               	movlb	0	; () banked
  8014  001B24  0E80               	movlw	low _ToMainHigh_MQ
  8015  001B26  6E3E               	movwf	i2send_msg@qptr,c
  8016  001B28  C048  F040         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  8017  001B2C  C045  F041         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8018  001B30  C047  F043         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8019  001B34  C046  F042         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  8020  001B38  EC52  F007         	call	i2_send_msg	;wreg free
  8021  001B3C  0012               	return	
  8022  001B3E                     __end_ofi2_ToMainHigh_sendmsg:
  8023                           	opt stack 0
  8024                           pclatu	equ	0xFFB
  8025                           pclath	equ	0xFFA
  8026                           tblptru	equ	0xFF8
  8027                           tblptrh	equ	0xFF7
  8028                           tblptrl	equ	0xFF6
  8029                           tablat	equ	0xFF5
  8030                           prodh	equ	0xFF4
  8031                           prodl	equ	0xFF3
  8032                           intcon	equ	0xFF2
  8033                           intcon2	equ	0xFF1
  8034                           postinc0	equ	0xFEE
  8035                           fsr0h	equ	0xFEA
  8036                           fsr0l	equ	0xFE9
  8037                           wreg	equ	0xFE8
  8038                           indf1	equ	0xFE7
  8039                           fsr1h	equ	0xFE2
  8040                           fsr1l	equ	0xFE1
  8041                           bsr	equ	0xFE0
  8042                           indf2	equ	0xFDF
  8043                           postinc2	equ	0xFDE
  8044                           postdec2	equ	0xFDD
  8045                           fsr2h	equ	0xFDA
  8046                           fsr2l	equ	0xFD9
  8047                           status	equ	0xFD8
  8048                           
  8049 ;; *************** function i2_send_msg *****************
  8050 ;; Defined at:
  8051 ;;		line 24 in file "../src/messages.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  qptr            2   61[COMRAM] PTR struct __msg_queue
  8054 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8055 ;;  length          1   63[COMRAM] unsigned char 
  8056 ;;  msgtype         1   64[COMRAM] unsigned char 
  8057 ;;  data            2   65[COMRAM] PTR void 
  8058 ;;		 -> timer1_int_handler@reverse(1), timer1_int_handler@stop(1), timer1_int_handler@right(1), timer1_int_handler@left(
      +1), 
  8059 ;;		 -> timer1_int_handler@forward(1), timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@rig
      +ht(1), 
  8060 ;;		 -> timer0_int_handler@left(1), timer0_int_handler@forward(1), NULL(0), i2c_int_handler@error_buf(3), 
  8061 ;;		 -> main@msgbuffer(11), main@t1thread_data(2), main@ic(28), main@uc(18), 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  8064 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8065 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8066 ;;  send_msg        2    0[BANK0 ] unsigned int 
  8067 ;;  send_msg        1    2[BANK0 ] unsigned char 
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      char 
  8070 ;; Registers used:
  8071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8077 ;;      Params:         6       0       0       0       0
  8078 ;;      Locals:         0       5       0       0       0
  8079 ;;      Temps:          1       0       0       0       0
  8080 ;;      Totals:         7       5       0       0       0
  8081 ;;Total ram usage:       12 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; Hardware stack levels required when called:    1
  8084 ;; This function calls:
  8085 ;;		i2_memcpy
  8086 ;; This function is called by:
  8087 ;;		i2_ToMainHigh_sendmsg
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text49
  8092  000EA4                     __ptext49:
  8093                           	opt stack 0
  8094  000EA4                     i2_send_msg:
  8095                           	opt stack 16
  8096                           
  8097                           ;messages.c: 25: unsigned char slot;
  8098                           ;messages.c: 27: msg *qmsg;
  8099                           ;messages.c: 28: size_t tlength = length;
  8100                           
  8101                           ;incstack = 0
  8102  000EA4  0100               	movlb	0	; () banked
  8103  000EA6  C040  F0B6         	movff	i2send_msg@length,i2send_msg@tlength
  8104  000EAA  0100               	movlb	0	; () banked
  8105  000EAC  6BB7               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8106                           
  8107                           ; BSR set to: 0
  8108                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8109  000EAE  EE20 F034          	lfsr	2,52
  8110  000EB2  503E               	movf	i2send_msg@qptr,w,c
  8111  000EB4  26D9               	addwf	fsr2l,f,c
  8112  000EB6  503F               	movf	i2send_msg@qptr+1,w,c
  8113  000EB8  22DA               	addwfc	fsr2h,f,c
  8114  000EBA  50DF               	movf	indf2,w,c
  8115  000EBC  0100               	movlb	0	; () banked
  8116  000EBE  6FB8               	movwf	i2send_msg@slot& (0+255),b
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8120  000EC0  0100               	movlb	0	; () banked
  8121  000EC2  51B8               	movf	i2send_msg@slot& (0+255),w,b
  8122  000EC4  0D0D               	mullw	13
  8123  000EC6  50F3               	movf	prodl,w,c
  8124  000EC8  243E               	addwf	i2send_msg@qptr,w,c
  8125  000ECA  0100               	movlb	0	; () banked
  8126  000ECC  6FB9               	movwf	i2send_msg@qmsg& (0+255),b
  8127  000ECE  50F4               	movf	prodh,w,c
  8128  000ED0  203F               	addwfc	i2send_msg@qptr+1,w,c
  8129  000ED2  0100               	movlb	0	; () banked
  8130  000ED4  6FBA               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8131                           
  8132                           ; BSR set to: 0
  8133                           ;messages.c: 41: if (qmsg->full != 0) {
  8134  000ED6  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8135  000EDA  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8136  000EDE  50DF               	movf	indf2,w,c
  8137  000EE0  B4D8               	btfsc	status,2,c
  8138  000EE2  D002               	goto	i2l3190
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;messages.c: 42: return (-1);
  8142  000EE4  0EFF               	movlw	255
  8143  000EE6  0012               	return	
  8144  000EE8                     i2l3190:
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;messages.c: 43: }
  8148                           ;messages.c: 46: qmsg->length = length;
  8149  000EE8  0100               	movlb	0	; () banked
  8150  000EEA  EE20 F001          	lfsr	2,1
  8151  000EEE  0100               	movlb	0	; () banked
  8152  000EF0  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8153  000EF2  26D9               	addwf	fsr2l,f,c
  8154  000EF4  0100               	movlb	0	; () banked
  8155  000EF6  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8156  000EF8  22DA               	addwfc	fsr2h,f,c
  8157  000EFA  C040  FFDF         	movff	i2send_msg@length,indf2
  8158                           
  8159                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8160  000EFE  0100               	movlb	0	; () banked
  8161  000F00  EE20 F002          	lfsr	2,2
  8162  000F04  0100               	movlb	0	; () banked
  8163  000F06  51B9               	movf	i2send_msg@qmsg& (0+255),w,b
  8164  000F08  26D9               	addwf	fsr2l,f,c
  8165  000F0A  0100               	movlb	0	; () banked
  8166  000F0C  51BA               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8167  000F0E  22DA               	addwfc	fsr2h,f,c
  8168  000F10  C041  FFDF         	movff	i2send_msg@msgtype,indf2
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8172  000F14  0E03               	movlw	3
  8173  000F16  0100               	movlb	0	; () banked
  8174  000F18  25B9               	addwf	i2send_msg@qmsg& (0+255),w,b
  8175  000F1A  6E34               	movwf	i2memcpy@d1,c
  8176  000F1C  0E00               	movlw	0
  8177  000F1E  0100               	movlb	0	; () banked
  8178  000F20  21BA               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8179  000F22  6E35               	movwf	i2memcpy@d1+1,c
  8180  000F24  C043  F037         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8181  000F28  C042  F036         	movff	i2send_msg@data,i2memcpy@s1
  8182  000F2C  C0B6  F038         	movff	i2send_msg@tlength,i2memcpy@n
  8183  000F30  C0B7  F039         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8184  000F34  ECDC  F00B         	call	i2_memcpy	;wreg free
  8185                           
  8186                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8187  000F38  EE20 F034          	lfsr	2,52
  8188  000F3C  503E               	movf	i2send_msg@qptr,w,c
  8189  000F3E  26D9               	addwf	fsr2l,f,c
  8190  000F40  503F               	movf	i2send_msg@qptr+1,w,c
  8191  000F42  22DA               	addwfc	fsr2h,f,c
  8192  000F44  EE10 F034          	lfsr	1,52
  8193  000F48  503E               	movf	i2send_msg@qptr,w,c
  8194  000F4A  26E1               	addwf	fsr1l,f,c
  8195  000F4C  503F               	movf	i2send_msg@qptr+1,w,c
  8196  000F4E  22E2               	addwfc	fsr1h,f,c
  8197  000F50  50E7               	movf	indf1,w,c
  8198  000F52  6E44               	movwf	??i2_send_msg& (0+255),c
  8199  000F54  2844               	incf	??i2_send_msg,w,c
  8200  000F56  0B03               	andlw	3
  8201  000F58  6EDF               	movwf	indf2,c
  8202                           
  8203                           ;messages.c: 59: qmsg->full = 1;
  8204  000F5A  C0B9  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8205  000F5E  C0BA  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8206  000F62  0E01               	movlw	1
  8207  000F64  6EDF               	movwf	indf2,c
  8208                           
  8209                           ;messages.c: 60: return (1);
  8210  000F66  0E01               	movlw	1
  8211  000F68  0012               	return	
  8212  000F6A                     __end_ofi2_send_msg:
  8213                           	opt stack 0
  8214                           pclatu	equ	0xFFB
  8215                           pclath	equ	0xFFA
  8216                           tblptru	equ	0xFF8
  8217                           tblptrh	equ	0xFF7
  8218                           tblptrl	equ	0xFF6
  8219                           tablat	equ	0xFF5
  8220                           prodh	equ	0xFF4
  8221                           prodl	equ	0xFF3
  8222                           intcon	equ	0xFF2
  8223                           intcon2	equ	0xFF1
  8224                           postinc0	equ	0xFEE
  8225                           fsr0h	equ	0xFEA
  8226                           fsr0l	equ	0xFE9
  8227                           wreg	equ	0xFE8
  8228                           indf1	equ	0xFE7
  8229                           fsr1h	equ	0xFE2
  8230                           fsr1l	equ	0xFE1
  8231                           bsr	equ	0xFE0
  8232                           indf2	equ	0xFDF
  8233                           postinc2	equ	0xFDE
  8234                           postdec2	equ	0xFDD
  8235                           fsr2h	equ	0xFDA
  8236                           fsr2l	equ	0xFD9
  8237                           status	equ	0xFD8
  8238                           
  8239 ;; *************** function i2_memcpy *****************
  8240 ;; Defined at:
  8241 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  d1              2   51[COMRAM] PTR void 
  8244 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8245 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8246 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(18), 
  8247 ;;  s1              2   53[COMRAM] PTR const void 
  8248 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8249 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8250 ;;		 -> timer1_int_handler@reverse(1), timer1_int_handler@stop(1), timer1_int_handler@right(1), timer1_int_handler@left(
      +1), 
  8251 ;;		 -> timer1_int_handler@forward(1), timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@rig
      +ht(1), 
  8252 ;;		 -> timer0_int_handler@left(1), timer0_int_handler@forward(1), NULL(0), i2c_int_handler@error_buf(3), 
  8253 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8254 ;;		 -> main@msgbuffer(11), main@t1thread_data(2), main@ic(28), main@uc(18), 
  8255 ;;  n               2   55[COMRAM] unsigned int 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  memcpy          2   59[COMRAM] PTR const unsigned char 
  8258 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8259 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8260 ;;		 -> timer1_int_handler@reverse(1), timer1_int_handler@stop(1), timer1_int_handler@right(1), timer1_int_handler@left(
      +1), 
  8261 ;;		 -> timer1_int_handler@forward(1), timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@rig
      +ht(1), 
  8262 ;;		 -> timer0_int_handler@left(1), timer0_int_handler@forward(1), NULL(0), i2c_int_handler@error_buf(3), 
  8263 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8264 ;;		 -> main@msgbuffer(11), main@t1thread_data(2), main@ic(28), main@uc(18), 
  8265 ;;  memcpy          2   57[COMRAM] PTR unsigned char 
  8266 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8267 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8268 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(18), 
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  2   51[COMRAM] PTR void 
  8271 ;; Registers used:
  8272 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8278 ;;      Params:         6       0       0       0       0
  8279 ;;      Locals:         4       0       0       0       0
  8280 ;;      Temps:          0       0       0       0       0
  8281 ;;      Totals:        10       0       0       0       0
  8282 ;;Total ram usage:       10 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		i2_send_msg
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text50
  8292  0017B8                     __ptext50:
  8293                           	opt stack 0
  8294  0017B8                     i2_memcpy:
  8295                           	opt stack 16
  8296                           
  8297                           ;incstack = 0
  8298  0017B8  C037  F03D         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8299  0017BC  C036  F03C         	movff	i2memcpy@s1,i2memcpy@s
  8300  0017C0  C035  F03B         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8301  0017C4  C034  F03A         	movff	i2memcpy@d1,i2memcpy@d
  8302  0017C8  D00E               	goto	i2l3152
  8303  0017CA                     i2l3146:
  8304  0017CA  C03C  FFD9         	movff	i2memcpy@s,fsr2l
  8305  0017CE  C03D  FFDA         	movff	i2memcpy@s+1,fsr2h
  8306  0017D2  C03A  FFE1         	movff	i2memcpy@d,fsr1l
  8307  0017D6  C03B  FFE2         	movff	i2memcpy@d+1,fsr1h
  8308  0017DA  CFDF FFE7          	movff	indf2,indf1
  8309  0017DE  4A3C               	infsnz	i2memcpy@s,f,c
  8310  0017E0  2A3D               	incf	i2memcpy@s+1,f,c
  8311  0017E2  4A3A               	infsnz	i2memcpy@d,f,c
  8312  0017E4  2A3B               	incf	i2memcpy@d+1,f,c
  8313  0017E6                     i2l3152:
  8314  0017E6  0638               	decf	i2memcpy@n,f,c
  8315  0017E8  A0D8               	btfss	status,0,c
  8316  0017EA  0639               	decf	i2memcpy@n+1,f,c
  8317  0017EC  2838               	incf	i2memcpy@n& (0+255),w,c
  8318  0017EE  B4D8               	btfsc	status,2,c
  8319  0017F0  2839               	incf	(i2memcpy@n+1)& (0+255),w,c
  8320  0017F2  B4D8               	btfsc	status,2,c
  8321                           
  8322                           ;	Return value of i2_memcpy is never used
  8323  0017F4  0012               	return	
  8324  0017F6  D7E9               	goto	i2l3146
  8325  0017F8                     __end_ofi2_memcpy:
  8326                           	opt stack 0
  8327                           pclatu	equ	0xFFB
  8328                           pclath	equ	0xFFA
  8329                           tblptru	equ	0xFF8
  8330                           tblptrh	equ	0xFF7
  8331                           tblptrl	equ	0xFF6
  8332                           tablat	equ	0xFF5
  8333                           prodh	equ	0xFF4
  8334                           prodl	equ	0xFF3
  8335                           intcon	equ	0xFF2
  8336                           intcon2	equ	0xFF1
  8337                           postinc0	equ	0xFEE
  8338                           fsr0h	equ	0xFEA
  8339                           fsr0l	equ	0xFE9
  8340                           wreg	equ	0xFE8
  8341                           indf1	equ	0xFE7
  8342                           fsr1h	equ	0xFE2
  8343                           fsr1l	equ	0xFE1
  8344                           bsr	equ	0xFE0
  8345                           indf2	equ	0xFDF
  8346                           postinc2	equ	0xFDE
  8347                           postdec2	equ	0xFDD
  8348                           fsr2h	equ	0xFDA
  8349                           fsr2l	equ	0xFD9
  8350                           status	equ	0xFD8
  8351                           
  8352 ;; *************** function _handle_start *****************
  8353 ;; Defined at:
  8354 ;;		line 29 in file "../src/my_i2c.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;  data_read       1    wreg     unsigned char 
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;  data_read       1   51[COMRAM] unsigned char 
  8359 ;; Return value:  Size  Location     Type
  8360 ;;		None               void
  8361 ;; Registers used:
  8362 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8363 ;; Tracked objects:
  8364 ;;		On entry : 0/0
  8365 ;;		On exit  : 0/0
  8366 ;;		Unchanged: 0/0
  8367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8368 ;;      Params:         0       0       0       0       0
  8369 ;;      Locals:         1       0       0       0       0
  8370 ;;      Temps:          0       0       0       0       0
  8371 ;;      Totals:         1       0       0       0       0
  8372 ;;Total ram usage:        1 bytes
  8373 ;; Hardware stack levels used:    1
  8374 ;; This function calls:
  8375 ;;		Nothing
  8376 ;; This function is called by:
  8377 ;;		_i2c_int_handler
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           
  8381                           	psect	text51
  8382  000F6A                     __ptext51:
  8383                           	opt stack 0
  8384  000F6A                     _handle_start:
  8385                           	opt stack 18
  8386                           
  8387                           ;incstack = 0
  8388                           ;handle_start@data_read stored from wreg
  8389  000F6A  6E34               	movwf	handle_start@data_read,c
  8390                           
  8391                           ;my_i2c.c: 30: ic_ptr->event_count = 1;
  8392  000F6C  0100               	movlb	0	; () banked
  8393  000F6E  EE20 F00B          	lfsr	2,11
  8394  000F72  0100               	movlb	0	; () banked
  8395  000F74  51E1               	movf	_ic_ptr& (0+255),w,b
  8396  000F76  26D9               	addwf	fsr2l,f,c
  8397  000F78  0100               	movlb	0	; () banked
  8398  000F7A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8399  000F7C  22DA               	addwfc	fsr2h,f,c
  8400  000F7E  0E01               	movlw	1
  8401  000F80  6EDF               	movwf	indf2,c
  8402                           
  8403                           ;my_i2c.c: 31: ic_ptr->buflen = 0;
  8404  000F82  0100               	movlb	0	; () banked
  8405  000F84  EE20 F00A          	lfsr	2,10
  8406  000F88  0100               	movlb	0	; () banked
  8407  000F8A  51E1               	movf	_ic_ptr& (0+255),w,b
  8408  000F8C  26D9               	addwf	fsr2l,f,c
  8409  000F8E  0100               	movlb	0	; () banked
  8410  000F90  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8411  000F92  22DA               	addwfc	fsr2h,f,c
  8412  000F94  0E00               	movlw	0
  8413  000F96  6EDF               	movwf	indf2,c
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;my_i2c.c: 33: if (data_read) {
  8417  000F98  5034               	movf	handle_start@data_read,w,c
  8418  000F9A  B4D8               	btfsc	status,2,c
  8419  000F9C  D03D               	goto	i2l2412
  8420                           
  8421                           ; BSR set to: 0
  8422                           ;my_i2c.c: 34: if (SSPSTATbits.D_A == 1) {
  8423  000F9E  AAC7               	btfss	4039,5,c	;volatile
  8424  000FA0  D021               	goto	i2l268
  8425                           
  8426                           ; BSR set to: 0
  8427                           ;my_i2c.c: 37: ic_ptr->status = 0x5;
  8428  000FA2  0100               	movlb	0	; () banked
  8429  000FA4  EE20 F00C          	lfsr	2,12
  8430  000FA8  0100               	movlb	0	; () banked
  8431  000FAA  51E1               	movf	_ic_ptr& (0+255),w,b
  8432  000FAC  26D9               	addwf	fsr2l,f,c
  8433  000FAE  0100               	movlb	0	; () banked
  8434  000FB0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8435  000FB2  22DA               	addwfc	fsr2h,f,c
  8436  000FB4  0E05               	movlw	5
  8437  000FB6  6EDF               	movwf	indf2,c
  8438                           
  8439                           ;my_i2c.c: 38: ic_ptr->error_count++;
  8440  000FB8  0100               	movlb	0	; () banked
  8441  000FBA  EE20 F00E          	lfsr	2,14
  8442  000FBE  0100               	movlb	0	; () banked
  8443  000FC0  51E1               	movf	_ic_ptr& (0+255),w,b
  8444  000FC2  26D9               	addwf	fsr2l,f,c
  8445  000FC4  0100               	movlb	0	; () banked
  8446  000FC6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8447  000FC8  22DA               	addwfc	fsr2h,f,c
  8448  000FCA  2ADF               	incf	indf2,f,c
  8449                           
  8450                           ;my_i2c.c: 39: ic_ptr->error_code = 0x5;
  8451  000FCC  0100               	movlb	0	; () banked
  8452  000FCE  EE20 F00D          	lfsr	2,13
  8453  000FD2  0100               	movlb	0	; () banked
  8454  000FD4  51E1               	movf	_ic_ptr& (0+255),w,b
  8455  000FD6  26D9               	addwf	fsr2l,f,c
  8456  000FD8  0100               	movlb	0	; () banked
  8457  000FDA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8458  000FDC  22DA               	addwfc	fsr2h,f,c
  8459  000FDE  0E05               	movlw	5
  8460  000FE0  6EDF               	movwf	indf2,c
  8461                           
  8462                           ;my_i2c.c: 40: } else {
  8463  000FE2  0012               	return	
  8464  000FE4                     i2l268:
  8465                           
  8466                           ; BSR set to: 0
  8467                           ;my_i2c.c: 41: if (SSPSTATbits.R_W == 1) {
  8468  000FE4  A4C7               	btfss	4039,2,c	;volatile
  8469  000FE6  D00C               	goto	i2l2410
  8470                           
  8471                           ; BSR set to: 0
  8472                           ;my_i2c.c: 42: ic_ptr->status = 0x8;
  8473  000FE8  0100               	movlb	0	; () banked
  8474  000FEA  EE20 F00C          	lfsr	2,12
  8475  000FEE  0100               	movlb	0	; () banked
  8476  000FF0  51E1               	movf	_ic_ptr& (0+255),w,b
  8477  000FF2  26D9               	addwf	fsr2l,f,c
  8478  000FF4  0100               	movlb	0	; () banked
  8479  000FF6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8480  000FF8  22DA               	addwfc	fsr2h,f,c
  8481  000FFA  0E08               	movlw	8
  8482  000FFC  6EDF               	movwf	indf2,c
  8483                           
  8484                           ;my_i2c.c: 43: } else {
  8485  000FFE  0012               	return	
  8486  001000                     i2l2410:
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;my_i2c.c: 44: ic_ptr->status = 0x7;
  8490  001000  0100               	movlb	0	; () banked
  8491  001002  EE20 F00C          	lfsr	2,12
  8492  001006  0100               	movlb	0	; () banked
  8493  001008  51E1               	movf	_ic_ptr& (0+255),w,b
  8494  00100A  26D9               	addwf	fsr2l,f,c
  8495  00100C  0100               	movlb	0	; () banked
  8496  00100E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8497  001010  22DA               	addwfc	fsr2h,f,c
  8498  001012  0E07               	movlw	7
  8499  001014  6EDF               	movwf	indf2,c
  8500  001016  0012               	return	
  8501  001018                     i2l2412:
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;my_i2c.c: 48: ic_ptr->status = 0x6;
  8505  001018  0100               	movlb	0	; () banked
  8506  00101A  EE20 F00C          	lfsr	2,12
  8507  00101E  0100               	movlb	0	; () banked
  8508  001020  51E1               	movf	_ic_ptr& (0+255),w,b
  8509  001022  26D9               	addwf	fsr2l,f,c
  8510  001024  0100               	movlb	0	; () banked
  8511  001026  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8512  001028  22DA               	addwfc	fsr2h,f,c
  8513  00102A  0E06               	movlw	6
  8514  00102C  6EDF               	movwf	indf2,c
  8515  00102E  0012               	return	
  8516  001030                     __end_of_handle_start:
  8517                           	opt stack 0
  8518                           pclatu	equ	0xFFB
  8519                           pclath	equ	0xFFA
  8520                           tblptru	equ	0xFF8
  8521                           tblptrh	equ	0xFF7
  8522                           tblptrl	equ	0xFF6
  8523                           tablat	equ	0xFF5
  8524                           prodh	equ	0xFF4
  8525                           prodl	equ	0xFF3
  8526                           intcon	equ	0xFF2
  8527                           intcon2	equ	0xFF1
  8528                           postinc0	equ	0xFEE
  8529                           fsr0h	equ	0xFEA
  8530                           fsr0l	equ	0xFE9
  8531                           wreg	equ	0xFE8
  8532                           indf1	equ	0xFE7
  8533                           fsr1h	equ	0xFE2
  8534                           fsr1l	equ	0xFE1
  8535                           bsr	equ	0xFE0
  8536                           indf2	equ	0xFDF
  8537                           postinc2	equ	0xFDE
  8538                           postdec2	equ	0xFDD
  8539                           fsr2h	equ	0xFDA
  8540                           fsr2l	equ	0xFD9
  8541                           status	equ	0xFD8
  8542                           
  8543 ;; *************** function _SleepIfOkay *****************
  8544 ;; Defined at:
  8545 ;;		line 226 in file "../src/messages.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;		None
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;		None
  8550 ;; Return value:  Size  Location     Type
  8551 ;;		None               void
  8552 ;; Registers used:
  8553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8559 ;;      Params:         0       0       0       0       0
  8560 ;;      Locals:         0       0       0       0       0
  8561 ;;      Temps:          0       0       0       0       0
  8562 ;;      Totals:         0       0       0       0       0
  8563 ;;Total ram usage:        0 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; Hardware stack levels required when called:    2
  8566 ;; This function calls:
  8567 ;;		_enter_sleep_mode
  8568 ;;		i2_check_msg
  8569 ;;		i2_in_high_int
  8570 ;;		i2_in_low_int
  8571 ;; This function is called by:
  8572 ;;		_InterruptHandlerHigh
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text52
  8577  00172A                     __ptext52:
  8578                           	opt stack 0
  8579  00172A                     _SleepIfOkay:
  8580                           	opt stack 17
  8581                           
  8582                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;incstack = 0
  8586  00172A  664B               	tstfsz	_MQ_Main_Willing_to_block,c
  8587  00172C  D001               	goto	i2l2698
  8588  00172E  0012               	return	
  8589  001730                     i2l2698:
  8590                           
  8591                           ;messages.c: 230: }
  8592                           ;messages.c: 233: if (in_low_int()) {
  8593  001730  EC03  F00D         	call	i2_in_low_int	;wreg free
  8594  001734  5037               	movf	?i2_in_low_int+1,w,c
  8595  001736  1036               	iorwf	?i2_in_low_int,w,c
  8596  001738  A4D8               	btfss	status,2,c
  8597  00173A  0012               	return	
  8598                           
  8599                           ;messages.c: 235: }
  8600                           ;messages.c: 238: if (!in_high_int()) {
  8601                           
  8602                           ;messages.c: 234: return;
  8603  00173C  EC03  F00E         	call	i2_in_high_int	;wreg free
  8604  001740  5035               	movf	?i2_in_high_int+1,w,c
  8605  001742  1034               	iorwf	?i2_in_high_int,w,c
  8606  001744  B4D8               	btfsc	status,2,c
  8607  001746  0012               	return	
  8608                           
  8609                           ;messages.c: 240: }
  8610                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  8611                           
  8612                           ;messages.c: 239: return;
  8613  001748  0100               	movlb	0	; () banked
  8614  00174A  0E00               	movlw	high _ToMainHigh_MQ
  8615  00174C  6E35               	movwf	i2check_msg@qptr+1,c
  8616  00174E  0100               	movlb	0	; () banked
  8617  001750  0E80               	movlw	low _ToMainHigh_MQ
  8618  001752  6E34               	movwf	i2check_msg@qptr,c
  8619  001754  EC9F  F00D         	call	i2_check_msg	;wreg free
  8620  001758  0900               	iorlw	0
  8621  00175A  A4D8               	btfss	status,2,c
  8622  00175C  0012               	return	
  8623                           
  8624                           ;messages.c: 247: }
  8625                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  8626                           
  8627                           ;messages.c: 246: return;
  8628  00175E  0101               	movlb	1	; () banked
  8629  001760  0E01               	movlw	high _ToMainLow_MQ
  8630  001762  6E35               	movwf	i2check_msg@qptr+1,c
  8631  001764  0101               	movlb	1	; () banked
  8632  001766  0E6C               	movlw	low _ToMainLow_MQ
  8633  001768  6E34               	movwf	i2check_msg@qptr,c
  8634  00176A  EC9F  F00D         	call	i2_check_msg	;wreg free
  8635  00176E  0900               	iorlw	0
  8636  001770  B4D8               	btfsc	status,2,c
  8637                           
  8638                           ;messages.c: 250: }
  8639                           ;messages.c: 251: enter_sleep_mode();
  8640                           
  8641                           ;messages.c: 249: return;
  8642  001772  EC09  F00E         	call	_enter_sleep_mode	;wreg free
  8643  001776  0012               	return	
  8644  001778                     __end_of_SleepIfOkay:
  8645                           	opt stack 0
  8646                           pclatu	equ	0xFFB
  8647                           pclath	equ	0xFFA
  8648                           tblptru	equ	0xFF8
  8649                           tblptrh	equ	0xFF7
  8650                           tblptrl	equ	0xFF6
  8651                           tablat	equ	0xFF5
  8652                           prodh	equ	0xFF4
  8653                           prodl	equ	0xFF3
  8654                           intcon	equ	0xFF2
  8655                           intcon2	equ	0xFF1
  8656                           postinc0	equ	0xFEE
  8657                           fsr0h	equ	0xFEA
  8658                           fsr0l	equ	0xFE9
  8659                           wreg	equ	0xFE8
  8660                           indf1	equ	0xFE7
  8661                           fsr1h	equ	0xFE2
  8662                           fsr1l	equ	0xFE1
  8663                           bsr	equ	0xFE0
  8664                           indf2	equ	0xFDF
  8665                           postinc2	equ	0xFDE
  8666                           postdec2	equ	0xFDD
  8667                           fsr2h	equ	0xFDA
  8668                           fsr2l	equ	0xFD9
  8669                           status	equ	0xFD8
  8670                           
  8671 ;; *************** function i2_in_low_int *****************
  8672 ;; Defined at:
  8673 ;;		line 32 in file "../src/interrupts.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;		None
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  2   53[COMRAM] int 
  8680 ;; Registers used:
  8681 ;;		wreg, status,2, status,0, cstack
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8687 ;;      Params:         2       0       0       0       0
  8688 ;;      Locals:         0       0       0       0       0
  8689 ;;      Temps:          0       0       0       0       0
  8690 ;;      Totals:         2       0       0       0       0
  8691 ;;Total ram usage:        2 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; Hardware stack levels required when called:    1
  8694 ;; This function calls:
  8695 ;;		i2_in_high_int
  8696 ;; This function is called by:
  8697 ;;		_SleepIfOkay
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text53
  8702  001A06                     __ptext53:
  8703                           	opt stack 0
  8704  001A06                     i2_in_low_int:
  8705                           	opt stack 17
  8706                           
  8707                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  8708                           
  8709                           ;incstack = 0
  8710  001A06  ACF2               	btfss	intcon,6,c	;volatile
  8711  001A08  D005               	goto	i2l2456
  8712                           
  8713                           ;interrupts.c: 34: return (0);
  8714  001A0A  0E00               	movlw	0
  8715  001A0C  6E37               	movwf	?i2_in_low_int+1,c
  8716  001A0E  0E00               	movlw	0
  8717  001A10  6E36               	movwf	?i2_in_low_int,c
  8718  001A12  0012               	return	
  8719  001A14                     i2l2456:
  8720  001A14  EC03  F00E         	call	i2_in_high_int	;wreg free
  8721  001A18  5035               	movf	?i2_in_high_int+1,w,c
  8722  001A1A  1034               	iorwf	?i2_in_high_int,w,c
  8723  001A1C  B4D8               	btfsc	status,2,c
  8724  001A1E  D005               	goto	i2l2464
  8725                           
  8726                           ;interrupts.c: 36: return (0);
  8727  001A20  0E00               	movlw	0
  8728  001A22  6E37               	movwf	?i2_in_low_int+1,c
  8729  001A24  0E00               	movlw	0
  8730  001A26  6E36               	movwf	?i2_in_low_int,c
  8731  001A28  0012               	return	
  8732  001A2A                     i2l2464:
  8733                           
  8734                           ;interrupts.c: 38: return (1);
  8735  001A2A  0E00               	movlw	0
  8736  001A2C  6E37               	movwf	?i2_in_low_int+1,c
  8737  001A2E  0E01               	movlw	1
  8738  001A30  6E36               	movwf	?i2_in_low_int,c
  8739  001A32  0012               	return	
  8740  001A34                     __end_ofi2_in_low_int:
  8741                           	opt stack 0
  8742                           pclatu	equ	0xFFB
  8743                           pclath	equ	0xFFA
  8744                           tblptru	equ	0xFF8
  8745                           tblptrh	equ	0xFF7
  8746                           tblptrl	equ	0xFF6
  8747                           tablat	equ	0xFF5
  8748                           prodh	equ	0xFF4
  8749                           prodl	equ	0xFF3
  8750                           intcon	equ	0xFF2
  8751                           intcon2	equ	0xFF1
  8752                           postinc0	equ	0xFEE
  8753                           fsr0h	equ	0xFEA
  8754                           fsr0l	equ	0xFE9
  8755                           wreg	equ	0xFE8
  8756                           indf1	equ	0xFE7
  8757                           fsr1h	equ	0xFE2
  8758                           fsr1l	equ	0xFE1
  8759                           bsr	equ	0xFE0
  8760                           indf2	equ	0xFDF
  8761                           postinc2	equ	0xFDE
  8762                           postdec2	equ	0xFDD
  8763                           fsr2h	equ	0xFDA
  8764                           fsr2l	equ	0xFD9
  8765                           status	equ	0xFD8
  8766                           
  8767 ;; *************** function i2_in_high_int *****************
  8768 ;; Defined at:
  8769 ;;		line 24 in file "../src/interrupts.c"
  8770 ;; Parameters:    Size  Location     Type
  8771 ;;		None
  8772 ;; Auto vars:     Size  Location     Type
  8773 ;;		None
  8774 ;; Return value:  Size  Location     Type
  8775 ;;                  2   51[COMRAM] int 
  8776 ;; Registers used:
  8777 ;;		wreg, status,2
  8778 ;; Tracked objects:
  8779 ;;		On entry : 0/0
  8780 ;;		On exit  : 0/0
  8781 ;;		Unchanged: 0/0
  8782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8783 ;;      Params:         2       0       0       0       0
  8784 ;;      Locals:         0       0       0       0       0
  8785 ;;      Temps:          0       0       0       0       0
  8786 ;;      Totals:         2       0       0       0       0
  8787 ;;Total ram usage:        2 bytes
  8788 ;; Hardware stack levels used:    1
  8789 ;; This function calls:
  8790 ;;		Nothing
  8791 ;; This function is called by:
  8792 ;;		_SleepIfOkay
  8793 ;;		i2_in_low_int
  8794 ;; This function uses a non-reentrant model
  8795 ;;
  8796                           
  8797                           	psect	text54
  8798  001C06                     __ptext54:
  8799                           	opt stack 0
  8800  001C06                     i2_in_high_int:
  8801                           	opt stack 17
  8802                           
  8803                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  8804                           
  8805                           ;incstack = 0
  8806  001C06  0E00               	movlw	0
  8807  001C08  AEF2               	btfss	intcon,7,c	;volatile
  8808  001C0A  0E01               	movlw	1
  8809  001C0C  6E34               	movwf	?i2_in_high_int,c
  8810  001C0E  6A35               	clrf	?i2_in_high_int+1,c
  8811  001C10  0012               	return	
  8812  001C12                     __end_ofi2_in_high_int:
  8813                           	opt stack 0
  8814                           pclatu	equ	0xFFB
  8815                           pclath	equ	0xFFA
  8816                           tblptru	equ	0xFF8
  8817                           tblptrh	equ	0xFF7
  8818                           tblptrl	equ	0xFF6
  8819                           tablat	equ	0xFF5
  8820                           prodh	equ	0xFF4
  8821                           prodl	equ	0xFF3
  8822                           intcon	equ	0xFF2
  8823                           intcon2	equ	0xFF1
  8824                           postinc0	equ	0xFEE
  8825                           fsr0h	equ	0xFEA
  8826                           fsr0l	equ	0xFE9
  8827                           wreg	equ	0xFE8
  8828                           indf1	equ	0xFE7
  8829                           fsr1h	equ	0xFE2
  8830                           fsr1l	equ	0xFE1
  8831                           bsr	equ	0xFE0
  8832                           indf2	equ	0xFDF
  8833                           postinc2	equ	0xFDE
  8834                           postdec2	equ	0xFDD
  8835                           fsr2h	equ	0xFDA
  8836                           fsr2l	equ	0xFD9
  8837                           status	equ	0xFD8
  8838                           
  8839 ;; *************** function i2_check_msg *****************
  8840 ;; Defined at:
  8841 ;;		line 220 in file "../src/messages.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;  qptr            2   51[COMRAM] PTR struct __msg_queue
  8844 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;		None
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  1    wreg      unsigned char 
  8849 ;; Registers used:
  8850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8856 ;;      Params:         2       0       0       0       0
  8857 ;;      Locals:         0       0       0       0       0
  8858 ;;      Temps:          1       0       0       0       0
  8859 ;;      Totals:         3       0       0       0       0
  8860 ;;Total ram usage:        3 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; This function calls:
  8863 ;;		Nothing
  8864 ;; This function is called by:
  8865 ;;		_SleepIfOkay
  8866 ;; This function uses a non-reentrant model
  8867 ;;
  8868                           
  8869                           	psect	text55
  8870  001B3E                     __ptext55:
  8871                           	opt stack 0
  8872  001B3E                     i2_check_msg:
  8873                           	opt stack 18
  8874                           
  8875                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  8876                           
  8877                           ;incstack = 0
  8878  001B3E  EE20 F035          	lfsr	2,53
  8879  001B42  5034               	movf	i2check_msg@qptr,w,c
  8880  001B44  26D9               	addwf	fsr2l,f,c
  8881  001B46  5035               	movf	i2check_msg@qptr+1,w,c
  8882  001B48  22DA               	addwfc	fsr2h,f,c
  8883  001B4A  50DF               	movf	indf2,w,c
  8884  001B4C  6E36               	movwf	??i2_check_msg& (0+255),c
  8885  001B4E  5036               	movf	??i2_check_msg,w,c
  8886  001B50  0D0D               	mullw	13
  8887  001B52  50F3               	movf	prodl,w,c
  8888  001B54  2434               	addwf	i2check_msg@qptr,w,c
  8889  001B56  6ED9               	movwf	fsr2l,c
  8890  001B58  50F4               	movf	prodh,w,c
  8891  001B5A  2035               	addwfc	i2check_msg@qptr+1,w,c
  8892  001B5C  6EDA               	movwf	fsr2h,c
  8893  001B5E  50DF               	movf	indf2,w,c
  8894  001B60  0012               	return	
  8895  001B62                     __end_ofi2_check_msg:
  8896                           	opt stack 0
  8897                           pclatu	equ	0xFFB
  8898                           pclath	equ	0xFFA
  8899                           tblptru	equ	0xFF8
  8900                           tblptrh	equ	0xFF7
  8901                           tblptrl	equ	0xFF6
  8902                           tablat	equ	0xFF5
  8903                           prodh	equ	0xFF4
  8904                           prodl	equ	0xFF3
  8905                           intcon	equ	0xFF2
  8906                           intcon2	equ	0xFF1
  8907                           postinc0	equ	0xFEE
  8908                           fsr0h	equ	0xFEA
  8909                           fsr0l	equ	0xFE9
  8910                           wreg	equ	0xFE8
  8911                           indf1	equ	0xFE7
  8912                           fsr1h	equ	0xFE2
  8913                           fsr1l	equ	0xFE1
  8914                           bsr	equ	0xFE0
  8915                           indf2	equ	0xFDF
  8916                           postinc2	equ	0xFDE
  8917                           postdec2	equ	0xFDD
  8918                           fsr2h	equ	0xFDA
  8919                           fsr2l	equ	0xFD9
  8920                           status	equ	0xFD8
  8921                           
  8922 ;; *************** function _enter_sleep_mode *****************
  8923 ;; Defined at:
  8924 ;;		line 202 in file "../src/messages.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;		None
  8927 ;; Auto vars:     Size  Location     Type
  8928 ;;		None
  8929 ;; Return value:  Size  Location     Type
  8930 ;;		None               void
  8931 ;; Registers used:
  8932 ;;		None
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8938 ;;      Params:         0       0       0       0       0
  8939 ;;      Locals:         0       0       0       0       0
  8940 ;;      Temps:          0       0       0       0       0
  8941 ;;      Totals:         0       0       0       0       0
  8942 ;;Total ram usage:        0 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; This function calls:
  8945 ;;		Nothing
  8946 ;; This function is called by:
  8947 ;;		_SleepIfOkay
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           	psect	text56
  8952  001C12                     __ptext56:
  8953                           	opt stack 0
  8954  001C12                     _enter_sleep_mode:
  8955                           	opt stack 18
  8956                           
  8957                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8958                           
  8959                           ;incstack = 0
  8960  001C12  8ED3               	bsf	4051,7,c	;volatile
  8961  001C14  0003               	sleep		;# 
  8962  001C16  0012               	return	
  8963  001C18                     __end_of_enter_sleep_mode:
  8964                           	opt stack 0
  8965  0000                     pclatu	equ	0xFFB
  8966                           pclath	equ	0xFFA
  8967                           tblptru	equ	0xFF8
  8968                           tblptrh	equ	0xFF7
  8969                           tblptrl	equ	0xFF6
  8970                           tablat	equ	0xFF5
  8971                           prodh	equ	0xFF4
  8972                           prodl	equ	0xFF3
  8973                           intcon	equ	0xFF2
  8974                           intcon2	equ	0xFF1
  8975                           postinc0	equ	0xFEE
  8976                           fsr0h	equ	0xFEA
  8977                           fsr0l	equ	0xFE9
  8978                           wreg	equ	0xFE8
  8979                           indf1	equ	0xFE7
  8980                           fsr1h	equ	0xFE2
  8981                           fsr1l	equ	0xFE1
  8982                           bsr	equ	0xFE0
  8983                           indf2	equ	0xFDF
  8984                           postinc2	equ	0xFDE
  8985                           postdec2	equ	0xFDD
  8986                           fsr2h	equ	0xFDA
  8987                           fsr2l	equ	0xFD9
  8988                           status	equ	0xFD8
  8989                           pclatu	equ	0xFFB
  8990                           pclath	equ	0xFFA
  8991                           tblptru	equ	0xFF8
  8992                           tblptrh	equ	0xFF7
  8993                           tblptrl	equ	0xFF6
  8994                           tablat	equ	0xFF5
  8995                           prodh	equ	0xFF4
  8996                           prodl	equ	0xFF3
  8997                           intcon	equ	0xFF2
  8998                           intcon2	equ	0xFF1
  8999                           postinc0	equ	0xFEE
  9000                           fsr0h	equ	0xFEA
  9001                           fsr0l	equ	0xFE9
  9002                           wreg	equ	0xFE8
  9003                           indf1	equ	0xFE7
  9004                           fsr1h	equ	0xFE2
  9005                           fsr1l	equ	0xFE1
  9006                           bsr	equ	0xFE0
  9007                           indf2	equ	0xFDF
  9008                           postinc2	equ	0xFDE
  9009                           postdec2	equ	0xFDD
  9010                           fsr2h	equ	0xFDA
  9011                           fsr2l	equ	0xFD9
  9012                           status	equ	0xFD8
  9013                           
  9014                           	psect	rparam
  9015  0000                     pclatu	equ	0xFFB
  9016                           pclath	equ	0xFFA
  9017                           tblptru	equ	0xFF8
  9018                           tblptrh	equ	0xFF7
  9019                           tblptrl	equ	0xFF6
  9020                           tablat	equ	0xFF5
  9021                           prodh	equ	0xFF4
  9022                           prodl	equ	0xFF3
  9023                           intcon	equ	0xFF2
  9024                           intcon2	equ	0xFF1
  9025                           postinc0	equ	0xFEE
  9026                           fsr0h	equ	0xFEA
  9027                           fsr0l	equ	0xFE9
  9028                           wreg	equ	0xFE8
  9029                           indf1	equ	0xFE7
  9030                           fsr1h	equ	0xFE2
  9031                           fsr1l	equ	0xFE1
  9032                           bsr	equ	0xFE0
  9033                           indf2	equ	0xFDF
  9034                           postinc2	equ	0xFDE
  9035                           postdec2	equ	0xFDD
  9036                           fsr2h	equ	0xFDA
  9037                           fsr2l	equ	0xFD9
  9038                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         218
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72      76
    BANK0           128     43      99
    BANK1           256     89     251
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[18]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[18]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_int_handler@reverse(COMRAM[1]), timer1_int_handler@stop(COMRAM[1]), timer1_int_handler@right(COMRAM[1]), timer1_int_handler@left(COMRAM[1]), 
		 -> timer1_int_handler@forward(COMRAM[1]), timer0_int_handler@reverse(BANK0[1]), timer0_int_handler@stop(BANK0[1]), timer0_int_handler@right(BANK0[1]), 
		 -> timer0_int_handler@left(BANK0[1]), timer0_int_handler@forward(BANK0[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[18]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_int_handler@reverse(COMRAM[1]), timer1_int_handler@stop(COMRAM[1]), timer1_int_handler@right(COMRAM[1]), timer1_int_handler@left(COMRAM[1]), 
		 -> timer1_int_handler@forward(COMRAM[1]), timer0_int_handler@reverse(BANK0[1]), timer0_int_handler@stop(BANK0[1]), timer0_int_handler@right(BANK0[1]), 
		 -> timer0_int_handler@left(BANK0[1]), timer0_int_handler@forward(BANK0[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[18]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_send@msg_buffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 18
		 -> main@uc(BANK1[18]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 18
		 -> NULL(NULL[0]), main@uc(BANK1[18]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 18
		 -> NULL(NULL[0]), main@uc(BANK1[18]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer1_int_handler@reverse(COMRAM[1]), timer1_int_handler@stop(COMRAM[1]), timer1_int_handler@right(COMRAM[1]), timer1_int_handler@left(COMRAM[1]), 
		 -> timer1_int_handler@forward(COMRAM[1]), timer0_int_handler@reverse(BANK0[1]), timer0_int_handler@stop(BANK0[1]), timer0_int_handler@right(BANK0[1]), 
		 -> timer0_int_handler@left(BANK0[1]), timer0_int_handler@forward(BANK0[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 18
		 -> NULL(NULL[0]), main@uc(BANK1[18]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 18
		 -> NULL(NULL[0]), main@msgbuffer(BANK1[11]), main@uc(BANK1[18]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[18]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer1_int_handler@reverse(COMRAM[1]), timer1_int_handler@stop(COMRAM[1]), timer1_int_handler@right(COMRAM[1]), timer1_int_handler@left(COMRAM[1]), 
		 -> timer1_int_handler@forward(COMRAM[1]), timer0_int_handler@reverse(BANK0[1]), timer0_int_handler@stop(BANK0[1]), timer0_int_handler@right(BANK0[1]), 
		 -> timer0_int_handler@left(BANK0[1]), timer0_int_handler@forward(BANK0[1]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> main@msgbuffer(BANK1[11]), main@t1thread_data(BANK1[2]), main@ic(BANK1[28]), main@uc(BANK1[18]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->i2_ToMainHigh_sendmsg
    _i2c_int_handler->i2_ToMainHigh_sendmsg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    _timer1_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _uart_send->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    i2_ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _uart_send->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                70    70      0   13202
                                             21 BANK1     68    68      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
                          _uart_send
 ---------------------------------------------------------------------------------
 (1) _uart_send                                            3     1      2    2408
                                             12 BANK1      3     1      2
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2021
                                             40 BANK0      3     0      3
                                             11 BANK1      1     1      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     300
                                             29 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    2710
                                             12 BANK1      9     1      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     302
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2021
                                             40 BANK0      3     0      3
                                             11 BANK1      1     1      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1798
                                             39 BANK0      1     1      0
                                              0 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             29 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     346
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     346
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     226
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             33 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             31 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     204
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                             41 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                             41 BANK0      1     1      0
                                             12 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                             39 BANK0      2     2      0
                                              0 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                             29 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     273
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    5206
                                             34 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               2     2      0     907
                                             29 COMRAM     2     2      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4     907
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7     735
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    1224
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    1201
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   8     8      0    3075
                                             26 COMRAM     8     8      0
                         _ReadTimer1
                 _ToMainHigh_sendmsg
                        _WriteTimer1
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     865
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainHigh_sendmsg                                   4     1      3    1845
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     817
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    4861
                                             15 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  8     8      0    2617
                                              5 BANK0      8     8      0
                        _WriteTimer0
               i2_ToMainHigh_sendmsg
                          i2___awmod
 ---------------------------------------------------------------------------------
 (12) i2___awmod                                           6     2      4     556
                                             51 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                             51 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    10    10      0    2148
                                              5 BANK0     10    10      0
                       _handle_start
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) i2_ToMainHigh_sendmsg                                4     1      3    1546
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6     893
                                             61 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     279
                                             51 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     1      0      22
                                             51 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0      96
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             53 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             51 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2      96
                                             51 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
   _uart_send
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainHigh_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
     ___awmod
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _handle_start
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
   _timer0_int_handler
     _WriteTimer0
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0      10        0.0%
BANK1              100     59      FB       6       98.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2B      63       5       77.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AA       9        0.0%
DATA                 0      0     1AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Oct 15 23:28:05 2014

               main@uthread_data 01B9         _MQ_Main_Willing_to_block 004B  
          ?i2_ToMainHigh_sendmsg 0045                      _SSPSTATbits 000FC7  
      __end_of_ToMainLow_recvmsg 18A8                               bsr 000FE0  
      __end_of_ToMainLow_sendmsg 1AF6                     __CFG_CP0$OFF 000000  
           ?_FromMainLow_recvmsg 0019                              l125 0742  
                            l126 0748                              l431 1ACC  
                            l503 138E                              l432 1ACE  
                            l504 1390                              l505 139C  
                            l506 139E                              l455 19BC  
                            l457 19D2                              l458 19D4  
                            l499 1374                              l747 1B84  
           ?_FromMainLow_sendmsg 00DE  __size_of_uart_trans_int_handler 009C  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                   ___awmod@sign 0006                   _FromMainLow_MQ 0136  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   ?_in_high_int 00D3                 ??_init_uart_recv 00D5  
                ReadTimer1@timer 0003                             l1053 15CC  
                           l2320 1864                             l2332 14EC  
                           l3142 1714                             l3214 0B00  
                           l3230 0BBE                             l2190 180A  
                           l3136 16F4                             l3250 159A  
                           l2198 1828                             l3166 0D30  
                           l3254 15BE                             l3246 1588  
                           l3248 1594                             l3600 0928  
                           l3550 06C8                             l2832 19BE  
                           l3560 074E                             l2930 162A  
                           l2924 160A                             l3572 07D2  
                           l3564 077A                             l2918 15EA  
                           l3582 082A                             l3558 06FE  
                           l2880 1376                             l2872 1364  
                           l3576 07FE                             l3568 07A6  
                           l3594 08A2                             l3586 084E  
                           l3596 08E4                             l3588 0870  
                           u2697 1B86                  _FromMainHigh_MQ 0100  
                  __CFG_FCMEN$ON 000000           ?_block_on_To_msgqueues 0001  
                     i1_recv_msg 0DD2                             _main 061A  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                    main@msgtype 01CB                       i1_send_msg 10E2  
                           pclat 000FFA              timer0_int_handler@i 00C2  
                    i2_check_msg 1B3E                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0034  
                           start 00BC                    __CFG_FOSC2$ON 000000  
                     i2_send_msg 0EA4        ToMainHigh_recvmsg@msgtype 01AE  
                 send_msg@length 01A4      __size_of_timer0_int_handler 0160  
                    _Delay1KTCYx 1B80            ??_FromMainLow_recvmsg 001D  
          ??_FromMainLow_sendmsg 00E1                            ?_main 0001  
                __end_of___awmod 12B8                            _T0CON 000FD5  
                          _T1CON 000FCD                  __end_of___lwmod 15D6  
                     i1memcpy@d1 0001                            i1l517 1B70  
                          i2l312 048A                            i2l306 040C  
                          i2l280 0140                            i2l268 0FE4  
                          i2l284 0172                            i2l278 047C  
                          i2l298 02EA                       i1memcpy@s1 0003  
                          _RCREG 000FAE              uart_send@msg_buffer 01AE  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _SPBRG 000FAF  
                          _TXREG 000FAD                            _TXSTA 000FAC  
                     i2memcpy@d1 0034                       i2memcpy@s1 0036  
                   ?_init_queues 0001        __size_of_enter_sleep_mode 0006  
                __end_of_in_main 1872       ToMainLow_recvmsg@maxlength 00DF  
        timer0_lthread@msgbuffer 00D9          i2c_configure_slave@addr 00D3  
                          tablat 000FF5                            status 000FD8  
       i2ToMainHigh_sendmsg@data 0046           _uart_trans_int_handler 118C  
               __end_ofi1_memcpy 17B8                 __end_ofi2_memcpy 17F8  
             __size_ofi2___awmod 0090                  __initialization 1A86  
         ??i2_ToMainHigh_sendmsg 0048                     __end_of_main 0940  
                     _ReadTimer1 1BB8      __size_of_timer1_int_handler 0120  
     __size_of_ToMainLow_recvmsg 0036       __size_of_ToMainLow_sendmsg 0024  
          __size_ofi2_in_low_int 002E    __size_of_FromMainHigh_sendmsg 0032  
                         ??_main 00E1                  send_msg@msgtype 01A5  
                  __activetblptr 000002                  send_msg@tlength 01A8  
     FromMainLow_sendmsg@msgtype 00DE             __end_of_handle_start 1030  
        ??_uart_recv_int_handler 001B                           i1l1430 1296  
                         i1l1422 1276                           i1l1414 124C  
                         i1l1424 127E                           i1l2170 17A6  
                         i1l2242 111A                           i1l1426 1282  
                         i1l1434 12A0                           i1l1418 1268  
                         i1l2306 0EA0                           i1l2164 178A  
                         i1l1438 12AE                           i1l2290 0E18  
                         i1l2732 0C3E                           i1l2750 0CD0  
                         i1l2726 0C10                           i1l2744 0C9E  
                         i1l2752 0CD4                           i1l2738 0C6E  
                         i1l2766 10A8                           i1l2782 1214  
                         i1l2768 10C6                           i2l2410 1000  
                         i2l2412 1018                           i2l3300 019E  
                         i2l2500 1326                           i2l3302 01CA  
                         i2l3152 17E6                           i2l3320 025C  
                         i2l3312 0204                           i2l2504 1330  
                         i1l2992 0070                       _OpenTimer0 1AAC  
                         i2l3146 17CA                           i1l2986 0066  
                     _OpenTimer1 19A6                           i2l2508 133E  
                         i2l3420 09E6                           i2l3190 0EE8  
                         i2l3342 0358                           i2l3318 021C  
                         i2l3414 09AE                   __CFG_WDTEN$OFF 000000  
                         i2l2464 1A2A                           i2l2456 1A14  
                         i2l3344 039A                           i2l3432 0A5A  
                         i2l3370 0450                           i2l3282 0138  
                         i2l3426 0A20                           i2l3348 03A2  
                         i2l3276 012A                           i2l2492 1306  
                         i2l2484 12DC                           i2l3390 0568  
                         i2l3382 04EC                           i2l2494 130E  
                         i2l3438 0A94                           i2l3376 048E  
                         i2l2496 1312                           i2l2488 12F8  
                         i2l3472 1402                           i2l3398 05F4  
                         i2l3478 140C                           i2l2698 1730  
    __end_of_i2c_configure_slave 1A5E                    ??_SleepIfOkay 0038  
             __size_of_ReadUSART 001E                           _OSCCON 000FD3  
                         _SPBRGH 000FB0                      ?i1_recv_msg 000B  
                         _SSPADD 000FC8                           _SSPBUF 000FC9  
                    ?i1_send_msg 000B               timer0_lthread@tptr 00D3  
        FromMainLow_recvmsg@data 001B                     i2_in_low_int 1A06  
                    ?i2_send_msg 003E                   __CFG_XINST$OFF 000000  
             __size_of_OpenUSART 0082                  _i2c_int_handler 00C0  
                      ??___awmod 0005                 OpenTimer0@config 00D3  
                         _ic_ptr 00E1                        ??___lwmod 00D7  
                  main@msgbuffer 01BE                 __end_of_init_i2c 14B0  
               OpenTimer1@config 00D3                           _memcpy 16DA  
                         clear_0 1A8C                           clear_1 1A98  
                ___awmod@divisor 0003                           _uc_ptr 0049  
                ___awmod@counter 0005                           main@ic 01DF  
                         main@uc 01CC                 __end_of_recv_msg 0BC2  
                      ??_in_main 00D9                 __end_of_send_msg 0DD2  
              __end_ofi2___awmod 1348            timer0_int_handler@val 00BB  
        i2c_int_handler@i2c_data 00C1                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00D5                   i2___awmod@sign 0039  
       ToMainLow_recvmsg@msgtype 01AE             __size_of_in_high_int 0010  
        FromMainLow_sendmsg@data 00DF                  __CFG_FOSC$HSPLL 000000  
                     __accesstop 0080          __end_of__initialization 1AA2  
     __end_of_ToMainHigh_recvmsg 18DE       __end_of_ToMainHigh_sendmsg 1B1A  
        timer1_int_handler@right 001F      __end_of_init_timer1_lthread 1BA6  
            __end_of_SleepIfOkay 1778                   __pcstackCOMRAM 0001  
         __size_ofi2_in_high_int 000C                      ?_ReadTimer1 0001  
             __size_of_check_msg 0032        timer0_int_handler@forward 00BD  
              __end_of_ReadUSART 1B80        timer0_int_handler@reverse 00C1  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 1442  
    __end_of_InterruptHandlerLow 00BC                        ?i2_memcpy 0034  
                  _ToMainHigh_MQ 0080                 _enter_sleep_mode 1C12  
            __size_ofi2_send_msg 00C6             timer1_lthread@length 01B2  
                  ReadUSART@data 0001                __end_of_OpenUSART 13CA  
                  check_msg@qptr 00D3             timer1_lthread@retval 01B6  
        ??_block_on_To_msgqueues 00D9             __size_of_init_queues 0056  
                     __pbssBANK0 0080                       __pbssBANK1 0100  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 0001  
                     __pnvCOMRAM 0049          __end_of_i2c_int_handler 061A  
                   ?i2_check_msg 0034               timer1_lthread@tptr 01AE  
            timer1_int_handler@i 0022                recv_msg@maxlength 01A4  
                recv_msg@msgtype 01A5                  recv_msg@tlength 01AA  
          __size_of_handle_start 00C6                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 0036                          ?_memcpy 00D3  
               WriteTimer1@timer 0003                    ??_WriteTimer0 0036  
                  ??_WriteTimer1 0003          __size_of_timer0_lthread 000E  
        __size_of_timer1_lthread 0062               __size_of_uart_send 0052  
                     ??i1_memcpy 0007                       ??i2_memcpy 003A  
               i1send_msg@length 000D                    i2_in_high_int 1C06  
        ?_uart_trans_int_handler 0001              __size_of_ReadTimer1 0012  
              __end_of_check_msg 19A6                        ?_init_i2c 00D3  
                    _SleepIfOkay 172A                        ?_recv_msg 01A2  
                     _in_low_int 17F8                     _handle_start 0F6A  
                        __Hparam 0000                        ?_send_msg 01A2  
                        __Lparam 0000       __end_of_timer0_int_handler 0AA0  
    __end_of_FromMainLow_recvmsg 1A86      __end_of_FromMainLow_sendmsg 1910  
               init_uart_recv@uc 00D3                          ___awmod 1228  
                        ___lwmod 1576                  __CFG_STVREN$OFF 000000  
                        __pcinit 1A86                  __size_of_memcpy 0050  
                     _init_queue 14B0                          __ramtop 0400  
            __size_of_OpenTimer0 0026              __size_of_OpenTimer1 0032  
                        __ptext0 061A                          __ptext1 1688  
                        __ptext2 18DE                          __ptext3 1910  
                        __ptext4 1514                          __ptext5 1576  
                        __ptext6 1942                          __ptext7 0CE2  
                        __ptext8 1BEC                          __ptext9 19D8  
                      _T0CONbits 000FD5                          _in_main 1836  
                      _T1CONbits 000FCD                 ___awmod@dividend 0001  
            __end_of_WriteTimer0 1BDC              __end_of_WriteTimer1 1BB8  
                 ?i2_in_high_int 0034   __end_of_uart_trans_int_handler 1228  
                        main@dur 01B7                   __pintcode_body 13CA  
           end_of_initialization 1AA2          timer1_lthread@msgbuffer 01B4  
   __end_of_FromMainHigh_sendmsg 1974   __size_of_uart_recv_int_handler 00B2  
     FromMainHigh_sendmsg@length 01AD                          memcpy@d 00D9  
                        memcpy@n 00D7                          memcpy@s 00DB  
  __end_of_uart_recv_int_handler 10E2                       ??_init_i2c 00D5  
                   ??i1_recv_msg 0012      i2c_int_handler@data_written 00BF  
                  __Lmediumconst 0000                          int_func 13CA  
                   ??i1_send_msg 0011                    ?_uart_lthread 00D3  
        __size_of_init_uart_recv 002E                 ?_i2c_int_handler 0001  
                     ??_recv_msg 00DD                __end_of_uart_send 16DA  
         timer0_int_handler@left 00BE                     ??i2_send_msg 0044  
         timer0_int_handler@stop 00C0                       ??_send_msg 00DD  
     __end_of_timer1_int_handler 0CE2                        _RCSTAbits 000FAB  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0017  
  __size_ofi2_ToMainHigh_sendmsg 0024               __end_ofi1_recv_msg 0EA4  
             __end_ofi1_send_msg 118C      FromMainHigh_sendmsg@msgtype 00DE  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
                      _TRISDbits 000F95               __end_ofi2_send_msg 0F6A  
                      i2___awmod 12B8         timer1_int_handler@result 001B  
                 ??_uart_lthread 00DB                        _TXSTAbits 000FAC  
                     main@length 01DE                      ?_in_low_int 00D5  
          timer0_lthread@msgtype 00D5     __size_of_i2c_configure_slave 002A  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 1C18  
                   ??_ReadTimer1 0003               _ToMainHigh_recvmsg 18A8  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1AF6  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                    _BAUDCONbits 000FB8                   _timer0_lthread 1BEC  
                    ?_init_queue 00D3                        i2memcpy@d 003A  
                    _WriteTimer0 1BCA                      _WriteTimer1 1BA6  
                      i2memcpy@n 0038                        i2memcpy@s 003C  
                 _timer1_lthread 1514                   __end_of_memcpy 172A  
              _enable_interrupts 1BFA             __size_of_Delay1KTCYx 0014  
            ?_ToMainHigh_recvmsg 01AE                  ??i2_in_high_int 0036  
       i2c_int_handler@data_read 00C4              ?_ToMainHigh_sendmsg 0017  
             ?_enable_interrupts 0001              start_initialization 1A86  
                  ??_in_high_int 00D5                        _ReadUSART 1B62  
              __size_ofi1_memcpy 0040                __size_ofi2_memcpy 0040  
                     ?i2___awmod 0034        FromMainLow_sendmsg@length 01AD  
            ??_enable_interrupts 00D3                     ??_OpenTimer0 00D3  
                   ??_OpenTimer1 00D3   __size_of_block_on_To_msgqueues 005C  
             __end_of_ReadTimer1 1BCA    __end_of_block_on_To_msgqueues 1632  
                      _OpenUSART 1348     __end_of_InterruptHandlerHigh 144A  
                     init_i2c@ic 00D3             ??_ToMainHigh_recvmsg 00DF  
           ??_ToMainHigh_sendmsg 001A           __end_of_timer0_lthread 1BFA  
       i2c_int_handler@error_buf 00BC           __end_of_timer1_lthread 1576  
      __end_of_enable_interrupts 1C06                         ??_memcpy 00D9  
          timer1_lthread@msgtype 01B0             _FromMainHigh_sendmsg 1942  
      timer1_int_handler@forward 001D     __size_of_init_timer1_lthread 0012  
             __end_of_OpenTimer0 1AD2               __end_of_OpenTimer1 19D8  
      timer1_int_handler@reverse 0021         i2c_int_handler@msg_ready 00C3  
         timer1_int_handler@left 001E                      __pbssCOMRAM 004B  
         timer1_int_handler@stop 0020                       ?_ReadUSART 0001  
                  ??_init_queues 00D6                    __pcstackBANK0 00B6  
                  __pcstackBANK1 01A2              __size_of_in_low_int 003E  
            __CFG_CCP2MX$DEFAULT 000000                  Delay1KTCYx@unit 00D3  
       ToMainLow_sendmsg@msgtype 0017     __size_of_InterruptHandlerLow 00A4  
            __end_of_in_high_int 1BEC                       ?_OpenUSART 00D3  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 01B0  
                   _ToMainLow_MQ 016C              __size_of_init_queue 0064  
                 _init_uart_recv 19D8                        _check_msg 1974  
                      __pnvBANK0 00E1                __size_of_init_i2c 0066  
                   recv_msg@data 01A7                     recv_msg@qmsg 01AC  
                   recv_msg@slot 01A9                     recv_msg@qptr 01A2  
     i2ToMainHigh_sendmsg@length 0048                __size_of_recv_msg 0122  
                      __pintcode 0008                __size_of_send_msg 00F0  
                       ?___awmod 0001                  ?_timer0_lthread 00D3  
                       ?___lwmod 00D3                  ?_timer1_lthread 01AE  
          ?_FromMainHigh_sendmsg 00DE                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 01B0             __end_of_uart_lthread 1942  
     i2c_int_handler@msg_to_send 00C2                         ?_in_main 00D7  
              WriteTimer0@timer0 0034               _timer0_int_handler 0940  
              WriteTimer1@timer1 0001              uart_lthread@msgtype 00D5  
          ToMainLow_sendmsg@data 0018                      ??i2___awmod 0038  
            i1recv_msg@maxlength 000D              ?_timer0_int_handler 0001  
               uart_lthread@uptr 00D3           __end_of_init_uart_recv 1A06  
            __end_of_init_queues 1688                         _LATBbits 000F8A  
                       _LATDbits 000F8C                  i2check_msg@qptr 0034  
                     ?_check_msg 00D3                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0036  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 0018  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                 i1recv_msg@data 0010                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                        _uart_send 1688  
           ??_timer0_int_handler 0049                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
                       _SSP1STAT 000FC7     FromMainLow_recvmsg@maxlength 001D  
     __size_of_enable_interrupts 000C                i1send_msg@msgtype 000E  
              i1send_msg@tlength 0012       FromMainLow_recvmsg@msgtype 0019  
   __size_of_FromMainLow_recvmsg 0028     __size_of_FromMainLow_sendmsg 0032  
           timer0_lthread@length 00D7               _timer1_int_handler 0BC2  
                       i1_memcpy 1778             _InterruptHandlerHigh 0008  
                    ??_ReadUSART 0001                         i2_memcpy 17B8  
           timer0_lthread@msgval 00DB                      _in_high_int 1BDC  
                   send_msg@data 01A6              _i2c_configure_slave 1A34  
                   send_msg@qmsg 01AB                     send_msg@slot 01AA  
                   send_msg@qptr 01A2     __end_ofi2_ToMainHigh_sendmsg 1B3E  
                    _INTCON2bits 000FF1            uart_lthread@msgbuffer 00D9  
            ?_timer1_int_handler 0001               i2___awmod@dividend 0034  
                ?_init_uart_recv 00D3                      ??_OpenUSART 00D5  
                OpenUSART@config 00D8                   ??i2_in_low_int 0038  
          _uart_recv_int_handler 1030                     ??_in_low_int 00D7  
                       __Hrparam 0000             ?_i2c_configure_slave 0001  
                       __Lrparam 0000                ?_enter_sleep_mode 0001  
                     ?_uart_send 01AE           ??_FromMainHigh_sendmsg 00E1  
           ??_timer1_int_handler 001B         __size_of_i2c_int_handler 055A  
               __size_of___awmod 0090               ??_enter_sleep_mode 0034  
               __size_of___lwmod 0060                     ??_init_queue 00D5  
                   ?_WriteTimer0 0034                     ?_WriteTimer1 0001  
       FromMainHigh_sendmsg@data 00DF                  uart_send@length 01B0  
        ToMainLow_sendmsg@length 001A                main@t0thread_data 01BB  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 003C  
              i2send_msg@msgtype 0041      ToMainHigh_recvmsg@maxlength 00DF  
              i2send_msg@tlength 00B6          init_timer1_lthread@tptr 00D3  
                    _init_queues 1632               __end_of_in_low_int 1836  
                       __ptext10 1B94                         __ptext11 1632  
                       __ptext20 1974                         __ptext12 14B0  
                       __ptext21 1B80                         __ptext13 144A  
                       __ptext30 118C                         __ptext22 1872  
                       __ptext14 1A34                         __ptext31 1A5E  
                       __ptext23 18A8                         __ptext15 1BFA  
                       __ptext40 10E2                         __ptext32 0DD2  
                       __ptext24 0AA0                         __ptext16 15D6  
                       __ptext41 1778                         __ptext33 1030  
                       __ptext25 16DA                         __ptext17 1836  
                       __ptext50 17B8                         __ptext42 1BB8  
                       __ptext34 1AD2                         __ptext26 1348  
                       __ptext18 17F8                         __ptext51 0F6A  
                       __ptext35 1B62                         __ptext27 19A6  
                       __ptext19 1BDC                         __ptext52 172A  
                       __ptext44 0940                         __ptext36 0BC2  
                       __ptext28 1AAC                         __ptext53 1A06  
                       __ptext45 12B8                         __ptext37 1228  
                       __ptext54 1C06                         __ptext46 1BCA  
                       __ptext38 1BA6                         __ptext55 1B3E  
                       __ptext47 00C0                         __ptext39 1AF6  
                       __ptext56 1C12                         __ptext48 1B1A  
                       __ptext49 0EA4                     _SSP1CON1bits 000FC6  
                 i1send_msg@data 000F                   i1send_msg@qmsg 0015  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
             uart_lthread@length 00D7                         _init_i2c 144A  
            _init_timer1_lthread 1B94                    __size_of_main 0326  
                  ??i2_check_msg 0036                main@t1thread_data 01C9  
                    ??_check_msg 00D5               __end_of_init_queue 1514  
           __size_of_SleepIfOkay 004E                         _recv_msg 0AA0  
          ??_i2c_configure_slave 00D3                         _send_msg 0CE2  
                 init_queue@qptr 00D3            __size_of_uart_lthread 0032  
                  ??_Delay1KTCYx 00D3              _InterruptHandlerLow 0018  
                       main@move 01B8             ?_init_timer1_lthread 00D3  
       ??_uart_trans_int_handler 001E                i2___awmod@divisor 0036  
              i2___awmod@counter 0038                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                   OpenUSART@spbrg 00D3  
                       memcpy@d1 00D3                         memcpy@s1 00D5  
          __end_ofi2_in_high_int 1C12     i2c_int_handler@overrun_error 00C0  
               i2send_msg@length 0040                         intlevel1 0000  
                       intlevel2 0000             ?_InterruptHandlerLow 0001  
               ___lwmod@dividend 00D3           ?_uart_recv_int_handler 0001  
                   _uart_lthread 1910          timer0_int_handler@right 00BF  
          _block_on_To_msgqueues 15D6                    ?_handle_start 0001  
               ??_timer0_lthread 00DB      __size_of_ToMainHigh_recvmsg 0036  
    __size_of_ToMainHigh_sendmsg 0024                       _OSCCONbits 000FD3  
               ??_timer1_lthread 00E1                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015      i2ToMainHigh_sendmsg@msgtype 0045  
       ToMainHigh_sendmsg@length 001A                      ??_uart_send 00E1  
            __end_ofi2_check_msg 1B62             i2_ToMainHigh_sendmsg 1B1A  
          ??_init_timer1_lthread 00D5           ??_InterruptHandlerHigh 00C5  
              _ToMainLow_recvmsg 1872                _ToMainLow_sendmsg 1AD2  
             main@last_reg_recvd 01BD                  ___lwmod@divisor 00D5  
           __end_ofi2_in_low_int 1A34               ?_ToMainLow_recvmsg 01AE  
            __end_of_Delay1KTCYx 1B94                ??_i2c_int_handler 00BB  
                ___lwmod@counter 00D7               ?_ToMainLow_sendmsg 0017  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 0042            ??_InterruptHandlerLow 0023  
            ??_ToMainLow_recvmsg 00DF                   i2send_msg@qmsg 00B9  
                 i2send_msg@slot 00B8                   i2send_msg@qptr 003E  
            ??_ToMainLow_sendmsg 001A              _FromMainLow_recvmsg 1A5E  
                 ??_handle_start 0034              _FromMainLow_sendmsg 18DE  
                   _USART_Status 004C  
