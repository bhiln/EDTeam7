

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Oct 16 01:08:41 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F46J50
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    77                           	psect	param0,global,class=BANK0,space=1,delta=1
    78  0000                     _BAUDCONbits	set	3966
    79  0000                     _INTCON2bits	set	4081
    80  0000                     _INTCONbits	set	4082
    81  0000                     _IPR1bits	set	3999
    82  0000                     _LATAbits	set	3977
    83  0000                     _LATEbits	set	3981
    84  0000                     _OSCCON	set	4051
    85  0000                     _OSCCONbits	set	4051
    86  0000                     _OSCTUNEbits	set	3995
    87  0000                     _PIE1bits	set	3997
    88  0000                     _PIR1bits	set	3998
    89  0000                     _RCONbits	set	4048
    90  0000                     _RCREG1	set	4015
    91  0000                     _RCSTA1	set	4012
    92  0000                     _RCSTA1bits	set	4012
    93  0000                     _RCSTAbits	set	4012
    94  0000                     _SPBRG1	set	4016
    95  0000                     _SPBRGH1	set	3967
    96  0000                     _SSP1BUF	set	4041
    97  0000                     _SSP1CON2bits	set	4037
    98  0000                     _SSP1STATbits	set	4039
    99  0000                     _SSPADD	set	4040
   100  0000                     _SSPCON1	set	4038
   101  0000                     _SSPCON1bits	set	4038
   102  0000                     _SSPCON2	set	4037
   103  0000                     _SSPSTAT	set	4039
   104  0000                     _SSPSTATbits	set	4039
   105  0000                     _T0CON	set	4053
   106  0000                     _T0CONbits	set	4053
   107  0000                     _T1CON	set	4045
   108  0000                     _T1CONbits	set	4045
   109  0000                     _T1GCON	set	3994
   110  0000                     _T1GCONbits	set	3994
   111  0000                     _TMR0H	set	4055
   112  0000                     _TMR0L	set	4054
   113  0000                     _TMR1H	set	4047
   114  0000                     _TMR1L	set	4046
   115  0000                     _TRISAbits	set	3986
   116  0000                     _TRISBbits	set	3987
   117  0000                     _TRISCbits	set	3988
   118  0000                     _TRISEbits	set	3990
   119  0000                     _TXREG1	set	4014
   120  0000                     _TXSTA1	set	4013
   121  0000                     _TXSTA1bits	set	4013
   122                           
   123                           	psect	nvCOMRAM
   124  00003B                     __pnvCOMRAM:
   125                           	opt stack 0
   126  00003B                     _uc_ptr:
   127                           	opt stack 0
   128  00003B                     	ds	2
   129                           
   130                           	psect	nvBANK0
   131  0000B3                     __pnvBANK0:
   132                           	opt stack 0
   133  0000B3                     _ic_ptr:
   134                           	opt stack 0
   135  0000B3                     	ds	2
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  001EBC                     __pcinit:
   141                           	opt stack 0
   142  001EBC                     start_initialization:
   143                           	opt stack 0
   144  001EBC                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Clear objects allocated to BIGRAM (1992 bytes)
   148  001EBC  EE01  F0BD         	lfsr	0,__pbssBIGRAM
   149  001EC0  EE17 F0C8          	lfsr	1,1992
   150  001EC4                     clear_0:
   151  001EC4  6AEE               	clrf	postinc0,c
   152  001EC6  50E5               	movf	postdec1,w,c
   153  001EC8  50E1               	movf	fsr1l,w,c
   154  001ECA  E1FC               	bnz	clear_0
   155  001ECC  50E2               	movf	fsr1h,w,c
   156  001ECE  E1FA               	bnz	clear_0
   157                           
   158                           ; Clear objects allocated to BANK0 (1 bytes)
   159  001ED0  0100               	movlb	0
   160  001ED2  6BB5               	clrf	__pbssBANK0& (0+255),b
   161                           
   162                           ; Clear objects allocated to COMRAM (1 bytes)
   163  001ED4  6A3D               	clrf	__pbssCOMRAM& (0+255),c
   164  001ED6                     end_of_initialization:
   165                           	opt stack 0
   166  001ED6                     __end_of__initialization:
   167                           	opt stack 0
   168  001ED6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   169  001ED8  6EF8               	movwf	tblptru,c
   170  001EDA  0100               	movlb	0
   171  001EDC  EFB4  F002         	goto	_main	;jump to C main() function
   172                           tblptru	equ	0xFF8
   173                           postinc0	equ	0xFEE
   174                           postdec1	equ	0xFE5
   175                           fsr1h	equ	0xFE2
   176                           fsr1l	equ	0xFE1
   177                           
   178                           	psect	bssCOMRAM
   179  00003D                     __pbssCOMRAM:
   180                           	opt stack 0
   181  00003D                     _USART1_Status:
   182                           	opt stack 0
   183  00003D                     	ds	1
   184                           tblptru	equ	0xFF8
   185                           postinc0	equ	0xFEE
   186                           postdec1	equ	0xFE5
   187                           fsr1h	equ	0xFE2
   188                           fsr1l	equ	0xFE1
   189                           
   190                           	psect	bssBANK0
   191  0000B5                     __pbssBANK0:
   192                           	opt stack 0
   193  0000B5                     _MQ_Main_Willing_to_block:
   194                           	opt stack 0
   195  0000B5                     	ds	1
   196                           tblptru	equ	0xFF8
   197                           postinc0	equ	0xFEE
   198                           postdec1	equ	0xFE5
   199                           fsr1h	equ	0xFE2
   200                           fsr1l	equ	0xFE1
   201                           
   202                           	psect	bssBIGRAM
   203  0001BD                     __pbssBIGRAM:
   204                           	opt stack 0
   205  0001BD                     _FromMainHigh_MQ:
   206                           	opt stack 0
   207  0001BD                     	ds	332
   208  000309                     _FromMainLow_MQ:
   209                           	opt stack 0
   210  000309                     	ds	332
   211  000455                     _MotorData_MQ:
   212                           	opt stack 0
   213  000455                     	ds	332
   214  0005A1                     _SensorData_MQ:
   215                           	opt stack 0
   216  0005A1                     	ds	332
   217  0006ED                     _ToMainHigh_MQ:
   218                           	opt stack 0
   219  0006ED                     	ds	332
   220  000839                     _ToMainLow_MQ:
   221                           	opt stack 0
   222  000839                     	ds	332
   223                           tblptru	equ	0xFF8
   224                           postinc0	equ	0xFEE
   225                           postdec1	equ	0xFE5
   226                           fsr1h	equ	0xFE2
   227                           fsr1l	equ	0xFE1
   228                           
   229                           	psect	cstackBANK1
   230  000100                     __pcstackBANK1:
   231                           	opt stack 0
   232  000100                     main@msgbuffer:
   233                           	opt stack 0
   234                           
   235                           ; 31 bytes @ 0x0
   236  000100                     	ds	31
   237  00011F                     main@forward:
   238                           	opt stack 0
   239                           
   240                           ; 1 bytes @ 0x1F
   241  00011F                     	ds	1
   242  000120                     main@left:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x20
   246  000120                     	ds	1
   247  000121                     main@right:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x21
   251  000121                     	ds	1
   252  000122                     main@stop:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0x22
   256  000122                     	ds	1
   257  000123                     main@reverse:
   258                           	opt stack 0
   259                           
   260                           ; 1 bytes @ 0x23
   261  000123                     	ds	1
   262  000124                     main@uthread_data:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x24
   266  000124                     	ds	2
   267  000126                     main@t0thread_data:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x26
   271  000126                     	ds	2
   272  000128                     main@umsg:
   273                           	opt stack 0
   274                           
   275                           ; 6 bytes @ 0x28
   276  000128                     	ds	6
   277  00012E                     main@last_reg_recvd:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x2E
   281  00012E                     	ds	1
   282  00012F                     main@t1thread_data:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x2F
   286  00012F                     	ds	2
   287  000131                     main@msgtype:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x31
   291  000131                     	ds	1
   292  000132                     main@length:
   293                           	opt stack 0
   294                           
   295                           ; 1 bytes @ 0x32
   296  000132                     	ds	1
   297  000133                     main@uc:
   298                           	opt stack 0
   299                           
   300                           ; 66 bytes @ 0x33
   301  000133                     	ds	66
   302  000175                     main@ic:
   303                           	opt stack 0
   304                           
   305                           ; 72 bytes @ 0x75
   306  000175                     	ds	72
   307                           tblptru	equ	0xFF8
   308                           postinc0	equ	0xFEE
   309                           postdec1	equ	0xFE5
   310                           fsr1h	equ	0xFE2
   311                           fsr1l	equ	0xFE1
   312                           
   313                           	psect	cstackBANK0
   314  000060                     __pcstackBANK0:
   315                           	opt stack 0
   316  000060                     ?i2_in_high_int:
   317                           	opt stack 0
   318  000060                     ?i2___awmod:
   319                           	opt stack 0
   320  000060                     i2check_msg@qptr:
   321                           	opt stack 0
   322  000060                     i2memcpy@d1:
   323                           	opt stack 0
   324  000060                     i2___awmod@dividend:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x0
   328  000060                     	ds	2
   329  000062                     ??i2_check_msg:
   330  000062                     ?i2_in_low_int:
   331                           	opt stack 0
   332  000062                     i2memcpy@s1:
   333                           	opt stack 0
   334  000062                     i2___awmod@divisor:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x2
   338  000062                     	ds	2
   339  000064                     i2___awmod@counter:
   340                           	opt stack 0
   341  000064                     i2memcpy@n:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x4
   345  000064                     	ds	1
   346  000065                     i2___awmod@sign:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x5
   350  000065                     	ds	1
   351  000066                     i2memcpy@d:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x6
   355  000066                     	ds	2
   356  000068                     i2memcpy@s:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x8
   360  000068                     	ds	2
   361  00006A                     i2send_msg@qptr:
   362                           	opt stack 0
   363  00006A                     i2recv_msg@qptr:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0xA
   367  00006A                     	ds	2
   368  00006C                     i2send_msg@length:
   369                           	opt stack 0
   370  00006C                     i2recv_msg@maxlength:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0xC
   374  00006C                     	ds	1
   375  00006D                     i2send_msg@msgtype:
   376                           	opt stack 0
   377  00006D                     i2recv_msg@msgtype:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0xD
   381  00006D                     	ds	1
   382  00006E                     i2send_msg@data:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0xE
   386  00006E                     	ds	1
   387  00006F                     i2recv_msg@data:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0xF
   391  00006F                     	ds	1
   392  000070                     ??i2_send_msg:
   393                           
   394                           ; 0 bytes @ 0x10
   395  000070                     	ds	1
   396  000071                     ??i2_recv_msg:
   397  000071                     i2send_msg@tlength:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x11
   401  000071                     	ds	2
   402  000073                     i2send_msg@slot:
   403                           	opt stack 0
   404  000073                     i2recv_msg@slot:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x13
   408  000073                     	ds	1
   409  000074                     i2send_msg@qmsg:
   410                           	opt stack 0
   411  000074                     i2recv_msg@tlength:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x14
   415  000074                     	ds	2
   416  000076                     i2ToMainHigh_sendmsg@msgtype:
   417                           	opt stack 0
   418  000076                     i2recv_msg@qmsg:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x16
   422  000076                     	ds	1
   423  000077                     i2ToMainHigh_sendmsg@data:
   424                           	opt stack 0
   425                           
   426                           ; 2 bytes @ 0x17
   427  000077                     	ds	1
   428  000078                     i2FromMainHigh_recvmsg@msgtype:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x18
   432  000078                     	ds	1
   433  000079                     i2ToMainHigh_sendmsg@length:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x19
   437  000079                     	ds	1
   438  00007A                     i2FromMainHigh_recvmsg@data:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x1A
   442  00007A                     	ds	2
   443  00007C                     i2FromMainHigh_recvmsg@maxlength:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x1C
   447  00007C                     	ds	1
   448  00007D                     ??_i2c_master_int_handler:
   449                           
   450                           ; 0 bytes @ 0x1D
   451  00007D                     	ds	5
   452  000082                     ??_InterruptHandlerHigh:
   453                           
   454                           ; 0 bytes @ 0x22
   455  000082                     	ds	14
   456  000090                     ?_in_high_int:
   457                           	opt stack 0
   458  000090                     ?___awmod:
   459                           	opt stack 0
   460  000090                     ?___lwmod:
   461                           	opt stack 0
   462  000090                     i2c_configure_master@motor_addr:
   463                           	opt stack 0
   464  000090                     OpenTimer0@config:
   465                           	opt stack 0
   466  000090                     OpenTimer1@config1:
   467                           	opt stack 0
   468  000090                     Delay1KTCYx@unit:
   469                           	opt stack 0
   470  000090                     init_queue@qptr:
   471                           	opt stack 0
   472  000090                     check_msg@qptr:
   473                           	opt stack 0
   474  000090                     init_i2c@ic:
   475                           	opt stack 0
   476  000090                     init_uart_recv@uc:
   477                           	opt stack 0
   478  000090                     timer0_lthread@tptr:
   479                           	opt stack 0
   480  000090                     init_timer1_lthread@tptr:
   481                           	opt stack 0
   482  000090                     uart_lthread@uptr:
   483                           	opt stack 0
   484  000090                     Open1USART@spbrg:
   485                           	opt stack 0
   486  000090                     ___awmod@dividend:
   487                           	opt stack 0
   488  000090                     ___lwmod@dividend:
   489                           	opt stack 0
   490  000090                     memcpy@d1:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x30
   494  000090                     	ds	1
   495  000091                     ??_OpenTimer1:
   496  000091                     i2c_configure_master@sensor_addr:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x31
   500  000091                     	ds	1
   501  000092                     ??_Open1USART:
   502  000092                     ??_check_msg:
   503  000092                     ?_in_low_int:
   504                           	opt stack 0
   505  000092                     init_queue@i:
   506                           	opt stack 0
   507  000092                     OpenTimer1@config:
   508                           	opt stack 0
   509  000092                     timer0_lthread@msgtype:
   510                           	opt stack 0
   511  000092                     uart_lthread@msgtype:
   512                           	opt stack 0
   513  000092                     ___awmod@divisor:
   514                           	opt stack 0
   515  000092                     ___lwmod@divisor:
   516                           	opt stack 0
   517  000092                     memcpy@s1:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x32
   521  000092                     	ds	1
   522  000093                     
   523                           ; 0 bytes @ 0x33
   524  000093                     	ds	1
   525  000094                     ?_in_main:
   526                           	opt stack 0
   527  000094                     ___awmod@counter:
   528                           	opt stack 0
   529  000094                     ___lwmod@counter:
   530                           	opt stack 0
   531  000094                     timer0_lthread@length:
   532                           	opt stack 0
   533  000094                     uart_lthread@length:
   534                           	opt stack 0
   535  000094                     memcpy@n:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x34
   539  000094                     	ds	1
   540  000095                     Open1USART@config:
   541                           	opt stack 0
   542  000095                     ___awmod@sign:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x35
   546  000095                     	ds	1
   547  000096                     timer0_lthread@msgbuffer:
   548                           	opt stack 0
   549  000096                     uart_lthread@msgbuffer:
   550                           	opt stack 0
   551  000096                     memcpy@d:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x36
   555  000096                     	ds	2
   556  000098                     timer0_lthread@msgval:
   557                           	opt stack 0
   558  000098                     memcpy@s:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x38
   562  000098                     	ds	2
   563  00009A                     send_msg@qptr:
   564                           	opt stack 0
   565  00009A                     recv_msg@qptr:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x3A
   569  00009A                     	ds	2
   570  00009C                     send_msg@length:
   571                           	opt stack 0
   572  00009C                     recv_msg@maxlength:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x3C
   576  00009C                     	ds	1
   577  00009D                     send_msg@msgtype:
   578                           	opt stack 0
   579  00009D                     recv_msg@msgtype:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x3D
   583  00009D                     	ds	1
   584  00009E                     send_msg@data:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x3E
   588  00009E                     	ds	1
   589  00009F                     recv_msg@data:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x3F
   593  00009F                     	ds	1
   594  0000A0                     ??_send_msg:
   595                           
   596                           ; 0 bytes @ 0x40
   597  0000A0                     	ds	1
   598  0000A1                     ??_recv_msg:
   599  0000A1                     send_msg@tlength:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x41
   603  0000A1                     	ds	2
   604  0000A3                     send_msg@slot:
   605                           	opt stack 0
   606  0000A3                     recv_msg@slot:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x43
   610  0000A3                     	ds	1
   611  0000A4                     send_msg@qmsg:
   612                           	opt stack 0
   613  0000A4                     recv_msg@tlength:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x44
   617  0000A4                     	ds	2
   618  0000A6                     FromMainLow_sendmsg@msgtype:
   619                           	opt stack 0
   620  0000A6                     FromMainHigh_sendmsg@msgtype:
   621                           	opt stack 0
   622  0000A6                     recv_msg@qmsg:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x46
   626  0000A6                     	ds	1
   627  0000A7                     FromMainLow_sendmsg@data:
   628                           	opt stack 0
   629  0000A7                     FromMainHigh_sendmsg@data:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x47
   633  0000A7                     	ds	1
   634  0000A8                     ToMainLow_recvmsg@msgtype:
   635                           	opt stack 0
   636  0000A8                     ToMainHigh_recvmsg@msgtype:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x48
   640  0000A8                     	ds	1
   641  0000A9                     FromMainLow_sendmsg@length:
   642                           	opt stack 0
   643  0000A9                     FromMainHigh_sendmsg@length:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x49
   647  0000A9                     	ds	1
   648  0000AA                     i2c_master_send@length:
   649                           	opt stack 0
   650  0000AA                     ToMainLow_recvmsg@data:
   651                           	opt stack 0
   652  0000AA                     ToMainHigh_recvmsg@data:
   653                           	opt stack 0
   654  0000AA                     uart_send@msg_buffer:
   655                           	opt stack 0
   656  0000AA                     timer1_lthread@tptr:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x4A
   660  0000AA                     	ds	1
   661  0000AB                     i2c_master_send@msg:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x4B
   665  0000AB                     	ds	1
   666  0000AC                     ??_uart_send:
   667  0000AC                     ToMainLow_recvmsg@maxlength:
   668                           	opt stack 0
   669  0000AC                     ToMainHigh_recvmsg@maxlength:
   670                           	opt stack 0
   671  0000AC                     timer1_lthread@msgtype:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x4C
   675  0000AC                     	ds	1
   676  0000AD                     i2c_master_send@addr:
   677                           	opt stack 0
   678  0000AD                     uart_send@length:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x4D
   682  0000AD                     	ds	1
   683  0000AE                     timer1_lthread@length:
   684                           	opt stack 0
   685                           
   686                           ; 2 bytes @ 0x4E
   687  0000AE                     	ds	2
   688  0000B0                     timer1_lthread@msgbuffer:
   689                           	opt stack 0
   690                           
   691                           ; 2 bytes @ 0x50
   692  0000B0                     	ds	2
   693  0000B2                     timer1_lthread@retval:
   694                           	opt stack 0
   695                           
   696                           ; 1 bytes @ 0x52
   697  0000B2                     	ds	1
   698  0000B3                     tblptru	equ	0xFF8
   699                           postinc0	equ	0xFEE
   700                           postdec1	equ	0xFE5
   701                           fsr1h	equ	0xFE2
   702                           fsr1l	equ	0xFE1
   703                           
   704                           ; 0 bytes @ 0x53
   705                           
   706                           	psect	cstackCOMRAM
   707  000001                     __pcstackCOMRAM:
   708                           	opt stack 0
   709  000001                     ?_ReadTimer1:
   710                           	opt stack 0
   711  000001                     ?i1___awmod:
   712                           	opt stack 0
   713  000001                     Read1USART@data:
   714                           	opt stack 0
   715  000001                     WriteTimer0@timer0:
   716                           	opt stack 0
   717  000001                     WriteTimer1@timer1:
   718                           	opt stack 0
   719  000001                     i1memcpy@d1:
   720                           	opt stack 0
   721  000001                     i1___awmod@dividend:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x0
   725  000001                     	ds	2
   726  000003                     WriteTimer0@timer:
   727                           	opt stack 0
   728  000003                     ReadTimer1@timer:
   729                           	opt stack 0
   730  000003                     WriteTimer1@timer:
   731                           	opt stack 0
   732  000003                     i1memcpy@s1:
   733                           	opt stack 0
   734  000003                     i1___awmod@divisor:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x2
   738  000003                     	ds	2
   739  000005                     i1___awmod@counter:
   740                           	opt stack 0
   741  000005                     i1memcpy@n:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x4
   745  000005                     	ds	1
   746  000006                     i1___awmod@sign:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x5
   750  000006                     	ds	1
   751  000007                     i1memcpy@d:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x6
   755  000007                     	ds	2
   756  000009                     i1memcpy@s:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x8
   760  000009                     	ds	2
   761  00000B                     i1send_msg@qptr:
   762                           	opt stack 0
   763  00000B                     i1recv_msg@qptr:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0xA
   767  00000B                     	ds	2
   768  00000D                     i1send_msg@length:
   769                           	opt stack 0
   770  00000D                     i1recv_msg@maxlength:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0xC
   774  00000D                     	ds	1
   775  00000E                     i1send_msg@msgtype:
   776                           	opt stack 0
   777  00000E                     i1recv_msg@msgtype:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0xD
   781  00000E                     	ds	1
   782  00000F                     i1send_msg@data:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0xE
   786  00000F                     	ds	1
   787  000010                     i1recv_msg@data:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0xF
   791  000010                     	ds	1
   792  000011                     ??i1_send_msg:
   793                           
   794                           ; 0 bytes @ 0x10
   795  000011                     	ds	1
   796  000012                     ??i1_recv_msg:
   797  000012                     i1send_msg@tlength:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x11
   801  000012                     	ds	2
   802  000014                     i1send_msg@slot:
   803                           	opt stack 0
   804  000014                     i1recv_msg@slot:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x13
   808  000014                     	ds	1
   809  000015                     i1send_msg@qmsg:
   810                           	opt stack 0
   811  000015                     i1recv_msg@tlength:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x14
   815  000015                     	ds	2
   816  000017                     ToMainLow_sendmsg@msgtype:
   817                           	opt stack 0
   818  000017                     ToMainHigh_sendmsg@msgtype:
   819                           	opt stack 0
   820  000017                     i1recv_msg@qmsg:
   821                           	opt stack 0
   822                           
   823                           ; 2 bytes @ 0x16
   824  000017                     	ds	1
   825  000018                     ToMainLow_sendmsg@data:
   826                           	opt stack 0
   827  000018                     ToMainHigh_sendmsg@data:
   828                           	opt stack 0
   829                           
   830                           ; 2 bytes @ 0x17
   831  000018                     	ds	1
   832  000019                     FromMainLow_recvmsg@msgtype:
   833                           	opt stack 0
   834  000019                     FromMainHigh_recvmsg@msgtype:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x18
   838  000019                     	ds	1
   839  00001A                     ToMainLow_sendmsg@length:
   840                           	opt stack 0
   841  00001A                     ToMainHigh_sendmsg@length:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x19
   845  00001A                     	ds	1
   846  00001B                     ??_uart_recv_int_handler:
   847  00001B                     FromMainLow_recvmsg@data:
   848                           	opt stack 0
   849  00001B                     FromMainHigh_recvmsg@data:
   850                           	opt stack 0
   851  00001B                     timer1_int_handler@result:
   852                           	opt stack 0
   853                           
   854                           ; 2 bytes @ 0x1A
   855  00001B                     	ds	2
   856  00001D                     FromMainLow_recvmsg@maxlength:
   857                           	opt stack 0
   858  00001D                     FromMainHigh_recvmsg@maxlength:
   859                           	opt stack 0
   860                           
   861                           ; 1 bytes @ 0x1C
   862  00001D                     	ds	1
   863  00001E                     ??_uart_trans_int_handler:
   864  00001E                     timer0_int_handler@length:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x1D
   868  00001E                     	ds	2
   869  000020                     timer0_int_handler@forward:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x1F
   873  000020                     	ds	1
   874  000021                     timer0_int_handler@left:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x20
   878  000021                     	ds	1
   879  000022                     timer0_int_handler@right:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x21
   883  000022                     	ds	1
   884  000023                     timer0_int_handler@stop:
   885                           	opt stack 0
   886                           
   887                           ; 1 bytes @ 0x22
   888  000023                     	ds	1
   889  000024                     timer0_int_handler@reverse:
   890                           	opt stack 0
   891                           
   892                           ; 1 bytes @ 0x23
   893  000024                     	ds	1
   894  000025                     timer0_int_handler@msgtype:
   895                           	opt stack 0
   896                           
   897                           ; 2 bytes @ 0x24
   898  000025                     	ds	2
   899  000027                     timer0_int_handler@val:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0x26
   903  000027                     	ds	2
   904  000029                     timer0_int_handler@i:
   905                           	opt stack 0
   906                           
   907                           ; 1 bytes @ 0x28
   908  000029                     	ds	1
   909  00002A                     ??_InterruptHandlerLow:
   910                           
   911                           ; 0 bytes @ 0x29
   912  00002A                     	ds	17
   913                           tblptru	equ	0xFF8
   914                           postinc0	equ	0xFEE
   915                           postdec1	equ	0xFE5
   916                           fsr1h	equ	0xFE2
   917                           fsr1l	equ	0xFE1
   918                           
   919 ;;
   920 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   921 ;;
   922 ;; *************** function _main *****************
   923 ;; Defined at:
   924 ;;		line 71 in file "../src/main.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  ic             72  117[BANK1 ] struct __i2c_comm
   929 ;;  uc             66   51[BANK1 ] struct __uart_comm
   930 ;;  msgbuffer      31    0[BANK1 ] unsigned char [31]
   931 ;;  umsg            6   40[BANK1 ] unsigned char [6]
   932 ;;  t1thread_dat    2   47[BANK1 ] struct __timer1_thread_s
   933 ;;  t0thread_dat    2   38[BANK1 ] struct __timer0_thread_s
   934 ;;  uthread_data    2   36[BANK1 ] struct __uart_thread_str
   935 ;;  length          1   50[BANK1 ] char 
   936 ;;  msgtype         1   49[BANK1 ] unsigned char 
   937 ;;  last_reg_rec    1   46[BANK1 ] unsigned char 
   938 ;;  reverse         1   35[BANK1 ] unsigned char [1]
   939 ;;  stop            1   34[BANK1 ] unsigned char [1]
   940 ;;  right           1   33[BANK1 ] unsigned char [1]
   941 ;;  left            1   32[BANK1 ] unsigned char [1]
   942 ;;  forward         1   31[BANK1 ] unsigned char [1]
   943 ;;  i               1    0        unsigned char 
   944 ;;  motor_cmd_ri    1    0        unsigned char 
   945 ;;  motor_cmd_le    1    0        unsigned char 
   946 ;;  c               1    0        unsigned char 
   947 ;; Return value:  Size  Location     Type
   948 ;;		None               void
   949 ;; Registers used:
   950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   957 ;;      Locals:         0       0     189       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   959 ;;      Totals:         0       0     189       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   960 ;;Total ram usage:      189 bytes
   961 ;; Hardware stack levels required when called:   14
   962 ;; This function calls:
   963 ;;		_Open1USART
   964 ;;		_OpenTimer0
   965 ;;		_OpenTimer1
   966 ;;		_ToMainHigh_recvmsg
   967 ;;		_ToMainLow_recvmsg
   968 ;;		_block_on_To_msgqueues
   969 ;;		_enable_interrupts
   970 ;;		_i2c_configure_master
   971 ;;		_i2c_master_send
   972 ;;		_init_i2c
   973 ;;		_init_queues
   974 ;;		_init_timer1_lthread
   975 ;;		_init_uart_recv
   976 ;;		_timer0_lthread
   977 ;;		_timer1_lthread
   978 ;;		_uart_lthread
   979 ;;		_uart_send
   980 ;; This function is called by:
   981 ;;		Startup code after reset
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text0
   986  000568                     __ptext0:
   987                           	opt stack 0
   988  000568                     _main:
   989                           	opt stack 17
   990                           
   991                           ;main.c: 72: char c;
   992                           ;main.c: 73: signed char length;
   993                           ;main.c: 74: unsigned char msgtype;
   994                           ;main.c: 75: unsigned char last_reg_recvd;
   995                           ;main.c: 76: unsigned char motor_cmd_left;
   996                           ;main.c: 77: unsigned char motor_cmd_right;
   997                           ;main.c: 78: uart_comm uc;
   998                           ;main.c: 79: i2c_comm ic;
   999                           ;main.c: 80: unsigned char msgbuffer[30 + 1];
  1000                           ;main.c: 81: unsigned char i;
  1001                           ;main.c: 82: uart_thread_struct uthread_data;
  1002                           ;main.c: 83: timer1_thread_struct t1thread_data;
  1003                           ;main.c: 84: timer0_thread_struct t0thread_data;
  1004                           ;main.c: 86: OSCCON = 0xE0;
  1005                           
  1006                           ;incstack = 0
  1007  000568  0EE0               	movlw	224
  1008  00056A  6ED3               	movwf	4051,c	;volatile
  1009                           
  1010                           ;main.c: 87: OSCTUNEbits.PLLEN = 1;
  1011  00056C  8C9B               	bsf	3995,6,c	;volatile
  1012                           
  1013                           ;main.c: 90: init_uart_recv(&uc);
  1014  00056E  0101               	movlb	1	; () banked
  1015  000570  0E01               	movlw	high main@uc
  1016  000572  0100               	movlb	0	; () banked
  1017  000574  6F91               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1018  000576  0101               	movlb	1	; () banked
  1019  000578  0E33               	movlw	low main@uc
  1020  00057A  0100               	movlb	0	; () banked
  1021  00057C  6F90               	movwf	init_uart_recv@uc& (0+255),b
  1022  00057E  ECDF  F00E         	call	_init_uart_recv	;wreg free
  1023                           
  1024                           ;main.c: 93: init_i2c(&ic);
  1025  000582  0101               	movlb	1	; () banked
  1026  000584  0E01               	movlw	high main@ic
  1027  000586  0100               	movlb	0	; () banked
  1028  000588  6F91               	movwf	(init_i2c@ic+1)& (0+255),b
  1029  00058A  0101               	movlb	1	; () banked
  1030  00058C  0E75               	movlw	low main@ic
  1031  00058E  0100               	movlb	0	; () banked
  1032  000590  6F90               	movwf	init_i2c@ic& (0+255),b
  1033  000592  EC9B  F00C         	call	_init_i2c	;wreg free
  1034                           
  1035                           ;main.c: 96: init_timer1_lthread(&t1thread_data);
  1036  000596  0101               	movlb	1	; () banked
  1037  000598  0E01               	movlw	high main@t1thread_data
  1038  00059A  0100               	movlb	0	; () banked
  1039  00059C  6F91               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1040  00059E  0101               	movlb	1	; () banked
  1041  0005A0  0E2F               	movlw	low main@t1thread_data
  1042  0005A2  0100               	movlb	0	; () banked
  1043  0005A4  6F90               	movwf	init_timer1_lthread@tptr& (0+255),b
  1044  0005A6  ECCD  F00F         	call	_init_timer1_lthread	;wreg free
  1045                           
  1046                           ;main.c: 99: init_queues();
  1047  0005AA  EC67  F00C         	call	_init_queues	;wreg free
  1048                           
  1049                           ;main.c: 102: OpenTimer0(0b11111111 & 0b10111111 & 0b11011111 & 0b11110110);
  1050  0005AE  0E96               	movlw	150
  1051  0005B0  EC4B  F00F         	call	_OpenTimer0
  1052                           
  1053                           ;main.c: 103: OpenTimer1(0b11111111 & 0b10011111 & 0b11111111 & 0b11111111 & 0b11111011 
      +                          & 0b11111111,0x0);
  1054  0005B4  0E00               	movlw	0
  1055  0005B6  0100               	movlb	0	; () banked
  1056  0005B8  6F90               	movwf	OpenTimer1@config1& (0+255),b
  1057  0005BA  0E9B               	movlw	155
  1058  0005BC  EC2B  F00E         	call	_OpenTimer1
  1059                           
  1060                           ;main.c: 108: INTCON2bits.TMR0IP = 0;
  1061  0005C0  94F1               	bcf	intcon2,2,c	;volatile
  1062                           
  1063                           ;main.c: 110: IPR1bits.TMR1IP = 0;
  1064  0005C2  909F               	bcf	3999,0,c	;volatile
  1065                           
  1066                           ;main.c: 112: IPR1bits.RCIP = 0;
  1067  0005C4  9A9F               	bcf	3999,5,c	;volatile
  1068                           
  1069                           ;main.c: 114: IPR1bits.TXIP = 0;
  1070  0005C6  989F               	bcf	3999,4,c	;volatile
  1071                           
  1072                           ;main.c: 116: IPR1bits.SSPIP = 1;
  1073  0005C8  869F               	bsf	3999,3,c	;volatile
  1074                           
  1075                           ;main.c: 120: i2c_configure_master(0x9E, 0x9A);
  1076  0005CA  0E9A               	movlw	154
  1077  0005CC  0100               	movlb	0	; () banked
  1078  0005CE  6F90               	movwf	i2c_configure_master@motor_addr& (0+255),b
  1079  0005D0  0E9E               	movlw	158
  1080  0005D2  ECB4  F00B         	call	_i2c_configure_master
  1081                           
  1082                           ;main.c: 123: PIE1bits.SSPIE = 1;
  1083  0005D6  869D               	bsf	3997,3,c	;volatile
  1084                           
  1085                           ;main.c: 126: Open1USART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1086                           ;main.c: 127: 0b11111111 & 0b11101111, 0x19);
  1087  0005D8  0E00               	movlw	0
  1088  0005DA  0100               	movlb	0	; () banked
  1089  0005DC  6F91               	movwf	(Open1USART@spbrg+1)& (0+255),b
  1090  0005DE  0E19               	movlw	25
  1091  0005E0  0100               	movlb	0	; () banked
  1092  0005E2  6F90               	movwf	Open1USART@spbrg& (0+255),b
  1093  0005E4  0E6C               	movlw	108
  1094  0005E6  EC2F  F00C         	call	_Open1USART
  1095                           
  1096                           ;main.c: 131: enable_interrupts();
  1097  0005EA  EC08  F010         	call	_enable_interrupts	;wreg free
  1098                           
  1099                           ;main.c: 134: TRISEbits.TRISE0 = 0x0;
  1100  0005EE  9096               	bcf	3990,0,c	;volatile
  1101                           
  1102                           ;main.c: 135: TRISEbits.TRISE1 = 0x0;
  1103  0005F0  9296               	bcf	3990,1,c	;volatile
  1104                           
  1105                           ;main.c: 136: TRISEbits.TRISE2 = 0x0;
  1106  0005F2  9496               	bcf	3990,2,c	;volatile
  1107                           
  1108                           ;main.c: 137: TRISAbits.TRISA2 = 0x0;
  1109  0005F4  9492               	bcf	3986,2,c	;volatile
  1110                           
  1111                           ;main.c: 138: TRISAbits.TRISA3 = 0x0;
  1112  0005F6  9692               	bcf	3986,3,c	;volatile
  1113                           
  1114                           ;main.c: 139: TRISCbits.TRISC7 = 0x1;
  1115  0005F8  8E94               	bsf	3988,7,c	;volatile
  1116                           
  1117                           ;main.c: 140: TRISCbits.TRISC6 = 0x0;
  1118  0005FA  9C94               	bcf	3988,6,c	;volatile
  1119                           
  1120                           ;main.c: 142: SPBRGH1 = 0x00;
  1121  0005FC  0E00               	movlw	0
  1122  0005FE  6E7F               	movwf	3967,c	;volatile
  1123                           
  1124                           ;main.c: 143: SPBRG1 = 0xCF;
  1125  000600  0ECF               	movlw	207
  1126  000602  6EB0               	movwf	4016,c	;volatile
  1127                           
  1128                           ;main.c: 145: TXSTA1bits.BRGH = 1;
  1129  000604  84AD               	bsf	4013,2,c	;volatile
  1130                           
  1131                           ;main.c: 146: BAUDCONbits.BRG16 = 1;
  1132  000606  867E               	bsf	3966,3,c	;volatile
  1133                           
  1134                           ;main.c: 147: TXSTA1bits.SYNC = 0;
  1135  000608  98AD               	bcf	4013,4,c	;volatile
  1136                           
  1137                           ;main.c: 148: RCSTA1bits.SPEN = 0x1;
  1138  00060A  8EAC               	bsf	4012,7,c	;volatile
  1139                           
  1140                           ;main.c: 149: TXSTA1bits.TXEN = 0x1;
  1141  00060C  8AAD               	bsf	4013,5,c	;volatile
  1142                           
  1143                           ;main.c: 156: unsigned char umsg[6];
  1144                           ;main.c: 157: umsg[0] = 0x03;
  1145  00060E  0E03               	movlw	3
  1146  000610  0101               	movlb	1	; () banked
  1147  000612  6F28               	movwf	main@umsg& (0+255),b
  1148                           
  1149                           ; BSR set to: 1
  1150                           ;main.c: 158: umsg[1] = 0x00;
  1151  000614  0E00               	movlw	0
  1152  000616  0101               	movlb	1	; () banked
  1153  000618  6F29               	movwf	(main@umsg+1)& (0+255),b
  1154                           
  1155                           ; BSR set to: 1
  1156                           ;main.c: 159: umsg[2] = 0x0A;
  1157  00061A  0E0A               	movlw	10
  1158  00061C  0101               	movlb	1	; () banked
  1159  00061E  6F2A               	movwf	(main@umsg+2)& (0+255),b
  1160                           
  1161                           ; BSR set to: 1
  1162                           ;main.c: 160: umsg[3] = 0x00;
  1163  000620  0E00               	movlw	0
  1164  000622  0101               	movlb	1	; () banked
  1165  000624  6F2B               	movwf	(main@umsg+3)& (0+255),b
  1166                           
  1167                           ; BSR set to: 1
  1168                           ;main.c: 161: umsg[4] = 0x0A;
  1169  000626  0E0A               	movlw	10
  1170  000628  0101               	movlb	1	; () banked
  1171  00062A  6F2C               	movwf	(main@umsg+4)& (0+255),b
  1172                           
  1173                           ; BSR set to: 1
  1174                           ;main.c: 162: umsg[5] = 0xFF;
  1175  00062C  0101               	movlb	1	; () banked
  1176  00062E  692D               	setf	(main@umsg+5)& (0+255),b
  1177                           
  1178                           ; BSR set to: 1
  1179                           ;main.c: 164: unsigned char forward[1], left[1], right[1], stop[1], reverse[1];
  1180                           ;main.c: 165: forward[0] = 0x0A;
  1181  000630  0E0A               	movlw	10
  1182  000632  0101               	movlb	1	; () banked
  1183  000634  6F1F               	movwf	main@forward& (0+255),b
  1184                           
  1185                           ; BSR set to: 1
  1186                           ;main.c: 166: left[0] = 0x0B;
  1187  000636  0E0B               	movlw	11
  1188  000638  0101               	movlb	1	; () banked
  1189  00063A  6F20               	movwf	main@left& (0+255),b
  1190                           
  1191                           ; BSR set to: 1
  1192                           ;main.c: 167: right[0] = 0x0C;
  1193  00063C  0E0C               	movlw	12
  1194  00063E  0101               	movlb	1	; () banked
  1195  000640  6F21               	movwf	main@right& (0+255),b
  1196                           
  1197                           ; BSR set to: 1
  1198                           ;main.c: 168: stop[0] = 0x0D;
  1199  000642  0E0D               	movlw	13
  1200  000644  0101               	movlb	1	; () banked
  1201  000646  6F22               	movwf	main@stop& (0+255),b
  1202                           
  1203                           ; BSR set to: 1
  1204                           ;main.c: 169: reverse[0] = 0x0E;
  1205  000648  0E0E               	movlw	14
  1206  00064A  0101               	movlb	1	; () banked
  1207  00064C  6F23               	movwf	main@reverse& (0+255),b
  1208  00064E                     l117:
  1209                           
  1210                           ;main.c: 192: block_on_To_msgqueues();
  1211  00064E  ECDF  F00A         	call	_block_on_To_msgqueues	;wreg free
  1212                           
  1213                           ;main.c: 199: length = ToMainHigh_recvmsg(30, &msgtype, (void *) msgbuffer);
  1214  000652  0101               	movlb	1	; () banked
  1215  000654  0E01               	movlw	high main@msgtype
  1216  000656  0100               	movlb	0	; () banked
  1217  000658  6FA9               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1218  00065A  0101               	movlb	1	; () banked
  1219  00065C  0E31               	movlw	low main@msgtype
  1220  00065E  0100               	movlb	0	; () banked
  1221  000660  6FA8               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1222  000662  0101               	movlb	1	; () banked
  1223  000664  0E01               	movlw	high main@msgbuffer
  1224  000666  0100               	movlb	0	; () banked
  1225  000668  6FAB               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1226  00066A  0101               	movlb	1	; () banked
  1227  00066C  0E00               	movlw	low main@msgbuffer
  1228  00066E  0100               	movlb	0	; () banked
  1229  000670  6FAA               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1230  000672  0E1E               	movlw	30
  1231  000674  EC94  F00E         	call	_ToMainHigh_recvmsg
  1232  000678  0101               	movlb	1	; () banked
  1233  00067A  6F32               	movwf	main@length& (0+255),b
  1234                           
  1235                           ; BSR set to: 1
  1236                           ;main.c: 200: if (length < 0) {
  1237  00067C  0101               	movlb	1	; () banked
  1238  00067E  BF32               	btfsc	main@length& (0+255),7,b
  1239  000680  D049               	goto	l3356
  1240  000682  D034               	goto	l3354
  1241  000684                     l122:
  1242                           
  1243                           ; BSR set to: 1
  1244                           ;main.c: 208: {
  1245                           ;main.c: 209: { LATEbits.LATE1 = 1;};
  1246  000684  828D               	bsf	3981,1,c	;volatile
  1247                           
  1248                           ; BSR set to: 1
  1249                           ;main.c: 212: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1250  000686  0101               	movlb	1	; () banked
  1251  000688  0E01               	movlw	high main@t0thread_data
  1252  00068A  0100               	movlb	0	; () banked
  1253  00068C  6F91               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1254  00068E  0101               	movlb	1	; () banked
  1255  000690  0E26               	movlw	low main@t0thread_data
  1256  000692  0100               	movlb	0	; () banked
  1257  000694  6F90               	movwf	timer0_lthread@tptr& (0+255),b
  1258  000696  0101               	movlb	1	; () banked
  1259  000698  0100               	movlb	0	; () banked
  1260  00069A  C131  F092         	movff	main@msgtype,timer0_lthread@msgtype
  1261  00069E  0100               	movlb	0	; () banked
  1262  0006A0  6B93               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1263  0006A2  0101               	movlb	1	; () banked
  1264  0006A4  5132               	movf	main@length& (0+255),w,b
  1265  0006A6  0100               	movlb	0	; () banked
  1266  0006A8  6F94               	movwf	timer0_lthread@length& (0+255),b
  1267  0006AA  0100               	movlb	0	; () banked
  1268  0006AC  6B95               	clrf	(timer0_lthread@length+1)& (0+255),b
  1269  0006AE  0100               	movlb	0	; () banked
  1270  0006B0  BF94               	btfsc	timer0_lthread@length& (0+255),7,b
  1271  0006B2  0795               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1272  0006B4  0101               	movlb	1	; () banked
  1273  0006B6  0E01               	movlw	high main@msgbuffer
  1274  0006B8  0100               	movlb	0	; () banked
  1275  0006BA  6F97               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1276  0006BC  0101               	movlb	1	; () banked
  1277  0006BE  0E00               	movlw	low main@msgbuffer
  1278  0006C0  0100               	movlb	0	; () banked
  1279  0006C2  6F96               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1280  0006C4  EC01  F010         	call	_timer0_lthread	;wreg free
  1281                           
  1282                           ;main.c: 213: { LATEbits.LATE1 = 0;};
  1283  0006C8  928D               	bcf	3981,1,c	;volatile
  1284                           
  1285                           ;main.c: 214: break;
  1286  0006CA  D024               	goto	l3356
  1287  0006CC                     l125:
  1288                           
  1289                           ;main.c: 217: case 40:
  1290                           ;main.c: 218: {
  1291                           ;main.c: 221: last_reg_recvd = msgbuffer[0];
  1292  0006CC  C100  F12E         	movff	main@msgbuffer,main@last_reg_recvd
  1293                           
  1294                           ;main.c: 222: break;
  1295  0006D0  D021               	goto	l3356
  1296  0006D2                     l3350:
  1297                           
  1298                           ;main.c: 236: {
  1299                           ;main.c: 238: uart_send(length, msgbuffer);
  1300  0006D2  0101               	movlb	1	; () banked
  1301  0006D4  0E01               	movlw	high main@msgbuffer
  1302  0006D6  0100               	movlb	0	; () banked
  1303  0006D8  6FAB               	movwf	(uart_send@msg_buffer+1)& (0+255),b
  1304  0006DA  0101               	movlb	1	; () banked
  1305  0006DC  0E00               	movlw	low main@msgbuffer
  1306  0006DE  0100               	movlb	0	; () banked
  1307  0006E0  6FAA               	movwf	uart_send@msg_buffer& (0+255),b
  1308  0006E2  0101               	movlb	1	; () banked
  1309  0006E4  5132               	movf	main@length& (0+255),w,b
  1310  0006E6  EC6C  F004         	call	_uart_send
  1311                           
  1312                           ;main.c: 239: break;
  1313  0006EA  D014               	goto	l3356
  1314  0006EC                     l3354:
  1315  0006EC  0101               	movlb	1	; () banked
  1316  0006EE  5131               	movf	main@msgtype& (0+255),w,b
  1317                           
  1318                           ; Switch size 1, requested type "space"
  1319                           ; Number of cases is 6, Range of values is 10 to 52
  1320                           ; switch strategies available:
  1321                           ; Name         Instructions Cycles
  1322                           ; simple_byte           19    10 (average)
  1323                           ;	Chosen strategy is simple_byte
  1324  0006F0  0A0A               	xorlw	10	; case 10
  1325  0006F2  B4D8               	btfsc	status,2,c
  1326  0006F4  D7C7               	goto	l122
  1327  0006F6  0A22               	xorlw	34	; case 40
  1328  0006F8  B4D8               	btfsc	status,2,c
  1329  0006FA  D7E8               	goto	l125
  1330  0006FC  0A01               	xorlw	1	; case 41
  1331  0006FE  B4D8               	btfsc	status,2,c
  1332  000700  D7E5               	goto	l125
  1333  000702  0A07               	xorlw	7	; case 46
  1334  000704  B4D8               	btfsc	status,2,c
  1335  000706  D006               	goto	l3356
  1336  000708  0A01               	xorlw	1	; case 47
  1337  00070A  B4D8               	btfsc	status,2,c
  1338  00070C  D7E2               	goto	l3350
  1339  00070E  0A1B               	xorlw	27	; case 52
  1340  000710  B4D8               	btfsc	status,2,c
  1341  000712  D7DF               	goto	l3350
  1342  000714                     l3356:
  1343                           
  1344                           ;main.c: 252: }
  1345                           ;main.c: 255: length = ToMainLow_recvmsg(30, &msgtype, (void *) msgbuffer);
  1346  000714  0101               	movlb	1	; () banked
  1347  000716  0E01               	movlw	high main@msgtype
  1348  000718  0100               	movlb	0	; () banked
  1349  00071A  6FA9               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1350  00071C  0101               	movlb	1	; () banked
  1351  00071E  0E31               	movlw	low main@msgtype
  1352  000720  0100               	movlb	0	; () banked
  1353  000722  6FA8               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1354  000724  0101               	movlb	1	; () banked
  1355  000726  0E01               	movlw	high main@msgbuffer
  1356  000728  0100               	movlb	0	; () banked
  1357  00072A  6FAB               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1358  00072C  0101               	movlb	1	; () banked
  1359  00072E  0E00               	movlw	low main@msgbuffer
  1360  000730  0100               	movlb	0	; () banked
  1361  000732  6FAA               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1362  000734  0E1E               	movlw	30
  1363  000736  EC7B  F00E         	call	_ToMainLow_recvmsg
  1364  00073A  0101               	movlb	1	; () banked
  1365  00073C  6F32               	movwf	main@length& (0+255),b
  1366                           
  1367                           ; BSR set to: 1
  1368                           ;main.c: 256: if (length < 0) {
  1369  00073E  0101               	movlb	1	; () banked
  1370  000740  BF32               	btfsc	main@length& (0+255),7,b
  1371  000742  D785               	goto	l117
  1372  000744  D0BD               	goto	l3392
  1373  000746                     l3362:
  1374                           
  1375                           ; BSR set to: 1
  1376                           ;main.c: 264: {
  1377                           ;main.c: 265: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1378  000746  0101               	movlb	1	; () banked
  1379  000748  0E01               	movlw	high main@t1thread_data
  1380  00074A  0100               	movlb	0	; () banked
  1381  00074C  6FAB               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1382  00074E  0101               	movlb	1	; () banked
  1383  000750  0E2F               	movlw	low main@t1thread_data
  1384  000752  0100               	movlb	0	; () banked
  1385  000754  6FAA               	movwf	timer1_lthread@tptr& (0+255),b
  1386  000756  0101               	movlb	1	; () banked
  1387  000758  0100               	movlb	0	; () banked
  1388  00075A  C131  F0AC         	movff	main@msgtype,timer1_lthread@msgtype
  1389  00075E  0100               	movlb	0	; () banked
  1390  000760  6BAD               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1391  000762  0101               	movlb	1	; () banked
  1392  000764  5132               	movf	main@length& (0+255),w,b
  1393  000766  0100               	movlb	0	; () banked
  1394  000768  6FAE               	movwf	timer1_lthread@length& (0+255),b
  1395  00076A  0100               	movlb	0	; () banked
  1396  00076C  6BAF               	clrf	(timer1_lthread@length+1)& (0+255),b
  1397  00076E  0100               	movlb	0	; () banked
  1398  000770  BFAE               	btfsc	timer1_lthread@length& (0+255),7,b
  1399  000772  07AF               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1400  000774  0101               	movlb	1	; () banked
  1401  000776  0E01               	movlw	high main@msgbuffer
  1402  000778  0100               	movlb	0	; () banked
  1403  00077A  6FB1               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1404  00077C  0101               	movlb	1	; () banked
  1405  00077E  0E00               	movlw	low main@msgbuffer
  1406  000780  0100               	movlb	0	; () banked
  1407  000782  6FB0               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1408  000784  EC30  F00D         	call	_timer1_lthread	;wreg free
  1409                           
  1410                           ;main.c: 266: break;
  1411  000788  D762               	goto	l117
  1412  00078A                     l3364:
  1413                           
  1414                           ;main.c: 269: {
  1415                           ;main.c: 270: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1416  00078A  0101               	movlb	1	; () banked
  1417  00078C  0E01               	movlw	high main@uthread_data
  1418  00078E  0100               	movlb	0	; () banked
  1419  000790  6F91               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1420  000792  0101               	movlb	1	; () banked
  1421  000794  0E24               	movlw	low main@uthread_data
  1422  000796  0100               	movlb	0	; () banked
  1423  000798  6F90               	movwf	uart_lthread@uptr& (0+255),b
  1424  00079A  0101               	movlb	1	; () banked
  1425  00079C  0100               	movlb	0	; () banked
  1426  00079E  C131  F092         	movff	main@msgtype,uart_lthread@msgtype
  1427  0007A2  0100               	movlb	0	; () banked
  1428  0007A4  6B93               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1429  0007A6  0101               	movlb	1	; () banked
  1430  0007A8  5132               	movf	main@length& (0+255),w,b
  1431  0007AA  0100               	movlb	0	; () banked
  1432  0007AC  6F94               	movwf	uart_lthread@length& (0+255),b
  1433  0007AE  0100               	movlb	0	; () banked
  1434  0007B0  6B95               	clrf	(uart_lthread@length+1)& (0+255),b
  1435  0007B2  0100               	movlb	0	; () banked
  1436  0007B4  BF94               	btfsc	uart_lthread@length& (0+255),7,b
  1437  0007B6  0795               	decf	(uart_lthread@length+1)& (0+255),f,b
  1438  0007B8  0101               	movlb	1	; () banked
  1439  0007BA  0E01               	movlw	high main@msgbuffer
  1440  0007BC  0100               	movlb	0	; () banked
  1441  0007BE  6F97               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1442  0007C0  0101               	movlb	1	; () banked
  1443  0007C2  0E00               	movlw	low main@msgbuffer
  1444  0007C4  0100               	movlb	0	; () banked
  1445  0007C6  6F96               	movwf	uart_lthread@msgbuffer& (0+255),b
  1446  0007C8  EC49  F00E         	call	_uart_lthread	;wreg free
  1447                           
  1448                           ;main.c: 271: break;
  1449  0007CC  D740               	goto	l117
  1450  0007CE                     l137:
  1451                           
  1452                           ; BSR set to: 1
  1453                           ;main.c: 274: {
  1454                           ;main.c: 275: last_reg_recvd = msgbuffer[0];
  1455  0007CE  C100  F12E         	movff	main@msgbuffer,main@last_reg_recvd
  1456                           
  1457                           ;main.c: 311: switch (last_reg_recvd) {
  1458  0007D2  D064               	goto	l3388
  1459  0007D4                     l3366:
  1460                           
  1461                           ; BSR set to: 1
  1462                           ;main.c: 314: {
  1463                           ;main.c: 315: length = 1;
  1464  0007D4  0E01               	movlw	1
  1465  0007D6  0101               	movlb	1	; () banked
  1466  0007D8  6F32               	movwf	main@length& (0+255),b
  1467                           
  1468                           ;main.c: 316: msgbuffer[0] = 0x0A;
  1469  0007DA  0E0A               	movlw	10
  1470  0007DC  0101               	movlb	1	; () banked
  1471  0007DE  6F00               	movwf	main@msgbuffer& (0+255),b
  1472                           
  1473                           ; BSR set to: 1
  1474                           ;main.c: 317: i2c_master_send(0x9A, length, msgbuffer);
  1475  0007E0  C132  F0AA         	movff	main@length,i2c_master_send@length
  1476  0007E4  0101               	movlb	1	; () banked
  1477  0007E6  0E01               	movlw	high main@msgbuffer
  1478  0007E8  0100               	movlb	0	; () banked
  1479  0007EA  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1480  0007EC  0101               	movlb	1	; () banked
  1481  0007EE  0E00               	movlw	low main@msgbuffer
  1482  0007F0  0100               	movlb	0	; () banked
  1483  0007F2  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1484  0007F4  0E9A               	movlw	154
  1485  0007F6  EC92  F00A         	call	_i2c_master_send
  1486                           
  1487                           ;main.c: 318: break;
  1488  0007FA  D729               	goto	l117
  1489  0007FC                     l3370:
  1490                           
  1491                           ;main.c: 321: {
  1492                           ;main.c: 322: length = 1;
  1493  0007FC  0E01               	movlw	1
  1494  0007FE  0101               	movlb	1	; () banked
  1495  000800  6F32               	movwf	main@length& (0+255),b
  1496                           
  1497                           ;main.c: 323: msgbuffer[0] = 0x0B;
  1498  000802  0E0B               	movlw	11
  1499  000804  0101               	movlb	1	; () banked
  1500  000806  6F00               	movwf	main@msgbuffer& (0+255),b
  1501                           
  1502                           ; BSR set to: 1
  1503                           ;main.c: 324: i2c_master_send(0x9A, length, msgbuffer);
  1504  000808  C132  F0AA         	movff	main@length,i2c_master_send@length
  1505  00080C  0101               	movlb	1	; () banked
  1506  00080E  0E01               	movlw	high main@msgbuffer
  1507  000810  0100               	movlb	0	; () banked
  1508  000812  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1509  000814  0101               	movlb	1	; () banked
  1510  000816  0E00               	movlw	low main@msgbuffer
  1511  000818  0100               	movlb	0	; () banked
  1512  00081A  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1513  00081C  0E9A               	movlw	154
  1514  00081E  EC92  F00A         	call	_i2c_master_send
  1515                           
  1516                           ;main.c: 325: break;
  1517  000822  D715               	goto	l117
  1518  000824                     l3374:
  1519                           
  1520                           ;main.c: 328: {
  1521                           ;main.c: 329: length = 1;
  1522  000824  0E01               	movlw	1
  1523  000826  0101               	movlb	1	; () banked
  1524  000828  6F32               	movwf	main@length& (0+255),b
  1525                           
  1526                           ;main.c: 330: msgbuffer[0] = 0x0C;
  1527  00082A  0E0C               	movlw	12
  1528  00082C  0101               	movlb	1	; () banked
  1529  00082E  6F00               	movwf	main@msgbuffer& (0+255),b
  1530                           
  1531                           ; BSR set to: 1
  1532                           ;main.c: 331: i2c_master_send(0x9A, length, msgbuffer);
  1533  000830  C132  F0AA         	movff	main@length,i2c_master_send@length
  1534  000834  0101               	movlb	1	; () banked
  1535  000836  0E01               	movlw	high main@msgbuffer
  1536  000838  0100               	movlb	0	; () banked
  1537  00083A  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1538  00083C  0101               	movlb	1	; () banked
  1539  00083E  0E00               	movlw	low main@msgbuffer
  1540  000840  0100               	movlb	0	; () banked
  1541  000842  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1542  000844  0E9A               	movlw	154
  1543  000846  EC92  F00A         	call	_i2c_master_send
  1544                           
  1545                           ;main.c: 332: break;
  1546  00084A  D701               	goto	l117
  1547  00084C                     l3378:
  1548                           
  1549                           ;main.c: 335: {
  1550                           ;main.c: 336: length = 1;
  1551  00084C  0E01               	movlw	1
  1552  00084E  0101               	movlb	1	; () banked
  1553  000850  6F32               	movwf	main@length& (0+255),b
  1554                           
  1555                           ;main.c: 337: msgbuffer[0] = 0x0D;
  1556  000852  0E0D               	movlw	13
  1557  000854  0101               	movlb	1	; () banked
  1558  000856  6F00               	movwf	main@msgbuffer& (0+255),b
  1559                           
  1560                           ; BSR set to: 1
  1561                           ;main.c: 338: i2c_master_send(0x9A, length, msgbuffer);
  1562  000858  C132  F0AA         	movff	main@length,i2c_master_send@length
  1563  00085C  0101               	movlb	1	; () banked
  1564  00085E  0E01               	movlw	high main@msgbuffer
  1565  000860  0100               	movlb	0	; () banked
  1566  000862  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1567  000864  0101               	movlb	1	; () banked
  1568  000866  0E00               	movlw	low main@msgbuffer
  1569  000868  0100               	movlb	0	; () banked
  1570  00086A  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1571  00086C  0E9A               	movlw	154
  1572  00086E  EC92  F00A         	call	_i2c_master_send
  1573                           
  1574                           ;main.c: 339: break;
  1575  000872  D6ED               	goto	l117
  1576  000874                     l3382:
  1577                           
  1578                           ;main.c: 342: {
  1579                           ;main.c: 343: length = 1;
  1580  000874  0E01               	movlw	1
  1581  000876  0101               	movlb	1	; () banked
  1582  000878  6F32               	movwf	main@length& (0+255),b
  1583                           
  1584                           ;main.c: 344: msgbuffer[0] = 0x0E;
  1585  00087A  0E0E               	movlw	14
  1586  00087C  0101               	movlb	1	; () banked
  1587  00087E  6F00               	movwf	main@msgbuffer& (0+255),b
  1588                           
  1589                           ; BSR set to: 1
  1590                           ;main.c: 345: i2c_master_send(0x9A, length, msgbuffer);
  1591  000880  C132  F0AA         	movff	main@length,i2c_master_send@length
  1592  000884  0101               	movlb	1	; () banked
  1593  000886  0E01               	movlw	high main@msgbuffer
  1594  000888  0100               	movlb	0	; () banked
  1595  00088A  6FAC               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1596  00088C  0101               	movlb	1	; () banked
  1597  00088E  0E00               	movlw	low main@msgbuffer
  1598  000890  0100               	movlb	0	; () banked
  1599  000892  6FAB               	movwf	i2c_master_send@msg& (0+255),b
  1600  000894  0E9A               	movlw	154
  1601  000896  EC92  F00A         	call	_i2c_master_send
  1602                           
  1603                           ;main.c: 346: break;
  1604  00089A  D6D9               	goto	l117
  1605  00089C                     l3388:
  1606  00089C  0101               	movlb	1	; () banked
  1607  00089E  512E               	movf	main@last_reg_recvd& (0+255),w,b
  1608                           
  1609                           ; Switch size 1, requested type "space"
  1610                           ; Number of cases is 5, Range of values is 10 to 14
  1611                           ; switch strategies available:
  1612                           ; Name         Instructions Cycles
  1613                           ; simple_byte           16     9 (average)
  1614                           ;	Chosen strategy is simple_byte
  1615  0008A0  0A0A               	xorlw	10	; case 10
  1616  0008A2  B4D8               	btfsc	status,2,c
  1617  0008A4  D797               	goto	l3366
  1618  0008A6  0A01               	xorlw	1	; case 11
  1619  0008A8  B4D8               	btfsc	status,2,c
  1620  0008AA  D7A8               	goto	l3370
  1621  0008AC  0A07               	xorlw	7	; case 12
  1622  0008AE  B4D8               	btfsc	status,2,c
  1623  0008B0  D7B9               	goto	l3374
  1624  0008B2  0A01               	xorlw	1	; case 13
  1625  0008B4  B4D8               	btfsc	status,2,c
  1626  0008B6  D7CA               	goto	l3378
  1627  0008B8  0A03               	xorlw	3	; case 14
  1628  0008BA  B4D8               	btfsc	status,2,c
  1629  0008BC  D7DB               	goto	l3382
  1630  0008BE  D6C7               	goto	l117
  1631  0008C0                     l3392:
  1632                           
  1633                           ; BSR set to: 1
  1634  0008C0  0101               	movlb	1	; () banked
  1635  0008C2  5131               	movf	main@msgtype& (0+255),w,b
  1636                           
  1637                           ; Switch size 1, requested type "space"
  1638                           ; Number of cases is 3, Range of values is 11 to 31
  1639                           ; switch strategies available:
  1640                           ; Name         Instructions Cycles
  1641                           ; simple_byte           10     6 (average)
  1642                           ;	Chosen strategy is simple_byte
  1643  0008C4  0A0B               	xorlw	11	; case 11
  1644  0008C6  B4D8               	btfsc	status,2,c
  1645  0008C8  D73E               	goto	l3362
  1646  0008CA  0A15               	xorlw	21	; case 30
  1647  0008CC  B4D8               	btfsc	status,2,c
  1648  0008CE  D75D               	goto	l3364
  1649  0008D0  0A01               	xorlw	1	; case 31
  1650  0008D2  B4D8               	btfsc	status,2,c
  1651  0008D4  D77C               	goto	l137
  1652  0008D6  D6BB               	goto	l117
  1653  0008D8                     __end_of_main:
  1654                           	opt stack 0
  1655                           tblptru	equ	0xFF8
  1656                           intcon2	equ	0xFF1
  1657                           postinc0	equ	0xFEE
  1658                           postdec1	equ	0xFE5
  1659                           fsr1h	equ	0xFE2
  1660                           fsr1l	equ	0xFE1
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function _uart_send *****************
  1664 ;; Defined at:
  1665 ;;		line 90 in file "../src/my_uart.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  length          1    wreg     unsigned char 
  1668 ;;  msg_buffer      2   74[BANK0 ] PTR unsigned char 
  1669 ;;		 -> main@msgbuffer(31), 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  length          1   77[BANK0 ] unsigned char 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;		None               void
  1674 ;; Registers used:
  1675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1683 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1684 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1685 ;;Total ram usage:        4 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:   13
  1688 ;; This function calls:
  1689 ;;		_FromMainLow_sendmsg
  1690 ;;		___awmod
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text1
  1697  0008D8                     __ptext1:
  1698                           	opt stack 0
  1699  0008D8                     _uart_send:
  1700                           	opt stack 17
  1701                           
  1702                           ; BSR set to: 1
  1703                           ;incstack = 0
  1704                           ;uart_send@length stored from wreg
  1705  0008D8  0100               	movlb	0	; () banked
  1706  0008DA  6FAD               	movwf	uart_send@length& (0+255),b
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;my_uart.c: 91: { LATAbits.LATA3 = 1;};
  1710  0008DC  8689               	bsf	3977,3,c	;volatile
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;my_uart.c: 92: if (length == 23) {
  1714  0008DE  0100               	movlb	0	; () banked
  1715  0008E0  51AD               	movf	uart_send@length& (0+255),w,b
  1716  0008E2  0A17               	xorlw	23
  1717  0008E4  A4D8               	btfss	status,2,c
  1718  0008E6  D060               	goto	l3166
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;my_uart.c: 94: uc_ptr->outbufind = 0;
  1722  0008E8  EE20 F03F          	lfsr	2,63
  1723  0008EC  503B               	movf	_uc_ptr,w,c
  1724  0008EE  26D9               	addwf	fsr2l,f,c
  1725  0008F0  503C               	movf	_uc_ptr+1,w,c
  1726  0008F2  22DA               	addwfc	fsr2h,f,c
  1727  0008F4  0E00               	movlw	0
  1728  0008F6  6EDF               	movwf	indf2,c
  1729                           
  1730                           ;my_uart.c: 95: uc_ptr->outbuflen = length;
  1731  0008F8  EE20 F03E          	lfsr	2,62
  1732  0008FC  503B               	movf	_uc_ptr,w,c
  1733  0008FE  26D9               	addwf	fsr2l,f,c
  1734  000900  503C               	movf	_uc_ptr+1,w,c
  1735  000902  22DA               	addwfc	fsr2h,f,c
  1736  000904  0100               	movlb	0	; () banked
  1737  000906  C0AD  FFDF         	movff	uart_send@length,indf2
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;my_uart.c: 96: msg_buffer[0] = uc_ptr->msg_count % 255;
  1741  00090A  EE20 F040          	lfsr	2,64
  1742  00090E  503B               	movf	_uc_ptr,w,c
  1743  000910  26D9               	addwf	fsr2l,f,c
  1744  000912  503C               	movf	_uc_ptr+1,w,c
  1745  000914  22DA               	addwfc	fsr2h,f,c
  1746  000916  50DF               	movf	indf2,w,c
  1747  000918  0100               	movlb	0	; () banked
  1748  00091A  6FAC               	movwf	??_uart_send& (0+255),b
  1749  00091C  0100               	movlb	0	; () banked
  1750  00091E  51AC               	movf	??_uart_send& (0+255),w,b
  1751  000920  0100               	movlb	0	; () banked
  1752  000922  6F90               	movwf	___awmod@dividend& (0+255),b
  1753  000924  0100               	movlb	0	; () banked
  1754  000926  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  1755  000928  0E00               	movlw	0
  1756  00092A  0100               	movlb	0	; () banked
  1757  00092C  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  1758  00092E  0100               	movlb	0	; () banked
  1759  000930  6992               	setf	___awmod@divisor& (0+255),b
  1760  000932  EC14  F009         	call	___awmod	;wreg free
  1761  000936  0100               	movlb	0	; () banked
  1762  000938  5190               	movf	?___awmod& (0+255),w,b
  1763  00093A  C0AA  FFD9         	movff	uart_send@msg_buffer,fsr2l
  1764  00093E  C0AB  FFDA         	movff	uart_send@msg_buffer+1,fsr2h
  1765  000942  6EDF               	movwf	indf2,c
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;my_uart.c: 97: msg_buffer[1] = 0x8;
  1769  000944  0100               	movlb	0	; () banked
  1770  000946  EE20 F001          	lfsr	2,1
  1771  00094A  0100               	movlb	0	; () banked
  1772  00094C  51AA               	movf	uart_send@msg_buffer& (0+255),w,b
  1773  00094E  26D9               	addwf	fsr2l,f,c
  1774  000950  0100               	movlb	0	; () banked
  1775  000952  51AB               	movf	(uart_send@msg_buffer+1)& (0+255),w,b
  1776  000954  22DA               	addwfc	fsr2h,f,c
  1777  000956  0E08               	movlw	8
  1778  000958  6EDF               	movwf	indf2,c
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;my_uart.c: 98: msg_buffer[22] = 0xFF;
  1782  00095A  0100               	movlb	0	; () banked
  1783  00095C  EE20 F016          	lfsr	2,22
  1784  000960  0100               	movlb	0	; () banked
  1785  000962  51AA               	movf	uart_send@msg_buffer& (0+255),w,b
  1786  000964  26D9               	addwf	fsr2l,f,c
  1787  000966  0100               	movlb	0	; () banked
  1788  000968  51AB               	movf	(uart_send@msg_buffer+1)& (0+255),w,b
  1789  00096A  22DA               	addwfc	fsr2h,f,c
  1790  00096C  0EFF               	movlw	255
  1791  00096E  6EDF               	movwf	indf2,c
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;my_uart.c: 99: FromMainLow_sendmsg(uc_ptr->outbuflen, 41, (void *) msg_buffer);
  1795  000970  0E29               	movlw	41
  1796  000972  0100               	movlb	0	; () banked
  1797  000974  6FA6               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  1798  000976  0100               	movlb	0	; () banked
  1799  000978  C0AB  F0A8         	movff	uart_send@msg_buffer+1,FromMainLow_sendmsg@data+1
  1800  00097C  0100               	movlb	0	; () banked
  1801  00097E  C0AA  F0A7         	movff	uart_send@msg_buffer,FromMainLow_sendmsg@data
  1802  000982  EE20 F03E          	lfsr	2,62
  1803  000986  503B               	movf	_uc_ptr,w,c
  1804  000988  26D9               	addwf	fsr2l,f,c
  1805  00098A  503C               	movf	_uc_ptr+1,w,c
  1806  00098C  22DA               	addwfc	fsr2h,f,c
  1807  00098E  50DF               	movf	indf2,w,c
  1808  000990  EC0C  F00F         	call	_FromMainLow_sendmsg
  1809                           
  1810                           ;my_uart.c: 100: uc_ptr->msg_count++;
  1811  000994  EE20 F040          	lfsr	2,64
  1812  000998  503B               	movf	_uc_ptr,w,c
  1813  00099A  26D9               	addwf	fsr2l,f,c
  1814  00099C  503C               	movf	_uc_ptr+1,w,c
  1815  00099E  22DA               	addwfc	fsr2h,f,c
  1816  0009A0  2ADF               	incf	indf2,f,c
  1817                           
  1818                           ;my_uart.c: 101: PIE1bits.TXIE = 1;
  1819  0009A2  889D               	bsf	3997,4,c	;volatile
  1820                           
  1821                           ;my_uart.c: 102: { LATAbits.LATA3 = 0;};
  1822  0009A4  9689               	bcf	3977,3,c	;volatile
  1823                           
  1824                           ;my_uart.c: 103: } else if (length == 7) {
  1825  0009A6  0012               	return	
  1826  0009A8                     l3166:
  1827  0009A8  0100               	movlb	0	; () banked
  1828  0009AA  51AD               	movf	uart_send@length& (0+255),w,b
  1829  0009AC  0A07               	xorlw	7
  1830  0009AE  A4D8               	btfss	status,2,c
  1831  0009B0  0012               	return	
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;my_uart.c: 105: uc_ptr->outbufind = 0;
  1835  0009B2  EE20 F03F          	lfsr	2,63
  1836  0009B6  503B               	movf	_uc_ptr,w,c
  1837  0009B8  26D9               	addwf	fsr2l,f,c
  1838  0009BA  503C               	movf	_uc_ptr+1,w,c
  1839  0009BC  22DA               	addwfc	fsr2h,f,c
  1840  0009BE  0E00               	movlw	0
  1841  0009C0  6EDF               	movwf	indf2,c
  1842                           
  1843                           ;my_uart.c: 106: uc_ptr->outbuflen = length;
  1844  0009C2  EE20 F03E          	lfsr	2,62
  1845  0009C6  503B               	movf	_uc_ptr,w,c
  1846  0009C8  26D9               	addwf	fsr2l,f,c
  1847  0009CA  503C               	movf	_uc_ptr+1,w,c
  1848  0009CC  22DA               	addwfc	fsr2h,f,c
  1849  0009CE  0100               	movlb	0	; () banked
  1850  0009D0  C0AD  FFDF         	movff	uart_send@length,indf2
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;my_uart.c: 107: msg_buffer[0] = uc_ptr->msg_count % 255;
  1854  0009D4  EE20 F040          	lfsr	2,64
  1855  0009D8  503B               	movf	_uc_ptr,w,c
  1856  0009DA  26D9               	addwf	fsr2l,f,c
  1857  0009DC  503C               	movf	_uc_ptr+1,w,c
  1858  0009DE  22DA               	addwfc	fsr2h,f,c
  1859  0009E0  50DF               	movf	indf2,w,c
  1860  0009E2  0100               	movlb	0	; () banked
  1861  0009E4  6FAC               	movwf	??_uart_send& (0+255),b
  1862  0009E6  0100               	movlb	0	; () banked
  1863  0009E8  51AC               	movf	??_uart_send& (0+255),w,b
  1864  0009EA  0100               	movlb	0	; () banked
  1865  0009EC  6F90               	movwf	___awmod@dividend& (0+255),b
  1866  0009EE  0100               	movlb	0	; () banked
  1867  0009F0  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  1868  0009F2  0E00               	movlw	0
  1869  0009F4  0100               	movlb	0	; () banked
  1870  0009F6  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  1871  0009F8  0100               	movlb	0	; () banked
  1872  0009FA  6992               	setf	___awmod@divisor& (0+255),b
  1873  0009FC  EC14  F009         	call	___awmod	;wreg free
  1874  000A00  0100               	movlb	0	; () banked
  1875  000A02  5190               	movf	?___awmod& (0+255),w,b
  1876  000A04  C0AA  FFD9         	movff	uart_send@msg_buffer,fsr2l
  1877  000A08  C0AB  FFDA         	movff	uart_send@msg_buffer+1,fsr2h
  1878  000A0C  6EDF               	movwf	indf2,c
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;my_uart.c: 108: msg_buffer[1] = 0x4;
  1882  000A0E  0100               	movlb	0	; () banked
  1883  000A10  EE20 F001          	lfsr	2,1
  1884  000A14  0100               	movlb	0	; () banked
  1885  000A16  51AA               	movf	uart_send@msg_buffer& (0+255),w,b
  1886  000A18  26D9               	addwf	fsr2l,f,c
  1887  000A1A  0100               	movlb	0	; () banked
  1888  000A1C  51AB               	movf	(uart_send@msg_buffer+1)& (0+255),w,b
  1889  000A1E  22DA               	addwfc	fsr2h,f,c
  1890  000A20  0E04               	movlw	4
  1891  000A22  6EDF               	movwf	indf2,c
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;my_uart.c: 109: msg_buffer[6] = 0xFF;
  1895  000A24  0100               	movlb	0	; () banked
  1896  000A26  EE20 F006          	lfsr	2,6
  1897  000A2A  0100               	movlb	0	; () banked
  1898  000A2C  51AA               	movf	uart_send@msg_buffer& (0+255),w,b
  1899  000A2E  26D9               	addwf	fsr2l,f,c
  1900  000A30  0100               	movlb	0	; () banked
  1901  000A32  51AB               	movf	(uart_send@msg_buffer+1)& (0+255),w,b
  1902  000A34  22DA               	addwfc	fsr2h,f,c
  1903  000A36  0EFF               	movlw	255
  1904  000A38  6EDF               	movwf	indf2,c
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;my_uart.c: 110: FromMainLow_sendmsg(uc_ptr->outbuflen, 41, (void *) msg_buffer);
  1908  000A3A  0E29               	movlw	41
  1909  000A3C  0100               	movlb	0	; () banked
  1910  000A3E  6FA6               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  1911  000A40  0100               	movlb	0	; () banked
  1912  000A42  C0AB  F0A8         	movff	uart_send@msg_buffer+1,FromMainLow_sendmsg@data+1
  1913  000A46  0100               	movlb	0	; () banked
  1914  000A48  C0AA  F0A7         	movff	uart_send@msg_buffer,FromMainLow_sendmsg@data
  1915  000A4C  EE20 F03E          	lfsr	2,62
  1916  000A50  503B               	movf	_uc_ptr,w,c
  1917  000A52  26D9               	addwf	fsr2l,f,c
  1918  000A54  503C               	movf	_uc_ptr+1,w,c
  1919  000A56  22DA               	addwfc	fsr2h,f,c
  1920  000A58  50DF               	movf	indf2,w,c
  1921  000A5A  EC0C  F00F         	call	_FromMainLow_sendmsg
  1922                           
  1923                           ;my_uart.c: 111: uc_ptr->msg_count++;
  1924  000A5E  EE20 F040          	lfsr	2,64
  1925  000A62  503B               	movf	_uc_ptr,w,c
  1926  000A64  26D9               	addwf	fsr2l,f,c
  1927  000A66  503C               	movf	_uc_ptr+1,w,c
  1928  000A68  22DA               	addwfc	fsr2h,f,c
  1929  000A6A  2ADF               	incf	indf2,f,c
  1930                           
  1931                           ;my_uart.c: 112: PIE1bits.TXIE = 1;
  1932  000A6C  889D               	bsf	3997,4,c	;volatile
  1933                           
  1934                           ;my_uart.c: 113: { LATAbits.LATA3 = 0;};
  1935  000A6E  9689               	bcf	3977,3,c	;volatile
  1936  000A70  0012               	return	
  1937  000A72                     __end_of_uart_send:
  1938                           	opt stack 0
  1939                           tblptru	equ	0xFF8
  1940                           intcon2	equ	0xFF1
  1941                           postinc0	equ	0xFEE
  1942                           postdec1	equ	0xFE5
  1943                           fsr1h	equ	0xFE2
  1944                           fsr1l	equ	0xFE1
  1945                           indf2	equ	0xFDF
  1946                           fsr2h	equ	0xFDA
  1947                           fsr2l	equ	0xFD9
  1948                           status	equ	0xFD8
  1949                           
  1950 ;; *************** function _FromMainLow_sendmsg *****************
  1951 ;; Defined at:
  1952 ;;		line 198 in file "../src/messages.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  length          1    wreg     unsigned char 
  1955 ;;  msgtype         1   70[BANK0 ] unsigned char 
  1956 ;;  data            2   71[BANK0 ] PTR void 
  1957 ;;		 -> main@msgbuffer(31), 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  length          1   73[BANK0 ] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      char 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1969 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1970 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1972 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1973 ;;Total ram usage:        4 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:   12
  1976 ;; This function calls:
  1977 ;;		_send_msg
  1978 ;; This function is called by:
  1979 ;;		_uart_send
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text2
  1984  001E18                     __ptext2:
  1985                           	opt stack 0
  1986  001E18                     _FromMainLow_sendmsg:
  1987                           	opt stack 17
  1988                           
  1989                           ;incstack = 0
  1990                           ;FromMainLow_sendmsg@length stored from wreg
  1991  001E18  0100               	movlb	0	; () banked
  1992  001E1A  6FA9               	movwf	FromMainLow_sendmsg@length& (0+255),b
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;messages.c: 204: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1996                           ;	Return value of _FromMainLow_sendmsg is never used
  1997  001E1C  0E03               	movlw	high _FromMainLow_MQ
  1998  001E1E  0100               	movlb	0	; () banked
  1999  001E20  6F9B               	movwf	(send_msg@qptr+1)& (0+255),b
  2000  001E22  0E09               	movlw	low _FromMainLow_MQ
  2001  001E24  0100               	movlb	0	; () banked
  2002  001E26  6F9A               	movwf	send_msg@qptr& (0+255),b
  2003  001E28  C0A9  F09C         	movff	FromMainLow_sendmsg@length,send_msg@length
  2004  001E2C  C0A6  F09D         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  2005  001E30  0100               	movlb	0	; () banked
  2006  001E32  C0A8  F09F         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  2007  001E36  0100               	movlb	0	; () banked
  2008  001E38  C0A7  F09E         	movff	FromMainLow_sendmsg@data,send_msg@data
  2009  001E3C  EC21  F007         	call	_send_msg	;wreg free
  2010  001E40  0012               	return	
  2011  001E42                     __end_of_FromMainLow_sendmsg:
  2012                           	opt stack 0
  2013                           tblptru	equ	0xFF8
  2014                           intcon2	equ	0xFF1
  2015                           postinc0	equ	0xFEE
  2016                           postdec1	equ	0xFE5
  2017                           fsr1h	equ	0xFE2
  2018                           fsr1l	equ	0xFE1
  2019                           indf2	equ	0xFDF
  2020                           fsr2h	equ	0xFDA
  2021                           fsr2l	equ	0xFD9
  2022                           status	equ	0xFD8
  2023                           
  2024 ;; *************** function _uart_lthread *****************
  2025 ;; Defined at:
  2026 ;;		line 9 in file "../src/uart_thread.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  uptr            2   48[BANK0 ] PTR struct __uart_thread
  2029 ;;		 -> main@uthread_data(2), 
  2030 ;;  msgtype         2   50[BANK0 ] int 
  2031 ;;  length          2   52[BANK0 ] int 
  2032 ;;  msgbuffer       2   54[BANK0 ] PTR unsigned char 
  2033 ;;		 -> main@msgbuffer(31), 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2   48[BANK0 ] int 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2045 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2048 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2049 ;;Total ram usage:        8 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:   10
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_main
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text3
  2060  001C92                     __ptext3:
  2061                           	opt stack 0
  2062  001C92                     _uart_lthread:
  2063                           	opt stack 20
  2064                           
  2065                           ;uart_thread.c: 10: if (msgtype == 30) {
  2066                           
  2067                           ;incstack = 0
  2068  001C92  0100               	movlb	0	; () banked
  2069  001C94  5192               	movf	uart_lthread@msgtype& (0+255),w,b
  2070  001C96  0A1E               	xorlw	30
  2071  001C98  1193               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  2072  001C9A  B4D8               	btfsc	status,2,c
  2073  001C9C  0012               	return	
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;uart_thread.c: 12: else if (msgtype == 31) {
  2077                           
  2078                           ; BSR set to: 0
  2079                           
  2080                           ; BSR set to: 0
  2081                           ;uart_thread.c: 11: }
  2082  001C9E  0100               	movlb	0	; () banked
  2083  001CA0  5192               	movf	uart_lthread@msgtype& (0+255),w,b
  2084  001CA2  0A1F               	xorlw	31
  2085  001CA4  1193               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  2086  001CA6  A4D8               	btfss	status,2,c
  2087  001CA8  0012               	return	
  2088                           
  2089                           ; BSR set to: 0
  2090                           ;uart_thread.c: 15: msgbuffer[length] = '\0';
  2091  001CAA  0100               	movlb	0	; () banked
  2092  001CAC  5194               	movf	uart_lthread@length& (0+255),w,b
  2093  001CAE  0100               	movlb	0	; () banked
  2094  001CB0  2596               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  2095  001CB2  6ED9               	movwf	fsr2l,c
  2096  001CB4  0100               	movlb	0	; () banked
  2097  001CB6  5195               	movf	(uart_lthread@length+1)& (0+255),w,b
  2098  001CB8  0100               	movlb	0	; () banked
  2099  001CBA  2197               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  2100  001CBC  6EDA               	movwf	fsr2h,c
  2101  001CBE  0E00               	movlw	0
  2102  001CC0  6EDF               	movwf	indf2,c
  2103  001CC2  0012               	return	
  2104  001CC4                     __end_of_uart_lthread:
  2105                           	opt stack 0
  2106                           tblptru	equ	0xFF8
  2107                           intcon2	equ	0xFF1
  2108                           postinc0	equ	0xFEE
  2109                           postdec1	equ	0xFE5
  2110                           fsr1h	equ	0xFE2
  2111                           fsr1l	equ	0xFE1
  2112                           indf2	equ	0xFDF
  2113                           fsr2h	equ	0xFDA
  2114                           fsr2l	equ	0xFD9
  2115                           status	equ	0xFD8
  2116                           
  2117 ;; *************** function _timer1_lthread *****************
  2118 ;; Defined at:
  2119 ;;		line 14 in file "../src/timer1_thread.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  tptr            2   74[BANK0 ] PTR struct __timer1_thre
  2122 ;;		 -> main@t1thread_data(2), 
  2123 ;;  msgtype         2   76[BANK0 ] int 
  2124 ;;  length          2   78[BANK0 ] int 
  2125 ;;  msgbuffer       2   80[BANK0 ] PTR unsigned char 
  2126 ;;		 -> main@msgbuffer(31), 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  retval          1   82[BANK0 ] char 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  2   74[BANK0 ] int 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2138 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2141 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2142 ;;Total ram usage:        9 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:   13
  2145 ;; This function calls:
  2146 ;;		_FromMainHigh_sendmsg
  2147 ;;		___lwmod
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text4
  2154  001A60                     __ptext4:
  2155                           	opt stack 0
  2156  001A60                     _timer1_lthread:
  2157                           	opt stack 17
  2158                           
  2159                           ;timer1_thread.c: 15: signed char retval;
  2160                           ;timer1_thread.c: 17: tptr->msgcount++;
  2161                           
  2162                           ; BSR set to: 0
  2163                           ;incstack = 0
  2164  001A60  C0AA  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2165  001A64  C0AB  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2166  001A68  2ADE               	incf	postinc2,f,c
  2167  001A6A  0E00               	movlw	0
  2168  001A6C  22DD               	addwfc	postdec2,f,c
  2169                           
  2170                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  2171  001A6E  C0AA  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2172  001A72  C0AB  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2173  001A76  0100               	movlb	0	; () banked
  2174  001A78  CFDE F090          	movff	postinc2,___lwmod@dividend
  2175  001A7C  0100               	movlb	0	; () banked
  2176  001A7E  CFDD F091          	movff	postdec2,___lwmod@dividend+1
  2177  001A82  0E00               	movlw	0
  2178  001A84  0100               	movlb	0	; () banked
  2179  001A86  6F93               	movwf	(___lwmod@divisor+1)& (0+255),b
  2180  001A88  0E0A               	movlw	10
  2181  001A8A  0100               	movlb	0	; () banked
  2182  001A8C  6F92               	movwf	___lwmod@divisor& (0+255),b
  2183  001A8E  EC00  F00D         	call	___lwmod	;wreg free
  2184  001A92  0100               	movlb	0	; () banked
  2185  001A94  5190               	movf	?___lwmod& (0+255),w,b
  2186  001A96  0A09               	xorlw	9
  2187  001A98  0100               	movlb	0	; () banked
  2188  001A9A  1191               	iorwf	(?___lwmod+1)& (0+255),w,b
  2189  001A9C  A4D8               	btfss	status,2,c
  2190  001A9E  0012               	return	
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;timer1_thread.c: 22: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 31, (void *
      +                          ) &(tptr->msgcount));
  2194  001AA0  0E1F               	movlw	31
  2195  001AA2  0100               	movlb	0	; () banked
  2196  001AA4  6FA6               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2197  001AA6  0100               	movlb	0	; () banked
  2198  001AA8  C0AB  F0A8         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2199  001AAC  0100               	movlb	0	; () banked
  2200  001AAE  C0AA  F0A7         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  2201  001AB2  0E02               	movlw	2
  2202  001AB4  EC21  F00F         	call	_FromMainHigh_sendmsg
  2203  001AB8  0100               	movlb	0	; () banked
  2204  001ABA  6FB2               	movwf	timer1_lthread@retval& (0+255),b
  2205  001ABC  0012               	return	
  2206  001ABE                     __end_of_timer1_lthread:
  2207                           	opt stack 0
  2208                           tblptru	equ	0xFF8
  2209                           intcon2	equ	0xFF1
  2210                           postinc0	equ	0xFEE
  2211                           postdec1	equ	0xFE5
  2212                           fsr1h	equ	0xFE2
  2213                           fsr1l	equ	0xFE1
  2214                           indf2	equ	0xFDF
  2215                           postinc2	equ	0xFDE
  2216                           postdec2	equ	0xFDD
  2217                           fsr2h	equ	0xFDA
  2218                           fsr2l	equ	0xFD9
  2219                           status	equ	0xFD8
  2220                           
  2221 ;; *************** function ___lwmod *****************
  2222 ;; Defined at:
  2223 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  dividend        2   48[BANK0 ] unsigned int 
  2226 ;;  divisor         2   50[BANK0 ] unsigned int 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  counter         1   52[BANK0 ] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2   48[BANK0 ] unsigned int 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2238 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2239 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2241 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2242 ;;Total ram usage:        5 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:   10
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_timer1_lthread
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text5
  2253  001A00                     __ptext5:
  2254                           	opt stack 0
  2255  001A00                     ___lwmod:
  2256                           	opt stack 19
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;incstack = 0
  2260  001A00  0100               	movlb	0	; () banked
  2261  001A02  5193               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2262  001A04  1192               	iorwf	___lwmod@divisor& (0+255),w,b
  2263  001A06  B4D8               	btfsc	status,2,c
  2264  001A08  D026               	goto	l1061
  2265                           
  2266                           ; BSR set to: 0
  2267  001A0A  0E01               	movlw	1
  2268  001A0C  0100               	movlb	0	; () banked
  2269  001A0E  6F94               	movwf	___lwmod@counter& (0+255),b
  2270  001A10  D006               	goto	l2704
  2271  001A12                     l2702:
  2272                           
  2273                           ; BSR set to: 0
  2274  001A12  0100               	movlb	0	; () banked
  2275  001A14  90D8               	bcf	status,0,c
  2276  001A16  3792               	rlcf	___lwmod@divisor& (0+255),f,b
  2277  001A18  3793               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2278  001A1A  0100               	movlb	0	; () banked
  2279  001A1C  2B94               	incf	___lwmod@counter& (0+255),f,b
  2280  001A1E                     l2704:
  2281                           
  2282                           ; BSR set to: 0
  2283  001A1E  0100               	movlb	0	; () banked
  2284  001A20  AF93               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2285  001A22  D7F7               	goto	l2702
  2286  001A24                     l2706:
  2287                           
  2288                           ; BSR set to: 0
  2289  001A24  0100               	movlb	0	; () banked
  2290  001A26  5192               	movf	___lwmod@divisor& (0+255),w,b
  2291  001A28  0100               	movlb	0	; () banked
  2292  001A2A  5D90               	subwf	___lwmod@dividend& (0+255),w,b
  2293  001A2C  0100               	movlb	0	; () banked
  2294  001A2E  5193               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2295  001A30  0100               	movlb	0	; () banked
  2296  001A32  5991               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2297  001A34  A0D8               	btfss	status,0,c
  2298  001A36  D008               	goto	l2710
  2299                           
  2300                           ; BSR set to: 0
  2301  001A38  0100               	movlb	0	; () banked
  2302  001A3A  5192               	movf	___lwmod@divisor& (0+255),w,b
  2303  001A3C  0100               	movlb	0	; () banked
  2304  001A3E  5F90               	subwf	___lwmod@dividend& (0+255),f,b
  2305  001A40  0100               	movlb	0	; () banked
  2306  001A42  5193               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2307  001A44  0100               	movlb	0	; () banked
  2308  001A46  5B91               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2309  001A48                     l2710:
  2310                           
  2311                           ; BSR set to: 0
  2312  001A48  0100               	movlb	0	; () banked
  2313  001A4A  90D8               	bcf	status,0,c
  2314  001A4C  3393               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2315  001A4E  3392               	rrcf	___lwmod@divisor& (0+255),f,b
  2316                           
  2317                           ; BSR set to: 0
  2318  001A50  0100               	movlb	0	; () banked
  2319  001A52  2F94               	decfsz	___lwmod@counter& (0+255),f,b
  2320  001A54  D7E7               	goto	l2706
  2321  001A56                     l1061:
  2322                           
  2323                           ; BSR set to: 0
  2324  001A56  C090  F090         	movff	___lwmod@dividend,?___lwmod
  2325  001A5A  C091  F091         	movff	___lwmod@dividend+1,?___lwmod+1
  2326                           
  2327                           ; BSR set to: 0
  2328  001A5E  0012               	return	
  2329  001A60                     __end_of___lwmod:
  2330                           	opt stack 0
  2331                           tblptru	equ	0xFF8
  2332                           intcon2	equ	0xFF1
  2333                           postinc0	equ	0xFEE
  2334                           postdec1	equ	0xFE5
  2335                           fsr1h	equ	0xFE2
  2336                           fsr1l	equ	0xFE1
  2337                           indf2	equ	0xFDF
  2338                           postinc2	equ	0xFDE
  2339                           postdec2	equ	0xFDD
  2340                           fsr2h	equ	0xFDA
  2341                           fsr2l	equ	0xFD9
  2342                           status	equ	0xFD8
  2343                           
  2344 ;; *************** function _timer0_lthread *****************
  2345 ;; Defined at:
  2346 ;;		line 9 in file "../src/timer0_thread.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  tptr            2   48[BANK0 ] PTR struct __timer0_thre
  2349 ;;		 -> main@t0thread_data(2), 
  2350 ;;  msgtype         2   50[BANK0 ] int 
  2351 ;;  length          2   52[BANK0 ] int 
  2352 ;;  msgbuffer       2   54[BANK0 ] PTR unsigned char 
  2353 ;;		 -> main@msgbuffer(31), 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  msgval          2   56[BANK0 ] PTR unsigned int 
  2356 ;;		 -> main@msgbuffer(31), 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  2   48[BANK0 ] int 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2366 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2369 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2370 ;;Total ram usage:       10 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:   10
  2373 ;; This function calls:
  2374 ;;		Nothing
  2375 ;; This function is called by:
  2376 ;;		_main
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           	psect	text6
  2381  002002                     __ptext6:
  2382                           	opt stack 0
  2383  002002                     _timer0_lthread:
  2384                           	opt stack 20
  2385                           
  2386                           ;timer0_thread.c: 10: unsigned int *msgval;
  2387                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;incstack = 0
  2391  002002  0100               	movlb	0	; () banked
  2392  002004  C097  F099         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2393  002008  0100               	movlb	0	; () banked
  2394  00200A  C096  F098         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2395                           
  2396                           ; BSR set to: 0
  2397  00200E  0012               	return	
  2398  002010                     __end_of_timer0_lthread:
  2399                           	opt stack 0
  2400                           tblptru	equ	0xFF8
  2401                           intcon2	equ	0xFF1
  2402                           postinc0	equ	0xFEE
  2403                           postdec1	equ	0xFE5
  2404                           fsr1h	equ	0xFE2
  2405                           fsr1l	equ	0xFE1
  2406                           indf2	equ	0xFDF
  2407                           postinc2	equ	0xFDE
  2408                           postdec2	equ	0xFDD
  2409                           fsr2h	equ	0xFDA
  2410                           fsr2l	equ	0xFD9
  2411                           status	equ	0xFD8
  2412                           
  2413 ;; *************** function _init_uart_recv *****************
  2414 ;; Defined at:
  2415 ;;		line 84 in file "../src/my_uart.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  uc              2   48[BANK0 ] PTR struct __uart_comm
  2418 ;;		 -> main@uc(66), 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;		None               void
  2423 ;; Registers used:
  2424 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2430 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2433 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2434 ;;Total ram usage:        2 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:   10
  2437 ;; This function calls:
  2438 ;;		Nothing
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text7
  2445  001DBE                     __ptext7:
  2446                           	opt stack 0
  2447  001DBE                     _init_uart_recv:
  2448                           	opt stack 20
  2449                           
  2450                           ;my_uart.c: 85: uc_ptr = uc;
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;incstack = 0
  2454  001DBE  0100               	movlb	0	; () banked
  2455  001DC0  C091  F03C         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2456  001DC4  0100               	movlb	0	; () banked
  2457  001DC6  C090  F03B         	movff	init_uart_recv@uc,_uc_ptr
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;my_uart.c: 86: uc_ptr->buflen = 0;
  2461  001DCA  EE20 F01E          	lfsr	2,30
  2462  001DCE  503B               	movf	_uc_ptr,w,c
  2463  001DD0  26D9               	addwf	fsr2l,f,c
  2464  001DD2  503C               	movf	_uc_ptr+1,w,c
  2465  001DD4  22DA               	addwfc	fsr2h,f,c
  2466  001DD6  0E00               	movlw	0
  2467  001DD8  6EDF               	movwf	indf2,c
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;my_uart.c: 87: uc_ptr->cmd_count = 0;
  2471  001DDA  EE20 F041          	lfsr	2,65
  2472  001DDE  503B               	movf	_uc_ptr,w,c
  2473  001DE0  26D9               	addwf	fsr2l,f,c
  2474  001DE2  503C               	movf	_uc_ptr+1,w,c
  2475  001DE4  22DA               	addwfc	fsr2h,f,c
  2476  001DE6  0E00               	movlw	0
  2477  001DE8  6EDF               	movwf	indf2,c
  2478                           
  2479                           ; BSR set to: 0
  2480  001DEA  0012               	return	
  2481  001DEC                     __end_of_init_uart_recv:
  2482                           	opt stack 0
  2483                           tblptru	equ	0xFF8
  2484                           intcon2	equ	0xFF1
  2485                           postinc0	equ	0xFEE
  2486                           postdec1	equ	0xFE5
  2487                           fsr1h	equ	0xFE2
  2488                           fsr1l	equ	0xFE1
  2489                           indf2	equ	0xFDF
  2490                           postinc2	equ	0xFDE
  2491                           postdec2	equ	0xFDD
  2492                           fsr2h	equ	0xFDA
  2493                           fsr2l	equ	0xFD9
  2494                           status	equ	0xFD8
  2495                           
  2496 ;; *************** function _init_timer1_lthread *****************
  2497 ;; Defined at:
  2498 ;;		line 6 in file "../src/timer1_thread.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  tptr            2   48[BANK0 ] PTR struct __timer1_thre
  2501 ;;		 -> main@t1thread_data(2), 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;		None
  2504 ;; Return value:  Size  Location     Type
  2505 ;;		None               void
  2506 ;; Registers used:
  2507 ;;		wreg, fsr2l, fsr2h
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2516 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2517 ;;Total ram usage:        2 bytes
  2518 ;; Hardware stack levels used:    1
  2519 ;; Hardware stack levels required when called:   10
  2520 ;; This function calls:
  2521 ;;		Nothing
  2522 ;; This function is called by:
  2523 ;;		_main
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text8
  2528  001F9A                     __ptext8:
  2529                           	opt stack 0
  2530  001F9A                     _init_timer1_lthread:
  2531                           	opt stack 20
  2532                           
  2533                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;incstack = 0
  2537  001F9A  C090  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2538  001F9E  C091  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2539  001FA2  0E00               	movlw	0
  2540  001FA4  6EDE               	movwf	postinc2,c
  2541  001FA6  0E00               	movlw	0
  2542  001FA8  6EDD               	movwf	postdec2,c
  2543  001FAA  0012               	return	
  2544  001FAC                     __end_of_init_timer1_lthread:
  2545                           	opt stack 0
  2546                           tblptru	equ	0xFF8
  2547                           intcon2	equ	0xFF1
  2548                           postinc0	equ	0xFEE
  2549                           postdec1	equ	0xFE5
  2550                           fsr1h	equ	0xFE2
  2551                           fsr1l	equ	0xFE1
  2552                           indf2	equ	0xFDF
  2553                           postinc2	equ	0xFDE
  2554                           postdec2	equ	0xFDD
  2555                           fsr2h	equ	0xFDA
  2556                           fsr2l	equ	0xFD9
  2557                           status	equ	0xFD8
  2558                           
  2559 ;; *************** function _init_queues *****************
  2560 ;; Defined at:
  2561 ;;		line 242 in file "../src/messages.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;		None               void
  2568 ;; Registers used:
  2569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2579 ;;Total ram usage:        0 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:   11
  2582 ;; This function calls:
  2583 ;;		_init_queue
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text9
  2590  0018CE                     __ptext9:
  2591                           	opt stack 0
  2592  0018CE                     _init_queues:
  2593                           	opt stack 19
  2594                           
  2595                           ;messages.c: 243: MQ_Main_Willing_to_block = 0;
  2596                           
  2597                           ;incstack = 0
  2598  0018CE  0E00               	movlw	0
  2599  0018D0  0100               	movlb	0	; () banked
  2600  0018D2  6FB5               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;messages.c: 244: init_queue(&ToMainLow_MQ);
  2604  0018D4  0E08               	movlw	high _ToMainLow_MQ
  2605  0018D6  0100               	movlb	0	; () banked
  2606  0018D8  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  2607  0018DA  0E39               	movlw	low _ToMainLow_MQ
  2608  0018DC  0100               	movlb	0	; () banked
  2609  0018DE  6F90               	movwf	init_queue@qptr& (0+255),b
  2610  0018E0  ECCE  F00C         	call	_init_queue	;wreg free
  2611                           
  2612                           ;messages.c: 245: init_queue(&ToMainHigh_MQ);
  2613  0018E4  0E06               	movlw	high _ToMainHigh_MQ
  2614  0018E6  0100               	movlb	0	; () banked
  2615  0018E8  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  2616  0018EA  0EED               	movlw	low _ToMainHigh_MQ
  2617  0018EC  0100               	movlb	0	; () banked
  2618  0018EE  6F90               	movwf	init_queue@qptr& (0+255),b
  2619  0018F0  ECCE  F00C         	call	_init_queue	;wreg free
  2620                           
  2621                           ;messages.c: 246: init_queue(&SensorData_MQ);
  2622  0018F4  0E05               	movlw	high _SensorData_MQ
  2623  0018F6  0100               	movlb	0	; () banked
  2624  0018F8  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  2625  0018FA  0EA1               	movlw	low _SensorData_MQ
  2626  0018FC  0100               	movlb	0	; () banked
  2627  0018FE  6F90               	movwf	init_queue@qptr& (0+255),b
  2628  001900  ECCE  F00C         	call	_init_queue	;wreg free
  2629                           
  2630                           ;messages.c: 247: init_queue(&MotorData_MQ);
  2631  001904  0E04               	movlw	high _MotorData_MQ
  2632  001906  0100               	movlb	0	; () banked
  2633  001908  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  2634  00190A  0E55               	movlw	low _MotorData_MQ
  2635  00190C  0100               	movlb	0	; () banked
  2636  00190E  6F90               	movwf	init_queue@qptr& (0+255),b
  2637  001910  ECCE  F00C         	call	_init_queue	;wreg free
  2638                           
  2639                           ;messages.c: 248: init_queue(&FromMainLow_MQ);
  2640  001914  0E03               	movlw	high _FromMainLow_MQ
  2641  001916  0100               	movlb	0	; () banked
  2642  001918  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  2643  00191A  0E09               	movlw	low _FromMainLow_MQ
  2644  00191C  0100               	movlb	0	; () banked
  2645  00191E  6F90               	movwf	init_queue@qptr& (0+255),b
  2646  001920  ECCE  F00C         	call	_init_queue	;wreg free
  2647                           
  2648                           ;messages.c: 249: init_queue(&FromMainHigh_MQ);
  2649  001924  0E01               	movlw	high _FromMainHigh_MQ
  2650  001926  0100               	movlb	0	; () banked
  2651  001928  6F91               	movwf	(init_queue@qptr+1)& (0+255),b
  2652  00192A  0EBD               	movlw	low _FromMainHigh_MQ
  2653  00192C  0100               	movlb	0	; () banked
  2654  00192E  6F90               	movwf	init_queue@qptr& (0+255),b
  2655  001930  ECCE  F00C         	call	_init_queue	;wreg free
  2656  001934  0012               	return	
  2657  001936                     __end_of_init_queues:
  2658                           	opt stack 0
  2659                           tblptru	equ	0xFF8
  2660                           intcon2	equ	0xFF1
  2661                           postinc0	equ	0xFEE
  2662                           postdec1	equ	0xFE5
  2663                           fsr1h	equ	0xFE2
  2664                           fsr1l	equ	0xFE1
  2665                           indf2	equ	0xFDF
  2666                           postinc2	equ	0xFDE
  2667                           postdec2	equ	0xFDD
  2668                           fsr2h	equ	0xFDA
  2669                           fsr2l	equ	0xFD9
  2670                           status	equ	0xFD8
  2671                           
  2672 ;; *************** function _init_queue *****************
  2673 ;; Defined at:
  2674 ;;		line 14 in file "../src/messages.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  qptr            2   48[BANK0 ] PTR struct __msg_queue
  2677 ;;		 -> FromMainHigh_MQ(332), FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), 
  2678 ;;		 -> ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  i               1   50[BANK0 ] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;		None               void
  2683 ;; Registers used:
  2684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2690 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2691 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2693 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2694 ;;Total ram usage:        3 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:   10
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_init_queues
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text10
  2705  00199C                     __ptext10:
  2706                           	opt stack 0
  2707  00199C                     _init_queue:
  2708                           	opt stack 19
  2709                           
  2710                           ;messages.c: 15: unsigned char i;
  2711                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2712                           
  2713                           ;incstack = 0
  2714  00199C  0100               	movlb	0	; () banked
  2715  00199E  EE21 F04A          	lfsr	2,330
  2716  0019A2  0100               	movlb	0	; () banked
  2717  0019A4  5190               	movf	init_queue@qptr& (0+255),w,b
  2718  0019A6  26D9               	addwf	fsr2l,f,c
  2719  0019A8  0100               	movlb	0	; () banked
  2720  0019AA  5191               	movf	(init_queue@qptr+1)& (0+255),w,b
  2721  0019AC  22DA               	addwfc	fsr2h,f,c
  2722  0019AE  0E00               	movlw	0
  2723  0019B0  6EDF               	movwf	indf2,c
  2724                           
  2725                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2726  0019B2  0100               	movlb	0	; () banked
  2727  0019B4  EE21 F04B          	lfsr	2,331
  2728  0019B8  0100               	movlb	0	; () banked
  2729  0019BA  5190               	movf	init_queue@qptr& (0+255),w,b
  2730  0019BC  26D9               	addwf	fsr2l,f,c
  2731  0019BE  0100               	movlb	0	; () banked
  2732  0019C0  5191               	movf	(init_queue@qptr+1)& (0+255),w,b
  2733  0019C2  22DA               	addwfc	fsr2h,f,c
  2734  0019C4  0E00               	movlw	0
  2735  0019C6  6EDF               	movwf	indf2,c
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;messages.c: 19: for (i = 0; i < 10; i++) {
  2739  0019C8  0E00               	movlw	0
  2740  0019CA  0100               	movlb	0	; () banked
  2741  0019CC  6F92               	movwf	init_queue@i& (0+255),b
  2742                           
  2743                           ; BSR set to: 0
  2744  0019CE  0E09               	movlw	9
  2745  0019D0  0100               	movlb	0	; () banked
  2746  0019D2  6592               	cpfsgt	init_queue@i& (0+255),b
  2747  0019D4  D001               	goto	l2610
  2748  0019D6  0012               	return	
  2749  0019D8                     l2610:
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;messages.c: 20: qptr->queue[i].full = 0;
  2753  0019D8  0100               	movlb	0	; () banked
  2754  0019DA  5192               	movf	init_queue@i& (0+255),w,b
  2755  0019DC  0D21               	mullw	33
  2756  0019DE  50F3               	movf	prodl,w,c
  2757  0019E0  0100               	movlb	0	; () banked
  2758  0019E2  2590               	addwf	init_queue@qptr& (0+255),w,b
  2759  0019E4  6ED9               	movwf	fsr2l,c
  2760  0019E6  50F4               	movf	prodh,w,c
  2761  0019E8  0100               	movlb	0	; () banked
  2762  0019EA  2191               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2763  0019EC  6EDA               	movwf	fsr2h,c
  2764  0019EE  0E00               	movlw	0
  2765  0019F0  6EDF               	movwf	indf2,c
  2766                           
  2767                           ; BSR set to: 0
  2768  0019F2  0100               	movlb	0	; () banked
  2769  0019F4  2B92               	incf	init_queue@i& (0+255),f,b
  2770                           
  2771                           ; BSR set to: 0
  2772  0019F6  0E09               	movlw	9
  2773  0019F8  0100               	movlb	0	; () banked
  2774  0019FA  6592               	cpfsgt	init_queue@i& (0+255),b
  2775  0019FC  D7ED               	goto	l2610
  2776  0019FE  0012               	return	
  2777  001A00                     __end_of_init_queue:
  2778                           	opt stack 0
  2779                           tblptru	equ	0xFF8
  2780                           prodh	equ	0xFF4
  2781                           prodl	equ	0xFF3
  2782                           intcon2	equ	0xFF1
  2783                           postinc0	equ	0xFEE
  2784                           postdec1	equ	0xFE5
  2785                           fsr1h	equ	0xFE2
  2786                           fsr1l	equ	0xFE1
  2787                           indf2	equ	0xFDF
  2788                           postinc2	equ	0xFDE
  2789                           postdec2	equ	0xFDD
  2790                           fsr2h	equ	0xFDA
  2791                           fsr2l	equ	0xFD9
  2792                           status	equ	0xFD8
  2793                           
  2794 ;; *************** function _init_i2c *****************
  2795 ;; Defined at:
  2796 ;;		line 276 in file "../src/my_i2c.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;  ic              2   48[BANK0 ] PTR struct __i2c_comm
  2799 ;;		 -> main@ic(72), 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;		None               void
  2804 ;; Registers used:
  2805 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2811 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2814 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2815 ;;Total ram usage:        2 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:   10
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_main
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text11
  2826  001936                     __ptext11:
  2827                           	opt stack 0
  2828  001936                     _init_i2c:
  2829                           	opt stack 20
  2830                           
  2831                           ;my_i2c.c: 277: ic_ptr = ic;
  2832                           
  2833                           ; BSR set to: 0
  2834                           ;incstack = 0
  2835  001936  0100               	movlb	0	; () banked
  2836  001938  C091  F0B4         	movff	init_i2c@ic+1,_ic_ptr+1
  2837  00193C  0100               	movlb	0	; () banked
  2838  00193E  C090  F0B3         	movff	init_i2c@ic,_ic_ptr
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;my_i2c.c: 278: ic_ptr->buflen = 0;
  2842  001942  0100               	movlb	0	; () banked
  2843  001944  EE20 F01E          	lfsr	2,30
  2844  001948  0100               	movlb	0	; () banked
  2845  00194A  51B3               	movf	_ic_ptr& (0+255),w,b
  2846  00194C  26D9               	addwf	fsr2l,f,c
  2847  00194E  0100               	movlb	0	; () banked
  2848  001950  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  2849  001952  22DA               	addwfc	fsr2h,f,c
  2850  001954  0E00               	movlw	0
  2851  001956  6EDF               	movwf	indf2,c
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;my_i2c.c: 279: ic_ptr->event_count = 0;
  2855  001958  0100               	movlb	0	; () banked
  2856  00195A  EE20 F020          	lfsr	2,32
  2857  00195E  0100               	movlb	0	; () banked
  2858  001960  51B3               	movf	_ic_ptr& (0+255),w,b
  2859  001962  26D9               	addwf	fsr2l,f,c
  2860  001964  0100               	movlb	0	; () banked
  2861  001966  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  2862  001968  22DA               	addwfc	fsr2h,f,c
  2863  00196A  0E00               	movlw	0
  2864  00196C  6EDF               	movwf	indf2,c
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;my_i2c.c: 280: ic_ptr->status = 0x1;
  2868  00196E  0100               	movlb	0	; () banked
  2869  001970  EE20 F021          	lfsr	2,33
  2870  001974  0100               	movlb	0	; () banked
  2871  001976  51B3               	movf	_ic_ptr& (0+255),w,b
  2872  001978  26D9               	addwf	fsr2l,f,c
  2873  00197A  0100               	movlb	0	; () banked
  2874  00197C  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  2875  00197E  22DA               	addwfc	fsr2h,f,c
  2876  001980  0E01               	movlw	1
  2877  001982  6EDF               	movwf	indf2,c
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;my_i2c.c: 281: ic_ptr->error_count = 0;
  2881  001984  0100               	movlb	0	; () banked
  2882  001986  EE20 F023          	lfsr	2,35
  2883  00198A  0100               	movlb	0	; () banked
  2884  00198C  51B3               	movf	_ic_ptr& (0+255),w,b
  2885  00198E  26D9               	addwf	fsr2l,f,c
  2886  001990  0100               	movlb	0	; () banked
  2887  001992  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  2888  001994  22DA               	addwfc	fsr2h,f,c
  2889  001996  0E00               	movlw	0
  2890  001998  6EDF               	movwf	indf2,c
  2891                           
  2892                           ; BSR set to: 0
  2893  00199A  0012               	return	
  2894  00199C                     __end_of_init_i2c:
  2895                           	opt stack 0
  2896                           tblptru	equ	0xFF8
  2897                           prodh	equ	0xFF4
  2898                           prodl	equ	0xFF3
  2899                           intcon2	equ	0xFF1
  2900                           postinc0	equ	0xFEE
  2901                           postdec1	equ	0xFE5
  2902                           fsr1h	equ	0xFE2
  2903                           fsr1l	equ	0xFE1
  2904                           indf2	equ	0xFDF
  2905                           postinc2	equ	0xFDE
  2906                           postdec2	equ	0xFDD
  2907                           fsr2h	equ	0xFDA
  2908                           fsr2l	equ	0xFD9
  2909                           status	equ	0xFD8
  2910                           
  2911 ;; *************** function _i2c_master_send *****************
  2912 ;; Defined at:
  2913 ;;		line 50 in file "../src/my_i2c.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  addr            1    wreg     unsigned char 
  2916 ;;  length          1   74[BANK0 ] unsigned char 
  2917 ;;  msg             2   75[BANK0 ] PTR unsigned char 
  2918 ;;		 -> main@msgbuffer(31), 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  addr            1   77[BANK0 ] unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      unsigned char 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2930 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2931 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2933 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2934 ;;Total ram usage:        4 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:   13
  2937 ;; This function calls:
  2938 ;;		_FromMainHigh_sendmsg
  2939 ;; This function is called by:
  2940 ;;		_main
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text12
  2945  001524                     __ptext12:
  2946                           	opt stack 0
  2947  001524                     _i2c_master_send:
  2948                           	opt stack 17
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;incstack = 0
  2952                           ;i2c_master_send@addr stored from wreg
  2953  001524  0100               	movlb	0	; () banked
  2954  001526  6FAD               	movwf	i2c_master_send@addr& (0+255),b
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;my_i2c.c: 52: if (SSP1STATbits.R_W == 1) {
  2958  001528  B4C7               	btfsc	4039,2,c	;volatile
  2959  00152A  0012               	return	
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;my_i2c.c: 54: }
  2963                           ;my_i2c.c: 55: if (ic_ptr->status == 0x1) {
  2964                           
  2965                           ; BSR set to: 0
  2966                           
  2967                           ; BSR set to: 0
  2968                           ;my_i2c.c: 53: return (-1);
  2969                           ;	Return value of _i2c_master_send is never used
  2970  00152C  0100               	movlb	0	; () banked
  2971  00152E  EE20 F021          	lfsr	2,33
  2972  001532  0100               	movlb	0	; () banked
  2973  001534  51B3               	movf	_ic_ptr& (0+255),w,b
  2974  001536  26D9               	addwf	fsr2l,f,c
  2975  001538  0100               	movlb	0	; () banked
  2976  00153A  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  2977  00153C  22DA               	addwfc	fsr2h,f,c
  2978  00153E  0E01               	movlw	1
  2979  001540  62DF               	cpfseq	indf2,c
  2980  001542  0012               	return	
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;my_i2c.c: 56: ic_ptr->slave_addr = addr;
  2984  001544  0100               	movlb	0	; () banked
  2985  001546  EE20 F044          	lfsr	2,68
  2986  00154A  0100               	movlb	0	; () banked
  2987  00154C  51B3               	movf	_ic_ptr& (0+255),w,b
  2988  00154E  26D9               	addwf	fsr2l,f,c
  2989  001550  0100               	movlb	0	; () banked
  2990  001552  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  2991  001554  22DA               	addwfc	fsr2h,f,c
  2992  001556  0100               	movlb	0	; () banked
  2993  001558  C0AD  FFDF         	movff	i2c_master_send@addr,indf2
  2994                           
  2995                           ;my_i2c.c: 57: ic_ptr->status = 0x6;
  2996  00155C  0100               	movlb	0	; () banked
  2997  00155E  EE20 F021          	lfsr	2,33
  2998  001562  0100               	movlb	0	; () banked
  2999  001564  51B3               	movf	_ic_ptr& (0+255),w,b
  3000  001566  26D9               	addwf	fsr2l,f,c
  3001  001568  0100               	movlb	0	; () banked
  3002  00156A  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3003  00156C  22DA               	addwfc	fsr2h,f,c
  3004  00156E  0E06               	movlw	6
  3005  001570  6EDF               	movwf	indf2,c
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;my_i2c.c: 58: FromMainHigh_sendmsg(length, 46, (void *) msg);
  3009  001572  0E2E               	movlw	46
  3010  001574  0100               	movlb	0	; () banked
  3011  001576  6FA6               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  3012  001578  0100               	movlb	0	; () banked
  3013  00157A  C0AC  F0A8         	movff	i2c_master_send@msg+1,FromMainHigh_sendmsg@data+1
  3014  00157E  0100               	movlb	0	; () banked
  3015  001580  C0AB  F0A7         	movff	i2c_master_send@msg,FromMainHigh_sendmsg@data
  3016  001584  0100               	movlb	0	; () banked
  3017  001586  51AA               	movf	i2c_master_send@length& (0+255),w,b
  3018  001588  EC21  F00F         	call	_FromMainHigh_sendmsg
  3019                           
  3020                           ;my_i2c.c: 59: ic_ptr->outbufind = 0;
  3021  00158C  0100               	movlb	0	; () banked
  3022  00158E  EE20 F043          	lfsr	2,67
  3023  001592  0100               	movlb	0	; () banked
  3024  001594  51B3               	movf	_ic_ptr& (0+255),w,b
  3025  001596  26D9               	addwf	fsr2l,f,c
  3026  001598  0100               	movlb	0	; () banked
  3027  00159A  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3028  00159C  22DA               	addwfc	fsr2h,f,c
  3029  00159E  0E00               	movlw	0
  3030  0015A0  6EDF               	movwf	indf2,c
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;my_i2c.c: 60: ic_ptr->outbuflen = length;
  3034  0015A2  0100               	movlb	0	; () banked
  3035  0015A4  EE20 F042          	lfsr	2,66
  3036  0015A8  0100               	movlb	0	; () banked
  3037  0015AA  51B3               	movf	_ic_ptr& (0+255),w,b
  3038  0015AC  26D9               	addwf	fsr2l,f,c
  3039  0015AE  0100               	movlb	0	; () banked
  3040  0015B0  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3041  0015B2  22DA               	addwfc	fsr2h,f,c
  3042  0015B4  0100               	movlb	0	; () banked
  3043  0015B6  C0AA  FFDF         	movff	i2c_master_send@length,indf2
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;my_i2c.c: 61: SSP1CON2bits.SEN = 1;
  3047  0015BA  80C5               	bsf	4037,0,c	;volatile
  3048  0015BC  0012               	return	
  3049  0015BE                     __end_of_i2c_master_send:
  3050                           	opt stack 0
  3051                           tblptru	equ	0xFF8
  3052                           prodh	equ	0xFF4
  3053                           prodl	equ	0xFF3
  3054                           intcon2	equ	0xFF1
  3055                           postinc0	equ	0xFEE
  3056                           postdec1	equ	0xFE5
  3057                           fsr1h	equ	0xFE2
  3058                           fsr1l	equ	0xFE1
  3059                           indf2	equ	0xFDF
  3060                           postinc2	equ	0xFDE
  3061                           postdec2	equ	0xFDD
  3062                           fsr2h	equ	0xFDA
  3063                           fsr2l	equ	0xFD9
  3064                           status	equ	0xFD8
  3065                           
  3066 ;; *************** function _FromMainHigh_sendmsg *****************
  3067 ;; Defined at:
  3068 ;;		line 222 in file "../src/messages.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  length          1    wreg     unsigned char 
  3071 ;;  msgtype         1   70[BANK0 ] unsigned char 
  3072 ;;  data            2   71[BANK0 ] PTR void 
  3073 ;;		 -> main@msgbuffer(31), main@t1thread_data(2), 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  length          1   73[BANK0 ] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      char 
  3078 ;; Registers used:
  3079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3085 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3088 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3089 ;;Total ram usage:        4 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:   12
  3092 ;; This function calls:
  3093 ;;		_send_msg
  3094 ;; This function is called by:
  3095 ;;		_i2c_master_send
  3096 ;;		_timer1_lthread
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text13
  3101  001E42                     __ptext13:
  3102                           	opt stack 0
  3103  001E42                     _FromMainHigh_sendmsg:
  3104                           	opt stack 17
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;incstack = 0
  3108                           ;FromMainHigh_sendmsg@length stored from wreg
  3109  001E42  0100               	movlb	0	; () banked
  3110  001E44  6FA9               	movwf	FromMainHigh_sendmsg@length& (0+255),b
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;messages.c: 228: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  3114  001E46  0E01               	movlw	high _FromMainHigh_MQ
  3115  001E48  0100               	movlb	0	; () banked
  3116  001E4A  6F9B               	movwf	(send_msg@qptr+1)& (0+255),b
  3117  001E4C  0EBD               	movlw	low _FromMainHigh_MQ
  3118  001E4E  0100               	movlb	0	; () banked
  3119  001E50  6F9A               	movwf	send_msg@qptr& (0+255),b
  3120  001E52  C0A9  F09C         	movff	FromMainHigh_sendmsg@length,send_msg@length
  3121  001E56  C0A6  F09D         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  3122  001E5A  0100               	movlb	0	; () banked
  3123  001E5C  C0A8  F09F         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  3124  001E60  0100               	movlb	0	; () banked
  3125  001E62  C0A7  F09E         	movff	FromMainHigh_sendmsg@data,send_msg@data
  3126  001E66  EC21  F007         	call	_send_msg	;wreg free
  3127  001E6A  0012               	return	
  3128  001E6C                     __end_of_FromMainHigh_sendmsg:
  3129                           	opt stack 0
  3130                           tblptru	equ	0xFF8
  3131                           prodh	equ	0xFF4
  3132                           prodl	equ	0xFF3
  3133                           intcon2	equ	0xFF1
  3134                           postinc0	equ	0xFEE
  3135                           postdec1	equ	0xFE5
  3136                           fsr1h	equ	0xFE2
  3137                           fsr1l	equ	0xFE1
  3138                           indf2	equ	0xFDF
  3139                           postinc2	equ	0xFDE
  3140                           postdec2	equ	0xFDD
  3141                           fsr2h	equ	0xFDA
  3142                           fsr2l	equ	0xFD9
  3143                           status	equ	0xFD8
  3144                           
  3145 ;; *************** function _send_msg *****************
  3146 ;; Defined at:
  3147 ;;		line 24 in file "../src/messages.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  qptr            2   58[BANK0 ] PTR struct __msg_queue
  3150 ;;		 -> FromMainHigh_MQ(332), FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), 
  3151 ;;		 -> ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  3152 ;;  length          1   60[BANK0 ] unsigned char 
  3153 ;;  msgtype         1   61[BANK0 ] unsigned char 
  3154 ;;  data            2   62[BANK0 ] PTR void 
  3155 ;;		 -> timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@right(1), timer0_int_handler@left(
      +1), 
  3156 ;;		 -> timer0_int_handler@forward(1), timer0_int_handler@val(2), NULL(0), main@msgbuffer(31), 
  3157 ;;		 -> main@t1thread_data(2), main@ic(72), main@uc(66), 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  qmsg            2   68[BANK0 ] PTR struct __msg
  3160 ;;		 -> FromMainLow_MQ.queue(330), FromMainHigh_MQ.queue(330), ToMainHigh_MQ.queue(330), ToMainLow_MQ.queue(330), 
  3161 ;;		 -> SensorData_MQ.queue(330), MotorData_MQ.queue(330), FromMainHigh_MQ(332), FromMainLow_MQ(332), 
  3162 ;;		 -> MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  3163 ;;  tlength         2   65[BANK0 ] unsigned int 
  3164 ;;  slot            1   67[BANK0 ] unsigned char 
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      char 
  3167 ;; Registers used:
  3168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3174 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3175 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3176 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3177 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3178 ;;Total ram usage:       12 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:   11
  3181 ;; This function calls:
  3182 ;;		___awmod
  3183 ;;		_memcpy
  3184 ;; This function is called by:
  3185 ;;		_FromMainLow_sendmsg
  3186 ;;		_FromMainHigh_sendmsg
  3187 ;;		_SensorData_sendmsg
  3188 ;;		_MotorData_sendmsg
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text14
  3193  000E42                     __ptext14:
  3194                           	opt stack 0
  3195  000E42                     _send_msg:
  3196                           	opt stack 17
  3197                           
  3198                           ;messages.c: 25: unsigned char slot;
  3199                           ;messages.c: 27: msg *qmsg;
  3200                           ;messages.c: 28: size_t tlength = length;
  3201                           
  3202                           ;incstack = 0
  3203  000E42  0100               	movlb	0	; () banked
  3204  000E44  C09C  F0A1         	movff	send_msg@length,send_msg@tlength
  3205  000E48  0100               	movlb	0	; () banked
  3206  000E4A  6BA2               	clrf	(send_msg@tlength+1)& (0+255),b
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3210  000E4C  0100               	movlb	0	; () banked
  3211  000E4E  EE21 F04A          	lfsr	2,330
  3212  000E52  0100               	movlb	0	; () banked
  3213  000E54  519A               	movf	send_msg@qptr& (0+255),w,b
  3214  000E56  26D9               	addwf	fsr2l,f,c
  3215  000E58  0100               	movlb	0	; () banked
  3216  000E5A  519B               	movf	(send_msg@qptr+1)& (0+255),w,b
  3217  000E5C  22DA               	addwfc	fsr2h,f,c
  3218  000E5E  50DF               	movf	indf2,w,c
  3219  000E60  0100               	movlb	0	; () banked
  3220  000E62  6FA3               	movwf	send_msg@slot& (0+255),b
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3224  000E64  0100               	movlb	0	; () banked
  3225  000E66  51A3               	movf	send_msg@slot& (0+255),w,b
  3226  000E68  0D21               	mullw	33
  3227  000E6A  50F3               	movf	prodl,w,c
  3228  000E6C  0100               	movlb	0	; () banked
  3229  000E6E  259A               	addwf	send_msg@qptr& (0+255),w,b
  3230  000E70  0100               	movlb	0	; () banked
  3231  000E72  6FA4               	movwf	send_msg@qmsg& (0+255),b
  3232  000E74  50F4               	movf	prodh,w,c
  3233  000E76  0100               	movlb	0	; () banked
  3234  000E78  219B               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3235  000E7A  0100               	movlb	0	; () banked
  3236  000E7C  6FA5               	movwf	(send_msg@qmsg+1)& (0+255),b
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;messages.c: 41: if (qmsg->full != 0) {
  3240  000E7E  C0A4  FFD9         	movff	send_msg@qmsg,fsr2l
  3241  000E82  C0A5  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3242  000E86  50DF               	movf	indf2,w,c
  3243  000E88  B4D8               	btfsc	status,2,c
  3244  000E8A  D002               	goto	l2460
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;messages.c: 42: return (-1);
  3248  000E8C  0EFF               	movlw	255
  3249  000E8E  0012               	return	
  3250  000E90                     l2460:
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;messages.c: 43: }
  3254                           ;messages.c: 46: qmsg->length = length;
  3255  000E90  0100               	movlb	0	; () banked
  3256  000E92  EE20 F001          	lfsr	2,1
  3257  000E96  0100               	movlb	0	; () banked
  3258  000E98  51A4               	movf	send_msg@qmsg& (0+255),w,b
  3259  000E9A  26D9               	addwf	fsr2l,f,c
  3260  000E9C  0100               	movlb	0	; () banked
  3261  000E9E  51A5               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3262  000EA0  22DA               	addwfc	fsr2h,f,c
  3263  000EA2  0100               	movlb	0	; () banked
  3264  000EA4  C09C  FFDF         	movff	send_msg@length,indf2
  3265                           
  3266                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3267  000EA8  0100               	movlb	0	; () banked
  3268  000EAA  EE20 F002          	lfsr	2,2
  3269  000EAE  0100               	movlb	0	; () banked
  3270  000EB0  51A4               	movf	send_msg@qmsg& (0+255),w,b
  3271  000EB2  26D9               	addwf	fsr2l,f,c
  3272  000EB4  0100               	movlb	0	; () banked
  3273  000EB6  51A5               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3274  000EB8  22DA               	addwfc	fsr2h,f,c
  3275  000EBA  0100               	movlb	0	; () banked
  3276  000EBC  C09D  FFDF         	movff	send_msg@msgtype,indf2
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3280  000EC0  0E03               	movlw	3
  3281  000EC2  0100               	movlb	0	; () banked
  3282  000EC4  25A4               	addwf	send_msg@qmsg& (0+255),w,b
  3283  000EC6  0100               	movlb	0	; () banked
  3284  000EC8  6F90               	movwf	memcpy@d1& (0+255),b
  3285  000ECA  0E00               	movlw	0
  3286  000ECC  0100               	movlb	0	; () banked
  3287  000ECE  21A5               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3288  000ED0  0100               	movlb	0	; () banked
  3289  000ED2  6F91               	movwf	(memcpy@d1+1)& (0+255),b
  3290  000ED4  0100               	movlb	0	; () banked
  3291  000ED6  C09F  F093         	movff	send_msg@data+1,memcpy@s1+1
  3292  000EDA  0100               	movlb	0	; () banked
  3293  000EDC  C09E  F092         	movff	send_msg@data,memcpy@s1
  3294  000EE0  C0A1  F094         	movff	send_msg@tlength,memcpy@n
  3295  000EE4  C0A2  F095         	movff	send_msg@tlength+1,memcpy@n+1
  3296  000EE8  EC5F  F00D         	call	_memcpy	;wreg free
  3297                           
  3298                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 10;
  3299  000EEC  0100               	movlb	0	; () banked
  3300  000EEE  EE21 F04A          	lfsr	2,330
  3301  000EF2  0100               	movlb	0	; () banked
  3302  000EF4  519A               	movf	send_msg@qptr& (0+255),w,b
  3303  000EF6  26D9               	addwf	fsr2l,f,c
  3304  000EF8  0100               	movlb	0	; () banked
  3305  000EFA  519B               	movf	(send_msg@qptr+1)& (0+255),w,b
  3306  000EFC  22DA               	addwfc	fsr2h,f,c
  3307  000EFE  0100               	movlb	0	; () banked
  3308  000F00  EE11 F04A          	lfsr	1,330
  3309  000F04  0100               	movlb	0	; () banked
  3310  000F06  519A               	movf	send_msg@qptr& (0+255),w,b
  3311  000F08  26E1               	addwf	fsr1l,f,c
  3312  000F0A  0100               	movlb	0	; () banked
  3313  000F0C  519B               	movf	(send_msg@qptr+1)& (0+255),w,b
  3314  000F0E  22E2               	addwfc	fsr1h,f,c
  3315  000F10  50E7               	movf	indf1,w,c
  3316  000F12  0100               	movlb	0	; () banked
  3317  000F14  6FA0               	movwf	??_send_msg& (0+255),b
  3318  000F16  0E01               	movlw	1
  3319  000F18  0100               	movlb	0	; () banked
  3320  000F1A  25A0               	addwf	??_send_msg& (0+255),w,b
  3321  000F1C  0100               	movlb	0	; () banked
  3322  000F1E  6F90               	movwf	___awmod@dividend& (0+255),b
  3323  000F20  0100               	movlb	0	; () banked
  3324  000F22  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  3325  000F24  0E00               	movlw	0
  3326  000F26  2391               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3327  000F28  0E00               	movlw	0
  3328  000F2A  0100               	movlb	0	; () banked
  3329  000F2C  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  3330  000F2E  0E0A               	movlw	10
  3331  000F30  0100               	movlb	0	; () banked
  3332  000F32  6F92               	movwf	___awmod@divisor& (0+255),b
  3333  000F34  EC14  F009         	call	___awmod	;wreg free
  3334  000F38  0100               	movlb	0	; () banked
  3335  000F3A  5190               	movf	?___awmod& (0+255),w,b
  3336  000F3C  6EDF               	movwf	indf2,c
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;messages.c: 59: qmsg->full = 1;
  3340  000F3E  C0A4  FFD9         	movff	send_msg@qmsg,fsr2l
  3341  000F42  C0A5  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3342  000F46  0E01               	movlw	1
  3343  000F48  6EDF               	movwf	indf2,c
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;messages.c: 60: return (1);
  3347  000F4A  0E01               	movlw	1
  3348  000F4C  0012               	return	
  3349  000F4E                     __end_of_send_msg:
  3350                           	opt stack 0
  3351                           tblptru	equ	0xFF8
  3352                           prodh	equ	0xFF4
  3353                           prodl	equ	0xFF3
  3354                           intcon2	equ	0xFF1
  3355                           postinc0	equ	0xFEE
  3356                           indf1	equ	0xFE7
  3357                           postdec1	equ	0xFE5
  3358                           fsr1h	equ	0xFE2
  3359                           fsr1l	equ	0xFE1
  3360                           indf2	equ	0xFDF
  3361                           postinc2	equ	0xFDE
  3362                           postdec2	equ	0xFDD
  3363                           fsr2h	equ	0xFDA
  3364                           fsr2l	equ	0xFD9
  3365                           status	equ	0xFD8
  3366                           
  3367 ;; *************** function _i2c_configure_master *****************
  3368 ;; Defined at:
  3369 ;;		line 16 in file "../src/my_i2c.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  sensor_addr     1    wreg     unsigned char 
  3372 ;;  motor_addr      1   48[BANK0 ] unsigned char 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  sensor_addr     1   49[BANK0 ] unsigned char 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;		None               void
  3377 ;; Registers used:
  3378 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3384 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3385 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3387 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3388 ;;Total ram usage:        2 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:   10
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_main
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           	psect	text15
  3399  001768                     __ptext15:
  3400                           	opt stack 0
  3401  001768                     _i2c_configure_master:
  3402                           	opt stack 20
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;incstack = 0
  3406                           ;i2c_configure_master@sensor_addr stored from wreg
  3407  001768  0100               	movlb	0	; () banked
  3408  00176A  6F91               	movwf	i2c_configure_master@sensor_addr& (0+255),b
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;my_i2c.c: 18: ic_ptr->status = 0x1;
  3412  00176C  0100               	movlb	0	; () banked
  3413  00176E  EE20 F021          	lfsr	2,33
  3414  001772  0100               	movlb	0	; () banked
  3415  001774  51B3               	movf	_ic_ptr& (0+255),w,b
  3416  001776  26D9               	addwf	fsr2l,f,c
  3417  001778  0100               	movlb	0	; () banked
  3418  00177A  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3419  00177C  22DA               	addwfc	fsr2h,f,c
  3420  00177E  0E01               	movlw	1
  3421  001780  6EDF               	movwf	indf2,c
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;my_i2c.c: 19: SSPSTAT = 0;
  3425  001782  0E00               	movlw	0
  3426  001784  6EC7               	movwf	4039,c	;volatile
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;my_i2c.c: 20: SSPCON1 = 0;
  3430  001786  0E00               	movlw	0
  3431  001788  6EC6               	movwf	4038,c	;volatile
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;my_i2c.c: 21: SSPCON2 = 0;
  3435  00178A  0E00               	movlw	0
  3436  00178C  6EC5               	movwf	4037,c	;volatile
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;my_i2c.c: 22: SSPCON1bits.SSPM |= 0x8;
  3440  00178E  0E08               	movlw	8
  3441  001790  12C6               	iorwf	4038,f,c	;volatile
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;my_i2c.c: 24: TRISBbits.TRISB4 = 1;
  3445  001792  8893               	bsf	3987,4,c	;volatile
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;my_i2c.c: 25: TRISBbits.TRISB5 = 1;
  3449  001794  8A93               	bsf	3987,5,c	;volatile
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;my_i2c.c: 27: SSPSTATbits.SMP = 1;
  3453  001796  8EC7               	bsf	4039,7,c	;volatile
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;my_i2c.c: 28: SSPSTATbits.CKE = 0;
  3457  001798  9CC7               	bcf	4039,6,c	;volatile
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;my_i2c.c: 29: SSPADD = 0x77;
  3461  00179A  0E77               	movlw	119
  3462  00179C  6EC8               	movwf	4040,c	;volatile
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;my_i2c.c: 31: ic_ptr->sensor_addr = sensor_addr;
  3466  00179E  0100               	movlb	0	; () banked
  3467  0017A0  EE20 F045          	lfsr	2,69
  3468  0017A4  0100               	movlb	0	; () banked
  3469  0017A6  51B3               	movf	_ic_ptr& (0+255),w,b
  3470  0017A8  26D9               	addwf	fsr2l,f,c
  3471  0017AA  0100               	movlb	0	; () banked
  3472  0017AC  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3473  0017AE  22DA               	addwfc	fsr2h,f,c
  3474  0017B0  0100               	movlb	0	; () banked
  3475  0017B2  C091  FFDF         	movff	i2c_configure_master@sensor_addr,indf2
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;my_i2c.c: 32: ic_ptr->motor_addr = motor_addr;
  3479  0017B6  0100               	movlb	0	; () banked
  3480  0017B8  EE20 F046          	lfsr	2,70
  3481  0017BC  0100               	movlb	0	; () banked
  3482  0017BE  51B3               	movf	_ic_ptr& (0+255),w,b
  3483  0017C0  26D9               	addwf	fsr2l,f,c
  3484  0017C2  0100               	movlb	0	; () banked
  3485  0017C4  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3486  0017C6  22DA               	addwfc	fsr2h,f,c
  3487  0017C8  0100               	movlb	0	; () banked
  3488  0017CA  C090  FFDF         	movff	i2c_configure_master@motor_addr,indf2
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;my_i2c.c: 33: ic_ptr->buflen = 30;
  3492  0017CE  0100               	movlb	0	; () banked
  3493  0017D0  EE20 F01E          	lfsr	2,30
  3494  0017D4  0100               	movlb	0	; () banked
  3495  0017D6  51B3               	movf	_ic_ptr& (0+255),w,b
  3496  0017D8  26D9               	addwf	fsr2l,f,c
  3497  0017DA  0100               	movlb	0	; () banked
  3498  0017DC  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  3499  0017DE  22DA               	addwfc	fsr2h,f,c
  3500  0017E0  0E1E               	movlw	30
  3501  0017E2  6EDF               	movwf	indf2,c
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;my_i2c.c: 35: SSPCON1bits.SSPEN = 1;
  3505  0017E4  8AC6               	bsf	4038,5,c	;volatile
  3506                           
  3507                           ; BSR set to: 0
  3508  0017E6  0012               	return	
  3509  0017E8                     __end_of_i2c_configure_master:
  3510                           	opt stack 0
  3511                           tblptru	equ	0xFF8
  3512                           prodh	equ	0xFF4
  3513                           prodl	equ	0xFF3
  3514                           intcon2	equ	0xFF1
  3515                           postinc0	equ	0xFEE
  3516                           indf1	equ	0xFE7
  3517                           postdec1	equ	0xFE5
  3518                           fsr1h	equ	0xFE2
  3519                           fsr1l	equ	0xFE1
  3520                           indf2	equ	0xFDF
  3521                           postinc2	equ	0xFDE
  3522                           postdec2	equ	0xFDD
  3523                           fsr2h	equ	0xFDA
  3524                           fsr2l	equ	0xFD9
  3525                           status	equ	0xFD8
  3526                           
  3527 ;; *************** function _enable_interrupts *****************
  3528 ;; Defined at:
  3529 ;;		line 15 in file "../src/interrupts.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;		None               void
  3536 ;; Registers used:
  3537 ;;		None
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3547 ;;Total ram usage:        0 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:   10
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_main
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text16
  3558  002010                     __ptext16:
  3559                           	opt stack 0
  3560  002010                     _enable_interrupts:
  3561                           	opt stack 20
  3562                           
  3563                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;incstack = 0
  3567  002010  8ED0               	bsf	4048,7,c	;volatile
  3568                           
  3569                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  3570  002012  8EF2               	bsf	intcon,7,c	;volatile
  3571                           
  3572                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  3573  002014  8CF2               	bsf	intcon,6,c	;volatile
  3574                           
  3575                           ;interrupts.c: 21: INTCONbits.PEIE = 1;
  3576  002016  8CF2               	bsf	intcon,6,c	;volatile
  3577  002018  0012               	return	
  3578  00201A                     __end_of_enable_interrupts:
  3579                           	opt stack 0
  3580                           tblptru	equ	0xFF8
  3581                           prodh	equ	0xFF4
  3582                           prodl	equ	0xFF3
  3583                           intcon	equ	0xFF2
  3584                           intcon2	equ	0xFF1
  3585                           postinc0	equ	0xFEE
  3586                           indf1	equ	0xFE7
  3587                           postdec1	equ	0xFE5
  3588                           fsr1h	equ	0xFE2
  3589                           fsr1l	equ	0xFE1
  3590                           indf2	equ	0xFDF
  3591                           postinc2	equ	0xFDE
  3592                           postdec2	equ	0xFDD
  3593                           fsr2h	equ	0xFDA
  3594                           fsr2l	equ	0xFD9
  3595                           status	equ	0xFD8
  3596                           
  3597 ;; *************** function _block_on_To_msgqueues *****************
  3598 ;; Defined at:
  3599 ;;		line 312 in file "../src/messages.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;		None               void
  3606 ;; Registers used:
  3607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3617 ;;Total ram usage:        0 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:   13
  3620 ;; This function calls:
  3621 ;;		_Delay1KTCYx
  3622 ;;		_check_msg
  3623 ;;		_in_main
  3624 ;; This function is called by:
  3625 ;;		_main
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text17
  3630  0015BE                     __ptext17:
  3631                           	opt stack 0
  3632  0015BE                     _block_on_To_msgqueues:
  3633                           	opt stack 17
  3634                           
  3635                           ;messages.c: 313: if (!in_main()) {
  3636                           
  3637                           ;incstack = 0
  3638  0015BE  EC0D  F00E         	call	_in_main	;wreg free
  3639  0015C2  0100               	movlb	0	; () banked
  3640  0015C4  5195               	movf	(?_in_main+1)& (0+255),w,b
  3641  0015C6  0100               	movlb	0	; () banked
  3642  0015C8  1194               	iorwf	?_in_main& (0+255),w,b
  3643  0015CA  B4D8               	btfsc	status,2,c
  3644  0015CC  0012               	return	
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;messages.c: 315: }
  3648                           ;messages.c: 319: MQ_Main_Willing_to_block = 1;
  3649                           
  3650                           ; BSR set to: 0
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;messages.c: 314: return;
  3654  0015CE  0E01               	movlw	1
  3655  0015D0  0100               	movlb	0	; () banked
  3656  0015D2  6FB5               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3657  0015D4                     l3114:
  3658                           
  3659                           ;messages.c: 321: if (check_msg(&ToMainHigh_MQ)) {
  3660  0015D4  0E06               	movlw	high _ToMainHigh_MQ
  3661  0015D6  0100               	movlb	0	; () banked
  3662  0015D8  6F91               	movwf	(check_msg@qptr+1)& (0+255),b
  3663  0015DA  0EED               	movlw	low _ToMainHigh_MQ
  3664  0015DC  0100               	movlb	0	; () banked
  3665  0015DE  6F90               	movwf	check_msg@qptr& (0+255),b
  3666  0015E0  EC62  F00E         	call	_check_msg	;wreg free
  3667  0015E4  0900               	iorlw	0
  3668  0015E6  B4D8               	btfsc	status,2,c
  3669  0015E8  D004               	goto	l3120
  3670                           
  3671                           ;messages.c: 322: MQ_Main_Willing_to_block = 0;
  3672  0015EA  0E00               	movlw	0
  3673  0015EC  0100               	movlb	0	; () banked
  3674  0015EE  6FB5               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3675  0015F0  0012               	return	
  3676  0015F2                     l3120:
  3677                           
  3678                           ;messages.c: 327: }
  3679                           ;messages.c: 328: if (check_msg(&ToMainLow_MQ)) {
  3680  0015F2  0E08               	movlw	high _ToMainLow_MQ
  3681  0015F4  0100               	movlb	0	; () banked
  3682  0015F6  6F91               	movwf	(check_msg@qptr+1)& (0+255),b
  3683  0015F8  0E39               	movlw	low _ToMainLow_MQ
  3684  0015FA  0100               	movlb	0	; () banked
  3685  0015FC  6F90               	movwf	check_msg@qptr& (0+255),b
  3686  0015FE  EC62  F00E         	call	_check_msg	;wreg free
  3687  001602  0900               	iorlw	0
  3688  001604  B4D8               	btfsc	status,2,c
  3689  001606  D004               	goto	l3126
  3690                           
  3691                           ;messages.c: 329: MQ_Main_Willing_to_block = 0;
  3692  001608  0E00               	movlw	0
  3693  00160A  0100               	movlb	0	; () banked
  3694  00160C  6FB5               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3695  00160E  0012               	return	
  3696  001610                     l3126:
  3697                           
  3698                           ;messages.c: 334: }
  3699                           ;messages.c: 335: if (check_msg(&SensorData_MQ)) {
  3700  001610  0E05               	movlw	high _SensorData_MQ
  3701  001612  0100               	movlb	0	; () banked
  3702  001614  6F91               	movwf	(check_msg@qptr+1)& (0+255),b
  3703  001616  0EA1               	movlw	low _SensorData_MQ
  3704  001618  0100               	movlb	0	; () banked
  3705  00161A  6F90               	movwf	check_msg@qptr& (0+255),b
  3706  00161C  EC62  F00E         	call	_check_msg	;wreg free
  3707  001620  0900               	iorlw	0
  3708  001622  B4D8               	btfsc	status,2,c
  3709  001624  D004               	goto	l3132
  3710                           
  3711                           ;messages.c: 336: MQ_Main_Willing_to_block = 0;
  3712  001626  0E00               	movlw	0
  3713  001628  0100               	movlb	0	; () banked
  3714  00162A  6FB5               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3715  00162C  0012               	return	
  3716  00162E                     l3132:
  3717                           
  3718                           ;messages.c: 341: }
  3719                           ;messages.c: 342: if (check_msg(&MotorData_MQ)) {
  3720  00162E  0E04               	movlw	high _MotorData_MQ
  3721  001630  0100               	movlb	0	; () banked
  3722  001632  6F91               	movwf	(check_msg@qptr+1)& (0+255),b
  3723  001634  0E55               	movlw	low _MotorData_MQ
  3724  001636  0100               	movlb	0	; () banked
  3725  001638  6F90               	movwf	check_msg@qptr& (0+255),b
  3726  00163A  EC62  F00E         	call	_check_msg	;wreg free
  3727  00163E  0900               	iorlw	0
  3728  001640  B4D8               	btfsc	status,2,c
  3729  001642  D004               	goto	l3138
  3730                           
  3731                           ;messages.c: 343: MQ_Main_Willing_to_block = 0;
  3732  001644  0E00               	movlw	0
  3733  001646  0100               	movlb	0	; () banked
  3734  001648  6FB5               	movwf	_MQ_Main_Willing_to_block& (0+255),b
  3735  00164A  0012               	return	
  3736  00164C                     l3138:
  3737                           
  3738                           ;messages.c: 348: }
  3739                           ;messages.c: 349: Delay1KTCYx(10);
  3740  00164C  0E0A               	movlw	10
  3741  00164E  ECC3  F00F         	call	_Delay1KTCYx
  3742  001652  D7C0               	goto	l3114
  3743  001654                     __end_of_block_on_To_msgqueues:
  3744                           	opt stack 0
  3745                           tblptru	equ	0xFF8
  3746                           prodh	equ	0xFF4
  3747                           prodl	equ	0xFF3
  3748                           intcon	equ	0xFF2
  3749                           intcon2	equ	0xFF1
  3750                           postinc0	equ	0xFEE
  3751                           indf1	equ	0xFE7
  3752                           postdec1	equ	0xFE5
  3753                           fsr1h	equ	0xFE2
  3754                           fsr1l	equ	0xFE1
  3755                           indf2	equ	0xFDF
  3756                           postinc2	equ	0xFDE
  3757                           postdec2	equ	0xFDD
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function _in_main *****************
  3763 ;; Defined at:
  3764 ;;		line 42 in file "../src/interrupts.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  2   52[BANK0 ] int 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3778 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3781 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3782 ;;Total ram usage:        2 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:   12
  3785 ;; This function calls:
  3786 ;;		_in_high_int
  3787 ;;		_in_low_int
  3788 ;; This function is called by:
  3789 ;;		_block_on_To_msgqueues
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text18
  3794  001C1A                     __ptext18:
  3795                           	opt stack 0
  3796  001C1A                     _in_main:
  3797                           	opt stack 17
  3798                           
  3799                           ;interrupts.c: 43: if ((!in_low_int()) && (!in_high_int())) {
  3800                           
  3801                           ;incstack = 0
  3802  001C1A  ECCF  F00D         	call	_in_low_int	;wreg free
  3803  001C1E  0100               	movlb	0	; () banked
  3804  001C20  5193               	movf	(?_in_low_int+1)& (0+255),w,b
  3805  001C22  0100               	movlb	0	; () banked
  3806  001C24  1192               	iorwf	?_in_low_int& (0+255),w,b
  3807  001C26  A4D8               	btfss	status,2,c
  3808  001C28  D00F               	goto	l2598
  3809                           
  3810                           ; BSR set to: 0
  3811  001C2A  ECF1  F00F         	call	_in_high_int	;wreg free
  3812  001C2E  0100               	movlb	0	; () banked
  3813  001C30  5191               	movf	(?_in_high_int+1)& (0+255),w,b
  3814  001C32  0100               	movlb	0	; () banked
  3815  001C34  1190               	iorwf	?_in_high_int& (0+255),w,b
  3816  001C36  A4D8               	btfss	status,2,c
  3817  001C38  D007               	goto	l2598
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;interrupts.c: 44: return (1);
  3821  001C3A  0E00               	movlw	0
  3822  001C3C  0100               	movlb	0	; () banked
  3823  001C3E  6F95               	movwf	(?_in_main+1)& (0+255),b
  3824  001C40  0E01               	movlw	1
  3825  001C42  0100               	movlb	0	; () banked
  3826  001C44  6F94               	movwf	?_in_main& (0+255),b
  3827  001C46  0012               	return	
  3828  001C48                     l2598:
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;interrupts.c: 46: return (0);
  3832  001C48  0E00               	movlw	0
  3833  001C4A  0100               	movlb	0	; () banked
  3834  001C4C  6F95               	movwf	(?_in_main+1)& (0+255),b
  3835  001C4E  0E00               	movlw	0
  3836  001C50  0100               	movlb	0	; () banked
  3837  001C52  6F94               	movwf	?_in_main& (0+255),b
  3838  001C54  0012               	return	
  3839  001C56                     __end_of_in_main:
  3840                           	opt stack 0
  3841                           tblptru	equ	0xFF8
  3842                           prodh	equ	0xFF4
  3843                           prodl	equ	0xFF3
  3844                           intcon	equ	0xFF2
  3845                           intcon2	equ	0xFF1
  3846                           postinc0	equ	0xFEE
  3847                           indf1	equ	0xFE7
  3848                           postdec1	equ	0xFE5
  3849                           fsr1h	equ	0xFE2
  3850                           fsr1l	equ	0xFE1
  3851                           indf2	equ	0xFDF
  3852                           postinc2	equ	0xFDE
  3853                           postdec2	equ	0xFDD
  3854                           fsr2h	equ	0xFDA
  3855                           fsr2l	equ	0xFD9
  3856                           status	equ	0xFD8
  3857                           
  3858 ;; *************** function _in_low_int *****************
  3859 ;; Defined at:
  3860 ;;		line 32 in file "../src/interrupts.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  2   50[BANK0 ] int 
  3867 ;; Registers used:
  3868 ;;		wreg, status,2, status,0, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3874 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3877 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3878 ;;Total ram usage:        2 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:   11
  3881 ;; This function calls:
  3882 ;;		_in_high_int
  3883 ;; This function is called by:
  3884 ;;		_in_main
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text19
  3889  001B9E                     __ptext19:
  3890                           	opt stack 0
  3891  001B9E                     _in_low_int:
  3892                           	opt stack 17
  3893                           
  3894                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;incstack = 0
  3898  001B9E  ACF2               	btfss	intcon,6,c	;volatile
  3899  001BA0  D007               	goto	l2436
  3900                           
  3901                           ;interrupts.c: 34: return (0);
  3902  001BA2  0E00               	movlw	0
  3903  001BA4  0100               	movlb	0	; () banked
  3904  001BA6  6F93               	movwf	(?_in_low_int+1)& (0+255),b
  3905  001BA8  0E00               	movlw	0
  3906  001BAA  0100               	movlb	0	; () banked
  3907  001BAC  6F92               	movwf	?_in_low_int& (0+255),b
  3908  001BAE  0012               	return	
  3909  001BB0                     l2436:
  3910  001BB0  ECF1  F00F         	call	_in_high_int	;wreg free
  3911  001BB4  0100               	movlb	0	; () banked
  3912  001BB6  5191               	movf	(?_in_high_int+1)& (0+255),w,b
  3913  001BB8  0100               	movlb	0	; () banked
  3914  001BBA  1190               	iorwf	?_in_high_int& (0+255),w,b
  3915  001BBC  B4D8               	btfsc	status,2,c
  3916  001BBE  D007               	goto	l2444
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;interrupts.c: 36: return (0);
  3920  001BC0  0E00               	movlw	0
  3921  001BC2  0100               	movlb	0	; () banked
  3922  001BC4  6F93               	movwf	(?_in_low_int+1)& (0+255),b
  3923  001BC6  0E00               	movlw	0
  3924  001BC8  0100               	movlb	0	; () banked
  3925  001BCA  6F92               	movwf	?_in_low_int& (0+255),b
  3926  001BCC  0012               	return	
  3927  001BCE                     l2444:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;interrupts.c: 38: return (1);
  3931  001BCE  0E00               	movlw	0
  3932  001BD0  0100               	movlb	0	; () banked
  3933  001BD2  6F93               	movwf	(?_in_low_int+1)& (0+255),b
  3934  001BD4  0E01               	movlw	1
  3935  001BD6  0100               	movlb	0	; () banked
  3936  001BD8  6F92               	movwf	?_in_low_int& (0+255),b
  3937  001BDA  0012               	return	
  3938  001BDC                     __end_of_in_low_int:
  3939                           	opt stack 0
  3940                           tblptru	equ	0xFF8
  3941                           prodh	equ	0xFF4
  3942                           prodl	equ	0xFF3
  3943                           intcon	equ	0xFF2
  3944                           intcon2	equ	0xFF1
  3945                           postinc0	equ	0xFEE
  3946                           indf1	equ	0xFE7
  3947                           postdec1	equ	0xFE5
  3948                           fsr1h	equ	0xFE2
  3949                           fsr1l	equ	0xFE1
  3950                           indf2	equ	0xFDF
  3951                           postinc2	equ	0xFDE
  3952                           postdec2	equ	0xFDD
  3953                           fsr2h	equ	0xFDA
  3954                           fsr2l	equ	0xFD9
  3955                           status	equ	0xFD8
  3956                           
  3957 ;; *************** function _in_high_int *****************
  3958 ;; Defined at:
  3959 ;;		line 24 in file "../src/interrupts.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  2   48[BANK0 ] int 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3976 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3977 ;;Total ram usage:        2 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:   10
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_in_low_int
  3984 ;;		_in_main
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text20
  3989  001FE2                     __ptext20:
  3990                           	opt stack 0
  3991  001FE2                     _in_high_int:
  3992                           	opt stack 17
  3993                           
  3994                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;incstack = 0
  3998  001FE2  0E00               	movlw	0
  3999  001FE4  AEF2               	btfss	intcon,7,c	;volatile
  4000  001FE6  0E01               	movlw	1
  4001  001FE8  0100               	movlb	0	; () banked
  4002  001FEA  6F90               	movwf	?_in_high_int& (0+255),b
  4003  001FEC  0100               	movlb	0	; () banked
  4004  001FEE  6B91               	clrf	(?_in_high_int+1)& (0+255),b
  4005  001FF0  0012               	return	
  4006  001FF2                     __end_of_in_high_int:
  4007                           	opt stack 0
  4008                           tblptru	equ	0xFF8
  4009                           prodh	equ	0xFF4
  4010                           prodl	equ	0xFF3
  4011                           intcon	equ	0xFF2
  4012                           intcon2	equ	0xFF1
  4013                           postinc0	equ	0xFEE
  4014                           indf1	equ	0xFE7
  4015                           postdec1	equ	0xFE5
  4016                           fsr1h	equ	0xFE2
  4017                           fsr1l	equ	0xFE1
  4018                           indf2	equ	0xFDF
  4019                           postinc2	equ	0xFDE
  4020                           postdec2	equ	0xFDD
  4021                           fsr2h	equ	0xFDA
  4022                           fsr2l	equ	0xFD9
  4023                           status	equ	0xFD8
  4024                           
  4025 ;; *************** function _check_msg *****************
  4026 ;; Defined at:
  4027 ;;		line 270 in file "../src/messages.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;  qptr            2   48[BANK0 ] PTR struct __msg_queue
  4030 ;;		 -> MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      unsigned char 
  4035 ;; Registers used:
  4036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4044 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4045 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4046 ;;Total ram usage:        3 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:   10
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_block_on_To_msgqueues
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text21
  4057  001CC4                     __ptext21:
  4058                           	opt stack 0
  4059  001CC4                     _check_msg:
  4060                           	opt stack 19
  4061                           
  4062                           ;messages.c: 271: return (qptr->queue[qptr->cur_read_ind].full);
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;incstack = 0
  4066  001CC4  0100               	movlb	0	; () banked
  4067  001CC6  EE21 F04B          	lfsr	2,331
  4068  001CCA  0100               	movlb	0	; () banked
  4069  001CCC  5190               	movf	check_msg@qptr& (0+255),w,b
  4070  001CCE  26D9               	addwf	fsr2l,f,c
  4071  001CD0  0100               	movlb	0	; () banked
  4072  001CD2  5191               	movf	(check_msg@qptr+1)& (0+255),w,b
  4073  001CD4  22DA               	addwfc	fsr2h,f,c
  4074  001CD6  50DF               	movf	indf2,w,c
  4075  001CD8  0100               	movlb	0	; () banked
  4076  001CDA  6F92               	movwf	??_check_msg& (0+255),b
  4077  001CDC  0100               	movlb	0	; () banked
  4078  001CDE  5192               	movf	??_check_msg& (0+255),w,b
  4079  001CE0  0D21               	mullw	33
  4080  001CE2  50F3               	movf	prodl,w,c
  4081  001CE4  0100               	movlb	0	; () banked
  4082  001CE6  2590               	addwf	check_msg@qptr& (0+255),w,b
  4083  001CE8  6ED9               	movwf	fsr2l,c
  4084  001CEA  50F4               	movf	prodh,w,c
  4085  001CEC  0100               	movlb	0	; () banked
  4086  001CEE  2191               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4087  001CF0  6EDA               	movwf	fsr2h,c
  4088  001CF2  50DF               	movf	indf2,w,c
  4089  001CF4  0012               	return	
  4090  001CF6                     __end_of_check_msg:
  4091                           	opt stack 0
  4092                           tblptru	equ	0xFF8
  4093                           prodh	equ	0xFF4
  4094                           prodl	equ	0xFF3
  4095                           intcon	equ	0xFF2
  4096                           intcon2	equ	0xFF1
  4097                           postinc0	equ	0xFEE
  4098                           indf1	equ	0xFE7
  4099                           postdec1	equ	0xFE5
  4100                           fsr1h	equ	0xFE2
  4101                           fsr1l	equ	0xFE1
  4102                           indf2	equ	0xFDF
  4103                           postinc2	equ	0xFDE
  4104                           postdec2	equ	0xFDD
  4105                           fsr2h	equ	0xFDA
  4106                           fsr2l	equ	0xFD9
  4107                           status	equ	0xFD8
  4108                           
  4109 ;; *************** function _Delay1KTCYx *****************
  4110 ;; Defined at:
  4111 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d1ktcyx.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  unit            1    wreg     unsigned char 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;  unit            1   48[BANK0 ] unsigned char 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;		None               void
  4118 ;; Registers used:
  4119 ;;		wreg
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4126 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4128 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4129 ;;Total ram usage:        1 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:   10
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		_block_on_To_msgqueues
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text22
  4140  001F86                     __ptext22:
  4141                           	opt stack 0
  4142  001F86                     _Delay1KTCYx:
  4143                           	opt stack 19
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;incstack = 0
  4147                           ;Delay1KTCYx@unit stored from wreg
  4148  001F86  0100               	movlb	0	; () banked
  4149  001F88  6F90               	movwf	Delay1KTCYx@unit& (0+255),b
  4150  001F8A                     l755:
  4151                           
  4152                           ; BSR set to: 0
  4153                           
  4154                           ; BSR set to: 0
  4155  001F8A  0EFA               	movlw	250
  4156  001F8C                     u2237:
  4157  001F8C  F000               	nop	
  4158  001F8E  2EE8               	decfsz	wreg,f,c
  4159  001F90  D7FD               	goto	u2237
  4160  001F92  0100               	movlb	0	; () banked
  4161  001F94  2F90               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4162  001F96  D7F9               	goto	l755
  4163  001F98  0012               	return	
  4164  001F9A                     __end_of_Delay1KTCYx:
  4165                           	opt stack 0
  4166                           tblptru	equ	0xFF8
  4167                           prodh	equ	0xFF4
  4168                           prodl	equ	0xFF3
  4169                           intcon	equ	0xFF2
  4170                           intcon2	equ	0xFF1
  4171                           postinc0	equ	0xFEE
  4172                           wreg	equ	0xFE8
  4173                           indf1	equ	0xFE7
  4174                           postdec1	equ	0xFE5
  4175                           fsr1h	equ	0xFE2
  4176                           fsr1l	equ	0xFE1
  4177                           indf2	equ	0xFDF
  4178                           postinc2	equ	0xFDE
  4179                           postdec2	equ	0xFDD
  4180                           fsr2h	equ	0xFDA
  4181                           fsr2l	equ	0xFD9
  4182                           status	equ	0xFD8
  4183                           
  4184 ;; *************** function _ToMainLow_recvmsg *****************
  4185 ;; Defined at:
  4186 ;;		line 112 in file "../src/messages.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  maxlength       1    wreg     unsigned char 
  4189 ;;  msgtype         2   72[BANK0 ] PTR unsigned char 
  4190 ;;		 -> main@msgtype(1), 
  4191 ;;  data            2   74[BANK0 ] PTR void 
  4192 ;;		 -> main@msgbuffer(31), 
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  maxlength       1   76[BANK0 ] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      char 
  4197 ;; Registers used:
  4198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4204 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4205 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4207 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4208 ;;Total ram usage:        5 bytes
  4209 ;; Hardware stack levels used:    1
  4210 ;; Hardware stack levels required when called:   12
  4211 ;; This function calls:
  4212 ;;		_recv_msg
  4213 ;; This function is called by:
  4214 ;;		_main
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text23
  4219  001CF6                     __ptext23:
  4220                           	opt stack 0
  4221  001CF6                     _ToMainLow_recvmsg:
  4222                           	opt stack 18
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;incstack = 0
  4226                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4227  001CF6  0100               	movlb	0	; () banked
  4228  001CF8  6FAC               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4232  001CFA  0E08               	movlw	high _ToMainLow_MQ
  4233  001CFC  0100               	movlb	0	; () banked
  4234  001CFE  6F9B               	movwf	(recv_msg@qptr+1)& (0+255),b
  4235  001D00  0E39               	movlw	low _ToMainLow_MQ
  4236  001D02  0100               	movlb	0	; () banked
  4237  001D04  6F9A               	movwf	recv_msg@qptr& (0+255),b
  4238  001D06  C0AC  F09C         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4239  001D0A  0100               	movlb	0	; () banked
  4240  001D0C  C0A9  F09E         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4241  001D10  0100               	movlb	0	; () banked
  4242  001D12  C0A8  F09D         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4243  001D16  0100               	movlb	0	; () banked
  4244  001D18  C0AB  F0A0         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4245  001D1C  0100               	movlb	0	; () banked
  4246  001D1E  C0AA  F09F         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4247  001D22  ECE3  F005         	call	_recv_msg	;wreg free
  4248  001D26  0012               	return	
  4249  001D28                     __end_of_ToMainLow_recvmsg:
  4250                           	opt stack 0
  4251                           tblptru	equ	0xFF8
  4252                           prodh	equ	0xFF4
  4253                           prodl	equ	0xFF3
  4254                           intcon	equ	0xFF2
  4255                           intcon2	equ	0xFF1
  4256                           postinc0	equ	0xFEE
  4257                           wreg	equ	0xFE8
  4258                           indf1	equ	0xFE7
  4259                           postdec1	equ	0xFE5
  4260                           fsr1h	equ	0xFE2
  4261                           fsr1l	equ	0xFE1
  4262                           indf2	equ	0xFDF
  4263                           postinc2	equ	0xFDE
  4264                           postdec2	equ	0xFDD
  4265                           fsr2h	equ	0xFDA
  4266                           fsr2l	equ	0xFD9
  4267                           status	equ	0xFD8
  4268                           
  4269 ;; *************** function _ToMainHigh_recvmsg *****************
  4270 ;; Defined at:
  4271 ;;		line 135 in file "../src/messages.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  maxlength       1    wreg     unsigned char 
  4274 ;;  msgtype         2   72[BANK0 ] PTR unsigned char 
  4275 ;;		 -> main@msgtype(1), 
  4276 ;;  data            2   74[BANK0 ] PTR void 
  4277 ;;		 -> main@msgbuffer(31), 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  maxlength       1   76[BANK0 ] unsigned char 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      char 
  4282 ;; Registers used:
  4283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4289 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4290 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4292 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4293 ;;Total ram usage:        5 bytes
  4294 ;; Hardware stack levels used:    1
  4295 ;; Hardware stack levels required when called:   12
  4296 ;; This function calls:
  4297 ;;		_recv_msg
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text24
  4304  001D28                     __ptext24:
  4305                           	opt stack 0
  4306  001D28                     _ToMainHigh_recvmsg:
  4307                           	opt stack 18
  4308                           
  4309                           ;incstack = 0
  4310                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4311  001D28  0100               	movlb	0	; () banked
  4312  001D2A  6FAC               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4316  001D2C  0E06               	movlw	high _ToMainHigh_MQ
  4317  001D2E  0100               	movlb	0	; () banked
  4318  001D30  6F9B               	movwf	(recv_msg@qptr+1)& (0+255),b
  4319  001D32  0EED               	movlw	low _ToMainHigh_MQ
  4320  001D34  0100               	movlb	0	; () banked
  4321  001D36  6F9A               	movwf	recv_msg@qptr& (0+255),b
  4322  001D38  C0AC  F09C         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4323  001D3C  0100               	movlb	0	; () banked
  4324  001D3E  C0A9  F09E         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4325  001D42  0100               	movlb	0	; () banked
  4326  001D44  C0A8  F09D         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4327  001D48  0100               	movlb	0	; () banked
  4328  001D4A  C0AB  F0A0         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4329  001D4E  0100               	movlb	0	; () banked
  4330  001D50  C0AA  F09F         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4331  001D54  ECE3  F005         	call	_recv_msg	;wreg free
  4332  001D58  0012               	return	
  4333  001D5A                     __end_of_ToMainHigh_recvmsg:
  4334                           	opt stack 0
  4335                           tblptru	equ	0xFF8
  4336                           prodh	equ	0xFF4
  4337                           prodl	equ	0xFF3
  4338                           intcon	equ	0xFF2
  4339                           intcon2	equ	0xFF1
  4340                           postinc0	equ	0xFEE
  4341                           wreg	equ	0xFE8
  4342                           indf1	equ	0xFE7
  4343                           postdec1	equ	0xFE5
  4344                           fsr1h	equ	0xFE2
  4345                           fsr1l	equ	0xFE1
  4346                           indf2	equ	0xFDF
  4347                           postinc2	equ	0xFDE
  4348                           postdec2	equ	0xFDD
  4349                           fsr2h	equ	0xFDA
  4350                           fsr2l	equ	0xFD9
  4351                           status	equ	0xFD8
  4352                           
  4353 ;; *************** function _recv_msg *****************
  4354 ;; Defined at:
  4355 ;;		line 63 in file "../src/messages.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  qptr            2   58[BANK0 ] PTR struct __msg_queue
  4358 ;;		 -> FromMainHigh_MQ(332), FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), 
  4359 ;;		 -> ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  4360 ;;  maxlength       1   60[BANK0 ] unsigned char 
  4361 ;;  msgtype         2   61[BANK0 ] PTR unsigned char 
  4362 ;;		 -> timer0_int_handler@msgtype(2), RAM(3775), main@msgtype(1), 
  4363 ;;  data            2   63[BANK0 ] PTR void 
  4364 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(31), main@ic(72), 
  4365 ;;		 -> main@uc(66), 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  qmsg            2   70[BANK0 ] PTR struct __msg
  4368 ;;		 -> FromMainLow_MQ.queue(330), FromMainHigh_MQ.queue(330), ToMainHigh_MQ.queue(330), ToMainLow_MQ.queue(330), 
  4369 ;;		 -> SensorData_MQ.queue(330), MotorData_MQ.queue(330), FromMainHigh_MQ(332), FromMainLow_MQ(332), 
  4370 ;;		 -> MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  4371 ;;  tlength         2   68[BANK0 ] unsigned int 
  4372 ;;  slot            1   67[BANK0 ] unsigned char 
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      char 
  4375 ;; Registers used:
  4376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4382 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4383 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4384 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4385 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4386 ;;Total ram usage:       14 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; Hardware stack levels required when called:   11
  4389 ;; This function calls:
  4390 ;;		___awmod
  4391 ;;		_memcpy
  4392 ;; This function is called by:
  4393 ;;		_ToMainLow_recvmsg
  4394 ;;		_ToMainHigh_recvmsg
  4395 ;;		_SensorData_recvmsg
  4396 ;;		_MotorData_recvmsg
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text25
  4401  000BC6                     __ptext25:
  4402                           	opt stack 0
  4403  000BC6                     _recv_msg:
  4404                           	opt stack 18
  4405                           
  4406                           ;messages.c: 64: unsigned char slot;
  4407                           ;messages.c: 68: msg *qmsg;
  4408                           ;messages.c: 69: size_t tlength;
  4409                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4410                           
  4411                           ;incstack = 0
  4412  000BC6  0100               	movlb	0	; () banked
  4413  000BC8  EE21 F04B          	lfsr	2,331
  4414  000BCC  0100               	movlb	0	; () banked
  4415  000BCE  519A               	movf	recv_msg@qptr& (0+255),w,b
  4416  000BD0  26D9               	addwf	fsr2l,f,c
  4417  000BD2  0100               	movlb	0	; () banked
  4418  000BD4  519B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4419  000BD6  22DA               	addwfc	fsr2h,f,c
  4420  000BD8  50DF               	movf	indf2,w,c
  4421  000BDA  0100               	movlb	0	; () banked
  4422  000BDC  6FA3               	movwf	recv_msg@slot& (0+255),b
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4426  000BDE  0100               	movlb	0	; () banked
  4427  000BE0  51A3               	movf	recv_msg@slot& (0+255),w,b
  4428  000BE2  0D21               	mullw	33
  4429  000BE4  50F3               	movf	prodl,w,c
  4430  000BE6  0100               	movlb	0	; () banked
  4431  000BE8  259A               	addwf	recv_msg@qptr& (0+255),w,b
  4432  000BEA  0100               	movlb	0	; () banked
  4433  000BEC  6FA6               	movwf	recv_msg@qmsg& (0+255),b
  4434  000BEE  50F4               	movf	prodh,w,c
  4435  000BF0  0100               	movlb	0	; () banked
  4436  000BF2  219B               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4437  000BF4  0100               	movlb	0	; () banked
  4438  000BF6  6FA7               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;messages.c: 74: if (qmsg->full == 1) {
  4442  000BF8  0E01               	movlw	1
  4443  000BFA  C0A6  FFD9         	movff	recv_msg@qmsg,fsr2l
  4444  000BFE  C0A7  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4445  000C02  62DF               	cpfseq	indf2,c
  4446  000C04  D07D               	goto	l2644
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4450  000C06  0100               	movlb	0	; () banked
  4451  000C08  EE20 F001          	lfsr	2,1
  4452  000C0C  0100               	movlb	0	; () banked
  4453  000C0E  51A6               	movf	recv_msg@qmsg& (0+255),w,b
  4454  000C10  26D9               	addwf	fsr2l,f,c
  4455  000C12  0100               	movlb	0	; () banked
  4456  000C14  51A7               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4457  000C16  22DA               	addwfc	fsr2h,f,c
  4458  000C18  50DF               	movf	indf2,w,c
  4459  000C1A  0100               	movlb	0	; () banked
  4460  000C1C  5D9C               	subwf	recv_msg@maxlength& (0+255),w,b
  4461  000C1E  B0D8               	btfsc	status,0,c
  4462  000C20  D002               	goto	l2628
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;messages.c: 77: return (-3);
  4466  000C22  0EFD               	movlw	253
  4467  000C24  0012               	return	
  4468  000C26                     l2628:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;messages.c: 78: }
  4472                           ;messages.c: 80: tlength = qmsg->length;
  4473  000C26  0100               	movlb	0	; () banked
  4474  000C28  EE20 F001          	lfsr	2,1
  4475  000C2C  0100               	movlb	0	; () banked
  4476  000C2E  51A6               	movf	recv_msg@qmsg& (0+255),w,b
  4477  000C30  26D9               	addwf	fsr2l,f,c
  4478  000C32  0100               	movlb	0	; () banked
  4479  000C34  51A7               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4480  000C36  22DA               	addwfc	fsr2h,f,c
  4481  000C38  50DF               	movf	indf2,w,c
  4482  000C3A  0100               	movlb	0	; () banked
  4483  000C3C  6FA1               	movwf	??_recv_msg& (0+255),b
  4484  000C3E  0100               	movlb	0	; () banked
  4485  000C40  51A1               	movf	??_recv_msg& (0+255),w,b
  4486  000C42  0100               	movlb	0	; () banked
  4487  000C44  6FA4               	movwf	recv_msg@tlength& (0+255),b
  4488  000C46  0100               	movlb	0	; () banked
  4489  000C48  6BA5               	clrf	(recv_msg@tlength+1)& (0+255),b
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4493  000C4A  0100               	movlb	0	; () banked
  4494  000C4C  C0A0  F091         	movff	recv_msg@data+1,memcpy@d1+1
  4495  000C50  0100               	movlb	0	; () banked
  4496  000C52  C09F  F090         	movff	recv_msg@data,memcpy@d1
  4497  000C56  0E03               	movlw	3
  4498  000C58  0100               	movlb	0	; () banked
  4499  000C5A  25A6               	addwf	recv_msg@qmsg& (0+255),w,b
  4500  000C5C  0100               	movlb	0	; () banked
  4501  000C5E  6FA1               	movwf	??_recv_msg& (0+255),b
  4502  000C60  0E00               	movlw	0
  4503  000C62  0100               	movlb	0	; () banked
  4504  000C64  21A7               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4505  000C66  0100               	movlb	0	; () banked
  4506  000C68  6FA2               	movwf	(??_recv_msg+1)& (0+255),b
  4507  000C6A  C0A1  F092         	movff	??_recv_msg,memcpy@s1
  4508  000C6E  C0A2  F093         	movff	??_recv_msg+1,memcpy@s1+1
  4509  000C72  C0A4  F094         	movff	recv_msg@tlength,memcpy@n
  4510  000C76  C0A5  F095         	movff	recv_msg@tlength+1,memcpy@n+1
  4511  000C7A  EC5F  F00D         	call	_memcpy	;wreg free
  4512                           
  4513                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 10;
  4514  000C7E  0100               	movlb	0	; () banked
  4515  000C80  EE21 F04B          	lfsr	2,331
  4516  000C84  0100               	movlb	0	; () banked
  4517  000C86  519A               	movf	recv_msg@qptr& (0+255),w,b
  4518  000C88  26D9               	addwf	fsr2l,f,c
  4519  000C8A  0100               	movlb	0	; () banked
  4520  000C8C  519B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4521  000C8E  22DA               	addwfc	fsr2h,f,c
  4522  000C90  0100               	movlb	0	; () banked
  4523  000C92  EE11 F04B          	lfsr	1,331
  4524  000C96  0100               	movlb	0	; () banked
  4525  000C98  519A               	movf	recv_msg@qptr& (0+255),w,b
  4526  000C9A  26E1               	addwf	fsr1l,f,c
  4527  000C9C  0100               	movlb	0	; () banked
  4528  000C9E  519B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4529  000CA0  22E2               	addwfc	fsr1h,f,c
  4530  000CA2  50E7               	movf	indf1,w,c
  4531  000CA4  0100               	movlb	0	; () banked
  4532  000CA6  6FA1               	movwf	??_recv_msg& (0+255),b
  4533  000CA8  0E01               	movlw	1
  4534  000CAA  0100               	movlb	0	; () banked
  4535  000CAC  25A1               	addwf	??_recv_msg& (0+255),w,b
  4536  000CAE  0100               	movlb	0	; () banked
  4537  000CB0  6F90               	movwf	___awmod@dividend& (0+255),b
  4538  000CB2  0100               	movlb	0	; () banked
  4539  000CB4  6B91               	clrf	(___awmod@dividend+1)& (0+255),b
  4540  000CB6  0E00               	movlw	0
  4541  000CB8  2391               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4542  000CBA  0E00               	movlw	0
  4543  000CBC  0100               	movlb	0	; () banked
  4544  000CBE  6F93               	movwf	(___awmod@divisor+1)& (0+255),b
  4545  000CC0  0E0A               	movlw	10
  4546  000CC2  0100               	movlb	0	; () banked
  4547  000CC4  6F92               	movwf	___awmod@divisor& (0+255),b
  4548  000CC6  EC14  F009         	call	___awmod	;wreg free
  4549  000CCA  0100               	movlb	0	; () banked
  4550  000CCC  5190               	movf	?___awmod& (0+255),w,b
  4551  000CCE  6EDF               	movwf	indf2,c
  4552                           
  4553                           ; BSR set to: 0
  4554                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4555  000CD0  0100               	movlb	0	; () banked
  4556  000CD2  EE20 F002          	lfsr	2,2
  4557  000CD6  0100               	movlb	0	; () banked
  4558  000CD8  51A6               	movf	recv_msg@qmsg& (0+255),w,b
  4559  000CDA  26D9               	addwf	fsr2l,f,c
  4560  000CDC  0100               	movlb	0	; () banked
  4561  000CDE  51A7               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4562  000CE0  22DA               	addwfc	fsr2h,f,c
  4563  000CE2  C09D  FFE1         	movff	recv_msg@msgtype,fsr1l
  4564  000CE6  C09E  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4565  000CEA  CFDF FFE7          	movff	indf2,indf1
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;messages.c: 91: qmsg->full = 0;
  4569  000CEE  C0A6  FFD9         	movff	recv_msg@qmsg,fsr2l
  4570  000CF2  C0A7  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4571  000CF6  0E00               	movlw	0
  4572  000CF8  6EDF               	movwf	indf2,c
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;messages.c: 92: return (tlength);
  4576  000CFA  0100               	movlb	0	; () banked
  4577  000CFC  51A4               	movf	recv_msg@tlength& (0+255),w,b
  4578  000CFE  0012               	return	
  4579  000D00                     l2644:
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;messages.c: 94: return (-4);
  4583  000D00  0EFC               	movlw	252
  4584  000D02  0012               	return	
  4585  000D04                     __end_of_recv_msg:
  4586                           	opt stack 0
  4587                           tblptru	equ	0xFF8
  4588                           prodh	equ	0xFF4
  4589                           prodl	equ	0xFF3
  4590                           intcon	equ	0xFF2
  4591                           intcon2	equ	0xFF1
  4592                           postinc0	equ	0xFEE
  4593                           wreg	equ	0xFE8
  4594                           indf1	equ	0xFE7
  4595                           postdec1	equ	0xFE5
  4596                           fsr1h	equ	0xFE2
  4597                           fsr1l	equ	0xFE1
  4598                           indf2	equ	0xFDF
  4599                           postinc2	equ	0xFDE
  4600                           postdec2	equ	0xFDD
  4601                           fsr2h	equ	0xFDA
  4602                           fsr2l	equ	0xFD9
  4603                           status	equ	0xFD8
  4604                           
  4605 ;; *************** function _memcpy *****************
  4606 ;; Defined at:
  4607 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;  d1              2   48[BANK0 ] PTR void 
  4610 ;;		 -> FromMainLow_MQ.queue(330), FromMainHigh_MQ.queue(330), ToMainHigh_MQ.queue(330), ToMainLow_MQ.queue(330), 
  4611 ;;		 -> SensorData_MQ.queue(330), MotorData_MQ.queue(330), timer0_int_handler@val(2), NULL(0), 
  4612 ;;		 -> FromMainHigh_MQ(332), FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), 
  4613 ;;		 -> ToMainHigh_MQ(332), ToMainLow_MQ(332), main@msgbuffer(31), main@ic(72), 
  4614 ;;		 -> main@uc(66), 
  4615 ;;  s1              2   50[BANK0 ] PTR const void 
  4616 ;;		 -> ToMainLow_MQ.data(30), ToMainHigh_MQ.data(30), SensorData_MQ.data(30), MotorData_MQ.data(30), 
  4617 ;;		 -> FromMainLow_MQ.data(30), FromMainHigh_MQ.data(30), MotorData_MQ.queue.data(30), SensorData_MQ.queue.data(30), 
  4618 ;;		 -> ToMainLow_MQ.queue.data(30), ToMainHigh_MQ.queue.data(30), FromMainHigh_MQ.queue.data(30), FromMainLow_MQ.queue.
      +data(30), 
  4619 ;;		 -> timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@right(1), timer0_int_handler@left(
      +1), 
  4620 ;;		 -> timer0_int_handler@forward(1), timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(332), 
  4621 ;;		 -> FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), 
  4622 ;;		 -> ToMainLow_MQ(332), main@msgbuffer(31), main@t1thread_data(2), main@ic(72), 
  4623 ;;		 -> main@uc(66), 
  4624 ;;  n               2   52[BANK0 ] unsigned int 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  s               2   56[BANK0 ] PTR const unsigned char 
  4627 ;;		 -> ToMainLow_MQ.data(30), ToMainHigh_MQ.data(30), SensorData_MQ.data(30), MotorData_MQ.data(30), 
  4628 ;;		 -> FromMainLow_MQ.data(30), FromMainHigh_MQ.data(30), MotorData_MQ.queue.data(30), SensorData_MQ.queue.data(30), 
  4629 ;;		 -> ToMainLow_MQ.queue.data(30), ToMainHigh_MQ.queue.data(30), FromMainHigh_MQ.queue.data(30), FromMainLow_MQ.queue.
      +data(30), 
  4630 ;;		 -> timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@right(1), timer0_int_handler@left(
      +1), 
  4631 ;;		 -> timer0_int_handler@forward(1), timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(332), 
  4632 ;;		 -> FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), 
  4633 ;;		 -> ToMainLow_MQ(332), main@msgbuffer(31), main@t1thread_data(2), main@ic(72), 
  4634 ;;		 -> main@uc(66), 
  4635 ;;  d               2   54[BANK0 ] PTR unsigned char 
  4636 ;;		 -> FromMainLow_MQ.queue(330), FromMainHigh_MQ.queue(330), ToMainHigh_MQ.queue(330), ToMainLow_MQ.queue(330), 
  4637 ;;		 -> SensorData_MQ.queue(330), MotorData_MQ.queue(330), timer0_int_handler@val(2), NULL(0), 
  4638 ;;		 -> FromMainHigh_MQ(332), FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), 
  4639 ;;		 -> ToMainHigh_MQ(332), ToMainLow_MQ(332), main@msgbuffer(31), main@ic(72), 
  4640 ;;		 -> main@uc(66), 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  2   48[BANK0 ] PTR void 
  4643 ;; Registers used:
  4644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4650 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4651 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4653 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4654 ;;Total ram usage:       10 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:   10
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_send_msg
  4661 ;;		_recv_msg
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text26
  4666  001ABE                     __ptext26:
  4667                           	opt stack 0
  4668  001ABE                     _memcpy:
  4669                           	opt stack 17
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;incstack = 0
  4673  001ABE  0100               	movlb	0	; () banked
  4674  001AC0  C093  F099         	movff	memcpy@s1+1,memcpy@s+1
  4675  001AC4  0100               	movlb	0	; () banked
  4676  001AC6  C092  F098         	movff	memcpy@s1,memcpy@s
  4677  001ACA  0100               	movlb	0	; () banked
  4678  001ACC  C091  F097         	movff	memcpy@d1+1,memcpy@d+1
  4679  001AD0  0100               	movlb	0	; () banked
  4680  001AD2  C090  F096         	movff	memcpy@d1,memcpy@d
  4681  001AD6  D010               	goto	l2298
  4682  001AD8                     l2292:
  4683                           
  4684                           ; BSR set to: 0
  4685  001AD8  C098  FFD9         	movff	memcpy@s,fsr2l
  4686  001ADC  C099  FFDA         	movff	memcpy@s+1,fsr2h
  4687  001AE0  C096  FFE1         	movff	memcpy@d,fsr1l
  4688  001AE4  C097  FFE2         	movff	memcpy@d+1,fsr1h
  4689  001AE8  CFDF FFE7          	movff	indf2,indf1
  4690                           
  4691                           ; BSR set to: 0
  4692  001AEC  0100               	movlb	0	; () banked
  4693  001AEE  4B98               	infsnz	memcpy@s& (0+255),f,b
  4694  001AF0  2B99               	incf	(memcpy@s+1)& (0+255),f,b
  4695                           
  4696                           ; BSR set to: 0
  4697  001AF2  0100               	movlb	0	; () banked
  4698  001AF4  4B96               	infsnz	memcpy@d& (0+255),f,b
  4699  001AF6  2B97               	incf	(memcpy@d+1)& (0+255),f,b
  4700  001AF8                     l2298:
  4701                           
  4702                           ; BSR set to: 0
  4703  001AF8  0100               	movlb	0	; () banked
  4704  001AFA  0794               	decf	memcpy@n& (0+255),f,b
  4705  001AFC  A0D8               	btfss	status,0,c
  4706  001AFE  0795               	decf	(memcpy@n+1)& (0+255),f,b
  4707  001B00  0100               	movlb	0	; () banked
  4708  001B02  2994               	incf	memcpy@n& (0+255),w,b
  4709  001B04  B4D8               	btfsc	status,2,c
  4710  001B06  2995               	incf	(memcpy@n+1)& (0+255),w,b
  4711  001B08  B4D8               	btfsc	status,2,c
  4712                           
  4713                           ; BSR set to: 0
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;	Return value of _memcpy is never used
  4717  001B0A  0012               	return	
  4718  001B0C  D7E5               	goto	l2292
  4719  001B0E                     __end_of_memcpy:
  4720                           	opt stack 0
  4721                           tblptru	equ	0xFF8
  4722                           prodh	equ	0xFF4
  4723                           prodl	equ	0xFF3
  4724                           intcon	equ	0xFF2
  4725                           intcon2	equ	0xFF1
  4726                           postinc0	equ	0xFEE
  4727                           wreg	equ	0xFE8
  4728                           indf1	equ	0xFE7
  4729                           postdec1	equ	0xFE5
  4730                           fsr1h	equ	0xFE2
  4731                           fsr1l	equ	0xFE1
  4732                           indf2	equ	0xFDF
  4733                           postinc2	equ	0xFDE
  4734                           postdec2	equ	0xFDD
  4735                           fsr2h	equ	0xFDA
  4736                           fsr2l	equ	0xFD9
  4737                           status	equ	0xFD8
  4738                           
  4739 ;; *************** function ___awmod *****************
  4740 ;; Defined at:
  4741 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  dividend        2   48[BANK0 ] int 
  4744 ;;  divisor         2   50[BANK0 ] int 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  sign            1   53[BANK0 ] unsigned char 
  4747 ;;  counter         1   52[BANK0 ] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  2   48[BANK0 ] int 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0, prodl
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4757 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4758 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4760 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4761 ;;Total ram usage:        6 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:   10
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_send_msg
  4768 ;;		_recv_msg
  4769 ;;		_uart_send
  4770 ;;		_timer0_int_handler
  4771 ;;		i1_send_msg
  4772 ;;		i2_send_msg
  4773 ;;		i1_recv_msg
  4774 ;;		i2_recv_msg
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text27
  4779  001228                     __ptext27:
  4780                           	opt stack 0
  4781  001228                     ___awmod:
  4782                           	opt stack 19
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;incstack = 0
  4786  001228  0E00               	movlw	0
  4787  00122A  0100               	movlb	0	; () banked
  4788  00122C  6F95               	movwf	___awmod@sign& (0+255),b
  4789                           
  4790                           ; BSR set to: 0
  4791  00122E  0100               	movlb	0	; () banked
  4792  001230  5191               	movf	(___awmod@dividend+1)& (0+255),w,b
  4793  001232  0A80               	xorlw	128
  4794  001234  6EF3               	movwf	prodl,c
  4795  001236  0E80               	movlw	128
  4796  001238  5CF3               	subwf	prodl,w,c
  4797  00123A  0E00               	movlw	0
  4798  00123C  B4D8               	btfsc	status,2,c
  4799  00123E  5D90               	subwf	___awmod@dividend& (0+255),w,b
  4800  001240  B0D8               	btfsc	status,0,c
  4801  001242  D009               	goto	l2308
  4802                           
  4803                           ; BSR set to: 0
  4804  001244  0100               	movlb	0	; () banked
  4805  001246  6D90               	negf	___awmod@dividend& (0+255),b
  4806  001248  0100               	movlb	0	; () banked
  4807  00124A  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
  4808  00124C  B0D8               	btfsc	status,0,c
  4809  00124E  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
  4810                           
  4811                           ; BSR set to: 0
  4812  001250  0E01               	movlw	1
  4813  001252  0100               	movlb	0	; () banked
  4814  001254  6F95               	movwf	___awmod@sign& (0+255),b
  4815  001256                     l2308:
  4816                           
  4817                           ; BSR set to: 0
  4818  001256  0100               	movlb	0	; () banked
  4819  001258  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  4820  00125A  0A80               	xorlw	128
  4821  00125C  6EF3               	movwf	prodl,c
  4822  00125E  0E80               	movlw	128
  4823  001260  5CF3               	subwf	prodl,w,c
  4824  001262  0E00               	movlw	0
  4825  001264  B4D8               	btfsc	status,2,c
  4826  001266  5D92               	subwf	___awmod@divisor& (0+255),w,b
  4827  001268  B0D8               	btfsc	status,0,c
  4828  00126A  D006               	goto	l2312
  4829                           
  4830                           ; BSR set to: 0
  4831  00126C  0100               	movlb	0	; () banked
  4832  00126E  6D92               	negf	___awmod@divisor& (0+255),b
  4833  001270  0100               	movlb	0	; () banked
  4834  001272  1F93               	comf	(___awmod@divisor+1)& (0+255),f,b
  4835  001274  B0D8               	btfsc	status,0,c
  4836  001276  2B93               	incf	(___awmod@divisor+1)& (0+255),f,b
  4837  001278                     l2312:
  4838                           
  4839                           ; BSR set to: 0
  4840  001278  0100               	movlb	0	; () banked
  4841  00127A  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  4842  00127C  1192               	iorwf	___awmod@divisor& (0+255),w,b
  4843  00127E  B4D8               	btfsc	status,2,c
  4844  001280  D026               	goto	l2328
  4845                           
  4846                           ; BSR set to: 0
  4847  001282  0E01               	movlw	1
  4848  001284  0100               	movlb	0	; () banked
  4849  001286  6F94               	movwf	___awmod@counter& (0+255),b
  4850  001288  D006               	goto	l2318
  4851  00128A                     l2316:
  4852                           
  4853                           ; BSR set to: 0
  4854  00128A  0100               	movlb	0	; () banked
  4855  00128C  90D8               	bcf	status,0,c
  4856  00128E  3792               	rlcf	___awmod@divisor& (0+255),f,b
  4857  001290  3793               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  4858  001292  0100               	movlb	0	; () banked
  4859  001294  2B94               	incf	___awmod@counter& (0+255),f,b
  4860  001296                     l2318:
  4861                           
  4862                           ; BSR set to: 0
  4863  001296  0100               	movlb	0	; () banked
  4864  001298  AF93               	btfss	(___awmod@divisor+1)& (0+255),7,b
  4865  00129A  D7F7               	goto	l2316
  4866  00129C                     l2320:
  4867                           
  4868                           ; BSR set to: 0
  4869  00129C  0100               	movlb	0	; () banked
  4870  00129E  5192               	movf	___awmod@divisor& (0+255),w,b
  4871  0012A0  0100               	movlb	0	; () banked
  4872  0012A2  5D90               	subwf	___awmod@dividend& (0+255),w,b
  4873  0012A4  0100               	movlb	0	; () banked
  4874  0012A6  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  4875  0012A8  0100               	movlb	0	; () banked
  4876  0012AA  5991               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  4877  0012AC  A0D8               	btfss	status,0,c
  4878  0012AE  D008               	goto	l2324
  4879                           
  4880                           ; BSR set to: 0
  4881  0012B0  0100               	movlb	0	; () banked
  4882  0012B2  5192               	movf	___awmod@divisor& (0+255),w,b
  4883  0012B4  0100               	movlb	0	; () banked
  4884  0012B6  5F90               	subwf	___awmod@dividend& (0+255),f,b
  4885  0012B8  0100               	movlb	0	; () banked
  4886  0012BA  5193               	movf	(___awmod@divisor+1)& (0+255),w,b
  4887  0012BC  0100               	movlb	0	; () banked
  4888  0012BE  5B91               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  4889  0012C0                     l2324:
  4890                           
  4891                           ; BSR set to: 0
  4892  0012C0  0100               	movlb	0	; () banked
  4893  0012C2  90D8               	bcf	status,0,c
  4894  0012C4  3393               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  4895  0012C6  3392               	rrcf	___awmod@divisor& (0+255),f,b
  4896                           
  4897                           ; BSR set to: 0
  4898  0012C8  0100               	movlb	0	; () banked
  4899  0012CA  2F94               	decfsz	___awmod@counter& (0+255),f,b
  4900  0012CC  D7E7               	goto	l2320
  4901  0012CE                     l2328:
  4902                           
  4903                           ; BSR set to: 0
  4904  0012CE  0100               	movlb	0	; () banked
  4905  0012D0  5195               	movf	___awmod@sign& (0+255),w,b
  4906  0012D2  B4D8               	btfsc	status,2,c
  4907  0012D4  D006               	goto	l2332
  4908                           
  4909                           ; BSR set to: 0
  4910  0012D6  0100               	movlb	0	; () banked
  4911  0012D8  6D90               	negf	___awmod@dividend& (0+255),b
  4912  0012DA  0100               	movlb	0	; () banked
  4913  0012DC  1F91               	comf	(___awmod@dividend+1)& (0+255),f,b
  4914  0012DE  B0D8               	btfsc	status,0,c
  4915  0012E0  2B91               	incf	(___awmod@dividend+1)& (0+255),f,b
  4916  0012E2                     l2332:
  4917                           
  4918                           ; BSR set to: 0
  4919  0012E2  C090  F090         	movff	___awmod@dividend,?___awmod
  4920  0012E6  C091  F091         	movff	___awmod@dividend+1,?___awmod+1
  4921  0012EA  0012               	return	
  4922  0012EC                     __end_of___awmod:
  4923                           	opt stack 0
  4924                           tblptru	equ	0xFF8
  4925                           prodh	equ	0xFF4
  4926                           prodl	equ	0xFF3
  4927                           intcon	equ	0xFF2
  4928                           intcon2	equ	0xFF1
  4929                           postinc0	equ	0xFEE
  4930                           wreg	equ	0xFE8
  4931                           indf1	equ	0xFE7
  4932                           postdec1	equ	0xFE5
  4933                           fsr1h	equ	0xFE2
  4934                           fsr1l	equ	0xFE1
  4935                           indf2	equ	0xFDF
  4936                           postinc2	equ	0xFDE
  4937                           postdec2	equ	0xFDD
  4938                           fsr2h	equ	0xFDA
  4939                           fsr2l	equ	0xFD9
  4940                           status	equ	0xFD8
  4941                           
  4942 ;; *************** function _OpenTimer1 *****************
  4943 ;; Defined at:
  4944 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t1open.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;  config          1    wreg     unsigned char 
  4947 ;;  config1         1   48[BANK0 ] unsigned char 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  config          1   50[BANK0 ] unsigned char 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;		None               void
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4959 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4960 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4961 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4962 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4963 ;;Total ram usage:        3 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:   10
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_main
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text28
  4974  001C56                     __ptext28:
  4975                           	opt stack 0
  4976  001C56                     _OpenTimer1:
  4977                           	opt stack 20
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;incstack = 0
  4981                           ;OpenTimer1@config stored from wreg
  4982  001C56  0100               	movlb	0	; () banked
  4983  001C58  6F92               	movwf	OpenTimer1@config& (0+255),b
  4984                           
  4985                           ; BSR set to: 0
  4986  001C5A  0100               	movlb	0	; () banked
  4987  001C5C  5190               	movf	OpenTimer1@config1& (0+255),w,b
  4988  001C5E  0BF3               	andlw	243
  4989  001C60  6E9A               	movwf	3994,c	;volatile
  4990  001C62  C092  F091         	movff	OpenTimer1@config,??_OpenTimer1
  4991  001C66  0E7F               	movlw	127
  4992  001C68  0100               	movlb	0	; () banked
  4993  001C6A  1791               	andwf	??_OpenTimer1& (0+255),f,b
  4994  001C6C  0100               	movlb	0	; () banked
  4995  001C6E  90D8               	bcf	status,0,c
  4996  001C70  3591               	rlcf	??_OpenTimer1& (0+255),w,b
  4997  001C72  6ECD               	movwf	4045,c	;volatile
  4998                           
  4999                           ; BSR set to: 0
  5000  001C74  0E00               	movlw	0
  5001  001C76  6ECF               	movwf	4047,c	;volatile
  5002                           
  5003                           ; BSR set to: 0
  5004  001C78  0E00               	movlw	0
  5005  001C7A  6ECE               	movwf	4046,c	;volatile
  5006                           
  5007                           ; BSR set to: 0
  5008  001C7C  909E               	bcf	3998,0,c	;volatile
  5009                           
  5010                           ; BSR set to: 0
  5011  001C7E  0100               	movlb	0	; () banked
  5012  001C80  AF92               	btfss	OpenTimer1@config& (0+255),7,b
  5013  001C82  D002               	goto	l469
  5014                           
  5015                           ; BSR set to: 0
  5016  001C84  809D               	bsf	3997,0,c	;volatile
  5017  001C86  D001               	goto	l470
  5018  001C88                     l469:
  5019                           
  5020                           ; BSR set to: 0
  5021  001C88  909D               	bcf	3997,0,c	;volatile
  5022  001C8A                     l470:
  5023                           
  5024                           ; BSR set to: 0
  5025  001C8A  BE9A               	btfsc	3994,7,c	;volatile
  5026                           
  5027                           ; BSR set to: 0
  5028  001C8C  869A               	bsf	3994,3,c	;volatile
  5029                           
  5030                           ; BSR set to: 0
  5031  001C8E  80CD               	bsf	4045,0,c	;volatile
  5032                           
  5033                           ; BSR set to: 0
  5034  001C90  0012               	return	
  5035  001C92                     __end_of_OpenTimer1:
  5036                           	opt stack 0
  5037                           tblptru	equ	0xFF8
  5038                           prodh	equ	0xFF4
  5039                           prodl	equ	0xFF3
  5040                           intcon	equ	0xFF2
  5041                           intcon2	equ	0xFF1
  5042                           postinc0	equ	0xFEE
  5043                           wreg	equ	0xFE8
  5044                           indf1	equ	0xFE7
  5045                           postdec1	equ	0xFE5
  5046                           fsr1h	equ	0xFE2
  5047                           fsr1l	equ	0xFE1
  5048                           indf2	equ	0xFDF
  5049                           postinc2	equ	0xFDE
  5050                           postdec2	equ	0xFDD
  5051                           fsr2h	equ	0xFDA
  5052                           fsr2l	equ	0xFD9
  5053                           status	equ	0xFD8
  5054                           
  5055 ;; *************** function _OpenTimer0 *****************
  5056 ;; Defined at:
  5057 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0open.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  config          1    wreg     unsigned char 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  config          1   48[BANK0 ] unsigned char 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;		None               void
  5064 ;; Registers used:
  5065 ;;		wreg, status,2, status,0
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5072 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5074 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5075 ;;Total ram usage:        1 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:   10
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_main
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text29
  5086  001E96                     __ptext29:
  5087                           	opt stack 0
  5088  001E96                     _OpenTimer0:
  5089                           	opt stack 20
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;incstack = 0
  5093                           ;OpenTimer0@config stored from wreg
  5094  001E96  0100               	movlb	0	; () banked
  5095  001E98  6F90               	movwf	OpenTimer0@config& (0+255),b
  5096                           
  5097                           ; BSR set to: 0
  5098  001E9A  0100               	movlb	0	; () banked
  5099  001E9C  5190               	movf	OpenTimer0@config& (0+255),w,b
  5100  001E9E  0B7F               	andlw	127
  5101  001EA0  6ED5               	movwf	4053,c	;volatile
  5102                           
  5103                           ; BSR set to: 0
  5104  001EA2  0E00               	movlw	0
  5105  001EA4  6ED7               	movwf	4055,c	;volatile
  5106                           
  5107                           ; BSR set to: 0
  5108  001EA6  0E00               	movlw	0
  5109  001EA8  6ED6               	movwf	4054,c	;volatile
  5110                           
  5111                           ; BSR set to: 0
  5112  001EAA  94F2               	bcf	intcon,2,c	;volatile
  5113                           
  5114                           ; BSR set to: 0
  5115  001EAC  0100               	movlb	0	; () banked
  5116  001EAE  AF90               	btfss	OpenTimer0@config& (0+255),7,b
  5117  001EB0  D002               	goto	l441
  5118                           
  5119                           ; BSR set to: 0
  5120  001EB2  8AF2               	bsf	intcon,5,c	;volatile
  5121  001EB4  D001               	goto	l442
  5122  001EB6                     l441:
  5123                           
  5124                           ; BSR set to: 0
  5125  001EB6  9AF2               	bcf	intcon,5,c	;volatile
  5126  001EB8                     l442:
  5127                           
  5128                           ; BSR set to: 0
  5129  001EB8  8ED5               	bsf	4053,7,c	;volatile
  5130                           
  5131                           ; BSR set to: 0
  5132  001EBA  0012               	return	
  5133  001EBC                     __end_of_OpenTimer0:
  5134                           	opt stack 0
  5135                           tblptru	equ	0xFF8
  5136                           prodh	equ	0xFF4
  5137                           prodl	equ	0xFF3
  5138                           intcon	equ	0xFF2
  5139                           intcon2	equ	0xFF1
  5140                           postinc0	equ	0xFEE
  5141                           wreg	equ	0xFE8
  5142                           indf1	equ	0xFE7
  5143                           postdec1	equ	0xFE5
  5144                           fsr1h	equ	0xFE2
  5145                           fsr1l	equ	0xFE1
  5146                           indf2	equ	0xFDF
  5147                           postinc2	equ	0xFDE
  5148                           postdec2	equ	0xFDD
  5149                           fsr2h	equ	0xFDA
  5150                           fsr2l	equ	0xFD9
  5151                           status	equ	0xFD8
  5152                           
  5153 ;; *************** function _Open1USART *****************
  5154 ;; Defined at:
  5155 ;;		line 124 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\u1open.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  config          1    wreg     unsigned char 
  5158 ;;  spbrg           2   48[BANK0 ] unsigned int 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  config          1   53[BANK0 ] unsigned char 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;		None               void
  5163 ;; Registers used:
  5164 ;;		wreg, status,2
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5170 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5171 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5172 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5173 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5174 ;;Total ram usage:        6 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; Hardware stack levels required when called:   10
  5177 ;; This function calls:
  5178 ;;		Nothing
  5179 ;; This function is called by:
  5180 ;;		_main
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text30
  5185  00185E                     __ptext30:
  5186                           	opt stack 0
  5187  00185E                     _Open1USART:
  5188                           	opt stack 20
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;incstack = 0
  5192                           ;Open1USART@config stored from wreg
  5193  00185E  0100               	movlb	0	; () banked
  5194  001860  6F95               	movwf	Open1USART@config& (0+255),b
  5195                           
  5196                           ; BSR set to: 0
  5197  001862  0E00               	movlw	0
  5198  001864  6EAD               	movwf	4013,c	;volatile
  5199  001866  0E00               	movlw	0
  5200  001868  6EAC               	movwf	4012,c	;volatile
  5201                           
  5202                           ; BSR set to: 0
  5203  00186A  0100               	movlb	0	; () banked
  5204  00186C  B195               	btfsc	Open1USART@config& (0+255),0,b
  5205                           
  5206                           ; BSR set to: 0
  5207  00186E  88AD               	bsf	4013,4,c	;volatile
  5208                           
  5209                           ; BSR set to: 0
  5210                           
  5211                           ; BSR set to: 0
  5212  001870  0100               	movlb	0	; () banked
  5213  001872  A395               	btfss	Open1USART@config& (0+255),1,b
  5214  001874  D002               	goto	l3078
  5215                           
  5216                           ; BSR set to: 0
  5217  001876  8CAD               	bsf	4013,6,c	;volatile
  5218  001878  8CAC               	bsf	4012,6,c	;volatile
  5219  00187A                     l3078:
  5220                           
  5221                           ; BSR set to: 0
  5222  00187A  0100               	movlb	0	; () banked
  5223  00187C  B595               	btfsc	Open1USART@config& (0+255),2,b
  5224                           
  5225                           ; BSR set to: 0
  5226  00187E  8EAD               	bsf	4013,7,c	;volatile
  5227                           
  5228                           ; BSR set to: 0
  5229                           
  5230                           ; BSR set to: 0
  5231  001880  0100               	movlb	0	; () banked
  5232  001882  A795               	btfss	Open1USART@config& (0+255),3,b
  5233  001884  D002               	goto	l508
  5234                           
  5235                           ; BSR set to: 0
  5236  001886  88AC               	bsf	4012,4,c	;volatile
  5237  001888  D001               	goto	l3086
  5238  00188A                     l508:
  5239                           
  5240                           ; BSR set to: 0
  5241  00188A  8AAC               	bsf	4012,5,c	;volatile
  5242  00188C                     l3086:
  5243                           
  5244                           ; BSR set to: 0
  5245  00188C  0100               	movlb	0	; () banked
  5246  00188E  B995               	btfsc	Open1USART@config& (0+255),4,b
  5247                           
  5248                           ; BSR set to: 0
  5249  001890  84AD               	bsf	4013,2,c	;volatile
  5250                           
  5251                           ; BSR set to: 0
  5252                           
  5253                           ; BSR set to: 0
  5254  001892  0100               	movlb	0	; () banked
  5255  001894  BB95               	btfsc	Open1USART@config& (0+255),5,b
  5256                           
  5257                           ; BSR set to: 0
  5258  001896  86AC               	bsf	4012,3,c	;volatile
  5259                           
  5260                           ; BSR set to: 0
  5261                           
  5262                           ; BSR set to: 0
  5263  001898  0100               	movlb	0	; () banked
  5264  00189A  AD95               	btfss	Open1USART@config& (0+255),6,b
  5265  00189C  D002               	goto	l512
  5266                           
  5267                           ; BSR set to: 0
  5268  00189E  8A9D               	bsf	3997,5,c	;volatile
  5269  0018A0  D001               	goto	l3098
  5270  0018A2                     l512:
  5271                           
  5272                           ; BSR set to: 0
  5273  0018A2  9A9D               	bcf	3997,5,c	;volatile
  5274  0018A4                     l3098:
  5275                           
  5276                           ; BSR set to: 0
  5277  0018A4  0100               	movlb	0	; () banked
  5278  0018A6  AF95               	btfss	Open1USART@config& (0+255),7,b
  5279  0018A8  D002               	goto	l514
  5280                           
  5281                           ; BSR set to: 0
  5282  0018AA  889D               	bsf	3997,4,c	;volatile
  5283  0018AC  D001               	goto	l515
  5284  0018AE                     l514:
  5285                           
  5286                           ; BSR set to: 0
  5287  0018AE  989D               	bcf	3997,4,c	;volatile
  5288  0018B0                     l515:
  5289                           
  5290                           ; BSR set to: 0
  5291  0018B0  C090  FFB0         	movff	Open1USART@spbrg,4016	;volatile
  5292                           
  5293                           ; BSR set to: 0
  5294  0018B4  0100               	movlb	0	; () banked
  5295  0018B6  C091  F092         	movff	Open1USART@spbrg+1,??_Open1USART
  5296  0018BA  C092  F093         	movff	??_Open1USART,??_Open1USART+1
  5297  0018BE  0100               	movlb	0	; () banked
  5298  0018C0  6B94               	clrf	(??_Open1USART+2)& (0+255),b
  5299  0018C2  0100               	movlb	0	; () banked
  5300  0018C4  5193               	movf	(??_Open1USART+1)& (0+255),w,b
  5301  0018C6  6E7F               	movwf	3967,c	;volatile
  5302                           
  5303                           ; BSR set to: 0
  5304  0018C8  8AAD               	bsf	4013,5,c	;volatile
  5305                           
  5306                           ; BSR set to: 0
  5307  0018CA  8EAC               	bsf	4012,7,c	;volatile
  5308                           
  5309                           ; BSR set to: 0
  5310  0018CC  0012               	return	
  5311  0018CE                     __end_of_Open1USART:
  5312                           	opt stack 0
  5313                           tblptru	equ	0xFF8
  5314                           prodh	equ	0xFF4
  5315                           prodl	equ	0xFF3
  5316                           intcon	equ	0xFF2
  5317                           intcon2	equ	0xFF1
  5318                           postinc0	equ	0xFEE
  5319                           wreg	equ	0xFE8
  5320                           indf1	equ	0xFE7
  5321                           postdec1	equ	0xFE5
  5322                           fsr1h	equ	0xFE2
  5323                           fsr1l	equ	0xFE1
  5324                           indf2	equ	0xFDF
  5325                           postinc2	equ	0xFDE
  5326                           postdec2	equ	0xFDD
  5327                           fsr2h	equ	0xFDA
  5328                           fsr2l	equ	0xFD9
  5329                           status	equ	0xFD8
  5330                           
  5331 ;; *************** function _InterruptHandlerLow *****************
  5332 ;; Defined at:
  5333 ;;		line 117 in file "../src/interrupts.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;		None
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;		None
  5338 ;; Return value:  Size  Location     Type
  5339 ;;		None               void
  5340 ;; Registers used:
  5341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5350 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5351 ;;Total ram usage:       17 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    9
  5354 ;; This function calls:
  5355 ;;		_timer0_int_handler
  5356 ;;		_timer1_int_handler
  5357 ;;		_uart_recv_int_handler
  5358 ;;		_uart_trans_int_handler
  5359 ;; This function is called by:
  5360 ;;		Interrupt level 1
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	intcodelo
  5365  000018                     __pintcodelo:
  5366                           	opt stack 0
  5367  000018                     _InterruptHandlerLow:
  5368                           	opt stack 17
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;incstack = 0
  5372  000018  CFD8 F02A          	movff	status,??_InterruptHandlerLow
  5373  00001C  CFE8 F02B          	movff	wreg,??_InterruptHandlerLow+1
  5374  000020  CFE0 F02C          	movff	bsr,??_InterruptHandlerLow+2
  5375  000024  CFFA F02D          	movff	pclath,??_InterruptHandlerLow+3
  5376  000028  CFFB F02E          	movff	pclatu,??_InterruptHandlerLow+4
  5377  00002C  CFE9 F02F          	movff	fsr0l,??_InterruptHandlerLow+5
  5378  000030  CFEA F030          	movff	fsr0h,??_InterruptHandlerLow+6
  5379  000034  CFE1 F031          	movff	fsr1l,??_InterruptHandlerLow+7
  5380  000038  CFE2 F032          	movff	fsr1h,??_InterruptHandlerLow+8
  5381  00003C  CFD9 F033          	movff	fsr2l,??_InterruptHandlerLow+9
  5382  000040  CFDA F034          	movff	fsr2h,??_InterruptHandlerLow+10
  5383  000044  CFF3 F035          	movff	prodl,??_InterruptHandlerLow+11
  5384  000048  CFF4 F036          	movff	prodh,??_InterruptHandlerLow+12
  5385  00004C  CFF6 F037          	movff	tblptrl,??_InterruptHandlerLow+13
  5386  000050  CFF7 F038          	movff	tblptrh,??_InterruptHandlerLow+14
  5387  000054  CFF8 F039          	movff	tblptru,??_InterruptHandlerLow+15
  5388  000058  CFF5 F03A          	movff	tablat,??_InterruptHandlerLow+16
  5389                           
  5390                           ;interrupts.c: 119: if (INTCONbits.TMR0IF) {
  5391  00005C  A4F2               	btfss	intcon,2,c	;volatile
  5392  00005E  D003               	goto	i1l3238
  5393                           
  5394                           ;interrupts.c: 120: INTCONbits.TMR0IF = 0;
  5395  000060  94F2               	bcf	intcon,2,c	;volatile
  5396                           
  5397                           ;interrupts.c: 122: timer0_int_handler();
  5398  000062  EC39  F005         	call	_timer0_int_handler	;wreg free
  5399  000066                     i1l3238:
  5400                           
  5401                           ;interrupts.c: 123: }
  5402                           ;interrupts.c: 126: if (PIR1bits.TMR1IF) {
  5403  000066  A09E               	btfss	3998,0,c	;volatile
  5404  000068  D003               	goto	i1l3244
  5405                           
  5406                           ;interrupts.c: 127: PIR1bits.TMR1IF = 0;
  5407  00006A  909E               	bcf	3998,0,c	;volatile
  5408                           
  5409                           ;interrupts.c: 128: timer1_int_handler();
  5410  00006C  ECF6  F00E         	call	_timer1_int_handler	;wreg free
  5411  000070                     i1l3244:
  5412                           
  5413                           ;interrupts.c: 129: }
  5414                           ;interrupts.c: 132: if (PIR1bits.RCIF) {
  5415  000070  AA9E               	btfss	3998,5,c	;volatile
  5416  000072  D003               	goto	i1l3250
  5417                           
  5418                           ;interrupts.c: 133: PIR1bits.RCIF = 0;
  5419  000074  9A9E               	bcf	3998,5,c	;volatile
  5420                           
  5421                           ;interrupts.c: 134: uart_recv_int_handler();
  5422  000076  ECA1  F008         	call	_uart_recv_int_handler	;wreg free
  5423  00007A                     i1l3250:
  5424                           
  5425                           ;interrupts.c: 135: }
  5426                           ;interrupts.c: 138: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  5427  00007A  B89E               	btfsc	3998,4,c	;volatile
  5428  00007C  A89D               	btfss	3997,4,c	;volatile
  5429  00007E  D002               	goto	i1l52
  5430                           
  5431                           ;interrupts.c: 139: uart_trans_int_handler();
  5432  000080  EC38  F00A         	call	_uart_trans_int_handler	;wreg free
  5433  000084                     i1l52:
  5434  000084  C03A  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5435  000088  C039  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5436  00008C  C038  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5437  000090  C037  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5438  000094  C036  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5439  000098  C035  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5440  00009C  C034  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5441  0000A0  C033  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5442  0000A4  C032  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5443  0000A8  C031  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5444  0000AC  C030  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5445  0000B0  C02F  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5446  0000B4  C02E  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5447  0000B8  C02D  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5448  0000BC  C02C  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5449  0000C0  C02B  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5450  0000C4  C02A  FFD8         	movff	??_InterruptHandlerLow,status
  5451  0000C8  0010               	retfie	
  5452  0000CA                     __end_of_InterruptHandlerLow:
  5453                           	opt stack 0
  5454                           pclatu	equ	0xFFB
  5455                           pclath	equ	0xFFA
  5456                           tblptru	equ	0xFF8
  5457                           tblptrh	equ	0xFF7
  5458                           tblptrl	equ	0xFF6
  5459                           tablat	equ	0xFF5
  5460                           prodh	equ	0xFF4
  5461                           prodl	equ	0xFF3
  5462                           intcon	equ	0xFF2
  5463                           intcon2	equ	0xFF1
  5464                           postinc0	equ	0xFEE
  5465                           fsr0h	equ	0xFEA
  5466                           fsr0l	equ	0xFE9
  5467                           wreg	equ	0xFE8
  5468                           indf1	equ	0xFE7
  5469                           postdec1	equ	0xFE5
  5470                           fsr1h	equ	0xFE2
  5471                           fsr1l	equ	0xFE1
  5472                           bsr	equ	0xFE0
  5473                           indf2	equ	0xFDF
  5474                           postinc2	equ	0xFDE
  5475                           postdec2	equ	0xFDD
  5476                           fsr2h	equ	0xFDA
  5477                           fsr2l	equ	0xFD9
  5478                           status	equ	0xFD8
  5479                           
  5480 ;; *************** function _uart_trans_int_handler *****************
  5481 ;; Defined at:
  5482 ;;		line 56 in file "../src/my_uart.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;		None
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;		None               void
  5489 ;; Registers used:
  5490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5500 ;;Total ram usage:        2 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    8
  5503 ;; This function calls:
  5504 ;;		_FromMainLow_recvmsg
  5505 ;; This function is called by:
  5506 ;;		_InterruptHandlerLow
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text32
  5511  001470                     __ptext32:
  5512                           	opt stack 0
  5513  001470                     _uart_trans_int_handler:
  5514                           	opt stack 17
  5515                           
  5516                           ;my_uart.c: 57: { LATAbits.LATA2 = 1;};
  5517                           
  5518                           ;incstack = 0
  5519  001470  8489               	bsf	3977,2,c	;volatile
  5520                           
  5521                           ;my_uart.c: 59: if (uc_ptr->outbuflen == 3) {
  5522  001472  EE20 F03E          	lfsr	2,62
  5523  001476  503B               	movf	_uc_ptr,w,c
  5524  001478  26D9               	addwf	fsr2l,f,c
  5525  00147A  503C               	movf	_uc_ptr+1,w,c
  5526  00147C  22DA               	addwfc	fsr2h,f,c
  5527  00147E  0E03               	movlw	3
  5528  001480  62DF               	cpfseq	indf2,c
  5529  001482  D001               	goto	i1l2968
  5530  001484  D013               	goto	L1
  5531  001486                     i1l2968:
  5532                           
  5533                           ;my_uart.c: 70: FromMainLow_recvmsg(uc_ptr->outbuflen, (void *) 41, (void *) uc_ptr->out
      +                          buffer);
  5534  001486  0E00               	movlw	0
  5535  001488  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5536  00148A  0E29               	movlw	41
  5537  00148C  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5538  00148E  0E20               	movlw	32
  5539  001490  243B               	addwf	_uc_ptr,w,c
  5540  001492  6E1B               	movwf	FromMainLow_recvmsg@data,c
  5541  001494  0E00               	movlw	0
  5542  001496  203C               	addwfc	_uc_ptr+1,w,c
  5543  001498  6E1C               	movwf	FromMainLow_recvmsg@data+1,c
  5544  00149A  EE20 F03E          	lfsr	2,62
  5545  00149E  503B               	movf	_uc_ptr,w,c
  5546  0014A0  26D9               	addwf	fsr2l,f,c
  5547  0014A2  503C               	movf	_uc_ptr+1,w,c
  5548  0014A4  22DA               	addwfc	fsr2h,f,c
  5549  0014A6  50DF               	movf	indf2,w,c
  5550  0014A8  EC70  F00F         	call	_FromMainLow_recvmsg
  5551  0014AC                     L1:
  5552                           
  5553                           ;my_uart.c: 71: if (TXSTA1bits.TRMT == 1) {
  5554  0014AC  A2AD               	btfss	4013,1,c	;volatile
  5555  0014AE  D038               	goto	i1l2980
  5556                           
  5557                           ;my_uart.c: 72: if (uc_ptr->outbufind < uc_ptr->outbuflen) {
  5558  0014B0  EE20 F03F          	lfsr	2,63
  5559  0014B4  503B               	movf	_uc_ptr,w,c
  5560  0014B6  26D9               	addwf	fsr2l,f,c
  5561  0014B8  503C               	movf	_uc_ptr+1,w,c
  5562  0014BA  22DA               	addwfc	fsr2h,f,c
  5563  0014BC  50DF               	movf	indf2,w,c
  5564  0014BE  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5565  0014C0  EE20 F03E          	lfsr	2,62
  5566  0014C4  503B               	movf	_uc_ptr,w,c
  5567  0014C6  26D9               	addwf	fsr2l,f,c
  5568  0014C8  503C               	movf	_uc_ptr+1,w,c
  5569  0014CA  22DA               	addwfc	fsr2h,f,c
  5570  0014CC  50DF               	movf	indf2,w,c
  5571  0014CE  5C1E               	subwf	??_uart_trans_int_handler,w,c
  5572  0014D0  B0D8               	btfsc	status,0,c
  5573  0014D2  D01D               	goto	i1l2976
  5574                           
  5575                           ;my_uart.c: 73: uc_ptr->outbufind++;
  5576  0014D4  EE20 F03F          	lfsr	2,63
  5577  0014D8  503B               	movf	_uc_ptr,w,c
  5578  0014DA  26D9               	addwf	fsr2l,f,c
  5579  0014DC  503C               	movf	_uc_ptr+1,w,c
  5580  0014DE  22DA               	addwfc	fsr2h,f,c
  5581  0014E0  2ADF               	incf	indf2,f,c
  5582                           
  5583                           ;my_uart.c: 74: TXREG1 = uc_ptr->outbuffer[uc_ptr->outbufind - 1];
  5584  0014E2  EE20 F03F          	lfsr	2,63
  5585  0014E6  503B               	movf	_uc_ptr,w,c
  5586  0014E8  26D9               	addwf	fsr2l,f,c
  5587  0014EA  503C               	movf	_uc_ptr+1,w,c
  5588  0014EC  22DA               	addwfc	fsr2h,f,c
  5589  0014EE  50DF               	movf	indf2,w,c
  5590  0014F0  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5591  0014F2  6A1F               	clrf	(??_uart_trans_int_handler+1)& (0+255),c
  5592  0014F4  0E1F               	movlw	31
  5593  0014F6  261E               	addwf	??_uart_trans_int_handler,f,c
  5594  0014F8  0E00               	movlw	0
  5595  0014FA  221F               	addwfc	??_uart_trans_int_handler+1,f,c
  5596  0014FC  501E               	movf	??_uart_trans_int_handler,w,c
  5597  0014FE  243B               	addwf	_uc_ptr,w,c
  5598  001500  6ED9               	movwf	fsr2l,c
  5599  001502  501F               	movf	??_uart_trans_int_handler+1,w,c
  5600  001504  203C               	addwfc	_uc_ptr+1,w,c
  5601  001506  6EDA               	movwf	fsr2h,c
  5602  001508  50DF               	movf	indf2,w,c
  5603  00150A  6EAE               	movwf	4014,c	;volatile
  5604                           
  5605                           ;my_uart.c: 75: } else {
  5606  00150C  D009               	goto	i1l2980
  5607  00150E                     i1l2976:
  5608                           
  5609                           ;my_uart.c: 76: uc_ptr->outbuflen = 0;
  5610  00150E  EE20 F03E          	lfsr	2,62
  5611  001512  503B               	movf	_uc_ptr,w,c
  5612  001514  26D9               	addwf	fsr2l,f,c
  5613  001516  503C               	movf	_uc_ptr+1,w,c
  5614  001518  22DA               	addwfc	fsr2h,f,c
  5615  00151A  0E00               	movlw	0
  5616  00151C  6EDF               	movwf	indf2,c
  5617                           
  5618                           ;my_uart.c: 77: PIE1bits.TX1IE = 0;
  5619  00151E  989D               	bcf	3997,4,c	;volatile
  5620  001520                     i1l2980:
  5621                           
  5622                           ;my_uart.c: 78: }
  5623                           ;my_uart.c: 79: }
  5624                           ;my_uart.c: 80: }
  5625                           ;my_uart.c: 81: { LATAbits.LATA2 = 0;};
  5626  001520  9489               	bcf	3977,2,c	;volatile
  5627  001522  0012               	return	
  5628  001524                     __end_of_uart_trans_int_handler:
  5629                           	opt stack 0
  5630                           pclatu	equ	0xFFB
  5631                           pclath	equ	0xFFA
  5632                           tblptru	equ	0xFF8
  5633                           tblptrh	equ	0xFF7
  5634                           tblptrl	equ	0xFF6
  5635                           tablat	equ	0xFF5
  5636                           prodh	equ	0xFF4
  5637                           prodl	equ	0xFF3
  5638                           intcon	equ	0xFF2
  5639                           intcon2	equ	0xFF1
  5640                           postinc0	equ	0xFEE
  5641                           fsr0h	equ	0xFEA
  5642                           fsr0l	equ	0xFE9
  5643                           wreg	equ	0xFE8
  5644                           indf1	equ	0xFE7
  5645                           postdec1	equ	0xFE5
  5646                           fsr1h	equ	0xFE2
  5647                           fsr1l	equ	0xFE1
  5648                           bsr	equ	0xFE0
  5649                           indf2	equ	0xFDF
  5650                           postinc2	equ	0xFDE
  5651                           postdec2	equ	0xFDD
  5652                           fsr2h	equ	0xFDA
  5653                           fsr2l	equ	0xFD9
  5654                           status	equ	0xFD8
  5655                           
  5656 ;; *************** function _FromMainLow_recvmsg *****************
  5657 ;; Defined at:
  5658 ;;		line 207 in file "../src/messages.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  maxlength       1    wreg     unsigned char 
  5661 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5662 ;;		 -> RAM(3775), 
  5663 ;;  data            2   26[COMRAM] PTR void 
  5664 ;;		 -> NULL(0), main@uc(66), 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  maxlength       1   28[COMRAM] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      char 
  5669 ;; Registers used:
  5670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;Total ram usage:        5 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:    7
  5683 ;; This function calls:
  5684 ;;		i1_recv_msg
  5685 ;; This function is called by:
  5686 ;;		_uart_trans_int_handler
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           	psect	text33
  5691  001EE0                     __ptext33:
  5692                           	opt stack 0
  5693  001EE0                     _FromMainLow_recvmsg:
  5694                           	opt stack 17
  5695                           
  5696                           ;incstack = 0
  5697                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5698  001EE0  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5699                           
  5700                           ;messages.c: 213: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5701                           ;	Return value of _FromMainLow_recvmsg is never used
  5702  001EE2  0E03               	movlw	high _FromMainLow_MQ
  5703  001EE4  6E0C               	movwf	i1recv_msg@qptr+1,c
  5704  001EE6  0E09               	movlw	low _FromMainLow_MQ
  5705  001EE8  6E0B               	movwf	i1recv_msg@qptr,c
  5706  001EEA  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5707  001EEE  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5708  001EF2  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5709  001EF6  C01C  F011         	movff	FromMainLow_recvmsg@data+1,i1recv_msg@data+1
  5710  001EFA  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5711  001EFE  EC2D  F008         	call	i1_recv_msg	;wreg free
  5712  001F02  0012               	return	
  5713  001F04                     __end_of_FromMainLow_recvmsg:
  5714                           	opt stack 0
  5715                           pclatu	equ	0xFFB
  5716                           pclath	equ	0xFFA
  5717                           tblptru	equ	0xFF8
  5718                           tblptrh	equ	0xFF7
  5719                           tblptrl	equ	0xFF6
  5720                           tablat	equ	0xFF5
  5721                           prodh	equ	0xFF4
  5722                           prodl	equ	0xFF3
  5723                           intcon	equ	0xFF2
  5724                           intcon2	equ	0xFF1
  5725                           postinc0	equ	0xFEE
  5726                           fsr0h	equ	0xFEA
  5727                           fsr0l	equ	0xFE9
  5728                           wreg	equ	0xFE8
  5729                           indf1	equ	0xFE7
  5730                           postdec1	equ	0xFE5
  5731                           fsr1h	equ	0xFE2
  5732                           fsr1l	equ	0xFE1
  5733                           bsr	equ	0xFE0
  5734                           indf2	equ	0xFDF
  5735                           postinc2	equ	0xFDE
  5736                           postdec2	equ	0xFDD
  5737                           fsr2h	equ	0xFDA
  5738                           fsr2l	equ	0xFD9
  5739                           status	equ	0xFD8
  5740                           
  5741 ;; *************** function _uart_recv_int_handler *****************
  5742 ;; Defined at:
  5743 ;;		line 12 in file "../src/my_uart.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;		None
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  error_msg       1    0        unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;		None               void
  5750 ;; Registers used:
  5751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5759 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5760 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;Total ram usage:        4 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    8
  5764 ;; This function calls:
  5765 ;;		_Read1USART
  5766 ;;		_ToMainLow_sendmsg
  5767 ;; This function is called by:
  5768 ;;		_InterruptHandlerLow
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           	psect	text34
  5773  001142                     __ptext34:
  5774                           	opt stack 0
  5775  001142                     _uart_recv_int_handler:
  5776                           	opt stack 17
  5777                           
  5778                           ;my_uart.c: 13: unsigned char error_msg;
  5779                           ;my_uart.c: 14: if ((PIR1bits.RC1IF)) {
  5780                           
  5781                           ;incstack = 0
  5782  001142  AA9E               	btfss	3998,5,c	;volatile
  5783  001144  D063               	goto	i1l2948
  5784                           
  5785                           ;my_uart.c: 15: uc_ptr->buffer[uc_ptr->buflen] = Read1USART();
  5786  001146  EE20 F01E          	lfsr	2,30
  5787  00114A  503B               	movf	_uc_ptr,w,c
  5788  00114C  26D9               	addwf	fsr2l,f,c
  5789  00114E  503C               	movf	_uc_ptr+1,w,c
  5790  001150  22DA               	addwfc	fsr2h,f,c
  5791  001152  50DF               	movf	indf2,w,c
  5792  001154  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5793  001156  501B               	movf	??_uart_recv_int_handler,w,c
  5794  001158  0D01               	mullw	1
  5795  00115A  50F3               	movf	prodl,w,c
  5796  00115C  243B               	addwf	_uc_ptr,w,c
  5797  00115E  6ED9               	movwf	fsr2l,c
  5798  001160  50F4               	movf	prodh,w,c
  5799  001162  203C               	addwfc	_uc_ptr+1,w,c
  5800  001164  6EDA               	movwf	fsr2h,c
  5801  001166  ECB4  F00F         	call	_Read1USART	;wreg free
  5802  00116A  6EDF               	movwf	indf2,c
  5803                           
  5804                           ;my_uart.c: 17: uc_ptr->buflen++;
  5805  00116C  EE20 F01E          	lfsr	2,30
  5806  001170  503B               	movf	_uc_ptr,w,c
  5807  001172  26D9               	addwf	fsr2l,f,c
  5808  001174  503C               	movf	_uc_ptr+1,w,c
  5809  001176  22DA               	addwfc	fsr2h,f,c
  5810  001178  2ADF               	incf	indf2,f,c
  5811                           
  5812                           ;my_uart.c: 19: if (uc_ptr->buflen == 6 && uc_ptr->buffer[uc_ptr->buflen-1] == 0xFF) {
  5813  00117A  EE20 F01E          	lfsr	2,30
  5814  00117E  503B               	movf	_uc_ptr,w,c
  5815  001180  26D9               	addwf	fsr2l,f,c
  5816  001182  503C               	movf	_uc_ptr+1,w,c
  5817  001184  22DA               	addwfc	fsr2h,f,c
  5818  001186  0E06               	movlw	6
  5819  001188  62DF               	cpfseq	indf2,c
  5820  00118A  D031               	goto	i1l2946
  5821  00118C  0EFF               	movlw	255
  5822  00118E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5823  001190  0EFF               	movlw	255
  5824  001192  6E1C               	movwf	(??_uart_recv_int_handler+1)& (0+255),c
  5825  001194  EE20 F01E          	lfsr	2,30
  5826  001198  503B               	movf	_uc_ptr,w,c
  5827  00119A  26D9               	addwf	fsr2l,f,c
  5828  00119C  503C               	movf	_uc_ptr+1,w,c
  5829  00119E  22DA               	addwfc	fsr2h,f,c
  5830  0011A0  50DF               	movf	indf2,w,c
  5831  0011A2  6E1D               	movwf	(??_uart_recv_int_handler+2)& (0+255),c
  5832  0011A4  6A1E               	clrf	(??_uart_recv_int_handler+3)& (0+255),c
  5833  0011A6  501B               	movf	??_uart_recv_int_handler,w,c
  5834  0011A8  261D               	addwf	??_uart_recv_int_handler+2,f,c
  5835  0011AA  501C               	movf	??_uart_recv_int_handler+1,w,c
  5836  0011AC  221E               	addwfc	??_uart_recv_int_handler+3,f,c
  5837  0011AE  501D               	movf	??_uart_recv_int_handler+2,w,c
  5838  0011B0  243B               	addwf	_uc_ptr,w,c
  5839  0011B2  6ED9               	movwf	fsr2l,c
  5840  0011B4  501E               	movf	??_uart_recv_int_handler+3,w,c
  5841  0011B6  203C               	addwfc	_uc_ptr+1,w,c
  5842  0011B8  6EDA               	movwf	fsr2h,c
  5843  0011BA  0EFF               	movlw	255
  5844  0011BC  62DF               	cpfseq	indf2,c
  5845  0011BE  D017               	goto	i1l2946
  5846                           
  5847                           ;my_uart.c: 22: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5848  0011C0  0E1F               	movlw	31
  5849  0011C2  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5850  0011C4  C03C  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5851  0011C8  C03B  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5852  0011CC  EE20 F01E          	lfsr	2,30
  5853  0011D0  503B               	movf	_uc_ptr,w,c
  5854  0011D2  26D9               	addwf	fsr2l,f,c
  5855  0011D4  503C               	movf	_uc_ptr+1,w,c
  5856  0011D6  22DA               	addwfc	fsr2h,f,c
  5857  0011D8  50DF               	movf	indf2,w,c
  5858  0011DA  EC94  F00F         	call	_ToMainLow_sendmsg
  5859                           
  5860                           ;my_uart.c: 23: uc_ptr->buflen = 0;
  5861  0011DE  EE20 F01E          	lfsr	2,30
  5862  0011E2  503B               	movf	_uc_ptr,w,c
  5863  0011E4  26D9               	addwf	fsr2l,f,c
  5864  0011E6  503C               	movf	_uc_ptr+1,w,c
  5865  0011E8  22DA               	addwfc	fsr2h,f,c
  5866  0011EA  0E00               	movlw	0
  5867  0011EC  6EDF               	movwf	indf2,c
  5868  0011EE                     i1l2946:
  5869                           
  5870                           ;my_uart.c: 42: }
  5871                           ;my_uart.c: 43: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5872  0011EE  0E1F               	movlw	31
  5873  0011F0  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5874  0011F2  C03C  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5875  0011F6  C03B  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5876  0011FA  EE20 F01E          	lfsr	2,30
  5877  0011FE  503B               	movf	_uc_ptr,w,c
  5878  001200  26D9               	addwf	fsr2l,f,c
  5879  001202  503C               	movf	_uc_ptr+1,w,c
  5880  001204  22DA               	addwfc	fsr2h,f,c
  5881  001206  50DF               	movf	indf2,w,c
  5882  001208  EC94  F00F         	call	_ToMainLow_sendmsg
  5883  00120C                     i1l2948:
  5884                           
  5885                           ;my_uart.c: 45: }
  5886                           ;my_uart.c: 47: if (USART1_Status.OVERRUN_ERROR == 1) {
  5887  00120C  A63D               	btfss	_USART1_Status,3,c
  5888  00120E  0012               	return	
  5889                           
  5890                           ;my_uart.c: 50: RCSTAbits.CREN = 0;
  5891  001210  98AC               	bcf	4012,4,c	;volatile
  5892                           
  5893                           ;my_uart.c: 51: RCSTAbits.CREN = 1;
  5894  001212  88AC               	bsf	4012,4,c	;volatile
  5895                           
  5896                           ;my_uart.c: 52: ToMainLow_sendmsg(0, 30, (void *) 0);
  5897  001214  0E1E               	movlw	30
  5898  001216  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5899  001218  0E00               	movlw	0
  5900  00121A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5901  00121C  0E00               	movlw	0
  5902  00121E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5903  001220  0E00               	movlw	0
  5904  001222  EC94  F00F         	call	_ToMainLow_sendmsg
  5905  001226  0012               	return	
  5906  001228                     __end_of_uart_recv_int_handler:
  5907                           	opt stack 0
  5908                           pclatu	equ	0xFFB
  5909                           pclath	equ	0xFFA
  5910                           tblptru	equ	0xFF8
  5911                           tblptrh	equ	0xFF7
  5912                           tblptrl	equ	0xFF6
  5913                           tablat	equ	0xFF5
  5914                           prodh	equ	0xFF4
  5915                           prodl	equ	0xFF3
  5916                           intcon	equ	0xFF2
  5917                           intcon2	equ	0xFF1
  5918                           postinc0	equ	0xFEE
  5919                           fsr0h	equ	0xFEA
  5920                           fsr0l	equ	0xFE9
  5921                           wreg	equ	0xFE8
  5922                           indf1	equ	0xFE7
  5923                           postdec1	equ	0xFE5
  5924                           fsr1h	equ	0xFE2
  5925                           fsr1l	equ	0xFE1
  5926                           bsr	equ	0xFE0
  5927                           indf2	equ	0xFDF
  5928                           postinc2	equ	0xFDE
  5929                           postdec2	equ	0xFDD
  5930                           fsr2h	equ	0xFDA
  5931                           fsr2l	equ	0xFD9
  5932                           status	equ	0xFD8
  5933                           
  5934 ;; *************** function _Read1USART *****************
  5935 ;; Defined at:
  5936 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\u1read.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;		None
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  data            1    0[COMRAM] unsigned char 
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      unsigned char 
  5943 ;; Registers used:
  5944 ;;		wreg, status,2, status,0
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5954 ;;Total ram usage:        1 bytes
  5955 ;; Hardware stack levels used:    1
  5956 ;; Hardware stack levels required when called:    5
  5957 ;; This function calls:
  5958 ;;		Nothing
  5959 ;; This function is called by:
  5960 ;;		_uart_recv_int_handler
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text35
  5965  001F68                     __ptext35:
  5966                           	opt stack 0
  5967  001F68                     _Read1USART:
  5968                           	opt stack 19
  5969                           
  5970                           ;incstack = 0
  5971  001F68  0EF2               	movlw	242
  5972  001F6A  163D               	andwf	_USART1_Status,f,c
  5973  001F6C  ACAC               	btfss	4012,6,c	;volatile
  5974  001F6E  D003               	goto	i1l525
  5975  001F70  903D               	bcf	_USART1_Status,0,c
  5976  001F72  B0AC               	btfsc	4012,0,c	;volatile
  5977  001F74  803D               	bsf	_USART1_Status,0,c
  5978  001F76                     i1l525:
  5979  001F76  B4AC               	btfsc	4012,2,c	;volatile
  5980  001F78  843D               	bsf	_USART1_Status,2,c
  5981  001F7A  B2AC               	btfsc	4012,1,c	;volatile
  5982  001F7C  863D               	bsf	_USART1_Status,3,c
  5983  001F7E  CFAF F001          	movff	4015,Read1USART@data	;volatile
  5984  001F82  5001               	movf	Read1USART@data,w,c
  5985  001F84  0012               	return	
  5986  001F86                     __end_of_Read1USART:
  5987                           	opt stack 0
  5988                           pclatu	equ	0xFFB
  5989                           pclath	equ	0xFFA
  5990                           tblptru	equ	0xFF8
  5991                           tblptrh	equ	0xFF7
  5992                           tblptrl	equ	0xFF6
  5993                           tablat	equ	0xFF5
  5994                           prodh	equ	0xFF4
  5995                           prodl	equ	0xFF3
  5996                           intcon	equ	0xFF2
  5997                           intcon2	equ	0xFF1
  5998                           postinc0	equ	0xFEE
  5999                           fsr0h	equ	0xFEA
  6000                           fsr0l	equ	0xFE9
  6001                           wreg	equ	0xFE8
  6002                           indf1	equ	0xFE7
  6003                           postdec1	equ	0xFE5
  6004                           fsr1h	equ	0xFE2
  6005                           fsr1l	equ	0xFE1
  6006                           bsr	equ	0xFE0
  6007                           indf2	equ	0xFDF
  6008                           postinc2	equ	0xFDE
  6009                           postdec2	equ	0xFDD
  6010                           fsr2h	equ	0xFDA
  6011                           fsr2l	equ	0xFD9
  6012                           status	equ	0xFD8
  6013                           
  6014 ;; *************** function _timer1_int_handler *****************
  6015 ;; Defined at:
  6016 ;;		line 63 in file "../src/user_interrupts.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;		None
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;  result          2   26[COMRAM] unsigned int 
  6021 ;; Return value:  Size  Location     Type
  6022 ;;		None               void
  6023 ;; Registers used:
  6024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6031 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6034 ;;Total ram usage:        2 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; Hardware stack levels required when called:    8
  6037 ;; This function calls:
  6038 ;;		_ReadTimer1
  6039 ;;		_ToMainLow_sendmsg
  6040 ;;		_WriteTimer1
  6041 ;; This function is called by:
  6042 ;;		_InterruptHandlerLow
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text36
  6047  001DEC                     __ptext36:
  6048                           	opt stack 0
  6049  001DEC                     _timer1_int_handler:
  6050                           	opt stack 17
  6051                           
  6052                           ;user_interrupts.c: 64: unsigned int result;
  6053                           ;user_interrupts.c: 74: result = ReadTimer1();
  6054                           
  6055                           ;incstack = 0
  6056  001DEC  ECDF  F00F         	call	_ReadTimer1	;wreg free
  6057  001DF0  C001  F01B         	movff	?_ReadTimer1,timer1_int_handler@result
  6058  001DF4  C002  F01C         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  6059                           
  6060                           ;user_interrupts.c: 75: ToMainLow_sendmsg(0, 11, (void *) 0);
  6061  001DF8  0E0B               	movlw	11
  6062  001DFA  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6063  001DFC  0E00               	movlw	0
  6064  001DFE  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6065  001E00  0E00               	movlw	0
  6066  001E02  6E18               	movwf	ToMainLow_sendmsg@data,c
  6067  001E04  0E00               	movlw	0
  6068  001E06  EC94  F00F         	call	_ToMainLow_sendmsg
  6069                           
  6070                           ;user_interrupts.c: 109: WriteTimer1(0);
  6071  001E0A  0E00               	movlw	0
  6072  001E0C  6E02               	movwf	WriteTimer1@timer1+1,c
  6073  001E0E  0E00               	movlw	0
  6074  001E10  6E01               	movwf	WriteTimer1@timer1,c
  6075  001E12  ECD6  F00F         	call	_WriteTimer1	;wreg free
  6076  001E16  0012               	return	
  6077  001E18                     __end_of_timer1_int_handler:
  6078                           	opt stack 0
  6079                           pclatu	equ	0xFFB
  6080                           pclath	equ	0xFFA
  6081                           tblptru	equ	0xFF8
  6082                           tblptrh	equ	0xFF7
  6083                           tblptrl	equ	0xFF6
  6084                           tablat	equ	0xFF5
  6085                           prodh	equ	0xFF4
  6086                           prodl	equ	0xFF3
  6087                           intcon	equ	0xFF2
  6088                           intcon2	equ	0xFF1
  6089                           postinc0	equ	0xFEE
  6090                           fsr0h	equ	0xFEA
  6091                           fsr0l	equ	0xFE9
  6092                           wreg	equ	0xFE8
  6093                           indf1	equ	0xFE7
  6094                           postdec1	equ	0xFE5
  6095                           fsr1h	equ	0xFE2
  6096                           fsr1l	equ	0xFE1
  6097                           bsr	equ	0xFE0
  6098                           indf2	equ	0xFDF
  6099                           postinc2	equ	0xFDE
  6100                           postdec2	equ	0xFDD
  6101                           fsr2h	equ	0xFDA
  6102                           fsr2l	equ	0xFD9
  6103                           status	equ	0xFD8
  6104                           
  6105 ;; *************** function _WriteTimer1 *****************
  6106 ;; Defined at:
  6107 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t1write.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;  timer1          2    0[COMRAM] unsigned int 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  timer           2    2[COMRAM] struct Timers
  6112 ;; Return value:  Size  Location     Type
  6113 ;;		None               void
  6114 ;; Registers used:
  6115 ;;		None
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6122 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6124 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6125 ;;Total ram usage:        4 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    5
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_timer1_int_handler
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text37
  6136  001FAC                     __ptext37:
  6137                           	opt stack 0
  6138  001FAC                     _WriteTimer1:
  6139                           	opt stack 19
  6140                           
  6141                           ;incstack = 0
  6142  001FAC  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6143  001FB0  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6144  001FB4  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6145  001FB8  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6146  001FBC  0012               	return	
  6147  001FBE                     __end_of_WriteTimer1:
  6148                           	opt stack 0
  6149                           pclatu	equ	0xFFB
  6150                           pclath	equ	0xFFA
  6151                           tblptru	equ	0xFF8
  6152                           tblptrh	equ	0xFF7
  6153                           tblptrl	equ	0xFF6
  6154                           tablat	equ	0xFF5
  6155                           prodh	equ	0xFF4
  6156                           prodl	equ	0xFF3
  6157                           intcon	equ	0xFF2
  6158                           intcon2	equ	0xFF1
  6159                           postinc0	equ	0xFEE
  6160                           fsr0h	equ	0xFEA
  6161                           fsr0l	equ	0xFE9
  6162                           wreg	equ	0xFE8
  6163                           indf1	equ	0xFE7
  6164                           postdec1	equ	0xFE5
  6165                           fsr1h	equ	0xFE2
  6166                           fsr1l	equ	0xFE1
  6167                           bsr	equ	0xFE0
  6168                           indf2	equ	0xFDF
  6169                           postinc2	equ	0xFDE
  6170                           postdec2	equ	0xFDD
  6171                           fsr2h	equ	0xFDA
  6172                           fsr2l	equ	0xFD9
  6173                           status	equ	0xFD8
  6174                           
  6175 ;; *************** function _ReadTimer1 *****************
  6176 ;; Defined at:
  6177 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t1read.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;		None
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;  timer           2    2[COMRAM] struct Timers
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  2    0[COMRAM] unsigned int 
  6184 ;; Registers used:
  6185 ;;		None
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6194 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6195 ;;Total ram usage:        4 bytes
  6196 ;; Hardware stack levels used:    1
  6197 ;; Hardware stack levels required when called:    5
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_timer1_int_handler
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text38
  6206  001FBE                     __ptext38:
  6207                           	opt stack 0
  6208  001FBE                     _ReadTimer1:
  6209                           	opt stack 19
  6210                           
  6211                           ;incstack = 0
  6212  001FBE  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6213  001FC2  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6214  001FC6  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6215  001FCA  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6216  001FCE  0012               	return	
  6217  001FD0                     __end_of_ReadTimer1:
  6218                           	opt stack 0
  6219                           pclatu	equ	0xFFB
  6220                           pclath	equ	0xFFA
  6221                           tblptru	equ	0xFF8
  6222                           tblptrh	equ	0xFF7
  6223                           tblptrl	equ	0xFF6
  6224                           tablat	equ	0xFF5
  6225                           prodh	equ	0xFF4
  6226                           prodl	equ	0xFF3
  6227                           intcon	equ	0xFF2
  6228                           intcon2	equ	0xFF1
  6229                           postinc0	equ	0xFEE
  6230                           fsr0h	equ	0xFEA
  6231                           fsr0l	equ	0xFE9
  6232                           wreg	equ	0xFE8
  6233                           indf1	equ	0xFE7
  6234                           postdec1	equ	0xFE5
  6235                           fsr1h	equ	0xFE2
  6236                           fsr1l	equ	0xFE1
  6237                           bsr	equ	0xFE0
  6238                           indf2	equ	0xFDF
  6239                           postinc2	equ	0xFDE
  6240                           postdec2	equ	0xFDD
  6241                           fsr2h	equ	0xFDA
  6242                           fsr2l	equ	0xFD9
  6243                           status	equ	0xFD8
  6244                           
  6245 ;; *************** function _timer0_int_handler *****************
  6246 ;; Defined at:
  6247 ;;		line 17 in file "../src/user_interrupts.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;		None
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  val             2   38[COMRAM] unsigned int 
  6252 ;;  msgtype         2   36[COMRAM] int 
  6253 ;;  length          2   29[COMRAM] int 
  6254 ;;  i               1   40[COMRAM] unsigned char 
  6255 ;;  reverse         1   35[COMRAM] unsigned char [1]
  6256 ;;  stop            1   34[COMRAM] unsigned char [1]
  6257 ;;  right           1   33[COMRAM] unsigned char [1]
  6258 ;;  left            1   32[COMRAM] unsigned char [1]
  6259 ;;  forward         1   31[COMRAM] unsigned char [1]
  6260 ;; Return value:  Size  Location     Type
  6261 ;;		None               void
  6262 ;; Registers used:
  6263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6270 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6272 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6273 ;;Total ram usage:       12 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; Hardware stack levels required when called:    8
  6276 ;; This function calls:
  6277 ;;		_FromMainHigh_recvmsg
  6278 ;;		_ToMainHigh_sendmsg
  6279 ;;		_ToMainLow_sendmsg
  6280 ;;		_WriteTimer0
  6281 ;;		i1___awmod
  6282 ;; This function is called by:
  6283 ;;		_InterruptHandlerLow
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text39
  6288  000A72                     __ptext39:
  6289                           	opt stack 0
  6290  000A72                     _timer0_int_handler:
  6291                           	opt stack 17
  6292                           
  6293                           ;user_interrupts.c: 18: unsigned int val;
  6294                           ;user_interrupts.c: 19: int length, msgtype;
  6295                           ;user_interrupts.c: 22: WriteTimer0(0);
  6296                           
  6297                           ;incstack = 0
  6298  000A72  0E00               	movlw	0
  6299  000A74  6E02               	movwf	WriteTimer0@timer0+1,c
  6300  000A76  0E00               	movlw	0
  6301  000A78  6E01               	movwf	WriteTimer0@timer0,c
  6302  000A7A  ECE8  F00F         	call	_WriteTimer0	;wreg free
  6303                           
  6304                           ;user_interrupts.c: 24: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)&msg
      +                          type, (void *) &val);
  6305  000A7E  0E00               	movlw	high timer0_int_handler@msgtype
  6306  000A80  6E1A               	movwf	FromMainHigh_recvmsg@msgtype+1,c
  6307  000A82  0E25               	movlw	low timer0_int_handler@msgtype
  6308  000A84  6E19               	movwf	FromMainHigh_recvmsg@msgtype,c
  6309  000A86  0E00               	movlw	high timer0_int_handler@val
  6310  000A88  6E1C               	movwf	FromMainHigh_recvmsg@data+1,c
  6311  000A8A  0E27               	movlw	low timer0_int_handler@val
  6312  000A8C  6E1B               	movwf	FromMainHigh_recvmsg@data,c
  6313  000A8E  0E02               	movlw	2
  6314  000A90  EC82  F00F         	call	_FromMainHigh_recvmsg
  6315  000A94  6E1E               	movwf	timer0_int_handler@length,c
  6316  000A96  6A1F               	clrf	timer0_int_handler@length+1,c
  6317  000A98  BE1E               	btfsc	timer0_int_handler@length,7,c
  6318  000A9A  061F               	decf	timer0_int_handler@length+1,f,c
  6319                           
  6320                           ;user_interrupts.c: 25: if (length == sizeof (val)) {
  6321  000A9C  501E               	movf	timer0_int_handler@length,w,c
  6322  000A9E  0A02               	xorlw	2
  6323  000AA0  101F               	iorwf	timer0_int_handler@length+1,w,c
  6324  000AA2  A4D8               	btfss	status,2,c
  6325  000AA4  D009               	goto	i1l2884
  6326                           
  6327                           ;user_interrupts.c: 26: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6328  000AA6  0E0A               	movlw	10
  6329  000AA8  6E17               	movwf	ToMainHigh_sendmsg@msgtype,c
  6330  000AAA  0E00               	movlw	high timer0_int_handler@val
  6331  000AAC  6E19               	movwf	ToMainHigh_sendmsg@data+1,c
  6332  000AAE  0E27               	movlw	low timer0_int_handler@val
  6333  000AB0  6E18               	movwf	ToMainHigh_sendmsg@data,c
  6334  000AB2  0E02               	movlw	2
  6335  000AB4  ECA4  F00F         	call	_ToMainHigh_sendmsg
  6336  000AB8                     i1l2884:
  6337                           
  6338                           ;user_interrupts.c: 27: }
  6339                           ;user_interrupts.c: 29: unsigned char i;
  6340                           ;user_interrupts.c: 30: unsigned char forward[1], left[1], right[1], stop[1], reverse[1]
      +                          ;
  6341                           ;user_interrupts.c: 31: forward[0] = 0x0A;
  6342  000AB8  0E0A               	movlw	10
  6343  000ABA  6E20               	movwf	timer0_int_handler@forward,c
  6344                           
  6345                           ;user_interrupts.c: 32: left[0] = 0x0B;
  6346  000ABC  0E0B               	movlw	11
  6347  000ABE  6E21               	movwf	timer0_int_handler@left,c
  6348                           
  6349                           ;user_interrupts.c: 33: right[0] = 0x0C;
  6350  000AC0  0E0C               	movlw	12
  6351  000AC2  6E22               	movwf	timer0_int_handler@right,c
  6352                           
  6353                           ;user_interrupts.c: 34: stop[0] = 0x0D;
  6354  000AC4  0E0D               	movlw	13
  6355  000AC6  6E23               	movwf	timer0_int_handler@stop,c
  6356                           
  6357                           ;user_interrupts.c: 35: reverse[0] = 0x0E;
  6358  000AC8  0E0E               	movlw	14
  6359  000ACA  6E24               	movwf	timer0_int_handler@reverse,c
  6360                           
  6361                           ;user_interrupts.c: 37: if (i % 5 == 0) {
  6362  000ACC  C029  F001         	movff	timer0_int_handler@i,i1___awmod@dividend
  6363  000AD0  6A02               	clrf	i1___awmod@dividend+1,c
  6364  000AD2  0E00               	movlw	0
  6365  000AD4  6E04               	movwf	i1___awmod@divisor+1,c
  6366  000AD6  0E05               	movlw	5
  6367  000AD8  6E03               	movwf	i1___awmod@divisor,c
  6368  000ADA  EC2A  F00B         	call	i1___awmod	;wreg free
  6369  000ADE  5002               	movf	?i1___awmod+1,w,c
  6370  000AE0  1001               	iorwf	?i1___awmod,w,c
  6371  000AE2  A4D8               	btfss	status,2,c
  6372  000AE4  D00B               	goto	i1l2900
  6373                           
  6374                           ;user_interrupts.c: 38: ToMainLow_sendmsg(1, 31, forward);
  6375  000AE6  0E1F               	movlw	31
  6376  000AE8  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6377  000AEA  0E00               	movlw	high timer0_int_handler@forward
  6378  000AEC  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6379  000AEE  0E20               	movlw	low timer0_int_handler@forward
  6380  000AF0  6E18               	movwf	ToMainLow_sendmsg@data,c
  6381  000AF2  0E01               	movlw	1
  6382  000AF4  EC94  F00F         	call	_ToMainLow_sendmsg
  6383                           
  6384                           ;user_interrupts.c: 39: i = 0;
  6385  000AF8  0E00               	movlw	0
  6386  000AFA  6E29               	movwf	timer0_int_handler@i,c
  6387  000AFC                     i1l2900:
  6388                           
  6389                           ;user_interrupts.c: 40: }
  6390                           ;user_interrupts.c: 41: if (i % 5 == 1) {
  6391  000AFC  C029  F001         	movff	timer0_int_handler@i,i1___awmod@dividend
  6392  000B00  6A02               	clrf	i1___awmod@dividend+1,c
  6393  000B02  0E00               	movlw	0
  6394  000B04  6E04               	movwf	i1___awmod@divisor+1,c
  6395  000B06  0E05               	movlw	5
  6396  000B08  6E03               	movwf	i1___awmod@divisor,c
  6397  000B0A  EC2A  F00B         	call	i1___awmod	;wreg free
  6398  000B0E  0401               	decf	?i1___awmod,w,c
  6399  000B10  1002               	iorwf	?i1___awmod+1,w,c
  6400  000B12  A4D8               	btfss	status,2,c
  6401  000B14  D00B               	goto	i1l2906
  6402                           
  6403                           ;user_interrupts.c: 42: ToMainLow_sendmsg(1, 31, left);
  6404  000B16  0E1F               	movlw	31
  6405  000B18  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6406  000B1A  0E00               	movlw	high timer0_int_handler@left
  6407  000B1C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6408  000B1E  0E21               	movlw	low timer0_int_handler@left
  6409  000B20  6E18               	movwf	ToMainLow_sendmsg@data,c
  6410  000B22  0E01               	movlw	1
  6411  000B24  EC94  F00F         	call	_ToMainLow_sendmsg
  6412                           
  6413                           ;user_interrupts.c: 43: i = 1;
  6414  000B28  0E01               	movlw	1
  6415  000B2A  6E29               	movwf	timer0_int_handler@i,c
  6416  000B2C                     i1l2906:
  6417                           
  6418                           ;user_interrupts.c: 44: }
  6419                           ;user_interrupts.c: 45: if (i % 5 == 2) {
  6420  000B2C  C029  F001         	movff	timer0_int_handler@i,i1___awmod@dividend
  6421  000B30  6A02               	clrf	i1___awmod@dividend+1,c
  6422  000B32  0E00               	movlw	0
  6423  000B34  6E04               	movwf	i1___awmod@divisor+1,c
  6424  000B36  0E05               	movlw	5
  6425  000B38  6E03               	movwf	i1___awmod@divisor,c
  6426  000B3A  EC2A  F00B         	call	i1___awmod	;wreg free
  6427  000B3E  5001               	movf	?i1___awmod,w,c
  6428  000B40  0A02               	xorlw	2
  6429  000B42  1002               	iorwf	?i1___awmod+1,w,c
  6430  000B44  A4D8               	btfss	status,2,c
  6431  000B46  D00B               	goto	i1l2912
  6432                           
  6433                           ;user_interrupts.c: 46: ToMainLow_sendmsg(1, 31, right);
  6434  000B48  0E1F               	movlw	31
  6435  000B4A  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6436  000B4C  0E00               	movlw	high timer0_int_handler@right
  6437  000B4E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6438  000B50  0E22               	movlw	low timer0_int_handler@right
  6439  000B52  6E18               	movwf	ToMainLow_sendmsg@data,c
  6440  000B54  0E01               	movlw	1
  6441  000B56  EC94  F00F         	call	_ToMainLow_sendmsg
  6442                           
  6443                           ;user_interrupts.c: 47: i = 2;
  6444  000B5A  0E02               	movlw	2
  6445  000B5C  6E29               	movwf	timer0_int_handler@i,c
  6446  000B5E                     i1l2912:
  6447                           
  6448                           ;user_interrupts.c: 48: }
  6449                           ;user_interrupts.c: 49: if (i % 5 == 3) {
  6450  000B5E  C029  F001         	movff	timer0_int_handler@i,i1___awmod@dividend
  6451  000B62  6A02               	clrf	i1___awmod@dividend+1,c
  6452  000B64  0E00               	movlw	0
  6453  000B66  6E04               	movwf	i1___awmod@divisor+1,c
  6454  000B68  0E05               	movlw	5
  6455  000B6A  6E03               	movwf	i1___awmod@divisor,c
  6456  000B6C  EC2A  F00B         	call	i1___awmod	;wreg free
  6457  000B70  5001               	movf	?i1___awmod,w,c
  6458  000B72  0A03               	xorlw	3
  6459  000B74  1002               	iorwf	?i1___awmod+1,w,c
  6460  000B76  A4D8               	btfss	status,2,c
  6461  000B78  D00B               	goto	i1l2918
  6462                           
  6463                           ;user_interrupts.c: 50: ToMainLow_sendmsg(1, 31, stop);
  6464  000B7A  0E1F               	movlw	31
  6465  000B7C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6466  000B7E  0E00               	movlw	high timer0_int_handler@stop
  6467  000B80  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6468  000B82  0E23               	movlw	low timer0_int_handler@stop
  6469  000B84  6E18               	movwf	ToMainLow_sendmsg@data,c
  6470  000B86  0E01               	movlw	1
  6471  000B88  EC94  F00F         	call	_ToMainLow_sendmsg
  6472                           
  6473                           ;user_interrupts.c: 51: i = 3;
  6474  000B8C  0E03               	movlw	3
  6475  000B8E  6E29               	movwf	timer0_int_handler@i,c
  6476  000B90                     i1l2918:
  6477                           
  6478                           ;user_interrupts.c: 52: }
  6479                           ;user_interrupts.c: 53: if (i % 5 == 4) {
  6480  000B90  C029  F001         	movff	timer0_int_handler@i,i1___awmod@dividend
  6481  000B94  6A02               	clrf	i1___awmod@dividend+1,c
  6482  000B96  0E00               	movlw	0
  6483  000B98  6E04               	movwf	i1___awmod@divisor+1,c
  6484  000B9A  0E05               	movlw	5
  6485  000B9C  6E03               	movwf	i1___awmod@divisor,c
  6486  000B9E  EC2A  F00B         	call	i1___awmod	;wreg free
  6487  000BA2  5001               	movf	?i1___awmod,w,c
  6488  000BA4  0A04               	xorlw	4
  6489  000BA6  1002               	iorwf	?i1___awmod+1,w,c
  6490  000BA8  A4D8               	btfss	status,2,c
  6491  000BAA  D00B               	goto	i1l2924
  6492                           
  6493                           ;user_interrupts.c: 54: ToMainLow_sendmsg(1, 31, reverse);
  6494  000BAC  0E1F               	movlw	31
  6495  000BAE  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6496  000BB0  0E00               	movlw	high timer0_int_handler@reverse
  6497  000BB2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6498  000BB4  0E24               	movlw	low timer0_int_handler@reverse
  6499  000BB6  6E18               	movwf	ToMainLow_sendmsg@data,c
  6500  000BB8  0E01               	movlw	1
  6501  000BBA  EC94  F00F         	call	_ToMainLow_sendmsg
  6502                           
  6503                           ;user_interrupts.c: 55: i = 4;
  6504  000BBE  0E04               	movlw	4
  6505  000BC0  6E29               	movwf	timer0_int_handler@i,c
  6506  000BC2                     i1l2924:
  6507                           
  6508                           ;user_interrupts.c: 56: }
  6509                           ;user_interrupts.c: 57: i++;
  6510  000BC2  2A29               	incf	timer0_int_handler@i,f,c
  6511  000BC4  0012               	return	
  6512  000BC6                     __end_of_timer0_int_handler:
  6513                           	opt stack 0
  6514                           pclatu	equ	0xFFB
  6515                           pclath	equ	0xFFA
  6516                           tblptru	equ	0xFF8
  6517                           tblptrh	equ	0xFF7
  6518                           tblptrl	equ	0xFF6
  6519                           tablat	equ	0xFF5
  6520                           prodh	equ	0xFF4
  6521                           prodl	equ	0xFF3
  6522                           intcon	equ	0xFF2
  6523                           intcon2	equ	0xFF1
  6524                           postinc0	equ	0xFEE
  6525                           fsr0h	equ	0xFEA
  6526                           fsr0l	equ	0xFE9
  6527                           wreg	equ	0xFE8
  6528                           indf1	equ	0xFE7
  6529                           postdec1	equ	0xFE5
  6530                           fsr1h	equ	0xFE2
  6531                           fsr1l	equ	0xFE1
  6532                           bsr	equ	0xFE0
  6533                           indf2	equ	0xFDF
  6534                           postinc2	equ	0xFDE
  6535                           postdec2	equ	0xFDD
  6536                           fsr2h	equ	0xFDA
  6537                           fsr2l	equ	0xFD9
  6538                           status	equ	0xFD8
  6539                           
  6540 ;; *************** function _WriteTimer0 *****************
  6541 ;; Defined at:
  6542 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0write.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  timer0          2    0[COMRAM] unsigned int 
  6545 ;; Auto vars:     Size  Location     Type
  6546 ;;  timer           2    2[COMRAM] struct Timers
  6547 ;; Return value:  Size  Location     Type
  6548 ;;		None               void
  6549 ;; Registers used:
  6550 ;;		None
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6559 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6560 ;;Total ram usage:        4 bytes
  6561 ;; Hardware stack levels used:    1
  6562 ;; Hardware stack levels required when called:    5
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_timer0_int_handler
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text40
  6571  001FD0                     __ptext40:
  6572                           	opt stack 0
  6573  001FD0                     _WriteTimer0:
  6574                           	opt stack 19
  6575                           
  6576                           ;incstack = 0
  6577  001FD0  C001  F003         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6578  001FD4  C002  F004         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6579  001FD8  C004  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6580  001FDC  C003  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6581  001FE0  0012               	return	
  6582  001FE2                     __end_of_WriteTimer0:
  6583                           	opt stack 0
  6584                           pclatu	equ	0xFFB
  6585                           pclath	equ	0xFFA
  6586                           tblptru	equ	0xFF8
  6587                           tblptrh	equ	0xFF7
  6588                           tblptrl	equ	0xFF6
  6589                           tablat	equ	0xFF5
  6590                           prodh	equ	0xFF4
  6591                           prodl	equ	0xFF3
  6592                           intcon	equ	0xFF2
  6593                           intcon2	equ	0xFF1
  6594                           postinc0	equ	0xFEE
  6595                           fsr0h	equ	0xFEA
  6596                           fsr0l	equ	0xFE9
  6597                           wreg	equ	0xFE8
  6598                           indf1	equ	0xFE7
  6599                           postdec1	equ	0xFE5
  6600                           fsr1h	equ	0xFE2
  6601                           fsr1l	equ	0xFE1
  6602                           bsr	equ	0xFE0
  6603                           indf2	equ	0xFDF
  6604                           postinc2	equ	0xFDE
  6605                           postdec2	equ	0xFDD
  6606                           fsr2h	equ	0xFDA
  6607                           fsr2l	equ	0xFD9
  6608                           status	equ	0xFD8
  6609                           
  6610 ;; *************** function _ToMainLow_sendmsg *****************
  6611 ;; Defined at:
  6612 ;;		line 103 in file "../src/messages.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;  length          1    wreg     unsigned char 
  6615 ;;  msgtype         1   22[COMRAM] unsigned char 
  6616 ;;  data            2   23[COMRAM] PTR void 
  6617 ;;		 -> timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@right(1), timer0_int_handler@left(
      +1), 
  6618 ;;		 -> timer0_int_handler@forward(1), NULL(0), main@uc(66), 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  length          1   25[COMRAM] unsigned char 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  1    wreg      char 
  6623 ;; Registers used:
  6624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6630 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6633 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6634 ;;Total ram usage:        4 bytes
  6635 ;; Hardware stack levels used:    1
  6636 ;; Hardware stack levels required when called:    7
  6637 ;; This function calls:
  6638 ;;		i1_send_msg
  6639 ;; This function is called by:
  6640 ;;		_uart_recv_int_handler
  6641 ;;		_timer0_int_handler
  6642 ;;		_timer1_int_handler
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           	psect	text41
  6647  001F28                     __ptext41:
  6648                           	opt stack 0
  6649  001F28                     _ToMainLow_sendmsg:
  6650                           	opt stack 17
  6651                           
  6652                           ;incstack = 0
  6653                           ;ToMainLow_sendmsg@length stored from wreg
  6654  001F28  6E1A               	movwf	ToMainLow_sendmsg@length,c
  6655                           
  6656                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6657                           ;	Return value of _ToMainLow_sendmsg is never used
  6658  001F2A  0E08               	movlw	high _ToMainLow_MQ
  6659  001F2C  6E0C               	movwf	i1send_msg@qptr+1,c
  6660  001F2E  0E39               	movlw	low _ToMainLow_MQ
  6661  001F30  6E0B               	movwf	i1send_msg@qptr,c
  6662  001F32  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6663  001F36  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6664  001F3A  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6665  001F3E  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6666  001F42  ECD8  F009         	call	i1_send_msg	;wreg free
  6667  001F46  0012               	return	
  6668  001F48                     __end_of_ToMainLow_sendmsg:
  6669                           	opt stack 0
  6670                           pclatu	equ	0xFFB
  6671                           pclath	equ	0xFFA
  6672                           tblptru	equ	0xFF8
  6673                           tblptrh	equ	0xFF7
  6674                           tblptrl	equ	0xFF6
  6675                           tablat	equ	0xFF5
  6676                           prodh	equ	0xFF4
  6677                           prodl	equ	0xFF3
  6678                           intcon	equ	0xFF2
  6679                           intcon2	equ	0xFF1
  6680                           postinc0	equ	0xFEE
  6681                           fsr0h	equ	0xFEA
  6682                           fsr0l	equ	0xFE9
  6683                           wreg	equ	0xFE8
  6684                           indf1	equ	0xFE7
  6685                           postdec1	equ	0xFE5
  6686                           fsr1h	equ	0xFE2
  6687                           fsr1l	equ	0xFE1
  6688                           bsr	equ	0xFE0
  6689                           indf2	equ	0xFDF
  6690                           postinc2	equ	0xFDE
  6691                           postdec2	equ	0xFDD
  6692                           fsr2h	equ	0xFDA
  6693                           fsr2l	equ	0xFD9
  6694                           status	equ	0xFD8
  6695                           
  6696 ;; *************** function _ToMainHigh_sendmsg *****************
  6697 ;; Defined at:
  6698 ;;		line 126 in file "../src/messages.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  length          1    wreg     unsigned char 
  6701 ;;  msgtype         1   22[COMRAM] unsigned char 
  6702 ;;  data            2   23[COMRAM] PTR void 
  6703 ;;		 -> timer0_int_handler@val(2), NULL(0), main@ic(72), 
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  length          1   25[COMRAM] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  1    wreg      char 
  6708 ;; Registers used:
  6709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6715 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6718 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6719 ;;Total ram usage:        4 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    7
  6722 ;; This function calls:
  6723 ;;		i1_send_msg
  6724 ;; This function is called by:
  6725 ;;		_timer0_int_handler
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text42
  6730  001F48                     __ptext42:
  6731                           	opt stack 0
  6732  001F48                     _ToMainHigh_sendmsg:
  6733                           	opt stack 17
  6734                           
  6735                           ;incstack = 0
  6736                           ;ToMainHigh_sendmsg@length stored from wreg
  6737  001F48  6E1A               	movwf	ToMainHigh_sendmsg@length,c
  6738                           
  6739                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6740                           ;	Return value of _ToMainHigh_sendmsg is never used
  6741  001F4A  0E06               	movlw	high _ToMainHigh_MQ
  6742  001F4C  6E0C               	movwf	i1send_msg@qptr+1,c
  6743  001F4E  0EED               	movlw	low _ToMainHigh_MQ
  6744  001F50  6E0B               	movwf	i1send_msg@qptr,c
  6745  001F52  C01A  F00D         	movff	ToMainHigh_sendmsg@length,i1send_msg@length
  6746  001F56  C017  F00E         	movff	ToMainHigh_sendmsg@msgtype,i1send_msg@msgtype
  6747  001F5A  C019  F010         	movff	ToMainHigh_sendmsg@data+1,i1send_msg@data+1
  6748  001F5E  C018  F00F         	movff	ToMainHigh_sendmsg@data,i1send_msg@data
  6749  001F62  ECD8  F009         	call	i1_send_msg	;wreg free
  6750  001F66  0012               	return	
  6751  001F68                     __end_of_ToMainHigh_sendmsg:
  6752                           	opt stack 0
  6753                           pclatu	equ	0xFFB
  6754                           pclath	equ	0xFFA
  6755                           tblptru	equ	0xFF8
  6756                           tblptrh	equ	0xFF7
  6757                           tblptrl	equ	0xFF6
  6758                           tablat	equ	0xFF5
  6759                           prodh	equ	0xFF4
  6760                           prodl	equ	0xFF3
  6761                           intcon	equ	0xFF2
  6762                           intcon2	equ	0xFF1
  6763                           postinc0	equ	0xFEE
  6764                           fsr0h	equ	0xFEA
  6765                           fsr0l	equ	0xFE9
  6766                           wreg	equ	0xFE8
  6767                           indf1	equ	0xFE7
  6768                           postdec1	equ	0xFE5
  6769                           fsr1h	equ	0xFE2
  6770                           fsr1l	equ	0xFE1
  6771                           bsr	equ	0xFE0
  6772                           indf2	equ	0xFDF
  6773                           postinc2	equ	0xFDE
  6774                           postdec2	equ	0xFDD
  6775                           fsr2h	equ	0xFDA
  6776                           fsr2l	equ	0xFD9
  6777                           status	equ	0xFD8
  6778                           
  6779 ;; *************** function i1_send_msg *****************
  6780 ;; Defined at:
  6781 ;;		line 24 in file "../src/messages.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6784 ;;		 -> FromMainHigh_MQ(332), FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), 
  6785 ;;		 -> ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  6786 ;;  length          1   12[COMRAM] unsigned char 
  6787 ;;  msgtype         1   13[COMRAM] unsigned char 
  6788 ;;  data            2   14[COMRAM] PTR void 
  6789 ;;		 -> timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@right(1), timer0_int_handler@left(
      +1), 
  6790 ;;		 -> timer0_int_handler@forward(1), timer0_int_handler@val(2), NULL(0), main@msgbuffer(31), 
  6791 ;;		 -> main@t1thread_data(2), main@ic(72), main@uc(66), 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6794 ;;		 -> FromMainLow_MQ.queue(330), FromMainHigh_MQ.queue(330), ToMainHigh_MQ.queue(330), ToMainLow_MQ.queue(330), 
  6795 ;;		 -> SensorData_MQ.queue(330), MotorData_MQ.queue(330), FromMainHigh_MQ(332), FromMainLow_MQ(332), 
  6796 ;;		 -> MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  6797 ;;  send_msg        2   17[COMRAM] unsigned int 
  6798 ;;  send_msg        1   19[COMRAM] unsigned char 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  1    wreg      char 
  6801 ;; Registers used:
  6802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6808 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6809 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6811 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6812 ;;Total ram usage:       12 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; Hardware stack levels required when called:    6
  6815 ;; This function calls:
  6816 ;;		i1___awmod
  6817 ;;		i1_memcpy
  6818 ;; This function is called by:
  6819 ;;		_ToMainLow_sendmsg
  6820 ;;		_ToMainHigh_sendmsg
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           	psect	text43
  6825  0013B0                     __ptext43:
  6826                           	opt stack 0
  6827  0013B0                     i1_send_msg:
  6828                           	opt stack 17
  6829                           
  6830                           ;messages.c: 25: unsigned char slot;
  6831                           ;messages.c: 27: msg *qmsg;
  6832                           ;messages.c: 28: size_t tlength = length;
  6833                           
  6834                           ;incstack = 0
  6835  0013B0  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6836  0013B4  6A13               	clrf	i1send_msg@tlength+1,c
  6837                           
  6838                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6839  0013B6  EE21 F04A          	lfsr	2,330
  6840  0013BA  500B               	movf	i1send_msg@qptr,w,c
  6841  0013BC  26D9               	addwf	fsr2l,f,c
  6842  0013BE  500C               	movf	i1send_msg@qptr+1,w,c
  6843  0013C0  22DA               	addwfc	fsr2h,f,c
  6844  0013C2  50DF               	movf	indf2,w,c
  6845  0013C4  6E14               	movwf	i1send_msg@slot,c
  6846                           
  6847                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6848  0013C6  5014               	movf	i1send_msg@slot,w,c
  6849  0013C8  0D21               	mullw	33
  6850  0013CA  50F3               	movf	prodl,w,c
  6851  0013CC  240B               	addwf	i1send_msg@qptr,w,c
  6852  0013CE  6E15               	movwf	i1send_msg@qmsg,c
  6853  0013D0  50F4               	movf	prodh,w,c
  6854  0013D2  200C               	addwfc	i1send_msg@qptr+1,w,c
  6855  0013D4  6E16               	movwf	i1send_msg@qmsg+1,c
  6856                           
  6857                           ;messages.c: 41: if (qmsg->full != 0) {
  6858  0013D6  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6859  0013DA  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6860  0013DE  50DF               	movf	indf2,w,c
  6861  0013E0  B4D8               	btfsc	status,2,c
  6862  0013E2  D002               	goto	i1l2488
  6863                           
  6864                           ;messages.c: 42: return (-1);
  6865  0013E4  0EFF               	movlw	255
  6866  0013E6  0012               	return	
  6867  0013E8                     i1l2488:
  6868                           
  6869                           ;messages.c: 43: }
  6870                           ;messages.c: 46: qmsg->length = length;
  6871  0013E8  EE20 F001          	lfsr	2,1
  6872  0013EC  5015               	movf	i1send_msg@qmsg,w,c
  6873  0013EE  26D9               	addwf	fsr2l,f,c
  6874  0013F0  5016               	movf	i1send_msg@qmsg+1,w,c
  6875  0013F2  22DA               	addwfc	fsr2h,f,c
  6876  0013F4  C00D  FFDF         	movff	i1send_msg@length,indf2
  6877                           
  6878                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6879  0013F8  EE20 F002          	lfsr	2,2
  6880  0013FC  5015               	movf	i1send_msg@qmsg,w,c
  6881  0013FE  26D9               	addwf	fsr2l,f,c
  6882  001400  5016               	movf	i1send_msg@qmsg+1,w,c
  6883  001402  22DA               	addwfc	fsr2h,f,c
  6884  001404  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6885                           
  6886                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6887  001408  0E03               	movlw	3
  6888  00140A  2415               	addwf	i1send_msg@qmsg,w,c
  6889  00140C  6E01               	movwf	i1memcpy@d1,c
  6890  00140E  0E00               	movlw	0
  6891  001410  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6892  001412  6E02               	movwf	i1memcpy@d1+1,c
  6893  001414  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6894  001418  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6895  00141C  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6896  001420  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6897  001424  ECAF  F00D         	call	i1_memcpy	;wreg free
  6898                           
  6899                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 10;
  6900  001428  EE21 F04A          	lfsr	2,330
  6901  00142C  500B               	movf	i1send_msg@qptr,w,c
  6902  00142E  26D9               	addwf	fsr2l,f,c
  6903  001430  500C               	movf	i1send_msg@qptr+1,w,c
  6904  001432  22DA               	addwfc	fsr2h,f,c
  6905  001434  EE11 F04A          	lfsr	1,330
  6906  001438  500B               	movf	i1send_msg@qptr,w,c
  6907  00143A  26E1               	addwf	fsr1l,f,c
  6908  00143C  500C               	movf	i1send_msg@qptr+1,w,c
  6909  00143E  22E2               	addwfc	fsr1h,f,c
  6910  001440  50E7               	movf	indf1,w,c
  6911  001442  6E11               	movwf	??i1_send_msg& (0+255),c
  6912  001444  0E01               	movlw	1
  6913  001446  2411               	addwf	??i1_send_msg,w,c
  6914  001448  6E01               	movwf	i1___awmod@dividend,c
  6915  00144A  6A02               	clrf	i1___awmod@dividend+1,c
  6916  00144C  0E00               	movlw	0
  6917  00144E  2202               	addwfc	i1___awmod@dividend+1,f,c
  6918  001450  0E00               	movlw	0
  6919  001452  6E04               	movwf	i1___awmod@divisor+1,c
  6920  001454  0E0A               	movlw	10
  6921  001456  6E03               	movwf	i1___awmod@divisor,c
  6922  001458  EC2A  F00B         	call	i1___awmod	;wreg free
  6923  00145C  5001               	movf	?i1___awmod,w,c
  6924  00145E  6EDF               	movwf	indf2,c
  6925                           
  6926                           ;messages.c: 59: qmsg->full = 1;
  6927  001460  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6928  001464  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6929  001468  0E01               	movlw	1
  6930  00146A  6EDF               	movwf	indf2,c
  6931                           
  6932                           ;messages.c: 60: return (1);
  6933  00146C  0E01               	movlw	1
  6934  00146E  0012               	return	
  6935  001470                     __end_ofi1_send_msg:
  6936                           	opt stack 0
  6937                           pclatu	equ	0xFFB
  6938                           pclath	equ	0xFFA
  6939                           tblptru	equ	0xFF8
  6940                           tblptrh	equ	0xFF7
  6941                           tblptrl	equ	0xFF6
  6942                           tablat	equ	0xFF5
  6943                           prodh	equ	0xFF4
  6944                           prodl	equ	0xFF3
  6945                           intcon	equ	0xFF2
  6946                           intcon2	equ	0xFF1
  6947                           postinc0	equ	0xFEE
  6948                           fsr0h	equ	0xFEA
  6949                           fsr0l	equ	0xFE9
  6950                           wreg	equ	0xFE8
  6951                           indf1	equ	0xFE7
  6952                           postdec1	equ	0xFE5
  6953                           fsr1h	equ	0xFE2
  6954                           fsr1l	equ	0xFE1
  6955                           bsr	equ	0xFE0
  6956                           indf2	equ	0xFDF
  6957                           postinc2	equ	0xFDE
  6958                           postdec2	equ	0xFDD
  6959                           fsr2h	equ	0xFDA
  6960                           fsr2l	equ	0xFD9
  6961                           status	equ	0xFD8
  6962                           
  6963 ;; *************** function _FromMainHigh_recvmsg *****************
  6964 ;; Defined at:
  6965 ;;		line 231 in file "../src/messages.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  maxlength       1    wreg     unsigned char 
  6968 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  6969 ;;		 -> timer0_int_handler@msgtype(2), RAM(3775), 
  6970 ;;  data            2   26[COMRAM] PTR void 
  6971 ;;		 -> timer0_int_handler@val(2), NULL(0), main@ic(72), 
  6972 ;; Auto vars:     Size  Location     Type
  6973 ;;  maxlength       1   28[COMRAM] unsigned char 
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  1    wreg      char 
  6976 ;; Registers used:
  6977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6986 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6987 ;;Total ram usage:        5 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:    7
  6990 ;; This function calls:
  6991 ;;		i1_recv_msg
  6992 ;; This function is called by:
  6993 ;;		_timer0_int_handler
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text44
  6998  001F04                     __ptext44:
  6999                           	opt stack 0
  7000  001F04                     _FromMainHigh_recvmsg:
  7001                           	opt stack 17
  7002                           
  7003                           ;incstack = 0
  7004                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  7005  001F04  6E1D               	movwf	FromMainHigh_recvmsg@maxlength,c
  7006                           
  7007                           ;messages.c: 237: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  7008  001F06  0E01               	movlw	high _FromMainHigh_MQ
  7009  001F08  6E0C               	movwf	i1recv_msg@qptr+1,c
  7010  001F0A  0EBD               	movlw	low _FromMainHigh_MQ
  7011  001F0C  6E0B               	movwf	i1recv_msg@qptr,c
  7012  001F0E  C01D  F00D         	movff	FromMainHigh_recvmsg@maxlength,i1recv_msg@maxlength
  7013  001F12  C01A  F00F         	movff	FromMainHigh_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  7014  001F16  C019  F00E         	movff	FromMainHigh_recvmsg@msgtype,i1recv_msg@msgtype
  7015  001F1A  C01C  F011         	movff	FromMainHigh_recvmsg@data+1,i1recv_msg@data+1
  7016  001F1E  C01B  F010         	movff	FromMainHigh_recvmsg@data,i1recv_msg@data
  7017  001F22  EC2D  F008         	call	i1_recv_msg	;wreg free
  7018  001F26  0012               	return	
  7019  001F28                     __end_of_FromMainHigh_recvmsg:
  7020                           	opt stack 0
  7021                           pclatu	equ	0xFFB
  7022                           pclath	equ	0xFFA
  7023                           tblptru	equ	0xFF8
  7024                           tblptrh	equ	0xFF7
  7025                           tblptrl	equ	0xFF6
  7026                           tablat	equ	0xFF5
  7027                           prodh	equ	0xFF4
  7028                           prodl	equ	0xFF3
  7029                           intcon	equ	0xFF2
  7030                           intcon2	equ	0xFF1
  7031                           postinc0	equ	0xFEE
  7032                           fsr0h	equ	0xFEA
  7033                           fsr0l	equ	0xFE9
  7034                           wreg	equ	0xFE8
  7035                           indf1	equ	0xFE7
  7036                           postdec1	equ	0xFE5
  7037                           fsr1h	equ	0xFE2
  7038                           fsr1l	equ	0xFE1
  7039                           bsr	equ	0xFE0
  7040                           indf2	equ	0xFDF
  7041                           postinc2	equ	0xFDE
  7042                           postdec2	equ	0xFDD
  7043                           fsr2h	equ	0xFDA
  7044                           fsr2l	equ	0xFD9
  7045                           status	equ	0xFD8
  7046                           
  7047 ;; *************** function i1_recv_msg *****************
  7048 ;; Defined at:
  7049 ;;		line 63 in file "../src/messages.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  7052 ;;		 -> FromMainHigh_MQ(332), FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), 
  7053 ;;		 -> ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  7054 ;;  maxlength       1   12[COMRAM] unsigned char 
  7055 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  7056 ;;		 -> timer0_int_handler@msgtype(2), RAM(3775), main@msgtype(1), 
  7057 ;;  data            2   15[COMRAM] PTR void 
  7058 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(31), main@ic(72), 
  7059 ;;		 -> main@uc(66), 
  7060 ;; Auto vars:     Size  Location     Type
  7061 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  7062 ;;		 -> FromMainLow_MQ.queue(330), FromMainHigh_MQ.queue(330), ToMainHigh_MQ.queue(330), ToMainLow_MQ.queue(330), 
  7063 ;;		 -> SensorData_MQ.queue(330), MotorData_MQ.queue(330), FromMainHigh_MQ(332), FromMainLow_MQ(332), 
  7064 ;;		 -> MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  7065 ;;  recv_msg        2   20[COMRAM] unsigned int 
  7066 ;;  recv_msg        1   19[COMRAM] unsigned char 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      char 
  7069 ;; Registers used:
  7070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7076 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7077 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7078 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7079 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7080 ;;Total ram usage:       14 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; Hardware stack levels required when called:    6
  7083 ;; This function calls:
  7084 ;;		i1___awmod
  7085 ;;		i1_memcpy
  7086 ;; This function is called by:
  7087 ;;		_FromMainLow_recvmsg
  7088 ;;		_FromMainHigh_recvmsg
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text45
  7093  00105A                     __ptext45:
  7094                           	opt stack 0
  7095  00105A                     i1_recv_msg:
  7096                           	opt stack 17
  7097                           
  7098                           ;messages.c: 64: unsigned char slot;
  7099                           ;messages.c: 68: msg *qmsg;
  7100                           ;messages.c: 69: size_t tlength;
  7101                           ;messages.c: 72: slot = qptr->cur_read_ind;
  7102                           
  7103                           ;incstack = 0
  7104  00105A  EE21 F04B          	lfsr	2,331
  7105  00105E  500B               	movf	i1recv_msg@qptr,w,c
  7106  001060  26D9               	addwf	fsr2l,f,c
  7107  001062  500C               	movf	i1recv_msg@qptr+1,w,c
  7108  001064  22DA               	addwfc	fsr2h,f,c
  7109  001066  50DF               	movf	indf2,w,c
  7110  001068  6E14               	movwf	i1recv_msg@slot,c
  7111                           
  7112                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  7113  00106A  5014               	movf	i1recv_msg@slot,w,c
  7114  00106C  0D21               	mullw	33
  7115  00106E  50F3               	movf	prodl,w,c
  7116  001070  240B               	addwf	i1recv_msg@qptr,w,c
  7117  001072  6E17               	movwf	i1recv_msg@qmsg,c
  7118  001074  50F4               	movf	prodh,w,c
  7119  001076  200C               	addwfc	i1recv_msg@qptr+1,w,c
  7120  001078  6E18               	movwf	i1recv_msg@qmsg+1,c
  7121                           
  7122                           ;messages.c: 74: if (qmsg->full == 1) {
  7123  00107A  0E01               	movlw	1
  7124  00107C  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  7125  001080  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  7126  001084  62DF               	cpfseq	indf2,c
  7127  001086  D05B               	goto	i1l2552
  7128                           
  7129                           ;messages.c: 76: if (qmsg->length > maxlength) {
  7130  001088  EE20 F001          	lfsr	2,1
  7131  00108C  5017               	movf	i1recv_msg@qmsg,w,c
  7132  00108E  26D9               	addwf	fsr2l,f,c
  7133  001090  5018               	movf	i1recv_msg@qmsg+1,w,c
  7134  001092  22DA               	addwfc	fsr2h,f,c
  7135  001094  50DF               	movf	indf2,w,c
  7136  001096  5C0D               	subwf	i1recv_msg@maxlength,w,c
  7137  001098  B0D8               	btfsc	status,0,c
  7138  00109A  D002               	goto	i1l2536
  7139                           
  7140                           ;messages.c: 77: return (-3);
  7141  00109C  0EFD               	movlw	253
  7142  00109E  0012               	return	
  7143  0010A0                     i1l2536:
  7144                           
  7145                           ;messages.c: 78: }
  7146                           ;messages.c: 80: tlength = qmsg->length;
  7147  0010A0  EE20 F001          	lfsr	2,1
  7148  0010A4  5017               	movf	i1recv_msg@qmsg,w,c
  7149  0010A6  26D9               	addwf	fsr2l,f,c
  7150  0010A8  5018               	movf	i1recv_msg@qmsg+1,w,c
  7151  0010AA  22DA               	addwfc	fsr2h,f,c
  7152  0010AC  50DF               	movf	indf2,w,c
  7153  0010AE  6E12               	movwf	??i1_recv_msg& (0+255),c
  7154  0010B0  5012               	movf	??i1_recv_msg,w,c
  7155  0010B2  6E15               	movwf	i1recv_msg@tlength,c
  7156  0010B4  6A16               	clrf	i1recv_msg@tlength+1,c
  7157                           
  7158                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  7159  0010B6  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  7160  0010BA  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  7161  0010BE  0E03               	movlw	3
  7162  0010C0  2417               	addwf	i1recv_msg@qmsg,w,c
  7163  0010C2  6E12               	movwf	??i1_recv_msg& (0+255),c
  7164  0010C4  0E00               	movlw	0
  7165  0010C6  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  7166  0010C8  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  7167  0010CA  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  7168  0010CE  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  7169  0010D2  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  7170  0010D6  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  7171  0010DA  ECAF  F00D         	call	i1_memcpy	;wreg free
  7172                           
  7173                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 10;
  7174  0010DE  EE21 F04B          	lfsr	2,331
  7175  0010E2  500B               	movf	i1recv_msg@qptr,w,c
  7176  0010E4  26D9               	addwf	fsr2l,f,c
  7177  0010E6  500C               	movf	i1recv_msg@qptr+1,w,c
  7178  0010E8  22DA               	addwfc	fsr2h,f,c
  7179  0010EA  EE11 F04B          	lfsr	1,331
  7180  0010EE  500B               	movf	i1recv_msg@qptr,w,c
  7181  0010F0  26E1               	addwf	fsr1l,f,c
  7182  0010F2  500C               	movf	i1recv_msg@qptr+1,w,c
  7183  0010F4  22E2               	addwfc	fsr1h,f,c
  7184  0010F6  50E7               	movf	indf1,w,c
  7185  0010F8  6E12               	movwf	??i1_recv_msg& (0+255),c
  7186  0010FA  0E01               	movlw	1
  7187  0010FC  2412               	addwf	??i1_recv_msg,w,c
  7188  0010FE  6E01               	movwf	i1___awmod@dividend,c
  7189  001100  6A02               	clrf	i1___awmod@dividend+1,c
  7190  001102  0E00               	movlw	0
  7191  001104  2202               	addwfc	i1___awmod@dividend+1,f,c
  7192  001106  0E00               	movlw	0
  7193  001108  6E04               	movwf	i1___awmod@divisor+1,c
  7194  00110A  0E0A               	movlw	10
  7195  00110C  6E03               	movwf	i1___awmod@divisor,c
  7196  00110E  EC2A  F00B         	call	i1___awmod	;wreg free
  7197  001112  5001               	movf	?i1___awmod,w,c
  7198  001114  6EDF               	movwf	indf2,c
  7199                           
  7200                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  7201  001116  EE20 F002          	lfsr	2,2
  7202  00111A  5017               	movf	i1recv_msg@qmsg,w,c
  7203  00111C  26D9               	addwf	fsr2l,f,c
  7204  00111E  5018               	movf	i1recv_msg@qmsg+1,w,c
  7205  001120  22DA               	addwfc	fsr2h,f,c
  7206  001122  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  7207  001126  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  7208  00112A  CFDF FFE7          	movff	indf2,indf1
  7209                           
  7210                           ;messages.c: 91: qmsg->full = 0;
  7211  00112E  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  7212  001132  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  7213  001136  0E00               	movlw	0
  7214  001138  6EDF               	movwf	indf2,c
  7215                           
  7216                           ;messages.c: 92: return (tlength);
  7217  00113A  5015               	movf	i1recv_msg@tlength,w,c
  7218  00113C  0012               	return	
  7219  00113E                     i1l2552:
  7220                           
  7221                           ;messages.c: 94: return (-4);
  7222  00113E  0EFC               	movlw	252
  7223  001140  0012               	return	
  7224  001142                     __end_ofi1_recv_msg:
  7225                           	opt stack 0
  7226                           pclatu	equ	0xFFB
  7227                           pclath	equ	0xFFA
  7228                           tblptru	equ	0xFF8
  7229                           tblptrh	equ	0xFF7
  7230                           tblptrl	equ	0xFF6
  7231                           tablat	equ	0xFF5
  7232                           prodh	equ	0xFF4
  7233                           prodl	equ	0xFF3
  7234                           intcon	equ	0xFF2
  7235                           intcon2	equ	0xFF1
  7236                           postinc0	equ	0xFEE
  7237                           fsr0h	equ	0xFEA
  7238                           fsr0l	equ	0xFE9
  7239                           wreg	equ	0xFE8
  7240                           indf1	equ	0xFE7
  7241                           postdec1	equ	0xFE5
  7242                           fsr1h	equ	0xFE2
  7243                           fsr1l	equ	0xFE1
  7244                           bsr	equ	0xFE0
  7245                           indf2	equ	0xFDF
  7246                           postinc2	equ	0xFDE
  7247                           postdec2	equ	0xFDD
  7248                           fsr2h	equ	0xFDA
  7249                           fsr2l	equ	0xFD9
  7250                           status	equ	0xFD8
  7251                           
  7252 ;; *************** function i1_memcpy *****************
  7253 ;; Defined at:
  7254 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;  d1              2    0[COMRAM] PTR void 
  7257 ;;		 -> FromMainLow_MQ.queue(330), FromMainHigh_MQ.queue(330), ToMainHigh_MQ.queue(330), ToMainLow_MQ.queue(330), 
  7258 ;;		 -> SensorData_MQ.queue(330), MotorData_MQ.queue(330), timer0_int_handler@val(2), NULL(0), 
  7259 ;;		 -> FromMainHigh_MQ(332), FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), 
  7260 ;;		 -> ToMainHigh_MQ(332), ToMainLow_MQ(332), main@msgbuffer(31), main@ic(72), 
  7261 ;;		 -> main@uc(66), 
  7262 ;;  s1              2    2[COMRAM] PTR const void 
  7263 ;;		 -> ToMainLow_MQ.data(30), ToMainHigh_MQ.data(30), SensorData_MQ.data(30), MotorData_MQ.data(30), 
  7264 ;;		 -> FromMainLow_MQ.data(30), FromMainHigh_MQ.data(30), MotorData_MQ.queue.data(30), SensorData_MQ.queue.data(30), 
  7265 ;;		 -> ToMainLow_MQ.queue.data(30), ToMainHigh_MQ.queue.data(30), FromMainHigh_MQ.queue.data(30), FromMainLow_MQ.queue.
      +data(30), 
  7266 ;;		 -> timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@right(1), timer0_int_handler@left(
      +1), 
  7267 ;;		 -> timer0_int_handler@forward(1), timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(332), 
  7268 ;;		 -> FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), 
  7269 ;;		 -> ToMainLow_MQ(332), main@msgbuffer(31), main@t1thread_data(2), main@ic(72), 
  7270 ;;		 -> main@uc(66), 
  7271 ;;  n               2    4[COMRAM] unsigned int 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  7274 ;;		 -> ToMainLow_MQ.data(30), ToMainHigh_MQ.data(30), SensorData_MQ.data(30), MotorData_MQ.data(30), 
  7275 ;;		 -> FromMainLow_MQ.data(30), FromMainHigh_MQ.data(30), MotorData_MQ.queue.data(30), SensorData_MQ.queue.data(30), 
  7276 ;;		 -> ToMainLow_MQ.queue.data(30), ToMainHigh_MQ.queue.data(30), FromMainHigh_MQ.queue.data(30), FromMainLow_MQ.queue.
      +data(30), 
  7277 ;;		 -> timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@right(1), timer0_int_handler@left(
      +1), 
  7278 ;;		 -> timer0_int_handler@forward(1), timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(332), 
  7279 ;;		 -> FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), 
  7280 ;;		 -> ToMainLow_MQ(332), main@msgbuffer(31), main@t1thread_data(2), main@ic(72), 
  7281 ;;		 -> main@uc(66), 
  7282 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  7283 ;;		 -> FromMainLow_MQ.queue(330), FromMainHigh_MQ.queue(330), ToMainHigh_MQ.queue(330), ToMainLow_MQ.queue(330), 
  7284 ;;		 -> SensorData_MQ.queue(330), MotorData_MQ.queue(330), timer0_int_handler@val(2), NULL(0), 
  7285 ;;		 -> FromMainHigh_MQ(332), FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), 
  7286 ;;		 -> ToMainHigh_MQ(332), ToMainLow_MQ(332), main@msgbuffer(31), main@ic(72), 
  7287 ;;		 -> main@uc(66), 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  2    0[COMRAM] PTR void 
  7290 ;; Registers used:
  7291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7297 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7298 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7300 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7301 ;;Total ram usage:       10 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:    5
  7304 ;; This function calls:
  7305 ;;		Nothing
  7306 ;; This function is called by:
  7307 ;;		i1_send_msg
  7308 ;;		i1_recv_msg
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312                           	psect	text46
  7313  001B5E                     __ptext46:
  7314                           	opt stack 0
  7315  001B5E                     i1_memcpy:
  7316                           	opt stack 17
  7317                           
  7318                           ;incstack = 0
  7319  001B5E  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  7320  001B62  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  7321  001B66  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  7322  001B6A  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  7323  001B6E  D00E               	goto	i1l2344
  7324  001B70                     i1l2338:
  7325  001B70  C009  FFD9         	movff	i1memcpy@s,fsr2l
  7326  001B74  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  7327  001B78  C007  FFE1         	movff	i1memcpy@d,fsr1l
  7328  001B7C  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  7329  001B80  CFDF FFE7          	movff	indf2,indf1
  7330  001B84  4A09               	infsnz	i1memcpy@s,f,c
  7331  001B86  2A0A               	incf	i1memcpy@s+1,f,c
  7332  001B88  4A07               	infsnz	i1memcpy@d,f,c
  7333  001B8A  2A08               	incf	i1memcpy@d+1,f,c
  7334  001B8C                     i1l2344:
  7335  001B8C  0605               	decf	i1memcpy@n,f,c
  7336  001B8E  A0D8               	btfss	status,0,c
  7337  001B90  0606               	decf	i1memcpy@n+1,f,c
  7338  001B92  2805               	incf	i1memcpy@n& (0+255),w,c
  7339  001B94  B4D8               	btfsc	status,2,c
  7340  001B96  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  7341  001B98  B4D8               	btfsc	status,2,c
  7342                           
  7343                           ;	Return value of i1_memcpy is never used
  7344  001B9A  0012               	return	
  7345  001B9C  D7E9               	goto	i1l2338
  7346  001B9E                     __end_ofi1_memcpy:
  7347                           	opt stack 0
  7348                           pclatu	equ	0xFFB
  7349                           pclath	equ	0xFFA
  7350                           tblptru	equ	0xFF8
  7351                           tblptrh	equ	0xFF7
  7352                           tblptrl	equ	0xFF6
  7353                           tablat	equ	0xFF5
  7354                           prodh	equ	0xFF4
  7355                           prodl	equ	0xFF3
  7356                           intcon	equ	0xFF2
  7357                           intcon2	equ	0xFF1
  7358                           postinc0	equ	0xFEE
  7359                           fsr0h	equ	0xFEA
  7360                           fsr0l	equ	0xFE9
  7361                           wreg	equ	0xFE8
  7362                           indf1	equ	0xFE7
  7363                           postdec1	equ	0xFE5
  7364                           fsr1h	equ	0xFE2
  7365                           fsr1l	equ	0xFE1
  7366                           bsr	equ	0xFE0
  7367                           indf2	equ	0xFDF
  7368                           postinc2	equ	0xFDE
  7369                           postdec2	equ	0xFDD
  7370                           fsr2h	equ	0xFDA
  7371                           fsr2l	equ	0xFD9
  7372                           status	equ	0xFD8
  7373                           
  7374 ;; *************** function i1___awmod *****************
  7375 ;; Defined at:
  7376 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  dividend        2    0[COMRAM] int 
  7379 ;;  divisor         2    2[COMRAM] int 
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;  __awmod         1    5[COMRAM] unsigned char 
  7382 ;;  __awmod         1    4[COMRAM] unsigned char 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  2    0[COMRAM] int 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2, status,0, prodl
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7392 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7393 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7395 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7396 ;;Total ram usage:        6 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:    5
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_timer0_int_handler
  7403 ;;		i1_send_msg
  7404 ;;		i1_recv_msg
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           	psect	text47
  7409  001654                     __ptext47:
  7410                           	opt stack 0
  7411  001654                     i1___awmod:
  7412                           	opt stack 17
  7413                           
  7414                           ;incstack = 0
  7415  001654  0E00               	movlw	0
  7416  001656  6E06               	movwf	i1___awmod@sign,c
  7417  001658  5002               	movf	i1___awmod@dividend+1,w,c
  7418  00165A  0A80               	xorlw	128
  7419  00165C  6EF3               	movwf	prodl,c
  7420  00165E  0E80               	movlw	128
  7421  001660  5CF3               	subwf	prodl,w,c
  7422  001662  0E00               	movlw	0
  7423  001664  B4D8               	btfsc	status,2,c
  7424  001666  5C01               	subwf	i1___awmod@dividend,w,c
  7425  001668  B0D8               	btfsc	status,0,c
  7426  00166A  D006               	goto	i1l2364
  7427  00166C  6C01               	negf	i1___awmod@dividend,c
  7428  00166E  1E02               	comf	i1___awmod@dividend+1,f,c
  7429  001670  B0D8               	btfsc	status,0,c
  7430  001672  2A02               	incf	i1___awmod@dividend+1,f,c
  7431  001674  0E01               	movlw	1
  7432  001676  6E06               	movwf	i1___awmod@sign,c
  7433  001678                     i1l2364:
  7434  001678  5004               	movf	i1___awmod@divisor+1,w,c
  7435  00167A  0A80               	xorlw	128
  7436  00167C  6EF3               	movwf	prodl,c
  7437  00167E  0E80               	movlw	128
  7438  001680  5CF3               	subwf	prodl,w,c
  7439  001682  0E00               	movlw	0
  7440  001684  B4D8               	btfsc	status,2,c
  7441  001686  5C03               	subwf	i1___awmod@divisor,w,c
  7442  001688  B0D8               	btfsc	status,0,c
  7443  00168A  D004               	goto	i1l2368
  7444  00168C  6C03               	negf	i1___awmod@divisor,c
  7445  00168E  1E04               	comf	i1___awmod@divisor+1,f,c
  7446  001690  B0D8               	btfsc	status,0,c
  7447  001692  2A04               	incf	i1___awmod@divisor+1,f,c
  7448  001694                     i1l2368:
  7449  001694  5004               	movf	i1___awmod@divisor+1,w,c
  7450  001696  1003               	iorwf	i1___awmod@divisor,w,c
  7451  001698  B4D8               	btfsc	status,2,c
  7452  00169A  D018               	goto	i1l2384
  7453  00169C  0E01               	movlw	1
  7454  00169E  6E05               	movwf	i1___awmod@counter,c
  7455  0016A0  D004               	goto	i1l2374
  7456  0016A2                     i1l2372:
  7457  0016A2  90D8               	bcf	status,0,c
  7458  0016A4  3603               	rlcf	i1___awmod@divisor,f,c
  7459  0016A6  3604               	rlcf	i1___awmod@divisor+1,f,c
  7460  0016A8  2A05               	incf	i1___awmod@counter,f,c
  7461  0016AA                     i1l2374:
  7462  0016AA  AE04               	btfss	i1___awmod@divisor+1,7,c
  7463  0016AC  D7FA               	goto	i1l2372
  7464  0016AE                     i1l2376:
  7465  0016AE  5003               	movf	i1___awmod@divisor,w,c
  7466  0016B0  5C01               	subwf	i1___awmod@dividend,w,c
  7467  0016B2  5004               	movf	i1___awmod@divisor+1,w,c
  7468  0016B4  5802               	subwfb	i1___awmod@dividend+1,w,c
  7469  0016B6  A0D8               	btfss	status,0,c
  7470  0016B8  D004               	goto	i1l2380
  7471  0016BA  5003               	movf	i1___awmod@divisor,w,c
  7472  0016BC  5E01               	subwf	i1___awmod@dividend,f,c
  7473  0016BE  5004               	movf	i1___awmod@divisor+1,w,c
  7474  0016C0  5A02               	subwfb	i1___awmod@dividend+1,f,c
  7475  0016C2                     i1l2380:
  7476  0016C2  90D8               	bcf	status,0,c
  7477  0016C4  3204               	rrcf	i1___awmod@divisor+1,f,c
  7478  0016C6  3203               	rrcf	i1___awmod@divisor,f,c
  7479  0016C8  2E05               	decfsz	i1___awmod@counter,f,c
  7480  0016CA  D7F1               	goto	i1l2376
  7481  0016CC                     i1l2384:
  7482  0016CC  5006               	movf	i1___awmod@sign,w,c
  7483  0016CE  B4D8               	btfsc	status,2,c
  7484  0016D0  D004               	goto	i1l2388
  7485  0016D2  6C01               	negf	i1___awmod@dividend,c
  7486  0016D4  1E02               	comf	i1___awmod@dividend+1,f,c
  7487  0016D6  B0D8               	btfsc	status,0,c
  7488  0016D8  2A02               	incf	i1___awmod@dividend+1,f,c
  7489  0016DA                     i1l2388:
  7490  0016DA  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  7491  0016DE  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  7492  0016E2  0012               	return	
  7493  0016E4                     __end_ofi1___awmod:
  7494                           	opt stack 0
  7495                           pclatu	equ	0xFFB
  7496                           pclath	equ	0xFFA
  7497                           tblptru	equ	0xFF8
  7498                           tblptrh	equ	0xFF7
  7499                           tblptrl	equ	0xFF6
  7500                           tablat	equ	0xFF5
  7501                           prodh	equ	0xFF4
  7502                           prodl	equ	0xFF3
  7503                           intcon	equ	0xFF2
  7504                           intcon2	equ	0xFF1
  7505                           postinc0	equ	0xFEE
  7506                           fsr0h	equ	0xFEA
  7507                           fsr0l	equ	0xFE9
  7508                           wreg	equ	0xFE8
  7509                           indf1	equ	0xFE7
  7510                           postdec1	equ	0xFE5
  7511                           fsr1h	equ	0xFE2
  7512                           fsr1l	equ	0xFE1
  7513                           bsr	equ	0xFE0
  7514                           indf2	equ	0xFDF
  7515                           postinc2	equ	0xFDE
  7516                           postdec2	equ	0xFDD
  7517                           fsr2h	equ	0xFDA
  7518                           fsr2l	equ	0xFD9
  7519                           status	equ	0xFD8
  7520                           
  7521 ;; *************** function _InterruptHandlerHigh *****************
  7522 ;; Defined at:
  7523 ;;		line 85 in file "../src/interrupts.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;		None
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;		None
  7528 ;; Return value:  Size  Location     Type
  7529 ;;		None               void
  7530 ;; Registers used:
  7531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7539 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7540 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7541 ;;Total ram usage:       14 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; Hardware stack levels required when called:    4
  7544 ;; This function calls:
  7545 ;;		_SleepIfOkay
  7546 ;;		_i2c_master_int_handler
  7547 ;; This function is called by:
  7548 ;;		Interrupt level 2
  7549 ;; This function uses a non-reentrant model
  7550 ;;
  7551                           
  7552                           	psect	intcode
  7553  000008                     __pintcode:
  7554                           	opt stack 0
  7555  000008                     _InterruptHandlerHigh:
  7556                           	opt stack 17
  7557                           
  7558                           ;incstack = 0
  7559  000008  CFFA F082          	movff	pclath,??_InterruptHandlerHigh
  7560  00000C  CFFB F083          	movff	pclatu,??_InterruptHandlerHigh+1
  7561  000010  CFE9 F084          	movff	fsr0l,??_InterruptHandlerHigh+2
  7562  000014  EFF4  F00B         	goto	int_func
  7563                           pclatu	equ	0xFFB
  7564                           pclath	equ	0xFFA
  7565                           tblptru	equ	0xFF8
  7566                           tblptrh	equ	0xFF7
  7567                           tblptrl	equ	0xFF6
  7568                           tablat	equ	0xFF5
  7569                           prodh	equ	0xFF4
  7570                           prodl	equ	0xFF3
  7571                           intcon	equ	0xFF2
  7572                           intcon2	equ	0xFF1
  7573                           postinc0	equ	0xFEE
  7574                           fsr0h	equ	0xFEA
  7575                           fsr0l	equ	0xFE9
  7576                           wreg	equ	0xFE8
  7577                           indf1	equ	0xFE7
  7578                           postdec1	equ	0xFE5
  7579                           fsr1h	equ	0xFE2
  7580                           fsr1l	equ	0xFE1
  7581                           bsr	equ	0xFE0
  7582                           indf2	equ	0xFDF
  7583                           postinc2	equ	0xFDE
  7584                           postdec2	equ	0xFDD
  7585                           fsr2h	equ	0xFDA
  7586                           fsr2l	equ	0xFD9
  7587                           status	equ	0xFD8
  7588                           
  7589                           	psect	intcode_body
  7590  0017E8                     __pintcode_body:
  7591                           	opt stack 17
  7592  0017E8                     int_func:
  7593                           	opt stack 17
  7594  0017E8  CFEA F085          	movff	fsr0h,??_InterruptHandlerHigh+3
  7595  0017EC  CFE1 F086          	movff	fsr1l,??_InterruptHandlerHigh+4
  7596  0017F0  CFE2 F087          	movff	fsr1h,??_InterruptHandlerHigh+5
  7597  0017F4  CFD9 F088          	movff	fsr2l,??_InterruptHandlerHigh+6
  7598  0017F8  CFDA F089          	movff	fsr2h,??_InterruptHandlerHigh+7
  7599  0017FC  CFF3 F08A          	movff	prodl,??_InterruptHandlerHigh+8
  7600  001800  CFF4 F08B          	movff	prodh,??_InterruptHandlerHigh+9
  7601  001804  CFF6 F08C          	movff	tblptrl,??_InterruptHandlerHigh+10
  7602  001808  CFF7 F08D          	movff	tblptrh,??_InterruptHandlerHigh+11
  7603  00180C  CFF8 F08E          	movff	tblptru,??_InterruptHandlerHigh+12
  7604  001810  CFF5 F08F          	movff	tablat,??_InterruptHandlerHigh+13
  7605                           
  7606                           ;interrupts.c: 90: if (PIR1bits.SSPIF && PIE1bits.SSP1IE) {
  7607  001814  B69E               	btfsc	3998,3,c	;volatile
  7608  001816  A69D               	btfss	3997,3,c	;volatile
  7609  001818  D003               	goto	i2l3230
  7610                           
  7611                           ;interrupts.c: 92: PIR1bits.SSPIF = 0;
  7612  00181A  969E               	bcf	3998,3,c	;volatile
  7613                           
  7614                           ;interrupts.c: 94: i2c_master_int_handler();
  7615  00181C  EC67  F000         	call	_i2c_master_int_handler	;wreg free
  7616  001820                     i2l3230:
  7617                           
  7618                           ;interrupts.c: 95: }
  7619                           ;interrupts.c: 104: SleepIfOkay();
  7620  001820  EC72  F00B         	call	_SleepIfOkay	;wreg free
  7621  001824  C08F  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  7622  001828  C08E  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  7623  00182C  C08D  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  7624  001830  C08C  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  7625  001834  C08B  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  7626  001838  C08A  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  7627  00183C  C089  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  7628  001840  C088  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  7629  001844  C087  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  7630  001848  C086  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  7631  00184C  C085  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  7632  001850  C084  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  7633  001854  C083  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  7634  001858  C082  FFFA         	movff	??_InterruptHandlerHigh,pclath
  7635  00185C  0011               	retfie		f
  7636  00185E                     __end_of_InterruptHandlerHigh:
  7637                           	opt stack 0
  7638                           pclatu	equ	0xFFB
  7639                           pclath	equ	0xFFA
  7640                           tblptru	equ	0xFF8
  7641                           tblptrh	equ	0xFF7
  7642                           tblptrl	equ	0xFF6
  7643                           tablat	equ	0xFF5
  7644                           prodh	equ	0xFF4
  7645                           prodl	equ	0xFF3
  7646                           intcon	equ	0xFF2
  7647                           intcon2	equ	0xFF1
  7648                           postinc0	equ	0xFEE
  7649                           fsr0h	equ	0xFEA
  7650                           fsr0l	equ	0xFE9
  7651                           wreg	equ	0xFE8
  7652                           indf1	equ	0xFE7
  7653                           postdec1	equ	0xFE5
  7654                           fsr1h	equ	0xFE2
  7655                           fsr1l	equ	0xFE1
  7656                           bsr	equ	0xFE0
  7657                           indf2	equ	0xFDF
  7658                           postinc2	equ	0xFDE
  7659                           postdec2	equ	0xFDD
  7660                           fsr2h	equ	0xFDA
  7661                           fsr2l	equ	0xFD9
  7662                           status	equ	0xFD8
  7663                           
  7664 ;; *************** function _i2c_master_int_handler *****************
  7665 ;; Defined at:
  7666 ;;		line 140 in file "../src/my_i2c.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;		None
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  i2c_data        1    0        unsigned char 
  7671 ;; Return value:  Size  Location     Type
  7672 ;;		None               void
  7673 ;; Registers used:
  7674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7682 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7683 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7684 ;;Total ram usage:        5 bytes
  7685 ;; Hardware stack levels used:    1
  7686 ;; Hardware stack levels required when called:    3
  7687 ;; This function calls:
  7688 ;;		i2_FromMainHigh_recvmsg
  7689 ;;		i2_ToMainHigh_sendmsg
  7690 ;; This function is called by:
  7691 ;;		_InterruptHandlerHigh
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           	psect	text49
  7696  0000CE                     __ptext49:
  7697                           	opt stack 0
  7698  0000CE                     _i2c_master_int_handler:
  7699                           	opt stack 17
  7700                           
  7701                           ;my_i2c.c: 141: unsigned char i2c_data;
  7702                           ;my_i2c.c: 143: switch (ic_ptr->status) {
  7703                           
  7704                           ;incstack = 0
  7705  0000CE  D229               	goto	i2l2844
  7706  0000D0                     i2l2750:
  7707                           
  7708                           ;my_i2c.c: 161: {
  7709                           ;my_i2c.c: 163: if (ic_ptr->slave_addr == ic_ptr->sensor_addr || ic_ptr->slave_addr == i
      +                          c_ptr->motor_addr) {
  7710  0000D0  0100               	movlb	0	; () banked
  7711  0000D2  EE20 F045          	lfsr	2,69
  7712  0000D6  0100               	movlb	0	; () banked
  7713  0000D8  51B3               	movf	_ic_ptr& (0+255),w,b
  7714  0000DA  26D9               	addwf	fsr2l,f,c
  7715  0000DC  0100               	movlb	0	; () banked
  7716  0000DE  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7717  0000E0  22DA               	addwfc	fsr2h,f,c
  7718  0000E2  50DF               	movf	indf2,w,c
  7719  0000E4  0100               	movlb	0	; () banked
  7720  0000E6  6F7D               	movwf	??_i2c_master_int_handler& (0+255),b
  7721  0000E8  0100               	movlb	0	; () banked
  7722  0000EA  EE20 F044          	lfsr	2,68
  7723  0000EE  0100               	movlb	0	; () banked
  7724  0000F0  51B3               	movf	_ic_ptr& (0+255),w,b
  7725  0000F2  26D9               	addwf	fsr2l,f,c
  7726  0000F4  0100               	movlb	0	; () banked
  7727  0000F6  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7728  0000F8  22DA               	addwfc	fsr2h,f,c
  7729  0000FA  50DF               	movf	indf2,w,c
  7730  0000FC  0100               	movlb	0	; () banked
  7731  0000FE  197D               	xorwf	??_i2c_master_int_handler& (0+255),w,b
  7732  000100  B4D8               	btfsc	status,2,c
  7733  000102  D015               	goto	i2l2754
  7734                           
  7735                           ; BSR set to: 0
  7736  000104  0100               	movlb	0	; () banked
  7737  000106  EE20 F044          	lfsr	2,68
  7738  00010A  0100               	movlb	0	; () banked
  7739  00010C  51B3               	movf	_ic_ptr& (0+255),w,b
  7740  00010E  26D9               	addwf	fsr2l,f,c
  7741  000110  0100               	movlb	0	; () banked
  7742  000112  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7743  000114  22DA               	addwfc	fsr2h,f,c
  7744  000116  0100               	movlb	0	; () banked
  7745  000118  EE10 F046          	lfsr	1,70
  7746  00011C  0100               	movlb	0	; () banked
  7747  00011E  51B3               	movf	_ic_ptr& (0+255),w,b
  7748  000120  26E1               	addwf	fsr1l,f,c
  7749  000122  0100               	movlb	0	; () banked
  7750  000124  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7751  000126  22E2               	addwfc	fsr1h,f,c
  7752  000128  50E7               	movf	indf1,w,c
  7753  00012A  62DF               	cpfseq	indf2,c
  7754  00012C  D01B               	goto	i2l2756
  7755  00012E                     i2l2754:
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;my_i2c.c: 164: ic_ptr->status = 0x9;
  7759  00012E  0100               	movlb	0	; () banked
  7760  000130  EE20 F021          	lfsr	2,33
  7761  000134  0100               	movlb	0	; () banked
  7762  000136  51B3               	movf	_ic_ptr& (0+255),w,b
  7763  000138  26D9               	addwf	fsr2l,f,c
  7764  00013A  0100               	movlb	0	; () banked
  7765  00013C  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7766  00013E  22DA               	addwfc	fsr2h,f,c
  7767  000140  0E09               	movlw	9
  7768  000142  6EDF               	movwf	indf2,c
  7769                           
  7770                           ;my_i2c.c: 165: SSP1BUF = ((ic_ptr->slave_addr)) + 1;
  7771  000144  0100               	movlb	0	; () banked
  7772  000146  EE20 F044          	lfsr	2,68
  7773  00014A  0100               	movlb	0	; () banked
  7774  00014C  51B3               	movf	_ic_ptr& (0+255),w,b
  7775  00014E  26D9               	addwf	fsr2l,f,c
  7776  000150  0100               	movlb	0	; () banked
  7777  000152  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7778  000154  22DA               	addwfc	fsr2h,f,c
  7779  000156  50DF               	movf	indf2,w,c
  7780  000158  0100               	movlb	0	; () banked
  7781  00015A  6F7D               	movwf	??_i2c_master_int_handler& (0+255),b
  7782  00015C  0100               	movlb	0	; () banked
  7783  00015E  297D               	incf	??_i2c_master_int_handler& (0+255),w,b
  7784  000160  6EC9               	movwf	4041,c	;volatile
  7785                           
  7786                           ;my_i2c.c: 166: } else {
  7787  000162  0012               	return	
  7788  000164                     i2l2756:
  7789                           
  7790                           ; BSR set to: 0
  7791                           ;my_i2c.c: 167: ic_ptr->status = 0x1;
  7792  000164  0100               	movlb	0	; () banked
  7793  000166  EE20 F021          	lfsr	2,33
  7794  00016A  0100               	movlb	0	; () banked
  7795  00016C  51B3               	movf	_ic_ptr& (0+255),w,b
  7796  00016E  26D9               	addwf	fsr2l,f,c
  7797  000170  0100               	movlb	0	; () banked
  7798  000172  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7799  000174  22DA               	addwfc	fsr2h,f,c
  7800  000176  0E01               	movlw	1
  7801  000178  6EDF               	movwf	indf2,c
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;my_i2c.c: 168: SSP1CON2bits.PEN = 1;
  7805  00017A  84C5               	bsf	4037,2,c	;volatile
  7806  00017C  0012               	return	
  7807  00017E                     i2l316:
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;my_i2c.c: 173: {
  7811                           ;my_i2c.c: 175: if (SSP1CON2bits.ACKSTAT == 0) {
  7812  00017E  BCC5               	btfsc	4037,6,c	;volatile
  7813  000180  D00E               	goto	i2l2766
  7814                           
  7815                           ; BSR set to: 0
  7816                           ;my_i2c.c: 176: ic_ptr->status = 0xA;
  7817  000182  0100               	movlb	0	; () banked
  7818  000184  EE20 F021          	lfsr	2,33
  7819  000188  0100               	movlb	0	; () banked
  7820  00018A  51B3               	movf	_ic_ptr& (0+255),w,b
  7821  00018C  26D9               	addwf	fsr2l,f,c
  7822  00018E  0100               	movlb	0	; () banked
  7823  000190  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7824  000192  22DA               	addwfc	fsr2h,f,c
  7825  000194  0E0A               	movlw	10
  7826  000196  6EDF               	movwf	indf2,c
  7827                           
  7828                           ; BSR set to: 0
  7829                           ;my_i2c.c: 177: SSP1CON2bits.RCEN = 1;
  7830  000198  86C5               	bsf	4037,3,c	;volatile
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;my_i2c.c: 178: SSP1CON2bits.SEN = 1;
  7834  00019A  80C5               	bsf	4037,0,c	;volatile
  7835                           
  7836                           ;my_i2c.c: 179: } else {
  7837  00019C  0012               	return	
  7838  00019E                     i2l2766:
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;my_i2c.c: 180: ic_ptr->status = 0x1;
  7842  00019E  0100               	movlb	0	; () banked
  7843  0001A0  EE20 F021          	lfsr	2,33
  7844  0001A4  0100               	movlb	0	; () banked
  7845  0001A6  51B3               	movf	_ic_ptr& (0+255),w,b
  7846  0001A8  26D9               	addwf	fsr2l,f,c
  7847  0001AA  0100               	movlb	0	; () banked
  7848  0001AC  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7849  0001AE  22DA               	addwfc	fsr2h,f,c
  7850  0001B0  0E01               	movlw	1
  7851  0001B2  6EDF               	movwf	indf2,c
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;my_i2c.c: 181: ToMainHigh_sendmsg(0, 53, 0);
  7855  0001B4  0E35               	movlw	53
  7856  0001B6  0100               	movlb	0	; () banked
  7857  0001B8  6F76               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  7858  0001BA  0E00               	movlw	0
  7859  0001BC  0100               	movlb	0	; () banked
  7860  0001BE  6F78               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  7861  0001C0  0E00               	movlw	0
  7862  0001C2  0100               	movlb	0	; () banked
  7863  0001C4  6F77               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  7864  0001C6  0E00               	movlw	0
  7865  0001C8  EC36  F00F         	call	i2_ToMainHigh_sendmsg
  7866                           
  7867                           ;my_i2c.c: 182: SSP1CON2bits.PEN = 1;
  7868  0001CC  84C5               	bsf	4037,2,c	;volatile
  7869  0001CE  0012               	return	
  7870  0001D0                     i2l2772:
  7871                           
  7872                           ;my_i2c.c: 187: {
  7873                           ;my_i2c.c: 189: if (ic_ptr->bufind != (ic_ptr->buflen - 1)) {
  7874  0001D0  0EFF               	movlw	255
  7875  0001D2  0100               	movlb	0	; () banked
  7876  0001D4  6F7D               	movwf	??_i2c_master_int_handler& (0+255),b
  7877  0001D6  0EFF               	movlw	255
  7878  0001D8  6F7E               	movwf	(??_i2c_master_int_handler+1)& (0+255),b
  7879  0001DA  0100               	movlb	0	; () banked
  7880  0001DC  EE20 F01E          	lfsr	2,30
  7881  0001E0  0100               	movlb	0	; () banked
  7882  0001E2  51B3               	movf	_ic_ptr& (0+255),w,b
  7883  0001E4  26D9               	addwf	fsr2l,f,c
  7884  0001E6  0100               	movlb	0	; () banked
  7885  0001E8  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7886  0001EA  22DA               	addwfc	fsr2h,f,c
  7887  0001EC  50DF               	movf	indf2,w,c
  7888  0001EE  0100               	movlb	0	; () banked
  7889  0001F0  6F7F               	movwf	(??_i2c_master_int_handler+2)& (0+255),b
  7890  0001F2  6B80               	clrf	(??_i2c_master_int_handler+3)& (0+255),b
  7891  0001F4  0100               	movlb	0	; () banked
  7892  0001F6  517D               	movf	??_i2c_master_int_handler& (0+255),w,b
  7893  0001F8  0100               	movlb	0	; () banked
  7894  0001FA  277F               	addwf	(??_i2c_master_int_handler+2)& (0+255),f,b
  7895  0001FC  0100               	movlb	0	; () banked
  7896  0001FE  517E               	movf	(??_i2c_master_int_handler+1)& (0+255),w,b
  7897  000200  0100               	movlb	0	; () banked
  7898  000202  2380               	addwfc	(??_i2c_master_int_handler+3)& (0+255),f,b
  7899  000204  0100               	movlb	0	; () banked
  7900  000206  EE20 F01F          	lfsr	2,31
  7901  00020A  0100               	movlb	0	; () banked
  7902  00020C  51B3               	movf	_ic_ptr& (0+255),w,b
  7903  00020E  26D9               	addwf	fsr2l,f,c
  7904  000210  0100               	movlb	0	; () banked
  7905  000212  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7906  000214  22DA               	addwfc	fsr2h,f,c
  7907  000216  50DF               	movf	indf2,w,c
  7908  000218  0100               	movlb	0	; () banked
  7909  00021A  6F81               	movwf	(??_i2c_master_int_handler+4)& (0+255),b
  7910  00021C  0100               	movlb	0	; () banked
  7911  00021E  5181               	movf	(??_i2c_master_int_handler+4)& (0+255),w,b
  7912  000220  0100               	movlb	0	; () banked
  7913  000222  197F               	xorwf	(??_i2c_master_int_handler+2)& (0+255),w,b
  7914  000224  1180               	iorwf	(??_i2c_master_int_handler+3)& (0+255),w,b
  7915  000226  B4D8               	btfsc	status,2,c
  7916  000228  D032               	goto	i2l2786
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;my_i2c.c: 190: ic_ptr->status = 0xB;
  7920  00022A  0100               	movlb	0	; () banked
  7921  00022C  EE20 F021          	lfsr	2,33
  7922  000230  0100               	movlb	0	; () banked
  7923  000232  51B3               	movf	_ic_ptr& (0+255),w,b
  7924  000234  26D9               	addwf	fsr2l,f,c
  7925  000236  0100               	movlb	0	; () banked
  7926  000238  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7927  00023A  22DA               	addwfc	fsr2h,f,c
  7928  00023C  0E0B               	movlw	11
  7929  00023E  6EDF               	movwf	indf2,c
  7930                           
  7931                           ; BSR set to: 0
  7932                           ;my_i2c.c: 191: ic_ptr->buffer[ic_ptr->bufind] = SSP1BUF;
  7933  000240  0100               	movlb	0	; () banked
  7934  000242  EE20 F01F          	lfsr	2,31
  7935  000246  0100               	movlb	0	; () banked
  7936  000248  51B3               	movf	_ic_ptr& (0+255),w,b
  7937  00024A  26D9               	addwf	fsr2l,f,c
  7938  00024C  0100               	movlb	0	; () banked
  7939  00024E  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7940  000250  22DA               	addwfc	fsr2h,f,c
  7941  000252  50DF               	movf	indf2,w,c
  7942  000254  0100               	movlb	0	; () banked
  7943  000256  6F7D               	movwf	??_i2c_master_int_handler& (0+255),b
  7944  000258  0100               	movlb	0	; () banked
  7945  00025A  517D               	movf	??_i2c_master_int_handler& (0+255),w,b
  7946  00025C  0D01               	mullw	1
  7947  00025E  50F3               	movf	prodl,w,c
  7948  000260  0100               	movlb	0	; () banked
  7949  000262  25B3               	addwf	_ic_ptr& (0+255),w,b
  7950  000264  6ED9               	movwf	fsr2l,c
  7951  000266  50F4               	movf	prodh,w,c
  7952  000268  0100               	movlb	0	; () banked
  7953  00026A  21B4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7954  00026C  6EDA               	movwf	fsr2h,c
  7955  00026E  CFC9 FFDF          	movff	4041,indf2	;volatile
  7956                           
  7957                           ; BSR set to: 0
  7958                           ;my_i2c.c: 192: ic_ptr->bufind++;
  7959  000272  0100               	movlb	0	; () banked
  7960  000274  EE20 F01F          	lfsr	2,31
  7961  000278  0100               	movlb	0	; () banked
  7962  00027A  51B3               	movf	_ic_ptr& (0+255),w,b
  7963  00027C  26D9               	addwf	fsr2l,f,c
  7964  00027E  0100               	movlb	0	; () banked
  7965  000280  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7966  000282  22DA               	addwfc	fsr2h,f,c
  7967  000284  2ADF               	incf	indf2,f,c
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;my_i2c.c: 193: SSP1CON2bits.ACKEN = 1;
  7971  000286  88C5               	bsf	4037,4,c	;volatile
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;my_i2c.c: 194: SSP1CON2bits.ACKDT = 0;
  7975  000288  9AC5               	bcf	4037,5,c	;volatile
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;my_i2c.c: 195: SSP1CON2bits.SEN = 1;
  7979  00028A  80C5               	bsf	4037,0,c	;volatile
  7980                           
  7981                           ;my_i2c.c: 196: } else {
  7982  00028C  0012               	return	
  7983  00028E                     i2l2786:
  7984                           
  7985                           ; BSR set to: 0
  7986                           ;my_i2c.c: 197: ic_ptr->status = 0xC;
  7987  00028E  0100               	movlb	0	; () banked
  7988  000290  EE20 F021          	lfsr	2,33
  7989  000294  0100               	movlb	0	; () banked
  7990  000296  51B3               	movf	_ic_ptr& (0+255),w,b
  7991  000298  26D9               	addwf	fsr2l,f,c
  7992  00029A  0100               	movlb	0	; () banked
  7993  00029C  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  7994  00029E  22DA               	addwfc	fsr2h,f,c
  7995  0002A0  0E0C               	movlw	12
  7996  0002A2  6EDF               	movwf	indf2,c
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;my_i2c.c: 198: SSP1CON2bits.ACKEN = 1;
  8000  0002A4  88C5               	bsf	4037,4,c	;volatile
  8001                           
  8002                           ; BSR set to: 0
  8003                           ;my_i2c.c: 199: SSP1CON2bits.ACKDT = 1;
  8004  0002A6  8AC5               	bsf	4037,5,c	;volatile
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;my_i2c.c: 200: SSP1CON2bits.SEN = 1;
  8008  0002A8  80C5               	bsf	4037,0,c	;volatile
  8009  0002AA  0012               	return	
  8010  0002AC                     i2l2794:
  8011                           
  8012                           ; BSR set to: 0
  8013                           ;my_i2c.c: 205: {
  8014                           ;my_i2c.c: 207: ic_ptr->status = 0xA;
  8015  0002AC  0100               	movlb	0	; () banked
  8016  0002AE  EE20 F021          	lfsr	2,33
  8017  0002B2  0100               	movlb	0	; () banked
  8018  0002B4  51B3               	movf	_ic_ptr& (0+255),w,b
  8019  0002B6  26D9               	addwf	fsr2l,f,c
  8020  0002B8  0100               	movlb	0	; () banked
  8021  0002BA  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8022  0002BC  22DA               	addwfc	fsr2h,f,c
  8023  0002BE  0E0A               	movlw	10
  8024  0002C0  6EDF               	movwf	indf2,c
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;my_i2c.c: 208: SSP1CON2bits.RCEN = 1;
  8028  0002C2  86C5               	bsf	4037,3,c	;volatile
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;my_i2c.c: 209: SSP1CON2bits.SEN = 1;
  8032  0002C4  80C5               	bsf	4037,0,c	;volatile
  8033                           
  8034                           ;my_i2c.c: 210: break;
  8035  0002C6  0012               	return	
  8036  0002C8                     i2l2800:
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;my_i2c.c: 213: {
  8040                           ;my_i2c.c: 215: ic_ptr->status = 0x1;
  8041  0002C8  0100               	movlb	0	; () banked
  8042  0002CA  EE20 F021          	lfsr	2,33
  8043  0002CE  0100               	movlb	0	; () banked
  8044  0002D0  51B3               	movf	_ic_ptr& (0+255),w,b
  8045  0002D2  26D9               	addwf	fsr2l,f,c
  8046  0002D4  0100               	movlb	0	; () banked
  8047  0002D6  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8048  0002D8  22DA               	addwfc	fsr2h,f,c
  8049  0002DA  0E01               	movlw	1
  8050  0002DC  6EDF               	movwf	indf2,c
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;my_i2c.c: 216: ToMainHigh_sendmsg(ic_ptr->buflen, 52, (void *) ic_ptr->buffer);
  8054  0002DE  0E34               	movlw	52
  8055  0002E0  0100               	movlb	0	; () banked
  8056  0002E2  6F76               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8057  0002E4  0100               	movlb	0	; () banked
  8058  0002E6  C0B4  F078         	movff	_ic_ptr+1,i2ToMainHigh_sendmsg@data+1
  8059  0002EA  0100               	movlb	0	; () banked
  8060  0002EC  C0B3  F077         	movff	_ic_ptr,i2ToMainHigh_sendmsg@data
  8061  0002F0  0100               	movlb	0	; () banked
  8062  0002F2  EE20 F01E          	lfsr	2,30
  8063  0002F6  0100               	movlb	0	; () banked
  8064  0002F8  51B3               	movf	_ic_ptr& (0+255),w,b
  8065  0002FA  26D9               	addwf	fsr2l,f,c
  8066  0002FC  0100               	movlb	0	; () banked
  8067  0002FE  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8068  000300  22DA               	addwfc	fsr2h,f,c
  8069  000302  50DF               	movf	indf2,w,c
  8070  000304  EC36  F00F         	call	i2_ToMainHigh_sendmsg
  8071                           
  8072                           ;my_i2c.c: 217: SSP1CON2bits.PEN = 1;
  8073  000308  84C5               	bsf	4037,2,c	;volatile
  8074                           
  8075                           ;my_i2c.c: 218: break;
  8076  00030A  0012               	return	
  8077  00030C                     i2l2806:
  8078                           
  8079                           ;my_i2c.c: 225: {
  8080                           ;my_i2c.c: 227: ic_ptr->status = 0x7;
  8081  00030C  0100               	movlb	0	; () banked
  8082  00030E  EE20 F021          	lfsr	2,33
  8083  000312  0100               	movlb	0	; () banked
  8084  000314  51B3               	movf	_ic_ptr& (0+255),w,b
  8085  000316  26D9               	addwf	fsr2l,f,c
  8086  000318  0100               	movlb	0	; () banked
  8087  00031A  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8088  00031C  22DA               	addwfc	fsr2h,f,c
  8089  00031E  0E07               	movlw	7
  8090  000320  6EDF               	movwf	indf2,c
  8091                           
  8092                           ;my_i2c.c: 228: SSP1BUF = ((ic_ptr->slave_addr) + 0);
  8093  000322  0100               	movlb	0	; () banked
  8094  000324  EE20 F044          	lfsr	2,68
  8095  000328  0100               	movlb	0	; () banked
  8096  00032A  51B3               	movf	_ic_ptr& (0+255),w,b
  8097  00032C  26D9               	addwf	fsr2l,f,c
  8098  00032E  0100               	movlb	0	; () banked
  8099  000330  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8100  000332  22DA               	addwfc	fsr2h,f,c
  8101  000334  50DF               	movf	indf2,w,c
  8102  000336  6EC9               	movwf	4041,c	;volatile
  8103                           
  8104                           ;my_i2c.c: 229: break;
  8105  000338  0012               	return	
  8106  00033A                     i2l325:
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;my_i2c.c: 232: {
  8110                           ;my_i2c.c: 234: if (SSP1CON2bits.ACKDT == 0) {
  8111  00033A  BAC5               	btfsc	4037,5,c	;volatile
  8112  00033C  D0CB               	goto	i2l2834
  8113                           
  8114                           ; BSR set to: 0
  8115                           ;my_i2c.c: 235: SSP1CON2bits.ACKSTAT = 0;
  8116  00033E  9CC5               	bcf	4037,6,c	;volatile
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;my_i2c.c: 236: FromMainHigh_recvmsg(ic_ptr->outbuflen, (void *) 46, (void *) ic_ptr->ou
      +                          tbuffer);
  8120  000340  0E00               	movlw	0
  8121  000342  0100               	movlb	0	; () banked
  8122  000344  6F79               	movwf	(i2FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  8123  000346  0E2E               	movlw	46
  8124  000348  0100               	movlb	0	; () banked
  8125  00034A  6F78               	movwf	i2FromMainHigh_recvmsg@msgtype& (0+255),b
  8126  00034C  0E24               	movlw	36
  8127  00034E  0100               	movlb	0	; () banked
  8128  000350  25B3               	addwf	_ic_ptr& (0+255),w,b
  8129  000352  0100               	movlb	0	; () banked
  8130  000354  6F7A               	movwf	i2FromMainHigh_recvmsg@data& (0+255),b
  8131  000356  0E00               	movlw	0
  8132  000358  0100               	movlb	0	; () banked
  8133  00035A  21B4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8134  00035C  0100               	movlb	0	; () banked
  8135  00035E  6F7B               	movwf	(i2FromMainHigh_recvmsg@data+1)& (0+255),b
  8136  000360  0100               	movlb	0	; () banked
  8137  000362  EE20 F042          	lfsr	2,66
  8138  000366  0100               	movlb	0	; () banked
  8139  000368  51B3               	movf	_ic_ptr& (0+255),w,b
  8140  00036A  26D9               	addwf	fsr2l,f,c
  8141  00036C  0100               	movlb	0	; () banked
  8142  00036E  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8143  000370  22DA               	addwfc	fsr2h,f,c
  8144  000372  50DF               	movf	indf2,w,c
  8145  000374  ECAD  F00E         	call	i2_FromMainHigh_recvmsg
  8146                           
  8147                           ;my_i2c.c: 237: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  8148  000378  0100               	movlb	0	; () banked
  8149  00037A  EE20 F043          	lfsr	2,67
  8150  00037E  0100               	movlb	0	; () banked
  8151  000380  51B3               	movf	_ic_ptr& (0+255),w,b
  8152  000382  26D9               	addwf	fsr2l,f,c
  8153  000384  0100               	movlb	0	; () banked
  8154  000386  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8155  000388  22DA               	addwfc	fsr2h,f,c
  8156  00038A  50DF               	movf	indf2,w,c
  8157  00038C  0100               	movlb	0	; () banked
  8158  00038E  6F7D               	movwf	??_i2c_master_int_handler& (0+255),b
  8159  000390  0100               	movlb	0	; () banked
  8160  000392  EE20 F042          	lfsr	2,66
  8161  000396  0100               	movlb	0	; () banked
  8162  000398  51B3               	movf	_ic_ptr& (0+255),w,b
  8163  00039A  26D9               	addwf	fsr2l,f,c
  8164  00039C  0100               	movlb	0	; () banked
  8165  00039E  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8166  0003A0  22DA               	addwfc	fsr2h,f,c
  8167  0003A2  50DF               	movf	indf2,w,c
  8168  0003A4  0100               	movlb	0	; () banked
  8169  0003A6  5D7D               	subwf	??_i2c_master_int_handler& (0+255),w,b
  8170  0003A8  B0D8               	btfsc	status,0,c
  8171  0003AA  D034               	goto	i2l2816
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;my_i2c.c: 238: ic_ptr->status = 0x7;
  8175  0003AC  0100               	movlb	0	; () banked
  8176  0003AE  EE20 F021          	lfsr	2,33
  8177  0003B2  0100               	movlb	0	; () banked
  8178  0003B4  51B3               	movf	_ic_ptr& (0+255),w,b
  8179  0003B6  26D9               	addwf	fsr2l,f,c
  8180  0003B8  0100               	movlb	0	; () banked
  8181  0003BA  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8182  0003BC  22DA               	addwfc	fsr2h,f,c
  8183  0003BE  0E07               	movlw	7
  8184  0003C0  6EDF               	movwf	indf2,c
  8185                           
  8186                           ;my_i2c.c: 239: ic_ptr->outbufind++;
  8187  0003C2  0100               	movlb	0	; () banked
  8188  0003C4  EE20 F043          	lfsr	2,67
  8189  0003C8  0100               	movlb	0	; () banked
  8190  0003CA  51B3               	movf	_ic_ptr& (0+255),w,b
  8191  0003CC  26D9               	addwf	fsr2l,f,c
  8192  0003CE  0100               	movlb	0	; () banked
  8193  0003D0  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8194  0003D2  22DA               	addwfc	fsr2h,f,c
  8195  0003D4  2ADF               	incf	indf2,f,c
  8196                           
  8197                           ;my_i2c.c: 240: SSP1BUF = ic_ptr->outbuffer[ic_ptr->outbufind - 1];
  8198  0003D6  0100               	movlb	0	; () banked
  8199  0003D8  EE20 F043          	lfsr	2,67
  8200  0003DC  0100               	movlb	0	; () banked
  8201  0003DE  51B3               	movf	_ic_ptr& (0+255),w,b
  8202  0003E0  26D9               	addwf	fsr2l,f,c
  8203  0003E2  0100               	movlb	0	; () banked
  8204  0003E4  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8205  0003E6  22DA               	addwfc	fsr2h,f,c
  8206  0003E8  50DF               	movf	indf2,w,c
  8207  0003EA  0100               	movlb	0	; () banked
  8208  0003EC  6F7D               	movwf	??_i2c_master_int_handler& (0+255),b
  8209  0003EE  6B7E               	clrf	(??_i2c_master_int_handler+1)& (0+255),b
  8210  0003F0  0E23               	movlw	35
  8211  0003F2  0100               	movlb	0	; () banked
  8212  0003F4  277D               	addwf	??_i2c_master_int_handler& (0+255),f,b
  8213  0003F6  0E00               	movlw	0
  8214  0003F8  237E               	addwfc	(??_i2c_master_int_handler+1)& (0+255),f,b
  8215  0003FA  0100               	movlb	0	; () banked
  8216  0003FC  517D               	movf	??_i2c_master_int_handler& (0+255),w,b
  8217  0003FE  0100               	movlb	0	; () banked
  8218  000400  25B3               	addwf	_ic_ptr& (0+255),w,b
  8219  000402  6ED9               	movwf	fsr2l,c
  8220  000404  0100               	movlb	0	; () banked
  8221  000406  517E               	movf	(??_i2c_master_int_handler+1)& (0+255),w,b
  8222  000408  0100               	movlb	0	; () banked
  8223  00040A  21B4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8224  00040C  6EDA               	movwf	fsr2h,c
  8225  00040E  50DF               	movf	indf2,w,c
  8226  000410  6EC9               	movwf	4041,c	;volatile
  8227                           
  8228                           ;my_i2c.c: 241: } else if (ic_ptr->outbufind == ic_ptr->outbuflen) {
  8229  000412  0012               	return	
  8230  000414                     i2l2816:
  8231                           
  8232                           ; BSR set to: 0
  8233  000414  0100               	movlb	0	; () banked
  8234  000416  EE20 F043          	lfsr	2,67
  8235  00041A  0100               	movlb	0	; () banked
  8236  00041C  51B3               	movf	_ic_ptr& (0+255),w,b
  8237  00041E  26D9               	addwf	fsr2l,f,c
  8238  000420  0100               	movlb	0	; () banked
  8239  000422  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8240  000424  22DA               	addwfc	fsr2h,f,c
  8241  000426  0100               	movlb	0	; () banked
  8242  000428  EE10 F042          	lfsr	1,66
  8243  00042C  0100               	movlb	0	; () banked
  8244  00042E  51B3               	movf	_ic_ptr& (0+255),w,b
  8245  000430  26E1               	addwf	fsr1l,f,c
  8246  000432  0100               	movlb	0	; () banked
  8247  000434  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8248  000436  22E2               	addwfc	fsr1h,f,c
  8249  000438  50E7               	movf	indf1,w,c
  8250  00043A  62DF               	cpfseq	indf2,c
  8251  00043C  D024               	goto	i2l2826
  8252                           
  8253                           ; BSR set to: 0
  8254                           ;my_i2c.c: 242: ToMainHigh_sendmsg(0, 50, 0);
  8255  00043E  0E32               	movlw	50
  8256  000440  0100               	movlb	0	; () banked
  8257  000442  6F76               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8258  000444  0E00               	movlw	0
  8259  000446  0100               	movlb	0	; () banked
  8260  000448  6F78               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  8261  00044A  0E00               	movlw	0
  8262  00044C  0100               	movlb	0	; () banked
  8263  00044E  6F77               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  8264  000450  0E00               	movlw	0
  8265  000452  EC36  F00F         	call	i2_ToMainHigh_sendmsg
  8266                           
  8267                           ;my_i2c.c: 243: ic_ptr->status = 0x1;
  8268  000456  0100               	movlb	0	; () banked
  8269  000458  EE20 F021          	lfsr	2,33
  8270  00045C  0100               	movlb	0	; () banked
  8271  00045E  51B3               	movf	_ic_ptr& (0+255),w,b
  8272  000460  26D9               	addwf	fsr2l,f,c
  8273  000462  0100               	movlb	0	; () banked
  8274  000464  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8275  000466  22DA               	addwfc	fsr2h,f,c
  8276  000468  0E01               	movlw	1
  8277  00046A  6EDF               	movwf	indf2,c
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;my_i2c.c: 244: ic_ptr->outbuflen = 0;
  8281  00046C  0100               	movlb	0	; () banked
  8282  00046E  EE20 F042          	lfsr	2,66
  8283  000472  0100               	movlb	0	; () banked
  8284  000474  51B3               	movf	_ic_ptr& (0+255),w,b
  8285  000476  26D9               	addwf	fsr2l,f,c
  8286  000478  0100               	movlb	0	; () banked
  8287  00047A  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8288  00047C  22DA               	addwfc	fsr2h,f,c
  8289  00047E  0E00               	movlw	0
  8290  000480  6EDF               	movwf	indf2,c
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;my_i2c.c: 245: SSP1CON2bits.PEN = 1;
  8294  000482  84C5               	bsf	4037,2,c	;volatile
  8295                           
  8296                           ;my_i2c.c: 246: } else {
  8297  000484  0012               	return	
  8298  000486                     i2l2826:
  8299                           
  8300                           ; BSR set to: 0
  8301                           ;my_i2c.c: 247: ToMainHigh_sendmsg(ic_ptr->outbuflen, 51, (void *) ic_ptr->outbuffer);
  8302  000486  0E33               	movlw	51
  8303  000488  0100               	movlb	0	; () banked
  8304  00048A  6F76               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8305  00048C  0E24               	movlw	36
  8306  00048E  0100               	movlb	0	; () banked
  8307  000490  25B3               	addwf	_ic_ptr& (0+255),w,b
  8308  000492  0100               	movlb	0	; () banked
  8309  000494  6F77               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  8310  000496  0E00               	movlw	0
  8311  000498  0100               	movlb	0	; () banked
  8312  00049A  21B4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8313  00049C  0100               	movlb	0	; () banked
  8314  00049E  6F78               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  8315  0004A0  0100               	movlb	0	; () banked
  8316  0004A2  EE20 F042          	lfsr	2,66
  8317  0004A6  0100               	movlb	0	; () banked
  8318  0004A8  51B3               	movf	_ic_ptr& (0+255),w,b
  8319  0004AA  26D9               	addwf	fsr2l,f,c
  8320  0004AC  0100               	movlb	0	; () banked
  8321  0004AE  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8322  0004B0  22DA               	addwfc	fsr2h,f,c
  8323  0004B2  50DF               	movf	indf2,w,c
  8324  0004B4  EC36  F00F         	call	i2_ToMainHigh_sendmsg
  8325                           
  8326                           ;my_i2c.c: 248: ic_ptr->status = 0x1;
  8327  0004B8  0100               	movlb	0	; () banked
  8328  0004BA  EE20 F021          	lfsr	2,33
  8329  0004BE  0100               	movlb	0	; () banked
  8330  0004C0  51B3               	movf	_ic_ptr& (0+255),w,b
  8331  0004C2  26D9               	addwf	fsr2l,f,c
  8332  0004C4  0100               	movlb	0	; () banked
  8333  0004C6  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8334  0004C8  22DA               	addwfc	fsr2h,f,c
  8335  0004CA  0E01               	movlw	1
  8336  0004CC  6EDF               	movwf	indf2,c
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;my_i2c.c: 249: SSP1CON2bits.ACKSTAT = 1;
  8340  0004CE  8CC5               	bsf	4037,6,c	;volatile
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;my_i2c.c: 250: SSP1CON2bits.PEN = 1;
  8344  0004D0  84C5               	bsf	4037,2,c	;volatile
  8345  0004D2  0012               	return	
  8346  0004D4                     i2l2834:
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;my_i2c.c: 253: ToMainHigh_sendmsg(ic_ptr->outbuflen, 51, (void *) ic_ptr->outbuffer);
  8350  0004D4  0E33               	movlw	51
  8351  0004D6  0100               	movlb	0	; () banked
  8352  0004D8  6F76               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  8353  0004DA  0E24               	movlw	36
  8354  0004DC  0100               	movlb	0	; () banked
  8355  0004DE  25B3               	addwf	_ic_ptr& (0+255),w,b
  8356  0004E0  0100               	movlb	0	; () banked
  8357  0004E2  6F77               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  8358  0004E4  0E00               	movlw	0
  8359  0004E6  0100               	movlb	0	; () banked
  8360  0004E8  21B4               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8361  0004EA  0100               	movlb	0	; () banked
  8362  0004EC  6F78               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  8363  0004EE  0100               	movlb	0	; () banked
  8364  0004F0  EE20 F042          	lfsr	2,66
  8365  0004F4  0100               	movlb	0	; () banked
  8366  0004F6  51B3               	movf	_ic_ptr& (0+255),w,b
  8367  0004F8  26D9               	addwf	fsr2l,f,c
  8368  0004FA  0100               	movlb	0	; () banked
  8369  0004FC  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8370  0004FE  22DA               	addwfc	fsr2h,f,c
  8371  000500  50DF               	movf	indf2,w,c
  8372  000502  EC36  F00F         	call	i2_ToMainHigh_sendmsg
  8373                           
  8374                           ;my_i2c.c: 254: ic_ptr->status = 0x1;
  8375  000506  0100               	movlb	0	; () banked
  8376  000508  EE20 F021          	lfsr	2,33
  8377  00050C  0100               	movlb	0	; () banked
  8378  00050E  51B3               	movf	_ic_ptr& (0+255),w,b
  8379  000510  26D9               	addwf	fsr2l,f,c
  8380  000512  0100               	movlb	0	; () banked
  8381  000514  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8382  000516  22DA               	addwfc	fsr2h,f,c
  8383  000518  0E01               	movlw	1
  8384  00051A  6EDF               	movwf	indf2,c
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;my_i2c.c: 255: SSP1CON2bits.ACKSTAT = 1;
  8388  00051C  8CC5               	bsf	4037,6,c	;volatile
  8389                           
  8390                           ; BSR set to: 0
  8391                           ;my_i2c.c: 256: SSP1CON2bits.PEN = 1;
  8392  00051E  84C5               	bsf	4037,2,c	;volatile
  8393  000520  0012               	return	
  8394  000522                     i2l2844:
  8395  000522  0100               	movlb	0	; () banked
  8396  000524  EE20 F021          	lfsr	2,33
  8397  000528  0100               	movlb	0	; () banked
  8398  00052A  51B3               	movf	_ic_ptr& (0+255),w,b
  8399  00052C  26D9               	addwf	fsr2l,f,c
  8400  00052E  0100               	movlb	0	; () banked
  8401  000530  51B4               	movf	(_ic_ptr+1)& (0+255),w,b
  8402  000532  22DA               	addwfc	fsr2h,f,c
  8403  000534  50DF               	movf	indf2,w,c
  8404                           
  8405                           ; Switch size 1, requested type "space"
  8406                           ; Number of cases is 8, Range of values is 1 to 12
  8407                           ; switch strategies available:
  8408                           ; Name         Instructions Cycles
  8409                           ; simple_byte           25    13 (average)
  8410                           ;	Chosen strategy is simple_byte
  8411  000536  0A01               	xorlw	1	; case 1
  8412  000538  B4D8               	btfsc	status,2,c
  8413  00053A  0012               	return	
  8414  00053C  0A07               	xorlw	7	; case 6
  8415  00053E  B4D8               	btfsc	status,2,c
  8416  000540  D6E5               	goto	i2l2806
  8417  000542  0A01               	xorlw	1	; case 7
  8418  000544  B4D8               	btfsc	status,2,c
  8419  000546  D6F9               	goto	i2l325
  8420  000548  0A0F               	xorlw	15	; case 8
  8421  00054A  B4D8               	btfsc	status,2,c
  8422  00054C  D5C1               	goto	i2l2750
  8423  00054E  0A01               	xorlw	1	; case 9
  8424  000550  B4D8               	btfsc	status,2,c
  8425  000552  D615               	goto	i2l316
  8426  000554  0A03               	xorlw	3	; case 10
  8427  000556  B4D8               	btfsc	status,2,c
  8428  000558  D63B               	goto	i2l2772
  8429  00055A  0A01               	xorlw	1	; case 11
  8430  00055C  B4D8               	btfsc	status,2,c
  8431  00055E  D6A6               	goto	i2l2794
  8432  000560  0A07               	xorlw	7	; case 12
  8433  000562  A4D8               	btfss	status,2,c
  8434  000564  0012               	return	
  8435  000566  D6B0               	goto	i2l2800
  8436  000568                     __end_of_i2c_master_int_handler:
  8437                           	opt stack 0
  8438                           pclatu	equ	0xFFB
  8439                           pclath	equ	0xFFA
  8440                           tblptru	equ	0xFF8
  8441                           tblptrh	equ	0xFF7
  8442                           tblptrl	equ	0xFF6
  8443                           tablat	equ	0xFF5
  8444                           prodh	equ	0xFF4
  8445                           prodl	equ	0xFF3
  8446                           intcon	equ	0xFF2
  8447                           intcon2	equ	0xFF1
  8448                           postinc0	equ	0xFEE
  8449                           fsr0h	equ	0xFEA
  8450                           fsr0l	equ	0xFE9
  8451                           wreg	equ	0xFE8
  8452                           indf1	equ	0xFE7
  8453                           postdec1	equ	0xFE5
  8454                           fsr1h	equ	0xFE2
  8455                           fsr1l	equ	0xFE1
  8456                           bsr	equ	0xFE0
  8457                           indf2	equ	0xFDF
  8458                           postinc2	equ	0xFDE
  8459                           postdec2	equ	0xFDD
  8460                           fsr2h	equ	0xFDA
  8461                           fsr2l	equ	0xFD9
  8462                           status	equ	0xFD8
  8463                           
  8464 ;; *************** function i2_ToMainHigh_sendmsg *****************
  8465 ;; Defined at:
  8466 ;;		line 126 in file "../src/messages.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;  length          1    wreg     unsigned char 
  8469 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8470 ;;  data            2   23[BANK0 ] PTR void 
  8471 ;;		 -> timer0_int_handler@val(2), NULL(0), main@ic(72), 
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;  length          1   25[BANK0 ] unsigned char 
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  1    wreg      char 
  8476 ;; Registers used:
  8477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8483 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8484 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8486 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8487 ;;Total ram usage:        4 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:    2
  8490 ;; This function calls:
  8491 ;;		i2_send_msg
  8492 ;; This function is called by:
  8493 ;;		_i2c_master_int_handler
  8494 ;; This function uses a non-reentrant model
  8495 ;;
  8496                           
  8497                           	psect	text50
  8498  001E6C                     __ptext50:
  8499                           	opt stack 0
  8500  001E6C                     i2_ToMainHigh_sendmsg:
  8501                           	opt stack 17
  8502                           
  8503                           ;incstack = 0
  8504                           ;i2ToMainHigh_sendmsg@length stored from wreg
  8505  001E6C  0100               	movlb	0	; () banked
  8506  001E6E  6F79               	movwf	i2ToMainHigh_sendmsg@length& (0+255),b
  8507                           
  8508                           ; BSR set to: 0
  8509                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8510                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  8511  001E70  0E06               	movlw	high _ToMainHigh_MQ
  8512  001E72  0100               	movlb	0	; () banked
  8513  001E74  6F6B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8514  001E76  0EED               	movlw	low _ToMainHigh_MQ
  8515  001E78  0100               	movlb	0	; () banked
  8516  001E7A  6F6A               	movwf	i2send_msg@qptr& (0+255),b
  8517  001E7C  C079  F06C         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  8518  001E80  C076  F06D         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8519  001E84  0100               	movlb	0	; () banked
  8520  001E86  C078  F06F         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8521  001E8A  0100               	movlb	0	; () banked
  8522  001E8C  C077  F06E         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  8523  001E90  ECA7  F007         	call	i2_send_msg	;wreg free
  8524  001E94  0012               	return	
  8525  001E96                     __end_ofi2_ToMainHigh_sendmsg:
  8526                           	opt stack 0
  8527                           pclatu	equ	0xFFB
  8528                           pclath	equ	0xFFA
  8529                           tblptru	equ	0xFF8
  8530                           tblptrh	equ	0xFF7
  8531                           tblptrl	equ	0xFF6
  8532                           tablat	equ	0xFF5
  8533                           prodh	equ	0xFF4
  8534                           prodl	equ	0xFF3
  8535                           intcon	equ	0xFF2
  8536                           intcon2	equ	0xFF1
  8537                           postinc0	equ	0xFEE
  8538                           fsr0h	equ	0xFEA
  8539                           fsr0l	equ	0xFE9
  8540                           wreg	equ	0xFE8
  8541                           indf1	equ	0xFE7
  8542                           postdec1	equ	0xFE5
  8543                           fsr1h	equ	0xFE2
  8544                           fsr1l	equ	0xFE1
  8545                           bsr	equ	0xFE0
  8546                           indf2	equ	0xFDF
  8547                           postinc2	equ	0xFDE
  8548                           postdec2	equ	0xFDD
  8549                           fsr2h	equ	0xFDA
  8550                           fsr2l	equ	0xFD9
  8551                           status	equ	0xFD8
  8552                           
  8553 ;; *************** function i2_send_msg *****************
  8554 ;; Defined at:
  8555 ;;		line 24 in file "../src/messages.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8558 ;;		 -> FromMainHigh_MQ(332), FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), 
  8559 ;;		 -> ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  8560 ;;  length          1   12[BANK0 ] unsigned char 
  8561 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8562 ;;  data            2   14[BANK0 ] PTR void 
  8563 ;;		 -> timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@right(1), timer0_int_handler@left(
      +1), 
  8564 ;;		 -> timer0_int_handler@forward(1), timer0_int_handler@val(2), NULL(0), main@msgbuffer(31), 
  8565 ;;		 -> main@t1thread_data(2), main@ic(72), main@uc(66), 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8568 ;;		 -> FromMainLow_MQ.queue(330), FromMainHigh_MQ.queue(330), ToMainHigh_MQ.queue(330), ToMainLow_MQ.queue(330), 
  8569 ;;		 -> SensorData_MQ.queue(330), MotorData_MQ.queue(330), FromMainHigh_MQ(332), FromMainLow_MQ(332), 
  8570 ;;		 -> MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  8571 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8572 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  1    wreg      char 
  8575 ;; Registers used:
  8576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/0
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8582 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8583 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8584 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8585 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8586 ;;Total ram usage:       12 bytes
  8587 ;; Hardware stack levels used:    1
  8588 ;; Hardware stack levels required when called:    1
  8589 ;; This function calls:
  8590 ;;		i2___awmod
  8591 ;;		i2_memcpy
  8592 ;; This function is called by:
  8593 ;;		i2_ToMainHigh_sendmsg
  8594 ;; This function uses a non-reentrant model
  8595 ;;
  8596                           
  8597                           	psect	text51
  8598  000F4E                     __ptext51:
  8599                           	opt stack 0
  8600  000F4E                     i2_send_msg:
  8601                           	opt stack 17
  8602                           
  8603                           ;messages.c: 25: unsigned char slot;
  8604                           ;messages.c: 27: msg *qmsg;
  8605                           ;messages.c: 28: size_t tlength = length;
  8606                           
  8607                           ;incstack = 0
  8608  000F4E  0100               	movlb	0	; () banked
  8609  000F50  C06C  F071         	movff	i2send_msg@length,i2send_msg@tlength
  8610  000F54  0100               	movlb	0	; () banked
  8611  000F56  6B72               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8615  000F58  0100               	movlb	0	; () banked
  8616  000F5A  EE21 F04A          	lfsr	2,330
  8617  000F5E  0100               	movlb	0	; () banked
  8618  000F60  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8619  000F62  26D9               	addwf	fsr2l,f,c
  8620  000F64  0100               	movlb	0	; () banked
  8621  000F66  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8622  000F68  22DA               	addwfc	fsr2h,f,c
  8623  000F6A  50DF               	movf	indf2,w,c
  8624  000F6C  0100               	movlb	0	; () banked
  8625  000F6E  6F73               	movwf	i2send_msg@slot& (0+255),b
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8629  000F70  0100               	movlb	0	; () banked
  8630  000F72  5173               	movf	i2send_msg@slot& (0+255),w,b
  8631  000F74  0D21               	mullw	33
  8632  000F76  50F3               	movf	prodl,w,c
  8633  000F78  0100               	movlb	0	; () banked
  8634  000F7A  256A               	addwf	i2send_msg@qptr& (0+255),w,b
  8635  000F7C  0100               	movlb	0	; () banked
  8636  000F7E  6F74               	movwf	i2send_msg@qmsg& (0+255),b
  8637  000F80  50F4               	movf	prodh,w,c
  8638  000F82  0100               	movlb	0	; () banked
  8639  000F84  216B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8640  000F86  0100               	movlb	0	; () banked
  8641  000F88  6F75               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;messages.c: 41: if (qmsg->full != 0) {
  8645  000F8A  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8646  000F8E  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8647  000F92  50DF               	movf	indf2,w,c
  8648  000F94  B4D8               	btfsc	status,2,c
  8649  000F96  D002               	goto	i2l2512
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;messages.c: 42: return (-1);
  8653  000F98  0EFF               	movlw	255
  8654  000F9A  0012               	return	
  8655  000F9C                     i2l2512:
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;messages.c: 43: }
  8659                           ;messages.c: 46: qmsg->length = length;
  8660  000F9C  0100               	movlb	0	; () banked
  8661  000F9E  EE20 F001          	lfsr	2,1
  8662  000FA2  0100               	movlb	0	; () banked
  8663  000FA4  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8664  000FA6  26D9               	addwf	fsr2l,f,c
  8665  000FA8  0100               	movlb	0	; () banked
  8666  000FAA  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8667  000FAC  22DA               	addwfc	fsr2h,f,c
  8668  000FAE  0100               	movlb	0	; () banked
  8669  000FB0  C06C  FFDF         	movff	i2send_msg@length,indf2
  8670                           
  8671                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8672  000FB4  0100               	movlb	0	; () banked
  8673  000FB6  EE20 F002          	lfsr	2,2
  8674  000FBA  0100               	movlb	0	; () banked
  8675  000FBC  5174               	movf	i2send_msg@qmsg& (0+255),w,b
  8676  000FBE  26D9               	addwf	fsr2l,f,c
  8677  000FC0  0100               	movlb	0	; () banked
  8678  000FC2  5175               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8679  000FC4  22DA               	addwfc	fsr2h,f,c
  8680  000FC6  0100               	movlb	0	; () banked
  8681  000FC8  C06D  FFDF         	movff	i2send_msg@msgtype,indf2
  8682                           
  8683                           ; BSR set to: 0
  8684                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8685  000FCC  0E03               	movlw	3
  8686  000FCE  0100               	movlb	0	; () banked
  8687  000FD0  2574               	addwf	i2send_msg@qmsg& (0+255),w,b
  8688  000FD2  0100               	movlb	0	; () banked
  8689  000FD4  6F60               	movwf	i2memcpy@d1& (0+255),b
  8690  000FD6  0E00               	movlw	0
  8691  000FD8  0100               	movlb	0	; () banked
  8692  000FDA  2175               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8693  000FDC  0100               	movlb	0	; () banked
  8694  000FDE  6F61               	movwf	(i2memcpy@d1+1)& (0+255),b
  8695  000FE0  0100               	movlb	0	; () banked
  8696  000FE2  C06F  F063         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8697  000FE6  0100               	movlb	0	; () banked
  8698  000FE8  C06E  F062         	movff	i2send_msg@data,i2memcpy@s1
  8699  000FEC  C071  F064         	movff	i2send_msg@tlength,i2memcpy@n
  8700  000FF0  C072  F065         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8701  000FF4  EC87  F00D         	call	i2_memcpy	;wreg free
  8702                           
  8703                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 10;
  8704  000FF8  0100               	movlb	0	; () banked
  8705  000FFA  EE21 F04A          	lfsr	2,330
  8706  000FFE  0100               	movlb	0	; () banked
  8707  001000  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8708  001002  26D9               	addwf	fsr2l,f,c
  8709  001004  0100               	movlb	0	; () banked
  8710  001006  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8711  001008  22DA               	addwfc	fsr2h,f,c
  8712  00100A  0100               	movlb	0	; () banked
  8713  00100C  EE11 F04A          	lfsr	1,330
  8714  001010  0100               	movlb	0	; () banked
  8715  001012  516A               	movf	i2send_msg@qptr& (0+255),w,b
  8716  001014  26E1               	addwf	fsr1l,f,c
  8717  001016  0100               	movlb	0	; () banked
  8718  001018  516B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8719  00101A  22E2               	addwfc	fsr1h,f,c
  8720  00101C  50E7               	movf	indf1,w,c
  8721  00101E  0100               	movlb	0	; () banked
  8722  001020  6F70               	movwf	??i2_send_msg& (0+255),b
  8723  001022  0E01               	movlw	1
  8724  001024  0100               	movlb	0	; () banked
  8725  001026  2570               	addwf	??i2_send_msg& (0+255),w,b
  8726  001028  0100               	movlb	0	; () banked
  8727  00102A  6F60               	movwf	i2___awmod@dividend& (0+255),b
  8728  00102C  0100               	movlb	0	; () banked
  8729  00102E  6B61               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8730  001030  0E00               	movlw	0
  8731  001032  2361               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8732  001034  0E00               	movlw	0
  8733  001036  0100               	movlb	0	; () banked
  8734  001038  6F63               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8735  00103A  0E0A               	movlw	10
  8736  00103C  0100               	movlb	0	; () banked
  8737  00103E  6F62               	movwf	i2___awmod@divisor& (0+255),b
  8738  001040  EC76  F009         	call	i2___awmod	;wreg free
  8739  001044  0100               	movlb	0	; () banked
  8740  001046  5160               	movf	?i2___awmod& (0+255),w,b
  8741  001048  6EDF               	movwf	indf2,c
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;messages.c: 59: qmsg->full = 1;
  8745  00104A  C074  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8746  00104E  C075  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8747  001052  0E01               	movlw	1
  8748  001054  6EDF               	movwf	indf2,c
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;messages.c: 60: return (1);
  8752  001056  0E01               	movlw	1
  8753  001058  0012               	return	
  8754  00105A                     __end_ofi2_send_msg:
  8755                           	opt stack 0
  8756                           pclatu	equ	0xFFB
  8757                           pclath	equ	0xFFA
  8758                           tblptru	equ	0xFF8
  8759                           tblptrh	equ	0xFF7
  8760                           tblptrl	equ	0xFF6
  8761                           tablat	equ	0xFF5
  8762                           prodh	equ	0xFF4
  8763                           prodl	equ	0xFF3
  8764                           intcon	equ	0xFF2
  8765                           intcon2	equ	0xFF1
  8766                           postinc0	equ	0xFEE
  8767                           fsr0h	equ	0xFEA
  8768                           fsr0l	equ	0xFE9
  8769                           wreg	equ	0xFE8
  8770                           indf1	equ	0xFE7
  8771                           postdec1	equ	0xFE5
  8772                           fsr1h	equ	0xFE2
  8773                           fsr1l	equ	0xFE1
  8774                           bsr	equ	0xFE0
  8775                           indf2	equ	0xFDF
  8776                           postinc2	equ	0xFDE
  8777                           postdec2	equ	0xFDD
  8778                           fsr2h	equ	0xFDA
  8779                           fsr2l	equ	0xFD9
  8780                           status	equ	0xFD8
  8781                           
  8782 ;; *************** function i2_FromMainHigh_recvmsg *****************
  8783 ;; Defined at:
  8784 ;;		line 231 in file "../src/messages.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  maxlength       1    wreg     unsigned char 
  8787 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8788 ;;		 -> timer0_int_handler@msgtype(2), RAM(3775), 
  8789 ;;  data            2   26[BANK0 ] PTR void 
  8790 ;;		 -> timer0_int_handler@val(2), NULL(0), main@ic(72), 
  8791 ;; Auto vars:     Size  Location     Type
  8792 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  1    wreg      char 
  8795 ;; Registers used:
  8796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8802 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8803 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8805 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8806 ;;Total ram usage:        5 bytes
  8807 ;; Hardware stack levels used:    1
  8808 ;; Hardware stack levels required when called:    2
  8809 ;; This function calls:
  8810 ;;		i2_recv_msg
  8811 ;; This function is called by:
  8812 ;;		_i2c_master_int_handler
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           	psect	text52
  8817  001D5A                     __ptext52:
  8818                           	opt stack 0
  8819  001D5A                     i2_FromMainHigh_recvmsg:
  8820                           	opt stack 17
  8821                           
  8822                           ; BSR set to: 0
  8823                           ;incstack = 0
  8824                           ;i2FromMainHigh_recvmsg@maxlength stored from wreg
  8825  001D5A  0100               	movlb	0	; () banked
  8826  001D5C  6F7C               	movwf	i2FromMainHigh_recvmsg@maxlength& (0+255),b
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;messages.c: 237: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  8830                           ;	Return value of i2_FromMainHigh_recvmsg is never used
  8831  001D5E  0E01               	movlw	high _FromMainHigh_MQ
  8832  001D60  0100               	movlb	0	; () banked
  8833  001D62  6F6B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8834  001D64  0EBD               	movlw	low _FromMainHigh_MQ
  8835  001D66  0100               	movlb	0	; () banked
  8836  001D68  6F6A               	movwf	i2recv_msg@qptr& (0+255),b
  8837  001D6A  C07C  F06C         	movff	i2FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  8838  001D6E  0100               	movlb	0	; () banked
  8839  001D70  C079  F06E         	movff	i2FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8840  001D74  0100               	movlb	0	; () banked
  8841  001D76  C078  F06D         	movff	i2FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  8842  001D7A  0100               	movlb	0	; () banked
  8843  001D7C  C07B  F070         	movff	i2FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  8844  001D80  0100               	movlb	0	; () banked
  8845  001D82  C07A  F06F         	movff	i2FromMainHigh_recvmsg@data,i2recv_msg@data
  8846  001D86  EC82  F006         	call	i2_recv_msg	;wreg free
  8847  001D8A  0012               	return	
  8848  001D8C                     __end_ofi2_FromMainHigh_recvmsg:
  8849                           	opt stack 0
  8850                           pclatu	equ	0xFFB
  8851                           pclath	equ	0xFFA
  8852                           tblptru	equ	0xFF8
  8853                           tblptrh	equ	0xFF7
  8854                           tblptrl	equ	0xFF6
  8855                           tablat	equ	0xFF5
  8856                           prodh	equ	0xFF4
  8857                           prodl	equ	0xFF3
  8858                           intcon	equ	0xFF2
  8859                           intcon2	equ	0xFF1
  8860                           postinc0	equ	0xFEE
  8861                           fsr0h	equ	0xFEA
  8862                           fsr0l	equ	0xFE9
  8863                           wreg	equ	0xFE8
  8864                           indf1	equ	0xFE7
  8865                           postdec1	equ	0xFE5
  8866                           fsr1h	equ	0xFE2
  8867                           fsr1l	equ	0xFE1
  8868                           bsr	equ	0xFE0
  8869                           indf2	equ	0xFDF
  8870                           postinc2	equ	0xFDE
  8871                           postdec2	equ	0xFDD
  8872                           fsr2h	equ	0xFDA
  8873                           fsr2l	equ	0xFD9
  8874                           status	equ	0xFD8
  8875                           
  8876 ;; *************** function i2_recv_msg *****************
  8877 ;; Defined at:
  8878 ;;		line 63 in file "../src/messages.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8881 ;;		 -> FromMainHigh_MQ(332), FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), 
  8882 ;;		 -> ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  8883 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8884 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8885 ;;		 -> timer0_int_handler@msgtype(2), RAM(3775), main@msgtype(1), 
  8886 ;;  data            2   15[BANK0 ] PTR void 
  8887 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(31), main@ic(72), 
  8888 ;;		 -> main@uc(66), 
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8891 ;;		 -> FromMainLow_MQ.queue(330), FromMainHigh_MQ.queue(330), ToMainHigh_MQ.queue(330), ToMainLow_MQ.queue(330), 
  8892 ;;		 -> SensorData_MQ.queue(330), MotorData_MQ.queue(330), FromMainHigh_MQ(332), FromMainLow_MQ(332), 
  8893 ;;		 -> MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  8894 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8895 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  1    wreg      char 
  8898 ;; Registers used:
  8899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8905 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8906 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8907 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8908 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8909 ;;Total ram usage:       14 bytes
  8910 ;; Hardware stack levels used:    1
  8911 ;; Hardware stack levels required when called:    1
  8912 ;; This function calls:
  8913 ;;		i2___awmod
  8914 ;;		i2_memcpy
  8915 ;; This function is called by:
  8916 ;;		i2_FromMainHigh_recvmsg
  8917 ;; This function uses a non-reentrant model
  8918 ;;
  8919                           
  8920                           	psect	text53
  8921  000D04                     __ptext53:
  8922                           	opt stack 0
  8923  000D04                     i2_recv_msg:
  8924                           	opt stack 17
  8925                           
  8926                           ;messages.c: 64: unsigned char slot;
  8927                           ;messages.c: 68: msg *qmsg;
  8928                           ;messages.c: 69: size_t tlength;
  8929                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8930                           
  8931                           ;incstack = 0
  8932  000D04  0100               	movlb	0	; () banked
  8933  000D06  EE21 F04B          	lfsr	2,331
  8934  000D0A  0100               	movlb	0	; () banked
  8935  000D0C  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  8936  000D0E  26D9               	addwf	fsr2l,f,c
  8937  000D10  0100               	movlb	0	; () banked
  8938  000D12  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8939  000D14  22DA               	addwfc	fsr2h,f,c
  8940  000D16  50DF               	movf	indf2,w,c
  8941  000D18  0100               	movlb	0	; () banked
  8942  000D1A  6F73               	movwf	i2recv_msg@slot& (0+255),b
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8946  000D1C  0100               	movlb	0	; () banked
  8947  000D1E  5173               	movf	i2recv_msg@slot& (0+255),w,b
  8948  000D20  0D21               	mullw	33
  8949  000D22  50F3               	movf	prodl,w,c
  8950  000D24  0100               	movlb	0	; () banked
  8951  000D26  256A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8952  000D28  0100               	movlb	0	; () banked
  8953  000D2A  6F76               	movwf	i2recv_msg@qmsg& (0+255),b
  8954  000D2C  50F4               	movf	prodh,w,c
  8955  000D2E  0100               	movlb	0	; () banked
  8956  000D30  216B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8957  000D32  0100               	movlb	0	; () banked
  8958  000D34  6F77               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8959                           
  8960                           ; BSR set to: 0
  8961                           ;messages.c: 74: if (qmsg->full == 1) {
  8962  000D36  0E01               	movlw	1
  8963  000D38  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8964  000D3C  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8965  000D40  62DF               	cpfseq	indf2,c
  8966  000D42  D07D               	goto	i2l2584
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8970  000D44  0100               	movlb	0	; () banked
  8971  000D46  EE20 F001          	lfsr	2,1
  8972  000D4A  0100               	movlb	0	; () banked
  8973  000D4C  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8974  000D4E  26D9               	addwf	fsr2l,f,c
  8975  000D50  0100               	movlb	0	; () banked
  8976  000D52  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8977  000D54  22DA               	addwfc	fsr2h,f,c
  8978  000D56  50DF               	movf	indf2,w,c
  8979  000D58  0100               	movlb	0	; () banked
  8980  000D5A  5D6C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8981  000D5C  B0D8               	btfsc	status,0,c
  8982  000D5E  D002               	goto	i2l2568
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;messages.c: 77: return (-3);
  8986  000D60  0EFD               	movlw	253
  8987  000D62  0012               	return	
  8988  000D64                     i2l2568:
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;messages.c: 78: }
  8992                           ;messages.c: 80: tlength = qmsg->length;
  8993  000D64  0100               	movlb	0	; () banked
  8994  000D66  EE20 F001          	lfsr	2,1
  8995  000D6A  0100               	movlb	0	; () banked
  8996  000D6C  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  8997  000D6E  26D9               	addwf	fsr2l,f,c
  8998  000D70  0100               	movlb	0	; () banked
  8999  000D72  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9000  000D74  22DA               	addwfc	fsr2h,f,c
  9001  000D76  50DF               	movf	indf2,w,c
  9002  000D78  0100               	movlb	0	; () banked
  9003  000D7A  6F71               	movwf	??i2_recv_msg& (0+255),b
  9004  000D7C  0100               	movlb	0	; () banked
  9005  000D7E  5171               	movf	??i2_recv_msg& (0+255),w,b
  9006  000D80  0100               	movlb	0	; () banked
  9007  000D82  6F74               	movwf	i2recv_msg@tlength& (0+255),b
  9008  000D84  0100               	movlb	0	; () banked
  9009  000D86  6B75               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9013  000D88  0100               	movlb	0	; () banked
  9014  000D8A  C070  F061         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  9015  000D8E  0100               	movlb	0	; () banked
  9016  000D90  C06F  F060         	movff	i2recv_msg@data,i2memcpy@d1
  9017  000D94  0E03               	movlw	3
  9018  000D96  0100               	movlb	0	; () banked
  9019  000D98  2576               	addwf	i2recv_msg@qmsg& (0+255),w,b
  9020  000D9A  0100               	movlb	0	; () banked
  9021  000D9C  6F71               	movwf	??i2_recv_msg& (0+255),b
  9022  000D9E  0E00               	movlw	0
  9023  000DA0  0100               	movlb	0	; () banked
  9024  000DA2  2177               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  9025  000DA4  0100               	movlb	0	; () banked
  9026  000DA6  6F72               	movwf	(??i2_recv_msg+1)& (0+255),b
  9027  000DA8  C071  F062         	movff	??i2_recv_msg,i2memcpy@s1
  9028  000DAC  C072  F063         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  9029  000DB0  C074  F064         	movff	i2recv_msg@tlength,i2memcpy@n
  9030  000DB4  C075  F065         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  9031  000DB8  EC87  F00D         	call	i2_memcpy	;wreg free
  9032                           
  9033                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 10;
  9034  000DBC  0100               	movlb	0	; () banked
  9035  000DBE  EE21 F04B          	lfsr	2,331
  9036  000DC2  0100               	movlb	0	; () banked
  9037  000DC4  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  9038  000DC6  26D9               	addwf	fsr2l,f,c
  9039  000DC8  0100               	movlb	0	; () banked
  9040  000DCA  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9041  000DCC  22DA               	addwfc	fsr2h,f,c
  9042  000DCE  0100               	movlb	0	; () banked
  9043  000DD0  EE11 F04B          	lfsr	1,331
  9044  000DD4  0100               	movlb	0	; () banked
  9045  000DD6  516A               	movf	i2recv_msg@qptr& (0+255),w,b
  9046  000DD8  26E1               	addwf	fsr1l,f,c
  9047  000DDA  0100               	movlb	0	; () banked
  9048  000DDC  516B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9049  000DDE  22E2               	addwfc	fsr1h,f,c
  9050  000DE0  50E7               	movf	indf1,w,c
  9051  000DE2  0100               	movlb	0	; () banked
  9052  000DE4  6F71               	movwf	??i2_recv_msg& (0+255),b
  9053  000DE6  0E01               	movlw	1
  9054  000DE8  0100               	movlb	0	; () banked
  9055  000DEA  2571               	addwf	??i2_recv_msg& (0+255),w,b
  9056  000DEC  0100               	movlb	0	; () banked
  9057  000DEE  6F60               	movwf	i2___awmod@dividend& (0+255),b
  9058  000DF0  0100               	movlb	0	; () banked
  9059  000DF2  6B61               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9060  000DF4  0E00               	movlw	0
  9061  000DF6  2361               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9062  000DF8  0E00               	movlw	0
  9063  000DFA  0100               	movlb	0	; () banked
  9064  000DFC  6F63               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9065  000DFE  0E0A               	movlw	10
  9066  000E00  0100               	movlb	0	; () banked
  9067  000E02  6F62               	movwf	i2___awmod@divisor& (0+255),b
  9068  000E04  EC76  F009         	call	i2___awmod	;wreg free
  9069  000E08  0100               	movlb	0	; () banked
  9070  000E0A  5160               	movf	?i2___awmod& (0+255),w,b
  9071  000E0C  6EDF               	movwf	indf2,c
  9072                           
  9073                           ; BSR set to: 0
  9074                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9075  000E0E  0100               	movlb	0	; () banked
  9076  000E10  EE20 F002          	lfsr	2,2
  9077  000E14  0100               	movlb	0	; () banked
  9078  000E16  5176               	movf	i2recv_msg@qmsg& (0+255),w,b
  9079  000E18  26D9               	addwf	fsr2l,f,c
  9080  000E1A  0100               	movlb	0	; () banked
  9081  000E1C  5177               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9082  000E1E  22DA               	addwfc	fsr2h,f,c
  9083  000E20  C06D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  9084  000E24  C06E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  9085  000E28  CFDF FFE7          	movff	indf2,indf1
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;messages.c: 91: qmsg->full = 0;
  9089  000E2C  C076  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9090  000E30  C077  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9091  000E34  0E00               	movlw	0
  9092  000E36  6EDF               	movwf	indf2,c
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;messages.c: 92: return (tlength);
  9096  000E38  0100               	movlb	0	; () banked
  9097  000E3A  5174               	movf	i2recv_msg@tlength& (0+255),w,b
  9098  000E3C  0012               	return	
  9099  000E3E                     i2l2584:
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;messages.c: 94: return (-4);
  9103  000E3E  0EFC               	movlw	252
  9104  000E40  0012               	return	
  9105  000E42                     __end_ofi2_recv_msg:
  9106                           	opt stack 0
  9107                           pclatu	equ	0xFFB
  9108                           pclath	equ	0xFFA
  9109                           tblptru	equ	0xFF8
  9110                           tblptrh	equ	0xFF7
  9111                           tblptrl	equ	0xFF6
  9112                           tablat	equ	0xFF5
  9113                           prodh	equ	0xFF4
  9114                           prodl	equ	0xFF3
  9115                           intcon	equ	0xFF2
  9116                           intcon2	equ	0xFF1
  9117                           postinc0	equ	0xFEE
  9118                           fsr0h	equ	0xFEA
  9119                           fsr0l	equ	0xFE9
  9120                           wreg	equ	0xFE8
  9121                           indf1	equ	0xFE7
  9122                           postdec1	equ	0xFE5
  9123                           fsr1h	equ	0xFE2
  9124                           fsr1l	equ	0xFE1
  9125                           bsr	equ	0xFE0
  9126                           indf2	equ	0xFDF
  9127                           postinc2	equ	0xFDE
  9128                           postdec2	equ	0xFDD
  9129                           fsr2h	equ	0xFDA
  9130                           fsr2l	equ	0xFD9
  9131                           status	equ	0xFD8
  9132                           
  9133 ;; *************** function i2_memcpy *****************
  9134 ;; Defined at:
  9135 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;  d1              2    0[BANK0 ] PTR void 
  9138 ;;		 -> FromMainLow_MQ.queue(330), FromMainHigh_MQ.queue(330), ToMainHigh_MQ.queue(330), ToMainLow_MQ.queue(330), 
  9139 ;;		 -> SensorData_MQ.queue(330), MotorData_MQ.queue(330), timer0_int_handler@val(2), NULL(0), 
  9140 ;;		 -> FromMainHigh_MQ(332), FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), 
  9141 ;;		 -> ToMainHigh_MQ(332), ToMainLow_MQ(332), main@msgbuffer(31), main@ic(72), 
  9142 ;;		 -> main@uc(66), 
  9143 ;;  s1              2    2[BANK0 ] PTR const void 
  9144 ;;		 -> ToMainLow_MQ.data(30), ToMainHigh_MQ.data(30), SensorData_MQ.data(30), MotorData_MQ.data(30), 
  9145 ;;		 -> FromMainLow_MQ.data(30), FromMainHigh_MQ.data(30), MotorData_MQ.queue.data(30), SensorData_MQ.queue.data(30), 
  9146 ;;		 -> ToMainLow_MQ.queue.data(30), ToMainHigh_MQ.queue.data(30), FromMainHigh_MQ.queue.data(30), FromMainLow_MQ.queue.
      +data(30), 
  9147 ;;		 -> timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@right(1), timer0_int_handler@left(
      +1), 
  9148 ;;		 -> timer0_int_handler@forward(1), timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(332), 
  9149 ;;		 -> FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), 
  9150 ;;		 -> ToMainLow_MQ(332), main@msgbuffer(31), main@t1thread_data(2), main@ic(72), 
  9151 ;;		 -> main@uc(66), 
  9152 ;;  n               2    4[BANK0 ] unsigned int 
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9155 ;;		 -> ToMainLow_MQ.data(30), ToMainHigh_MQ.data(30), SensorData_MQ.data(30), MotorData_MQ.data(30), 
  9156 ;;		 -> FromMainLow_MQ.data(30), FromMainHigh_MQ.data(30), MotorData_MQ.queue.data(30), SensorData_MQ.queue.data(30), 
  9157 ;;		 -> ToMainLow_MQ.queue.data(30), ToMainHigh_MQ.queue.data(30), FromMainHigh_MQ.queue.data(30), FromMainLow_MQ.queue.
      +data(30), 
  9158 ;;		 -> timer0_int_handler@reverse(1), timer0_int_handler@stop(1), timer0_int_handler@right(1), timer0_int_handler@left(
      +1), 
  9159 ;;		 -> timer0_int_handler@forward(1), timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(332), 
  9160 ;;		 -> FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), 
  9161 ;;		 -> ToMainLow_MQ(332), main@msgbuffer(31), main@t1thread_data(2), main@ic(72), 
  9162 ;;		 -> main@uc(66), 
  9163 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9164 ;;		 -> FromMainLow_MQ.queue(330), FromMainHigh_MQ.queue(330), ToMainHigh_MQ.queue(330), ToMainLow_MQ.queue(330), 
  9165 ;;		 -> SensorData_MQ.queue(330), MotorData_MQ.queue(330), timer0_int_handler@val(2), NULL(0), 
  9166 ;;		 -> FromMainHigh_MQ(332), FromMainLow_MQ(332), MotorData_MQ(332), SensorData_MQ(332), 
  9167 ;;		 -> ToMainHigh_MQ(332), ToMainLow_MQ(332), main@msgbuffer(31), main@ic(72), 
  9168 ;;		 -> main@uc(66), 
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  2    0[BANK0 ] PTR void 
  9171 ;; Registers used:
  9172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9178 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9179 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9181 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9182 ;;Total ram usage:       10 bytes
  9183 ;; Hardware stack levels used:    1
  9184 ;; This function calls:
  9185 ;;		Nothing
  9186 ;; This function is called by:
  9187 ;;		i2_send_msg
  9188 ;;		i2_recv_msg
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           	psect	text54
  9193  001B0E                     __ptext54:
  9194                           	opt stack 0
  9195  001B0E                     i2_memcpy:
  9196                           	opt stack 17
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;incstack = 0
  9200  001B0E  0100               	movlb	0	; () banked
  9201  001B10  C063  F069         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9202  001B14  0100               	movlb	0	; () banked
  9203  001B16  C062  F068         	movff	i2memcpy@s1,i2memcpy@s
  9204  001B1A  0100               	movlb	0	; () banked
  9205  001B1C  C061  F067         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9206  001B20  0100               	movlb	0	; () banked
  9207  001B22  C060  F066         	movff	i2memcpy@d1,i2memcpy@d
  9208  001B26  D010               	goto	i2l2354
  9209  001B28                     i2l2348:
  9210                           
  9211                           ; BSR set to: 0
  9212  001B28  C068  FFD9         	movff	i2memcpy@s,fsr2l
  9213  001B2C  C069  FFDA         	movff	i2memcpy@s+1,fsr2h
  9214  001B30  C066  FFE1         	movff	i2memcpy@d,fsr1l
  9215  001B34  C067  FFE2         	movff	i2memcpy@d+1,fsr1h
  9216  001B38  CFDF FFE7          	movff	indf2,indf1
  9217                           
  9218                           ; BSR set to: 0
  9219  001B3C  0100               	movlb	0	; () banked
  9220  001B3E  4B68               	infsnz	i2memcpy@s& (0+255),f,b
  9221  001B40  2B69               	incf	(i2memcpy@s+1)& (0+255),f,b
  9222                           
  9223                           ; BSR set to: 0
  9224  001B42  0100               	movlb	0	; () banked
  9225  001B44  4B66               	infsnz	i2memcpy@d& (0+255),f,b
  9226  001B46  2B67               	incf	(i2memcpy@d+1)& (0+255),f,b
  9227  001B48                     i2l2354:
  9228                           
  9229                           ; BSR set to: 0
  9230  001B48  0100               	movlb	0	; () banked
  9231  001B4A  0764               	decf	i2memcpy@n& (0+255),f,b
  9232  001B4C  A0D8               	btfss	status,0,c
  9233  001B4E  0765               	decf	(i2memcpy@n+1)& (0+255),f,b
  9234  001B50  0100               	movlb	0	; () banked
  9235  001B52  2964               	incf	i2memcpy@n& (0+255),w,b
  9236  001B54  B4D8               	btfsc	status,2,c
  9237  001B56  2965               	incf	(i2memcpy@n+1)& (0+255),w,b
  9238  001B58  B4D8               	btfsc	status,2,c
  9239                           
  9240                           ; BSR set to: 0
  9241                           
  9242                           ; BSR set to: 0
  9243                           ;	Return value of i2_memcpy is never used
  9244  001B5A  0012               	return	
  9245  001B5C  D7E5               	goto	i2l2348
  9246  001B5E                     __end_ofi2_memcpy:
  9247                           	opt stack 0
  9248                           pclatu	equ	0xFFB
  9249                           pclath	equ	0xFFA
  9250                           tblptru	equ	0xFF8
  9251                           tblptrh	equ	0xFF7
  9252                           tblptrl	equ	0xFF6
  9253                           tablat	equ	0xFF5
  9254                           prodh	equ	0xFF4
  9255                           prodl	equ	0xFF3
  9256                           intcon	equ	0xFF2
  9257                           intcon2	equ	0xFF1
  9258                           postinc0	equ	0xFEE
  9259                           fsr0h	equ	0xFEA
  9260                           fsr0l	equ	0xFE9
  9261                           wreg	equ	0xFE8
  9262                           indf1	equ	0xFE7
  9263                           postdec1	equ	0xFE5
  9264                           fsr1h	equ	0xFE2
  9265                           fsr1l	equ	0xFE1
  9266                           bsr	equ	0xFE0
  9267                           indf2	equ	0xFDF
  9268                           postinc2	equ	0xFDE
  9269                           postdec2	equ	0xFDD
  9270                           fsr2h	equ	0xFDA
  9271                           fsr2l	equ	0xFD9
  9272                           status	equ	0xFD8
  9273                           
  9274 ;; *************** function i2___awmod *****************
  9275 ;; Defined at:
  9276 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;  dividend        2    0[BANK0 ] int 
  9279 ;;  divisor         2    2[BANK0 ] int 
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;  __awmod         1    5[BANK0 ] unsigned char 
  9282 ;;  __awmod         1    4[BANK0 ] unsigned char 
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  2    0[BANK0 ] int 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2, status,0, prodl
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9292 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9293 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9295 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9296 ;;Total ram usage:        6 bytes
  9297 ;; Hardware stack levels used:    1
  9298 ;; This function calls:
  9299 ;;		Nothing
  9300 ;; This function is called by:
  9301 ;;		i2_send_msg
  9302 ;;		i2_recv_msg
  9303 ;; This function uses a non-reentrant model
  9304 ;;
  9305                           
  9306                           	psect	text55
  9307  0012EC                     __ptext55:
  9308                           	opt stack 0
  9309  0012EC                     i2___awmod:
  9310                           	opt stack 17
  9311                           
  9312                           ; BSR set to: 0
  9313                           ;incstack = 0
  9314  0012EC  0E00               	movlw	0
  9315  0012EE  0100               	movlb	0	; () banked
  9316  0012F0  6F65               	movwf	i2___awmod@sign& (0+255),b
  9317                           
  9318                           ; BSR set to: 0
  9319  0012F2  0100               	movlb	0	; () banked
  9320  0012F4  5161               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  9321  0012F6  0A80               	xorlw	128
  9322  0012F8  6EF3               	movwf	prodl,c
  9323  0012FA  0E80               	movlw	128
  9324  0012FC  5CF3               	subwf	prodl,w,c
  9325  0012FE  0E00               	movlw	0
  9326  001300  B4D8               	btfsc	status,2,c
  9327  001302  5D60               	subwf	i2___awmod@dividend& (0+255),w,b
  9328  001304  B0D8               	btfsc	status,0,c
  9329  001306  D009               	goto	i2l2400
  9330                           
  9331                           ; BSR set to: 0
  9332  001308  0100               	movlb	0	; () banked
  9333  00130A  6D60               	negf	i2___awmod@dividend& (0+255),b
  9334  00130C  0100               	movlb	0	; () banked
  9335  00130E  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9336  001310  B0D8               	btfsc	status,0,c
  9337  001312  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9338                           
  9339                           ; BSR set to: 0
  9340  001314  0E01               	movlw	1
  9341  001316  0100               	movlb	0	; () banked
  9342  001318  6F65               	movwf	i2___awmod@sign& (0+255),b
  9343  00131A                     i2l2400:
  9344                           
  9345                           ; BSR set to: 0
  9346  00131A  0100               	movlb	0	; () banked
  9347  00131C  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9348  00131E  0A80               	xorlw	128
  9349  001320  6EF3               	movwf	prodl,c
  9350  001322  0E80               	movlw	128
  9351  001324  5CF3               	subwf	prodl,w,c
  9352  001326  0E00               	movlw	0
  9353  001328  B4D8               	btfsc	status,2,c
  9354  00132A  5D62               	subwf	i2___awmod@divisor& (0+255),w,b
  9355  00132C  B0D8               	btfsc	status,0,c
  9356  00132E  D006               	goto	i2l2404
  9357                           
  9358                           ; BSR set to: 0
  9359  001330  0100               	movlb	0	; () banked
  9360  001332  6D62               	negf	i2___awmod@divisor& (0+255),b
  9361  001334  0100               	movlb	0	; () banked
  9362  001336  1F63               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  9363  001338  B0D8               	btfsc	status,0,c
  9364  00133A  2B63               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  9365  00133C                     i2l2404:
  9366                           
  9367                           ; BSR set to: 0
  9368  00133C  0100               	movlb	0	; () banked
  9369  00133E  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9370  001340  1162               	iorwf	i2___awmod@divisor& (0+255),w,b
  9371  001342  B4D8               	btfsc	status,2,c
  9372  001344  D026               	goto	i2l2420
  9373                           
  9374                           ; BSR set to: 0
  9375  001346  0E01               	movlw	1
  9376  001348  0100               	movlb	0	; () banked
  9377  00134A  6F64               	movwf	i2___awmod@counter& (0+255),b
  9378  00134C  D006               	goto	i2l2410
  9379  00134E                     i2l2408:
  9380                           
  9381                           ; BSR set to: 0
  9382  00134E  0100               	movlb	0	; () banked
  9383  001350  90D8               	bcf	status,0,c
  9384  001352  3762               	rlcf	i2___awmod@divisor& (0+255),f,b
  9385  001354  3763               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9386  001356  0100               	movlb	0	; () banked
  9387  001358  2B64               	incf	i2___awmod@counter& (0+255),f,b
  9388  00135A                     i2l2410:
  9389                           
  9390                           ; BSR set to: 0
  9391  00135A  0100               	movlb	0	; () banked
  9392  00135C  AF63               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9393  00135E  D7F7               	goto	i2l2408
  9394  001360                     i2l2412:
  9395                           
  9396                           ; BSR set to: 0
  9397  001360  0100               	movlb	0	; () banked
  9398  001362  5162               	movf	i2___awmod@divisor& (0+255),w,b
  9399  001364  0100               	movlb	0	; () banked
  9400  001366  5D60               	subwf	i2___awmod@dividend& (0+255),w,b
  9401  001368  0100               	movlb	0	; () banked
  9402  00136A  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9403  00136C  0100               	movlb	0	; () banked
  9404  00136E  5961               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9405  001370  A0D8               	btfss	status,0,c
  9406  001372  D008               	goto	i2l2416
  9407                           
  9408                           ; BSR set to: 0
  9409  001374  0100               	movlb	0	; () banked
  9410  001376  5162               	movf	i2___awmod@divisor& (0+255),w,b
  9411  001378  0100               	movlb	0	; () banked
  9412  00137A  5F60               	subwf	i2___awmod@dividend& (0+255),f,b
  9413  00137C  0100               	movlb	0	; () banked
  9414  00137E  5163               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9415  001380  0100               	movlb	0	; () banked
  9416  001382  5B61               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9417  001384                     i2l2416:
  9418                           
  9419                           ; BSR set to: 0
  9420  001384  0100               	movlb	0	; () banked
  9421  001386  90D8               	bcf	status,0,c
  9422  001388  3363               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9423  00138A  3362               	rrcf	i2___awmod@divisor& (0+255),f,b
  9424                           
  9425                           ; BSR set to: 0
  9426  00138C  0100               	movlb	0	; () banked
  9427  00138E  2F64               	decfsz	i2___awmod@counter& (0+255),f,b
  9428  001390  D7E7               	goto	i2l2412
  9429  001392                     i2l2420:
  9430                           
  9431                           ; BSR set to: 0
  9432  001392  0100               	movlb	0	; () banked
  9433  001394  5165               	movf	i2___awmod@sign& (0+255),w,b
  9434  001396  B4D8               	btfsc	status,2,c
  9435  001398  D006               	goto	i2l2424
  9436                           
  9437                           ; BSR set to: 0
  9438  00139A  0100               	movlb	0	; () banked
  9439  00139C  6D60               	negf	i2___awmod@dividend& (0+255),b
  9440  00139E  0100               	movlb	0	; () banked
  9441  0013A0  1F61               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9442  0013A2  B0D8               	btfsc	status,0,c
  9443  0013A4  2B61               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9444  0013A6                     i2l2424:
  9445                           
  9446                           ; BSR set to: 0
  9447  0013A6  C060  F060         	movff	i2___awmod@dividend,?i2___awmod
  9448  0013AA  C061  F061         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9449  0013AE  0012               	return	
  9450  0013B0                     __end_ofi2___awmod:
  9451                           	opt stack 0
  9452                           pclatu	equ	0xFFB
  9453                           pclath	equ	0xFFA
  9454                           tblptru	equ	0xFF8
  9455                           tblptrh	equ	0xFF7
  9456                           tblptrl	equ	0xFF6
  9457                           tablat	equ	0xFF5
  9458                           prodh	equ	0xFF4
  9459                           prodl	equ	0xFF3
  9460                           intcon	equ	0xFF2
  9461                           intcon2	equ	0xFF1
  9462                           postinc0	equ	0xFEE
  9463                           fsr0h	equ	0xFEA
  9464                           fsr0l	equ	0xFE9
  9465                           wreg	equ	0xFE8
  9466                           indf1	equ	0xFE7
  9467                           postdec1	equ	0xFE5
  9468                           fsr1h	equ	0xFE2
  9469                           fsr1l	equ	0xFE1
  9470                           bsr	equ	0xFE0
  9471                           indf2	equ	0xFDF
  9472                           postinc2	equ	0xFDE
  9473                           postdec2	equ	0xFDD
  9474                           fsr2h	equ	0xFDA
  9475                           fsr2l	equ	0xFD9
  9476                           status	equ	0xFD8
  9477                           
  9478 ;; *************** function _SleepIfOkay *****************
  9479 ;; Defined at:
  9480 ;;		line 276 in file "../src/messages.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;		None
  9483 ;; Auto vars:     Size  Location     Type
  9484 ;;		None
  9485 ;; Return value:  Size  Location     Type
  9486 ;;		None               void
  9487 ;; Registers used:
  9488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9498 ;;Total ram usage:        0 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; Hardware stack levels required when called:    2
  9501 ;; This function calls:
  9502 ;;		_enter_sleep_mode
  9503 ;;		i2_check_msg
  9504 ;;		i2_in_high_int
  9505 ;;		i2_in_low_int
  9506 ;; This function is called by:
  9507 ;;		_InterruptHandlerHigh
  9508 ;; This function uses a non-reentrant model
  9509 ;;
  9510                           
  9511                           	psect	text56
  9512  0016E4                     __ptext56:
  9513                           	opt stack 0
  9514  0016E4                     _SleepIfOkay:
  9515                           	opt stack 18
  9516                           
  9517                           ;messages.c: 278: if (MQ_Main_Willing_to_block == 0) {
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;incstack = 0
  9521  0016E4  0100               	movlb	0	; () banked
  9522  0016E6  67B5               	tstfsz	_MQ_Main_Willing_to_block& (0+255),b
  9523  0016E8  D001               	goto	i2l2850
  9524  0016EA  0012               	return	
  9525  0016EC                     i2l2850:
  9526                           
  9527                           ; BSR set to: 0
  9528                           ;messages.c: 280: }
  9529                           ;messages.c: 283: if (in_low_int()) {
  9530  0016EC  ECEE  F00D         	call	i2_in_low_int	;wreg free
  9531  0016F0  0100               	movlb	0	; () banked
  9532  0016F2  5163               	movf	(?i2_in_low_int+1)& (0+255),w,b
  9533  0016F4  0100               	movlb	0	; () banked
  9534  0016F6  1162               	iorwf	?i2_in_low_int& (0+255),w,b
  9535  0016F8  A4D8               	btfss	status,2,c
  9536  0016FA  0012               	return	
  9537                           
  9538                           ; BSR set to: 0
  9539                           ;messages.c: 285: }
  9540                           ;messages.c: 288: if (!in_high_int()) {
  9541                           
  9542                           ; BSR set to: 0
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;messages.c: 284: return;
  9546  0016FC  ECF9  F00F         	call	i2_in_high_int	;wreg free
  9547  001700  0100               	movlb	0	; () banked
  9548  001702  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9549  001704  0100               	movlb	0	; () banked
  9550  001706  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  9551  001708  B4D8               	btfsc	status,2,c
  9552  00170A  0012               	return	
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;messages.c: 290: }
  9556                           ;messages.c: 295: if (check_msg(&ToMainHigh_MQ)) {
  9557                           
  9558                           ; BSR set to: 0
  9559                           
  9560                           ; BSR set to: 0
  9561                           ;messages.c: 289: return;
  9562  00170C  0E06               	movlw	high _ToMainHigh_MQ
  9563  00170E  0100               	movlb	0	; () banked
  9564  001710  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9565  001712  0EED               	movlw	low _ToMainHigh_MQ
  9566  001714  0100               	movlb	0	; () banked
  9567  001716  6F60               	movwf	i2check_msg@qptr& (0+255),b
  9568  001718  ECC6  F00E         	call	i2_check_msg	;wreg free
  9569  00171C  0900               	iorlw	0
  9570  00171E  A4D8               	btfss	status,2,c
  9571  001720  0012               	return	
  9572                           
  9573                           ;messages.c: 297: }
  9574                           ;messages.c: 298: if (check_msg(&ToMainLow_MQ)) {
  9575                           
  9576                           ;messages.c: 296: return;
  9577  001722  0E08               	movlw	high _ToMainLow_MQ
  9578  001724  0100               	movlb	0	; () banked
  9579  001726  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9580  001728  0E39               	movlw	low _ToMainLow_MQ
  9581  00172A  0100               	movlb	0	; () banked
  9582  00172C  6F60               	movwf	i2check_msg@qptr& (0+255),b
  9583  00172E  ECC6  F00E         	call	i2_check_msg	;wreg free
  9584  001732  0900               	iorlw	0
  9585  001734  A4D8               	btfss	status,2,c
  9586  001736  0012               	return	
  9587                           
  9588                           ;messages.c: 300: }
  9589                           ;messages.c: 301: if (check_msg(&SensorData_MQ)) {
  9590                           
  9591                           ;messages.c: 299: return;
  9592  001738  0E05               	movlw	high _SensorData_MQ
  9593  00173A  0100               	movlb	0	; () banked
  9594  00173C  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9595  00173E  0EA1               	movlw	low _SensorData_MQ
  9596  001740  0100               	movlb	0	; () banked
  9597  001742  6F60               	movwf	i2check_msg@qptr& (0+255),b
  9598  001744  ECC6  F00E         	call	i2_check_msg	;wreg free
  9599  001748  0900               	iorlw	0
  9600  00174A  A4D8               	btfss	status,2,c
  9601  00174C  0012               	return	
  9602                           
  9603                           ;messages.c: 303: }
  9604                           ;messages.c: 304: if (check_msg(&MotorData_MQ)) {
  9605                           
  9606                           ;messages.c: 302: return;
  9607  00174E  0E04               	movlw	high _MotorData_MQ
  9608  001750  0100               	movlb	0	; () banked
  9609  001752  6F61               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9610  001754  0E55               	movlw	low _MotorData_MQ
  9611  001756  0100               	movlb	0	; () banked
  9612  001758  6F60               	movwf	i2check_msg@qptr& (0+255),b
  9613  00175A  ECC6  F00E         	call	i2_check_msg	;wreg free
  9614  00175E  0900               	iorlw	0
  9615  001760  B4D8               	btfsc	status,2,c
  9616                           
  9617                           ;messages.c: 306: }
  9618                           ;messages.c: 307: enter_sleep_mode();
  9619                           
  9620                           ;messages.c: 305: return;
  9621  001762  EC0D  F010         	call	_enter_sleep_mode	;wreg free
  9622  001766  0012               	return	
  9623  001768                     __end_of_SleepIfOkay:
  9624                           	opt stack 0
  9625                           pclatu	equ	0xFFB
  9626                           pclath	equ	0xFFA
  9627                           tblptru	equ	0xFF8
  9628                           tblptrh	equ	0xFF7
  9629                           tblptrl	equ	0xFF6
  9630                           tablat	equ	0xFF5
  9631                           prodh	equ	0xFF4
  9632                           prodl	equ	0xFF3
  9633                           intcon	equ	0xFF2
  9634                           intcon2	equ	0xFF1
  9635                           postinc0	equ	0xFEE
  9636                           fsr0h	equ	0xFEA
  9637                           fsr0l	equ	0xFE9
  9638                           wreg	equ	0xFE8
  9639                           indf1	equ	0xFE7
  9640                           postdec1	equ	0xFE5
  9641                           fsr1h	equ	0xFE2
  9642                           fsr1l	equ	0xFE1
  9643                           bsr	equ	0xFE0
  9644                           indf2	equ	0xFDF
  9645                           postinc2	equ	0xFDE
  9646                           postdec2	equ	0xFDD
  9647                           fsr2h	equ	0xFDA
  9648                           fsr2l	equ	0xFD9
  9649                           status	equ	0xFD8
  9650                           
  9651 ;; *************** function i2_in_low_int *****************
  9652 ;; Defined at:
  9653 ;;		line 32 in file "../src/interrupts.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;		None
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;		None
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  2    2[BANK0 ] int 
  9660 ;; Registers used:
  9661 ;;		wreg, status,2, status,0, cstack
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/0
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9667 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9670 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9671 ;;Total ram usage:        2 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; Hardware stack levels required when called:    1
  9674 ;; This function calls:
  9675 ;;		i2_in_high_int
  9676 ;; This function is called by:
  9677 ;;		_SleepIfOkay
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           	psect	text57
  9682  001BDC                     __ptext57:
  9683                           	opt stack 0
  9684  001BDC                     i2_in_low_int:
  9685                           	opt stack 18
  9686                           
  9687                           ;interrupts.c: 33: if (INTCONbits.GIEL == 1) {
  9688                           
  9689                           ;incstack = 0
  9690  001BDC  ACF2               	btfss	intcon,6,c	;volatile
  9691  001BDE  D007               	goto	i2l2722
  9692                           
  9693                           ;interrupts.c: 34: return (0);
  9694  001BE0  0E00               	movlw	0
  9695  001BE2  0100               	movlb	0	; () banked
  9696  001BE4  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  9697  001BE6  0E00               	movlw	0
  9698  001BE8  0100               	movlb	0	; () banked
  9699  001BEA  6F62               	movwf	?i2_in_low_int& (0+255),b
  9700  001BEC  0012               	return	
  9701  001BEE                     i2l2722:
  9702  001BEE  ECF9  F00F         	call	i2_in_high_int	;wreg free
  9703  001BF2  0100               	movlb	0	; () banked
  9704  001BF4  5161               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9705  001BF6  0100               	movlb	0	; () banked
  9706  001BF8  1160               	iorwf	?i2_in_high_int& (0+255),w,b
  9707  001BFA  B4D8               	btfsc	status,2,c
  9708  001BFC  D007               	goto	i2l2730
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;interrupts.c: 36: return (0);
  9712  001BFE  0E00               	movlw	0
  9713  001C00  0100               	movlb	0	; () banked
  9714  001C02  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  9715  001C04  0E00               	movlw	0
  9716  001C06  0100               	movlb	0	; () banked
  9717  001C08  6F62               	movwf	?i2_in_low_int& (0+255),b
  9718  001C0A  0012               	return	
  9719  001C0C                     i2l2730:
  9720                           
  9721                           ; BSR set to: 0
  9722                           ;interrupts.c: 38: return (1);
  9723  001C0C  0E00               	movlw	0
  9724  001C0E  0100               	movlb	0	; () banked
  9725  001C10  6F63               	movwf	(?i2_in_low_int+1)& (0+255),b
  9726  001C12  0E01               	movlw	1
  9727  001C14  0100               	movlb	0	; () banked
  9728  001C16  6F62               	movwf	?i2_in_low_int& (0+255),b
  9729  001C18  0012               	return	
  9730  001C1A                     __end_ofi2_in_low_int:
  9731                           	opt stack 0
  9732                           pclatu	equ	0xFFB
  9733                           pclath	equ	0xFFA
  9734                           tblptru	equ	0xFF8
  9735                           tblptrh	equ	0xFF7
  9736                           tblptrl	equ	0xFF6
  9737                           tablat	equ	0xFF5
  9738                           prodh	equ	0xFF4
  9739                           prodl	equ	0xFF3
  9740                           intcon	equ	0xFF2
  9741                           intcon2	equ	0xFF1
  9742                           postinc0	equ	0xFEE
  9743                           fsr0h	equ	0xFEA
  9744                           fsr0l	equ	0xFE9
  9745                           wreg	equ	0xFE8
  9746                           indf1	equ	0xFE7
  9747                           postdec1	equ	0xFE5
  9748                           fsr1h	equ	0xFE2
  9749                           fsr1l	equ	0xFE1
  9750                           bsr	equ	0xFE0
  9751                           indf2	equ	0xFDF
  9752                           postinc2	equ	0xFDE
  9753                           postdec2	equ	0xFDD
  9754                           fsr2h	equ	0xFDA
  9755                           fsr2l	equ	0xFD9
  9756                           status	equ	0xFD8
  9757                           
  9758 ;; *************** function i2_in_high_int *****************
  9759 ;; Defined at:
  9760 ;;		line 24 in file "../src/interrupts.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;		None
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;		None
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  2    0[BANK0 ] int 
  9767 ;; Registers used:
  9768 ;;		wreg, status,2
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9774 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9777 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9778 ;;Total ram usage:        2 bytes
  9779 ;; Hardware stack levels used:    1
  9780 ;; This function calls:
  9781 ;;		Nothing
  9782 ;; This function is called by:
  9783 ;;		_SleepIfOkay
  9784 ;;		i2_in_low_int
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text58
  9789  001FF2                     __ptext58:
  9790                           	opt stack 0
  9791  001FF2                     i2_in_high_int:
  9792                           	opt stack 18
  9793                           
  9794                           ;interrupts.c: 25: return (!INTCONbits.GIEH);
  9795                           
  9796                           ; BSR set to: 0
  9797                           ;incstack = 0
  9798  001FF2  0E00               	movlw	0
  9799  001FF4  AEF2               	btfss	intcon,7,c	;volatile
  9800  001FF6  0E01               	movlw	1
  9801  001FF8  0100               	movlb	0	; () banked
  9802  001FFA  6F60               	movwf	?i2_in_high_int& (0+255),b
  9803  001FFC  0100               	movlb	0	; () banked
  9804  001FFE  6B61               	clrf	(?i2_in_high_int+1)& (0+255),b
  9805  002000  0012               	return	
  9806  002002                     __end_ofi2_in_high_int:
  9807                           	opt stack 0
  9808                           pclatu	equ	0xFFB
  9809                           pclath	equ	0xFFA
  9810                           tblptru	equ	0xFF8
  9811                           tblptrh	equ	0xFF7
  9812                           tblptrl	equ	0xFF6
  9813                           tablat	equ	0xFF5
  9814                           prodh	equ	0xFF4
  9815                           prodl	equ	0xFF3
  9816                           intcon	equ	0xFF2
  9817                           intcon2	equ	0xFF1
  9818                           postinc0	equ	0xFEE
  9819                           fsr0h	equ	0xFEA
  9820                           fsr0l	equ	0xFE9
  9821                           wreg	equ	0xFE8
  9822                           indf1	equ	0xFE7
  9823                           postdec1	equ	0xFE5
  9824                           fsr1h	equ	0xFE2
  9825                           fsr1l	equ	0xFE1
  9826                           bsr	equ	0xFE0
  9827                           indf2	equ	0xFDF
  9828                           postinc2	equ	0xFDE
  9829                           postdec2	equ	0xFDD
  9830                           fsr2h	equ	0xFDA
  9831                           fsr2l	equ	0xFD9
  9832                           status	equ	0xFD8
  9833                           
  9834 ;; *************** function i2_check_msg *****************
  9835 ;; Defined at:
  9836 ;;		line 270 in file "../src/messages.c"
  9837 ;; Parameters:    Size  Location     Type
  9838 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9839 ;;		 -> MotorData_MQ(332), SensorData_MQ(332), ToMainHigh_MQ(332), ToMainLow_MQ(332), 
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;		None
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  1    wreg      unsigned char 
  9844 ;; Registers used:
  9845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9851 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9853 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9854 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9855 ;;Total ram usage:        3 bytes
  9856 ;; Hardware stack levels used:    1
  9857 ;; This function calls:
  9858 ;;		Nothing
  9859 ;; This function is called by:
  9860 ;;		_SleepIfOkay
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           	psect	text59
  9865  001D8C                     __ptext59:
  9866                           	opt stack 0
  9867  001D8C                     i2_check_msg:
  9868                           	opt stack 19
  9869                           
  9870                           ;messages.c: 271: return (qptr->queue[qptr->cur_read_ind].full);
  9871                           
  9872                           ; BSR set to: 0
  9873                           ;incstack = 0
  9874  001D8C  0100               	movlb	0	; () banked
  9875  001D8E  EE21 F04B          	lfsr	2,331
  9876  001D92  0100               	movlb	0	; () banked
  9877  001D94  5160               	movf	i2check_msg@qptr& (0+255),w,b
  9878  001D96  26D9               	addwf	fsr2l,f,c
  9879  001D98  0100               	movlb	0	; () banked
  9880  001D9A  5161               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  9881  001D9C  22DA               	addwfc	fsr2h,f,c
  9882  001D9E  50DF               	movf	indf2,w,c
  9883  001DA0  0100               	movlb	0	; () banked
  9884  001DA2  6F62               	movwf	??i2_check_msg& (0+255),b
  9885  001DA4  0100               	movlb	0	; () banked
  9886  001DA6  5162               	movf	??i2_check_msg& (0+255),w,b
  9887  001DA8  0D21               	mullw	33
  9888  001DAA  50F3               	movf	prodl,w,c
  9889  001DAC  0100               	movlb	0	; () banked
  9890  001DAE  2560               	addwf	i2check_msg@qptr& (0+255),w,b
  9891  001DB0  6ED9               	movwf	fsr2l,c
  9892  001DB2  50F4               	movf	prodh,w,c
  9893  001DB4  0100               	movlb	0	; () banked
  9894  001DB6  2161               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  9895  001DB8  6EDA               	movwf	fsr2h,c
  9896  001DBA  50DF               	movf	indf2,w,c
  9897  001DBC  0012               	return	
  9898  001DBE                     __end_ofi2_check_msg:
  9899                           	opt stack 0
  9900                           pclatu	equ	0xFFB
  9901                           pclath	equ	0xFFA
  9902                           tblptru	equ	0xFF8
  9903                           tblptrh	equ	0xFF7
  9904                           tblptrl	equ	0xFF6
  9905                           tablat	equ	0xFF5
  9906                           prodh	equ	0xFF4
  9907                           prodl	equ	0xFF3
  9908                           intcon	equ	0xFF2
  9909                           intcon2	equ	0xFF1
  9910                           postinc0	equ	0xFEE
  9911                           fsr0h	equ	0xFEA
  9912                           fsr0l	equ	0xFE9
  9913                           wreg	equ	0xFE8
  9914                           indf1	equ	0xFE7
  9915                           postdec1	equ	0xFE5
  9916                           fsr1h	equ	0xFE2
  9917                           fsr1l	equ	0xFE1
  9918                           bsr	equ	0xFE0
  9919                           indf2	equ	0xFDF
  9920                           postinc2	equ	0xFDE
  9921                           postdec2	equ	0xFDD
  9922                           fsr2h	equ	0xFDA
  9923                           fsr2l	equ	0xFD9
  9924                           status	equ	0xFD8
  9925                           
  9926 ;; *************** function _enter_sleep_mode *****************
  9927 ;; Defined at:
  9928 ;;		line 252 in file "../src/messages.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;		None
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;		None
  9933 ;; Return value:  Size  Location     Type
  9934 ;;		None               void
  9935 ;; Registers used:
  9936 ;;		None
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9946 ;;Total ram usage:        0 bytes
  9947 ;; Hardware stack levels used:    1
  9948 ;; This function calls:
  9949 ;;		Nothing
  9950 ;; This function is called by:
  9951 ;;		_SleepIfOkay
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text60
  9956  00201A                     __ptext60:
  9957                           	opt stack 0
  9958  00201A                     _enter_sleep_mode:
  9959                           	opt stack 19
  9960                           
  9961                           ;messages.c: 254: OSCCONbits.IDLEN = 1;
  9962                           
  9963                           ; BSR set to: 0
  9964                           ;incstack = 0
  9965  00201A  8ED3               	bsf	4051,7,c	;volatile
  9966  00201C  0003               	sleep		;# 
  9967  00201E  0012               	return	
  9968  002020                     __end_of_enter_sleep_mode:
  9969                           	opt stack 0
  9970  0000                     pclatu	equ	0xFFB
  9971                           pclath	equ	0xFFA
  9972                           tblptru	equ	0xFF8
  9973                           tblptrh	equ	0xFF7
  9974                           tblptrl	equ	0xFF6
  9975                           tablat	equ	0xFF5
  9976                           prodh	equ	0xFF4
  9977                           prodl	equ	0xFF3
  9978                           intcon	equ	0xFF2
  9979                           intcon2	equ	0xFF1
  9980                           postinc0	equ	0xFEE
  9981                           fsr0h	equ	0xFEA
  9982                           fsr0l	equ	0xFE9
  9983                           wreg	equ	0xFE8
  9984                           indf1	equ	0xFE7
  9985                           postdec1	equ	0xFE5
  9986                           fsr1h	equ	0xFE2
  9987                           fsr1l	equ	0xFE1
  9988                           bsr	equ	0xFE0
  9989                           indf2	equ	0xFDF
  9990                           postinc2	equ	0xFDE
  9991                           postdec2	equ	0xFDD
  9992                           fsr2h	equ	0xFDA
  9993                           fsr2l	equ	0xFD9
  9994                           status	equ	0xFD8
  9995                           pclatu	equ	0xFFB
  9996                           pclath	equ	0xFFA
  9997                           tblptru	equ	0xFF8
  9998                           tblptrh	equ	0xFF7
  9999                           tblptrl	equ	0xFF6
 10000                           tablat	equ	0xFF5
 10001                           prodh	equ	0xFF4
 10002                           prodl	equ	0xFF3
 10003                           intcon	equ	0xFF2
 10004                           intcon2	equ	0xFF1
 10005                           postinc0	equ	0xFEE
 10006                           fsr0h	equ	0xFEA
 10007                           fsr0l	equ	0xFE9
 10008                           wreg	equ	0xFE8
 10009                           indf1	equ	0xFE7
 10010                           postdec1	equ	0xFE5
 10011                           fsr1h	equ	0xFE2
 10012                           fsr1l	equ	0xFE1
 10013                           bsr	equ	0xFE0
 10014                           indf2	equ	0xFDF
 10015                           postinc2	equ	0xFDE
 10016                           postdec2	equ	0xFDD
 10017                           fsr2h	equ	0xFDA
 10018                           fsr2l	equ	0xFD9
 10019                           status	equ	0xFD8
 10020                           
 10021                           	psect	param0
 10022  0000                     pclatu	equ	0xFFB
 10023                           pclath	equ	0xFFA
 10024                           tblptru	equ	0xFF8
 10025                           tblptrh	equ	0xFF7
 10026                           tblptrl	equ	0xFF6
 10027                           tablat	equ	0xFF5
 10028                           prodh	equ	0xFF4
 10029                           prodl	equ	0xFF3
 10030                           intcon	equ	0xFF2
 10031                           intcon2	equ	0xFF1
 10032                           postinc0	equ	0xFEE
 10033                           fsr0h	equ	0xFEA
 10034                           fsr0l	equ	0xFE9
 10035                           wreg	equ	0xFE8
 10036                           indf1	equ	0xFE7
 10037                           postdec1	equ	0xFE5
 10038                           fsr1h	equ	0xFE2
 10039                           fsr1l	equ	0xFE1
 10040                           bsr	equ	0xFE0
 10041                           indf2	equ	0xFDF
 10042                           postinc2	equ	0xFDE
 10043                           postdec2	equ	0xFDD
 10044                           fsr2h	equ	0xFDA
 10045                           fsr2l	equ	0xFD9
 10046                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1994
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     58      61
    BANK0           160     83      86
    BANK1           256    189     189
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 31
		 -> main@msgbuffer(BANK1[31]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 332
		 -> FromMainLow_MQ.queue(BIGRAM[330]), FromMainHigh_MQ.queue(BIGRAM[330]), ToMainHigh_MQ.queue(BIGRAM[330]), ToMainLow_MQ.queue(BIGRAM[330]), 
		 -> SensorData_MQ.queue(BIGRAM[330]), MotorData_MQ.queue(BIGRAM[330]), timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), 
		 -> FromMainHigh_MQ(BIGRAM[332]), FromMainLow_MQ(BIGRAM[332]), MotorData_MQ(BIGRAM[332]), SensorData_MQ(BIGRAM[332]), 
		 -> ToMainHigh_MQ(BIGRAM[332]), ToMainLow_MQ(BIGRAM[332]), main@msgbuffer(BANK1[31]), main@ic(BANK1[72]), 
		 -> main@uc(BANK1[66]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 332
		 -> FromMainLow_MQ.queue(BIGRAM[330]), FromMainHigh_MQ.queue(BIGRAM[330]), ToMainHigh_MQ.queue(BIGRAM[330]), ToMainLow_MQ.queue(BIGRAM[330]), 
		 -> SensorData_MQ.queue(BIGRAM[330]), MotorData_MQ.queue(BIGRAM[330]), timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), 
		 -> FromMainHigh_MQ(BIGRAM[332]), FromMainLow_MQ(BIGRAM[332]), MotorData_MQ(BIGRAM[332]), SensorData_MQ(BIGRAM[332]), 
		 -> ToMainHigh_MQ(BIGRAM[332]), ToMainLow_MQ(BIGRAM[332]), main@msgbuffer(BANK1[31]), main@ic(BANK1[72]), 
		 -> main@uc(BANK1[66]), 

    memcpy@s1	PTR const void  size(2) Largest target is 332
		 -> ToMainLow_MQ.data(BIGRAM[30]), ToMainHigh_MQ.data(BIGRAM[30]), SensorData_MQ.data(BIGRAM[30]), MotorData_MQ.data(BIGRAM[30]), 
		 -> FromMainLow_MQ.data(BIGRAM[30]), FromMainHigh_MQ.data(BIGRAM[30]), MotorData_MQ.queue.data(BIGRAM[30]), SensorData_MQ.queue.data(BIGRAM[30]), 
		 -> ToMainLow_MQ.queue.data(BIGRAM[30]), ToMainHigh_MQ.queue.data(BIGRAM[30]), FromMainHigh_MQ.queue.data(BIGRAM[30]), FromMainLow_MQ.queue.data(BIGRAM[30]), 
		 -> timer0_int_handler@reverse(COMRAM[1]), timer0_int_handler@stop(COMRAM[1]), timer0_int_handler@right(COMRAM[1]), timer0_int_handler@left(COMRAM[1]), 
		 -> timer0_int_handler@forward(COMRAM[1]), timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), FromMainHigh_MQ(BIGRAM[332]), 
		 -> FromMainLow_MQ(BIGRAM[332]), MotorData_MQ(BIGRAM[332]), SensorData_MQ(BIGRAM[332]), ToMainHigh_MQ(BIGRAM[332]), 
		 -> ToMainLow_MQ(BIGRAM[332]), main@msgbuffer(BANK1[31]), main@t1thread_data(BANK1[2]), main@ic(BANK1[72]), 
		 -> main@uc(BANK1[66]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 332
		 -> ToMainLow_MQ.data(BIGRAM[30]), ToMainHigh_MQ.data(BIGRAM[30]), SensorData_MQ.data(BIGRAM[30]), MotorData_MQ.data(BIGRAM[30]), 
		 -> FromMainLow_MQ.data(BIGRAM[30]), FromMainHigh_MQ.data(BIGRAM[30]), MotorData_MQ.queue.data(BIGRAM[30]), SensorData_MQ.queue.data(BIGRAM[30]), 
		 -> ToMainLow_MQ.queue.data(BIGRAM[30]), ToMainHigh_MQ.queue.data(BIGRAM[30]), FromMainHigh_MQ.queue.data(BIGRAM[30]), FromMainLow_MQ.queue.data(BIGRAM[30]), 
		 -> timer0_int_handler@reverse(COMRAM[1]), timer0_int_handler@stop(COMRAM[1]), timer0_int_handler@right(COMRAM[1]), timer0_int_handler@left(COMRAM[1]), 
		 -> timer0_int_handler@forward(COMRAM[1]), timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), FromMainHigh_MQ(BIGRAM[332]), 
		 -> FromMainLow_MQ(BIGRAM[332]), MotorData_MQ(BIGRAM[332]), SensorData_MQ(BIGRAM[332]), ToMainHigh_MQ(BIGRAM[332]), 
		 -> ToMainLow_MQ(BIGRAM[332]), main@msgbuffer(BANK1[31]), main@t1thread_data(BANK1[2]), main@ic(BANK1[72]), 
		 -> main@uc(BANK1[66]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 31
		 -> main@msgbuffer(BANK1[31]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 31
		 -> main@msgbuffer(BANK1[31]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 31
		 -> main@msgbuffer(BANK1[31]), 

    uart_send@msg_buffer	PTR unsigned char  size(2) Largest target is 31
		 -> main@msgbuffer(BANK1[31]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 66
		 -> main@uc(BANK1[66]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 66
		 -> NULL(NULL[0]), main@uc(BANK1[66]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 72
		 -> main@ic(BANK1[72]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 31
		 -> main@msgbuffer(BANK1[31]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 72
		 -> NULL(NULL[0]), main@ic(BANK1[72]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 332
		 -> MotorData_MQ(BIGRAM[332]), SensorData_MQ(BIGRAM[332]), ToMainHigh_MQ(BIGRAM[332]), ToMainLow_MQ(BIGRAM[332]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 72
		 -> timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), main@ic(BANK1[72]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 3775
		 -> timer0_int_handler@msgtype(COMRAM[2]), RAM(DATA[3775]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 31
		 -> main@msgbuffer(BANK1[31]), main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 66
		 -> NULL(NULL[0]), main@uc(BANK1[66]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 31
		 -> main@msgbuffer(BANK1[31]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 31
		 -> main@msgbuffer(BANK1[31]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 72
		 -> timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), main@ic(BANK1[72]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 31
		 -> main@msgbuffer(BANK1[31]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 66
		 -> timer0_int_handler@reverse(COMRAM[1]), timer0_int_handler@stop(COMRAM[1]), timer0_int_handler@right(COMRAM[1]), timer0_int_handler@left(COMRAM[1]), 
		 -> timer0_int_handler@forward(COMRAM[1]), NULL(NULL[0]), main@uc(BANK1[66]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 3775
		 -> timer0_int_handler@msgtype(COMRAM[2]), RAM(DATA[3775]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 72
		 -> timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), main@msgbuffer(BANK1[31]), main@ic(BANK1[72]), 
		 -> main@uc(BANK1[66]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 332
		 -> FromMainLow_MQ.queue(BIGRAM[330]), FromMainHigh_MQ.queue(BIGRAM[330]), ToMainHigh_MQ.queue(BIGRAM[330]), ToMainLow_MQ.queue(BIGRAM[330]), 
		 -> SensorData_MQ.queue(BIGRAM[330]), MotorData_MQ.queue(BIGRAM[330]), FromMainHigh_MQ(BIGRAM[332]), FromMainLow_MQ(BIGRAM[332]), 
		 -> MotorData_MQ(BIGRAM[332]), SensorData_MQ(BIGRAM[332]), ToMainHigh_MQ(BIGRAM[332]), ToMainLow_MQ(BIGRAM[332]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 332
		 -> FromMainHigh_MQ(BIGRAM[332]), FromMainLow_MQ(BIGRAM[332]), MotorData_MQ(BIGRAM[332]), SensorData_MQ(BIGRAM[332]), 
		 -> ToMainHigh_MQ(BIGRAM[332]), ToMainLow_MQ(BIGRAM[332]), 

    sp__memcpy	PTR void  size(2) Largest target is 332
		 -> FromMainLow_MQ.queue(BIGRAM[330]), FromMainHigh_MQ.queue(BIGRAM[330]), ToMainHigh_MQ.queue(BIGRAM[330]), ToMainLow_MQ.queue(BIGRAM[330]), 
		 -> SensorData_MQ.queue(BIGRAM[330]), MotorData_MQ.queue(BIGRAM[330]), timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), 
		 -> FromMainHigh_MQ(BIGRAM[332]), FromMainLow_MQ(BIGRAM[332]), MotorData_MQ(BIGRAM[332]), SensorData_MQ(BIGRAM[332]), 
		 -> ToMainHigh_MQ(BIGRAM[332]), ToMainLow_MQ(BIGRAM[332]), main@msgbuffer(BANK1[31]), main@ic(BANK1[72]), 
		 -> main@uc(BANK1[66]), 

    send_msg@data	PTR void  size(2) Largest target is 72
		 -> timer0_int_handler@reverse(COMRAM[1]), timer0_int_handler@stop(COMRAM[1]), timer0_int_handler@right(COMRAM[1]), timer0_int_handler@left(COMRAM[1]), 
		 -> timer0_int_handler@forward(COMRAM[1]), timer0_int_handler@val(COMRAM[2]), NULL(NULL[0]), main@msgbuffer(BANK1[31]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[72]), main@uc(BANK1[66]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 332
		 -> FromMainLow_MQ.queue(BIGRAM[330]), FromMainHigh_MQ.queue(BIGRAM[330]), ToMainHigh_MQ.queue(BIGRAM[330]), ToMainLow_MQ.queue(BIGRAM[330]), 
		 -> SensorData_MQ.queue(BIGRAM[330]), MotorData_MQ.queue(BIGRAM[330]), FromMainHigh_MQ(BIGRAM[332]), FromMainLow_MQ(BIGRAM[332]), 
		 -> MotorData_MQ(BIGRAM[332]), SensorData_MQ(BIGRAM[332]), ToMainHigh_MQ(BIGRAM[332]), ToMainLow_MQ(BIGRAM[332]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 332
		 -> FromMainHigh_MQ(BIGRAM[332]), FromMainLow_MQ(BIGRAM[332]), MotorData_MQ(BIGRAM[332]), SensorData_MQ(BIGRAM[332]), 
		 -> ToMainHigh_MQ(BIGRAM[332]), ToMainLow_MQ(BIGRAM[332]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 332
		 -> FromMainHigh_MQ(BIGRAM[332]), FromMainLow_MQ(BIGRAM[332]), MotorData_MQ(BIGRAM[332]), SensorData_MQ(BIGRAM[332]), 
		 -> ToMainHigh_MQ(BIGRAM[332]), ToMainLow_MQ(BIGRAM[332]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer0_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _timer0_int_handler->_FromMainHigh_recvmsg
    _ToMainLow_sendmsg->i1_send_msg
    _ToMainHigh_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _FromMainHigh_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _uart_send->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_FromMainHigh_sendmsg
    _init_queues->_init_queue
    _i2c_master_send->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_master_int_handler
    _i2c_master_int_handler->i2_FromMainHigh_recvmsg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    i2_FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptHandlerHigh in BANK4

    None.

Critical Paths under _InterruptHandlerLow in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptHandlerHigh in BANK5

    None.

Critical Paths under _InterruptHandlerLow in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptHandlerHigh in BANK6

    None.

Critical Paths under _InterruptHandlerLow in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptHandlerHigh in BANK7

    None.

Critical Paths under _InterruptHandlerLow in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptHandlerHigh in BANK8

    None.

Critical Paths under _InterruptHandlerLow in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptHandlerHigh in BANK9

    None.

Critical Paths under _InterruptHandlerLow in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptHandlerHigh in BANK10

    None.

Critical Paths under _InterruptHandlerLow in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptHandlerHigh in BANK11

    None.

Critical Paths under _InterruptHandlerLow in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptHandlerHigh in BANK12

    None.

Critical Paths under _InterruptHandlerLow in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptHandlerHigh in BANK13

    None.

Critical Paths under _InterruptHandlerLow in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptHandlerHigh in BANK14

    None.

Critical Paths under _InterruptHandlerLow in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               193   193      0   20603
                                              0 BANK1    189   189      0
                         _Open1USART
                         _OpenTimer0
                         _OpenTimer1
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
                          _uart_send
 ---------------------------------------------------------------------------------
 (1) _uart_send                                            4     2      2    4230
                                             74 BANK0      4     2      2
                _FromMainLow_sendmsg
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    3013
                                             70 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     300
                                             48 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       9     1      8    3525
                                             74 BANK0      9     1      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     211
                                             48 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     235
                                             48 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      75
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      75
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     452
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     452
                                             48 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      75
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                      4     1      3    3631
                                             74 BANK0      4     1      3
               _FromMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    3013
                                             70 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2735
                                             58 BANK0     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 2     1      1      97
                                             48 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     386
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             52 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             50 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             48 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     364
                                             48 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2929
                                             72 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2929
                                             72 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2757
                                             58 BANK0     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     438
                                             48 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     900
                                             48 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           3     2      1     119
                                             48 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             48 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Open1USART                                           6     4      2     273
                                             48 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0   12814
                                             41 COMRAM    17    17      0
                 _timer0_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               2     2      0    1495
                                             29 COMRAM     2     2      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (7) _FromMainLow_recvmsg                                  5     1      4    1495
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                5     5      0    2344
                                             26 COMRAM     4     4      0
                         _Read1USART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _Read1USART                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   2     2      0    2440
                                             26 COMRAM     2     2      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _timer0_int_handler                                  12    12      0    6535
                                             29 COMRAM    12    12      0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
                  _ToMainLow_sendmsg
                        _WriteTimer0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (7) _WriteTimer0                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2321
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _ToMainHigh_sendmsg                                   4     1      3    1743
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1301
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _FromMainHigh_recvmsg                                 5     1      4    1549
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (8) i1_recv_msg                                          14     7      7    1323
                                             10 COMRAM    14     7      7
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     276
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            6     2      4     484
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    2628
                                             34 BANK0     14    14      0
                        _SleepIfOkay
             _i2c_master_int_handler
 ---------------------------------------------------------------------------------
 (11) _i2c_master_int_handler                              6     6      0    2480
                                             29 BANK0      5     5      0
             i2_FromMainHigh_recvmsg
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) i2_ToMainHigh_sendmsg                                4     1      3    1333
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1007
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_FromMainHigh_recvmsg                              5     1      4    1147
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1029
                                             10 BANK0     14     7      7
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     276
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           6     2      4     294
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     148
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     148
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Open1USART
   _OpenTimer0
   _OpenTimer1
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_master_send
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_lthread
   _uart_send
     _FromMainLow_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___awmod

 _InterruptHandlerLow (ROOT)
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i1_recv_msg
         i1___awmod
         i1_memcpy
     _ToMainHigh_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
     _WriteTimer0
     i1___awmod
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _Read1USART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1___awmod
         i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_master_int_handler
     i2_FromMainHigh_recvmsg
       i2_recv_msg
         i2___awmod
         i2_memcpy
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2___awmod
         i2_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0     7C8      35       52.8%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     BD      BD       8       73.8%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     53      56       5       53.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3A      3D       1       64.2%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     150       6        0.0%
DATA                 0      0     918       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Oct 16 01:08:41 2014

               main@uthread_data 0124         _MQ_Main_Willing_to_block 00B5  
          ?i2_ToMainHigh_sendmsg 0076                      _SSPSTATbits 000FC7  
      __end_of_ToMainLow_recvmsg 1D28                               bsr 000FE0  
      __end_of_ToMainLow_sendmsg 1F48                     __CFG_CP0$OFF 000000  
              i2recv_msg@msgtype 006D                i2recv_msg@tlength 0074  
           ?_FromMainLow_recvmsg 0019                              l122 0684  
                            l125 06CC                              l117 064E  
                            l137 07CE                              l512 18A2  
                            l441 1EB6                              l514 18AE  
                            l442 1EB8                              l515 18B0  
                            l508 188A                              l470 1C8A  
                            l469 1C88                              l755 1F8A  
           ?_FromMainLow_sendmsg 00A6  __size_of_uart_trans_int_handler 00B4  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                   ___awmod@sign 0095                   _FromMainLow_MQ 0309  
                            wreg 000FE8                       _TXSTA1bits 000FAD  
                   __CFG_IESO$ON 000000                     ?_in_high_int 0090  
               ??_init_uart_recv 0092                  ReadTimer1@timer 0003  
            i2recv_msg@maxlength 006C                             l1061 1A56  
                           l2320 129C                             l2312 1278  
                           l3120 15F2                             l3114 15D4  
                           l2332 12E2                             l2324 12C0  
                           l2316 128A                             l2308 1256  
                           l3132 162E                             l2318 1296  
                           l3126 1610                             l2328 12CE  
                           l3138 164C                             l2610 19D8  
                           l2292 1AD8                             l2444 1BCE  
                           l2436 1BB0                             l2460 0E90  
                           l3086 188C                             l3078 187A  
                           l2710 1A48                             l2702 1A12  
                           l3166 09A8                             l3350 06D2  
                           l2704 1A1E                             l3098 18A4  
                           l2298 1AF8                             l2706 1A24  
                           l3370 07FC                             l3362 0746  
                           l3354 06EC                             l2628 0C26  
                           l2644 0D00                             l3364 078A  
                           l3356 0714                             l3382 0874  
                           l3374 0824                             l3366 07D4  
                           l3392 08C0                             l3378 084C  
                           l3388 089C                             l2598 1C48  
                           u2237 1F8C                             i1l52 0084  
                    main@forward 011F                  _FromMainHigh_MQ 01BD  
                 Read1USART@data 0001           ?_block_on_To_msgqueues 0001  
                     i1_recv_msg 105A                             _main 0568  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                    main@reverse 0123           __CFG_DSWDTOSC$T1OSCREF 000000  
                    main@msgtype 0131                       i1_send_msg 13B0  
                           pclat 000FFA              timer0_int_handler@i 0029  
                    i2_check_msg 1D8C                             prodh 000FF4  
                           prodl 000FF3                             start 00CA  
                     i2_recv_msg 0D04                       i2_send_msg 0F4E  
  __size_of_i2c_configure_master 0080        ToMainHigh_recvmsg@msgtype 00A8  
                 send_msg@length 009C      __size_of_timer0_int_handler 0154  
                    _Delay1KTCYx 1F86                    __CFG_PLLDIV$3 000000  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00A9  
                          ?_main 0001                  __end_of___awmod 12EC  
                          _T0CON 000FD5                            _T1CON 000FCD  
                __end_of___lwmod 1A60                       i1memcpy@d1 0001  
                          i1l525 1F76                            i2l316 017E  
                          i2l325 033A                       i1memcpy@s1 0003  
    FromMainHigh_recvmsg@msgtype 0019              uart_send@msg_buffer 00AA  
                          _TMR0H 000FD7                            _TMR1H 000FCF  
                          _TMR0L 000FD6                            _TMR1L 000FCE  
                     i2memcpy@d1 0060                   __CFG_FCMEN$OFF 000000  
                     i2memcpy@s1 0062                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                   i1___awmod@sign 0006  
                __end_of_in_main 1C56       ToMainLow_recvmsg@maxlength 00AC  
                     _Read1USART 1F68          timer0_lthread@msgbuffer 0096  
                 __CFG_T1DIG$OFF 000000  __size_ofi2_FromMainHigh_recvmsg 0032  
                          tablat 000FF5                            status 000FD8  
       i2ToMainHigh_sendmsg@data 0077           _uart_trans_int_handler 1470  
               __end_ofi1_memcpy 1B9E               __size_ofi1___awmod 0090  
               __end_ofi2_memcpy 1B5E               __size_ofi2___awmod 00C4  
                __initialization 1EBC           ??i2_ToMainHigh_sendmsg 0079  
                   __end_of_main 08D8                       _ReadTimer1 1FBE  
    __size_of_timer1_int_handler 002C       __size_of_ToMainLow_recvmsg 0032  
     __size_of_ToMainLow_sendmsg 0020    __size_of_FromMainHigh_recvmsg 0024  
          __size_ofi2_in_low_int 003E                   __CFG_OSC$HSPLL 000000  
  __size_of_FromMainHigh_sendmsg 002A                       _Open1USART 185E  
                         ??_main 00B3                  send_msg@msgtype 009D  
                  __activetblptr 000002                  send_msg@tlength 00A1  
     FromMainLow_sendmsg@msgtype 00A6          ??_uart_recv_int_handler 001B  
                         _T1GCON 000F9A                           i1l2344 1B8C  
                         i1l2338 1B70                           i1l3250 007A  
                         i1l2380 16C2                           i1l2372 16A2  
                         i1l2364 1678                           i1l3244 0070  
                         i1l2374 16AA                           i1l3238 0066  
                         i1l2376 16AE                           i1l2384 16CC  
                         i1l2368 1694                           i1l2536 10A0  
                         i1l2552 113E                           i1l2388 16DA  
                         i1l2900 0AFC                           i1l2488 13E8  
                         i1l2912 0B5E                           i1l2906 0B2C  
                         i1l2924 0BC2                           i1l2918 0B90  
                         i2l2400 131A                           i2l2410 135A  
                         i1l2946 11EE                           i2l2412 1360  
                         i2l2420 1392                           i2l2404 133C  
                         i1l2884 0AB8                           i1l2948 120C  
                         i1l2980 1520                           i2l3230 1820  
                         i2l2424 13A6                           i2l2416 1384  
                         i2l2408 134E                           i2l2512 0F9C  
                         i1l2976 150E                           i1l2968 1486  
                     _OpenTimer0 1E96                           i2l2354 1B48  
                     _OpenTimer1 1C56                           i2l2348 1B28  
                 __CFG_WDTEN$OFF 000000                           i2l2800 02C8  
                         i2l2730 1C0C                           i2l2722 1BEE  
                         i2l2806 030C                           i2l2750 00D0  
                         i2l2568 0D64                           i2l2584 0E3E  
                         i2l2816 0414                           i2l2850 16EC  
                         i2l2826 0486                           i2l2834 04D4  
                         i2l2754 012E                           i2l2772 01D0  
                         i2l2756 0164                           i2l2844 0522  
                         i2l2766 019E                           i2l2794 02AC  
                         i2l2786 028E                           _RCREG1 000FAF  
                  ??_SleepIfOkay 0064                           _RCSTA1 000FAC  
                         _OSCCON 000FD3                           _SPBRG1 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                 __CFG_WPCFG$OFF 000000                           _TXREG1 000FAE  
                    ?i1_send_msg 000B                           _TXSTA1 000FAD  
             timer0_lthread@tptr 0090                   __CFG_WPDIS$OFF 000000  
        FromMainLow_recvmsg@data 001B                      ?i2_recv_msg 006A  
                   i2_in_low_int 1BDC                      ?i2_send_msg 006A  
                 __CFG_XINST$OFF 000000                        ??___awmod 0094  
                _i2c_master_send 1524                 OpenTimer0@config 0090  
                         _ic_ptr 00B3                        ??___lwmod 0094  
                  main@msgbuffer 0100           i2_FromMainHigh_recvmsg 1D5A  
               __end_of_init_i2c 199C                 OpenTimer1@config 0092  
                         _memcpy 1ABE                           clear_0 1EC4  
                ___awmod@divisor 0092                           _uc_ptr 003B  
                ___awmod@counter 0094                           main@ic 0175  
                         main@uc 0133                 __end_of_recv_msg 0D04  
                      ??_in_main 0096                __end_ofi1___awmod 16E4  
               __end_of_send_msg 0F4E                __end_ofi2___awmod 13B0  
          timer0_int_handler@val 0027                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 0092                   i2___awmod@sign 0065  
       ToMainLow_recvmsg@msgtype 00A8             __size_of_in_high_int 0010  
                    ?_Read1USART 0001          FromMainLow_sendmsg@data 00A7  
                     __accesstop 0060          __end_of__initialization 1ED6  
     __end_of_ToMainHigh_recvmsg 1D5A       __end_of_ToMainHigh_sendmsg 1F68  
                __CFG_IOL1WAY$ON 000000             __CFG_WPEND$PAGE_WPFP 000000  
    __end_of_init_timer1_lthread 1FAC              __end_of_SleepIfOkay 1768  
                 __pcstackCOMRAM 0001           __size_ofi2_in_high_int 0010  
                    ?_ReadTimer1 0001               __size_of_check_msg 0032  
                __CFG_DSWDTPS$G2 000000        timer0_int_handler@forward 0020  
                    ?_Open1USART 0090  i2c_configure_master@sensor_addr 0091  
      timer0_int_handler@reverse 0024        timer0_int_handler@msgtype 0025  
            __size_ofi1_recv_msg 00E8              __size_ofi1_send_msg 00C0  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 1856  
    __end_of_InterruptHandlerLow 00CA                        ?i2_memcpy 0060  
                  _ToMainHigh_MQ 06ED              __size_ofi2_recv_msg 013E  
               _enter_sleep_mode 201A              __size_ofi2_send_msg 010C  
           timer1_lthread@length 00AE                    check_msg@qptr 0090  
           timer1_lthread@retval 00B2          ??_block_on_To_msgqueues 0096  
           __size_of_init_queues 0068                       __pbssBANK0 00B5  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 0090  
                     __pnvCOMRAM 003B                     ?i2_check_msg 0060  
        __end_of_i2c_master_send 15BE               timer1_lthread@tptr 00AA  
       ??_i2c_master_int_handler 007D                recv_msg@maxlength 009C  
                recv_msg@msgtype 009D                  recv_msg@tlength 00A4  
                   ?_Delay1KTCYx 0001                 WriteTimer0@timer 0003  
                        ?_memcpy 0090                 WriteTimer1@timer 0003  
                  ??_WriteTimer0 0003                    ??_WriteTimer1 0003  
            __size_of_Read1USART 001E          __size_of_timer0_lthread 000E  
        __size_of_timer1_lthread 005E                 Open1USART@config 0095  
             __size_of_uart_send 019A     __end_of_i2c_configure_master 17E8  
                     ??i1_memcpy 0007                       ??i2_memcpy 0066  
                        _SPBRGH1 000F7F                 i1send_msg@length 000D  
                        _SSP1BUF 000FC9                    i2_in_high_int 1FF2  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
            __size_of_ReadTimer1 0012                __end_of_check_msg 1CF6  
                      ?_init_i2c 0090                      _SleepIfOkay 16E4  
            __size_of_Open1USART 0070                        ?_recv_msg 009A  
                     _in_low_int 1B9E                          __Hparam 0000  
                      ?_send_msg 009A                          __Lparam 0000  
     __end_of_timer0_int_handler 0BC6      __end_of_FromMainLow_recvmsg 1F04  
    __end_of_FromMainLow_sendmsg 1E42                 init_uart_recv@uc 0090  
                        ___awmod 1228                          ___lwmod 1A00  
                __CFG_STVREN$OFF 000000                          __pcinit 1EBC  
                __size_of_memcpy 0050                       _init_queue 199C  
                        __ramtop 0F00              __size_of_OpenTimer0 0026  
            __size_of_OpenTimer1 003C                          __ptext0 0568  
                        __ptext1 08D8                          __ptext2 1E18  
                        __ptext3 1C92                          __ptext4 1A60  
                        __ptext5 1A00                          __ptext6 2002  
                        __ptext7 1DBE                          __ptext8 1F9A  
                        __ptext9 18CE                        _T0CONbits 000FD5  
              OpenTimer1@config1 0090                          _in_main 1C1A  
                      _T1CONbits 000FCD                 ___awmod@dividend 0090  
            __end_of_WriteTimer0 1FE2              __end_of_WriteTimer1 1FBE  
                 ?i2_in_high_int 0060   __end_of_uart_trans_int_handler 1524  
                 __pintcode_body 17E8     __end_of_FromMainHigh_recvmsg 1F28  
           end_of_initialization 1ED6          timer1_lthread@msgbuffer 00B0  
   __end_of_FromMainHigh_sendmsg 1E6C   __size_of_uart_recv_int_handler 00E6  
     FromMainHigh_sendmsg@length 00A9                          memcpy@d 0096  
                        memcpy@n 0094                          memcpy@s 0098  
  __end_of_uart_recv_int_handler 1228                       ??_init_i2c 0092  
                   ??i1_recv_msg 0012                    __Lmediumconst 0000  
                        int_func 17E8                     ??i1_send_msg 0011  
                  ?_uart_lthread 0090          __size_of_init_uart_recv 002E  
                   ??i2_recv_msg 0071                 ?_i2c_master_send 00AA  
                     ??_recv_msg 00A1                __end_of_uart_send 0A72  
         timer0_int_handler@left 0021                     ??i2_send_msg 0070  
         timer0_int_handler@stop 0023                       ??_send_msg 00A0  
__size_of_i2c_master_int_handler 049A          ?i2_FromMainHigh_recvmsg 0078  
     __end_of_timer1_int_handler 1E18                        _RCSTAbits 000FAC  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 0017    __size_ofi2_ToMainHigh_sendmsg 002A  
               __CFG_DSBOREN$OFF 000000               __end_ofi1_recv_msg 1142  
     i2FromMainHigh_recvmsg@data 007A                 __CFG_CPUDIV$OSC1 000000  
             __end_ofi1_send_msg 1470      FromMainHigh_sendmsg@msgtype 00A6  
                      _TRISAbits 000F92                        _TRISBbits 000F93  
                      _TRISCbits 000F94                        _TRISEbits 000F96  
             __end_ofi2_recv_msg 0E42                        i1___awmod 1654  
             __end_ofi2_send_msg 105A                        i2___awmod 12EC  
                   ??_Read1USART 0001    FromMainHigh_recvmsg@maxlength 001D  
i2FromMainHigh_recvmsg@maxlength 007C         timer1_int_handler@result 001B  
                 ??_uart_lthread 0098                __CFG_WPFP$PAGE_63 000000  
                     main@length 0132   __end_ofi2_FromMainHigh_recvmsg 1D8C  
                    ?_in_low_int 0092            timer0_lthread@msgtype 0092  
           _i2c_configure_master 1768              __CFG_MSSP7B_EN$MSK7 000000  
           __size_ofi2_check_msg 0032         __end_of_enter_sleep_mode 2020  
                   ??_ReadTimer1 0003               _ToMainHigh_recvmsg 1D28  
                      i1memcpy@d 0007               _ToMainHigh_sendmsg 1F48  
                      i1memcpy@n 0005                        i1memcpy@s 0009  
                    _BAUDCONbits 000F7E                   _timer0_lthread 2002  
                   ??_Open1USART 0092                      ?_init_queue 0090  
                      i2memcpy@d 0066                      _WriteTimer0 1FD0  
                    _WriteTimer1 1FAC                        i2memcpy@n 0064  
                      i2memcpy@s 0068               __end_of_Read1USART 1F86  
                 _timer1_lthread 1A60                   __end_of_memcpy 1B0E  
              _enable_interrupts 2010             __size_of_Delay1KTCYx 0014  
               __CFG_DSWDTEN$OFF 000000              ?_ToMainHigh_recvmsg 00A8  
                ??i2_in_high_int 0062              ?_ToMainHigh_sendmsg 0017  
             ?_enable_interrupts 0001              start_initialization 1EBC  
         _i2c_master_int_handler 00CE                    ??_in_high_int 0092  
                     ?i1___awmod 0001                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 0050                       ?i2___awmod 0060  
      FromMainLow_sendmsg@length 00A9              ??_enable_interrupts 0090  
                   ??_OpenTimer0 0090                     ??_OpenTimer1 0091  
 __size_of_block_on_To_msgqueues 0096               __end_of_ReadTimer1 1FD0  
  __end_of_block_on_To_msgqueues 1654     __end_of_InterruptHandlerHigh 185E  
             __end_of_Open1USART 18CE                       init_i2c@ic 0090  
           ??_ToMainHigh_recvmsg 00AC             ??_ToMainHigh_sendmsg 001A  
          ?_i2c_configure_master 0090           __end_of_timer0_lthread 2010  
         __end_of_timer1_lthread 1ABE               i1___awmod@dividend 0001  
               __CFG_LPT1OSC$OFF 000000        __end_of_enable_interrupts 201A  
                       ??_memcpy 0096            timer1_lthread@msgtype 00AC  
           _FromMainHigh_recvmsg 1F04             _FromMainHigh_sendmsg 1E42  
   __size_of_init_timer1_lthread 0012               __end_of_OpenTimer0 1EBC  
             __end_of_OpenTimer1 1C92                      __pbssBIGRAM 01BD  
                    __pbssCOMRAM 003D                    _SensorData_MQ 05A1  
                  ??_init_queues 0093                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100              __size_of_in_low_int 003E  
                Delay1KTCYx@unit 0090         ToMainLow_sendmsg@msgtype 0017  
   __size_of_InterruptHandlerLow 00B2              __end_of_in_high_int 1FF2  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 00AA  
                   _ToMainLow_MQ 0839              __size_of_init_queue 0064  
                 _init_uart_recv 1DBE                        _check_msg 1CC4  
                      __pnvBANK0 00B3                __size_of_init_i2c 0066  
                   recv_msg@data 009F                     recv_msg@qmsg 00A6  
                   recv_msg@slot 00A3                     recv_msg@qptr 009A  
     i2ToMainHigh_sendmsg@length 0079                __size_of_recv_msg 013E  
                      __pintcode 0008                __size_of_send_msg 010C  
                       ?___awmod 0090                  ?_timer0_lthread 0090  
                       ?___lwmod 0090            ?_FromMainHigh_recvmsg 0019  
                ?_timer1_lthread 00AA            ?_FromMainHigh_sendmsg 00A6  
                    __pintcodelo 0018           ToMainHigh_recvmsg@data 00AA  
                Open1USART@spbrg 0090             __end_of_uart_lthread 1CC4  
                       ?_in_main 0094                WriteTimer0@timer0 0001  
             _timer0_int_handler 0A72                WriteTimer1@timer1 0001  
           __CFG_RTCOSC$T1OSCREF 000000              uart_lthread@msgtype 0092  
                    ??i1___awmod 0005            ToMainLow_sendmsg@data 0018  
                    ??i2___awmod 0064              i1recv_msg@maxlength 000D  
            ?_timer0_int_handler 0001                 uart_lthread@uptr 0090  
         __end_of_init_uart_recv 1DEC              __end_of_init_queues 1936  
                       _LATAbits 000F89                         _LATEbits 000F8D  
         ??_i2c_configure_master 0091                  i2check_msg@qptr 0060  
                     ?_check_msg 0090                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                    ?i2_in_low_int 0062  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 0018  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                 i1recv_msg@data 0010                        _uart_send 08D8  
           ??_timer0_int_handler 001E                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
          i2c_master_send@length 00AA     FromMainLow_recvmsg@maxlength 001D  
     __size_of_enable_interrupts 000A                i1send_msg@msgtype 000E  
              i1send_msg@tlength 0012       FromMainLow_recvmsg@msgtype 0019  
   __size_of_FromMainLow_recvmsg 0024     __size_of_FromMainLow_sendmsg 002A  
           timer0_lthread@length 0094               _timer1_int_handler 1DEC  
                       i1_memcpy 1B5E             _InterruptHandlerHigh 0008  
                      main@right 0121                         i2_memcpy 1B0E  
           timer0_lthread@msgval 0098         FromMainHigh_recvmsg@data 001B  
                    _in_high_int 1FE2                     send_msg@data 009E  
                   send_msg@qmsg 00A4                     send_msg@slot 00A3  
                   send_msg@qptr 009A     __end_ofi2_ToMainHigh_sendmsg 1E96  
                    _INTCON2bits 000FF1            uart_lthread@msgbuffer 0096  
            ?_timer1_int_handler 0001               i2___awmod@dividend 0060  
                ?_init_uart_recv 0090                     _MotorData_MQ 0455  
                 ??i2_in_low_int 0064                         __Hparam0 0000  
          _uart_recv_int_handler 1142                     ??_in_low_int 0094  
                       __Lparam0 0000                ?_enter_sleep_mode 0001  
         ??_FromMainHigh_recvmsg 001D                       ?_uart_send 00AA  
         ??_FromMainHigh_sendmsg 00A9                i1___awmod@divisor 0003  
           ??_timer1_int_handler 001B                i1___awmod@counter 0005  
               __size_of___awmod 00C4               ??_enter_sleep_mode 0060  
       __size_of_i2c_master_send 009A                 __size_of___lwmod 0060  
                   ??_init_queue 0092                     ?_WriteTimer0 0001  
                   ?_WriteTimer1 0001                  uart_send@length 00AD  
       FromMainHigh_sendmsg@data 00A7          ToMainLow_sendmsg@length 001A  
        ?_i2c_master_int_handler 0001                main@t0thread_data 0126  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 003C  
              i2send_msg@msgtype 006D      ToMainHigh_recvmsg@maxlength 00AC  
              i2send_msg@tlength 0071          init_timer1_lthread@tptr 0090  
                    _init_queues 18CE               __end_of_in_low_int 1BDC  
                       __ptext10 199C                         __ptext11 1936  
                       __ptext20 1FE2                         __ptext12 1524  
                       __ptext21 1CC4                         __ptext13 1E42  
                     _T1GCONbits 000F9A                         __ptext30 185E  
                       __ptext22 1F86                         __ptext14 0E42  
                       __ptext23 1CF6                         __ptext15 1768  
                       __ptext40 1FD0                         __ptext32 1470  
                       __ptext24 1D28                         __ptext16 2010  
                       __ptext41 1F28                         __ptext33 1EE0  
                       __ptext25 0BC6                         __ptext17 15BE  
                       __ptext50 1E6C                         __ptext42 1F48  
                       __ptext34 1142                         __ptext26 1ABE  
                       __ptext18 1C1A                         __ptext51 0F4E  
                       __ptext43 13B0                         __ptext35 1F68  
                       __ptext27 1228                         __ptext19 1B9E  
                       __ptext60 201A                         __ptext52 1D5A  
                       __ptext44 1F04                         __ptext36 1DEC  
                       __ptext28 1C56                         __ptext53 0D04  
                       __ptext45 105A                         __ptext37 1FAC  
                       __ptext29 1E96                         __ptext54 1B0E  
                       __ptext46 1B5E                         __ptext38 1FBE  
                       __ptext55 12EC                         __ptext47 1654  
                       __ptext39 0A72                         __ptext56 16E4  
                       __ptext57 1BDC                         __ptext49 00CE  
                       __ptext58 1FF2                         __ptext59 1D8C  
                   _SSP1CON2bits 000FC5                   i1send_msg@data 000F  
                 i1send_msg@qmsg 0015   i2c_configure_master@motor_addr 0090  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
             uart_lthread@length 0094         timer0_int_handler@length 001E  
                       _init_i2c 1936              _init_timer1_lthread 1F9A  
                  __size_of_main 0370                    ??i2_check_msg 0062  
              main@t1thread_data 012F                      ??_check_msg 0092  
             __end_of_init_queue 1A00             __size_of_SleepIfOkay 0084  
                       _recv_msg 0BC6                         _send_msg 0E42  
                 init_queue@qptr 0090            __size_of_uart_lthread 0032  
                 i2recv_msg@data 006F                   i2recv_msg@qmsg 0076  
                  ??_Delay1KTCYx 0090                   i2recv_msg@slot 0073  
                 i2recv_msg@qptr 006A   __end_of_i2c_master_int_handler 0568  
                   _SSP1STATbits 000FC7                         main@left 0120  
            _InterruptHandlerLow 0018                         main@umsg 0128  
                       main@stop 0122             ?_init_timer1_lthread 0090  
                  _USART1_Status 003D         ??_uart_trans_int_handler 001E  
              i2___awmod@divisor 0062                i2___awmod@counter 0064  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                       memcpy@d1 0090                         memcpy@s1 0092  
          __end_ofi2_in_high_int 2002                 i2send_msg@length 006C  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001                 ___lwmod@dividend 0090  
         ?_uart_recv_int_handler 0001                     _uart_lthread 1C92  
        timer0_int_handler@right 0022                       _RCSTA1bits 000FAC  
          _block_on_To_msgqueues 15BE                 ??_timer0_lthread 0098  
    __size_of_ToMainHigh_recvmsg 0032      __size_of_ToMainHigh_sendmsg 0020  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 00B2  
            i2c_master_send@addr 00AD                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015      i2ToMainHigh_sendmsg@msgtype 0076  
       ToMainHigh_sendmsg@length 001A                      ??_uart_send 00AC  
            __end_ofi2_check_msg 1DBE    i2FromMainHigh_recvmsg@msgtype 0078  
           i2_ToMainHigh_sendmsg 1E6C            ??_init_timer1_lthread 0092  
         ??_InterruptHandlerHigh 0082                _ToMainLow_recvmsg 1CF6  
              _ToMainLow_sendmsg 1F28               main@last_reg_recvd 012E  
                ___lwmod@divisor 0092             __end_ofi2_in_low_int 1C1A  
             ?_ToMainLow_recvmsg 00A8              __end_of_Delay1KTCYx 1F9A  
                ___lwmod@counter 0094               ?_ToMainLow_sendmsg 0017  
              ??_i2c_master_send 00AD               i2c_master_send@msg 00AB  
                    _SSPCON1bits 000FC6                   i2send_msg@data 006E  
          ??_InterruptHandlerLow 002A         ??i2_FromMainHigh_recvmsg 007C  
            ??_ToMainLow_recvmsg 00AC                   i2send_msg@qmsg 0074  
                 i2send_msg@slot 0073                   i2send_msg@qptr 006A  
            ??_ToMainLow_sendmsg 001A              _FromMainLow_recvmsg 1EE0  
            _FromMainLow_sendmsg 1E18  
